/// NOTE: This is a generated file; do not edit.
#pragma once
#include <cnkalman/generated_header.h>
// clang-format off
static inline void SurvivePoseToErrorModel(SurviveAxisAnglePose *out, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x4 = x0 * x0;
	out->Pos[0] = (*_x1).Pos[0] + (-1 * (*_x0).Pos[0]);
	out->Pos[1] = (*_x1).Pos[1] + (-1 * (*_x0).Pos[1]);
	out->Pos[2] = (*_x1).Pos[2] + (-1 * (*_x0).Pos[2]);
	out->AxisAngleRot[0] = atan2(2 * ((x2 * x3) + (x0 * x1)), 1 + (-2 * ((x2 * x2) + x4)));
	out->AxisAngleRot[1] = asin(2 * ((x0 * x3) + (-1 * x2 * x1)));
	out->AxisAngleRot[2] = atan2(2 * ((x1 * x3) + (x0 * x2)), 1 + (-2 * (x4 + (x1 * x1))));
}

// Jacobian of SurvivePoseToErrorModel wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2], (*_x1).Rot[0], (*_x1).Rot[1],
// (*_x1).Rot[2], (*_x1).Rot[3]]
static inline void SurvivePoseToErrorModel_jac_x1(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x0).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x0).Rot[2];
	const FLT x4 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x5 = x4 * (*_x0).Rot[1];
	const FLT x6 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x7 = x6 * (*_x0).Rot[0];
	const FLT x8 = x7 + (-1 * x5);
	const FLT x9 = x0 * x0;
	const FLT x10 = 1 + (-2 * ((x6 * x6) + x9));
	const FLT x11 = 2 * (1. / x10);
	const FLT x12 = x0 * (*_x0).Rot[2];
	const FLT x13 = 4 * x12;
	const FLT x14 = x6 * (*_x0).Rot[1];
	const FLT x15 = x10 * x10;
	const FLT x16 = (x4 * x6) + (x0 * x2);
	const FLT x17 = 2 * (1. / x15) * x16;
	const FLT x18 = x15 * (1. / (x15 + (4 * (x16 * x16))));
	const FLT x19 = x2 * (*_x0).Rot[3];
	const FLT x20 = x14 + (x4 * (*_x0).Rot[0]);
	const FLT x21 = x20 + x12 + (-1 * x19);
	const FLT x22 = 4 * x1;
	const FLT x23 = x6 * (*_x0).Rot[2];
	const FLT x24 = x4 * (*_x0).Rot[3];
	const FLT x25 = x2 * (*_x0).Rot[0];
	const FLT x26 = x0 * (*_x0).Rot[1];
	const FLT x27 = (-1 * x26) + x25;
	const FLT x28 = x0 * (*_x0).Rot[0];
	const FLT x29 = -4 * x28;
	const FLT x30 = x6 * (*_x0).Rot[3];
	const FLT x31 = x4 * (*_x0).Rot[2];
	const FLT x32 = x2 * (*_x0).Rot[1];
	const FLT x33 = x32 + x28;
	const FLT x34 = (-1 * x31) + x33 + x30;
	const FLT x35 = -4 * x26;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x4) + (-1 * x2 * x6)) * ((x0 * x4) + (-1 * x2 * x6))))));
	const FLT x37 = (-1 * x24) + (-1 * x23);
	const FLT x38 = x1 + x3;
	const FLT x39 = 1 + (-2 * (x9 + (x2 * x2)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x2 * x4) + (x0 * x6);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x14) + x13) * x17) + ((x8 + (-1 * x1) + (-1 * x3)) * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x18 * ((-1 * x17 * ((-4 * x7) + x22)) + (x21 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x18 * ((-1 * ((-4 * x30) + x29) * x17) + (x11 * (x23 + x27 + x24))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x23) + x35) * x17) + (x34 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x34 * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x36 * (x37 + x26 + (-1 * x25)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x36 * (x38 + x5 + (-1 * x7)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * (x13 + (4 * x19)) * x43) + ((x37 + x27) * x40)) * x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x44 * ((-1 * x43 * (x22 + (-4 * x3))) + (x40 * (x31 + x33 + (-1 * x30)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x44 * ((-1 * (x29 + (4 * x32)) * x43) + (x40 * (x38 + x8))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x44 * ((-1 * (x35 + (-4 * x25)) * x43) + (x40 * (x20 + x19 + (-1 * x12)))));
}

// Full version Jacobian of SurvivePoseToErrorModel wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2], (*_x1).Rot[0],
// (*_x1).Rot[1], (*_x1).Rot[2], (*_x1).Rot[3]] Jacobian of SurvivePoseToErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1],
// (*_x0).Pos[2], (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseToErrorModel_jac_x0(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x1).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x1).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x6 = x5 * (*_x1).Rot[1];
	const FLT x7 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x8 = x7 * (*_x1).Rot[2];
	const FLT x9 = x8 + x6;
	const FLT x10 = x0 * x0;
	const FLT x11 = 1 + (-2 * ((x2 * x2) + x10));
	const FLT x12 = 2 * (1. / x11);
	const FLT x13 = x0 * (*_x1).Rot[2];
	const FLT x14 = -4 * x13;
	const FLT x15 = x2 * (*_x1).Rot[1];
	const FLT x16 = x11 * x11;
	const FLT x17 = (x2 * x5) + (x0 * x7);
	const FLT x18 = 2 * x17 * (1. / x16);
	const FLT x19 = x16 * (1. / (x16 + (4 * (x17 * x17))));
	const FLT x20 = x7 * (*_x1).Rot[3];
	const FLT x21 = x20 + (-1 * x5 * (*_x1).Rot[0]);
	const FLT x22 = -4 * x1;
	const FLT x23 = x5 * (*_x1).Rot[3];
	const FLT x24 = x7 * (*_x1).Rot[0];
	const FLT x25 = x0 * (*_x1).Rot[1];
	const FLT x26 = x2 * (*_x1).Rot[2];
	const FLT x27 = x26 + x25;
	const FLT x28 = x0 * (*_x1).Rot[0];
	const FLT x29 = 4 * x28;
	const FLT x30 = x2 * (*_x1).Rot[3];
	const FLT x31 = x5 * (*_x1).Rot[2];
	const FLT x32 = x7 * (*_x1).Rot[1];
	const FLT x33 = (-1 * x32) + x31;
	const FLT x34 = (-1 * x28) + x30;
	const FLT x35 = 4 * x25;
	const FLT x36 = 1. / sqrt(1 + (-4 * (((x0 * x5) + (-1 * x2 * x7)) * ((x0 * x5) + (-1 * x2 * x7)))));
	const FLT x37 = 2 * x36;
	const FLT x38 = x23 + x27 + x24;
	const FLT x39 = 2 * (x21 + x13 + (-1 * x15));
	const FLT x40 = 1 + (-2 * (x10 + (x7 * x7)));
	const FLT x41 = 1. / x40;
	const FLT x42 = 2 * x41;
	const FLT x43 = x40 * x40;
	const FLT x44 = (x5 * x7) + (x0 * x2);
	const FLT x45 = 2 * (1. / x43) * x44;
	const FLT x46 = x43 * (1. / (x43 + (4 * (x44 * x44))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * ((-4 * x15) + x14) * x18) + ((x9 + x4) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x19 * ((-1 * x18 * ((4 * x3) + x22)) + (x12 * (x21 + x15 + (-1 * x13)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x19 * ((-1 * ((4 * x30) + x29) * x18) + (x12 * ((-1 * x23) + x27 + (-1 * x24)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						((-1 * ((-4 * x26) + x35) * x18) + ((x34 + x33) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x37 * (x28 + x33 + (-1 * x30)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x38 * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x39);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), (x4 + (-1 * x6) + (-1 * x8)) * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x46 * ((-1 * (x14 + (-4 * x20)) * x45) + (x42 * x38)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x46 * ((-1 * x45 * (x22 + (4 * x8))) + (x42 * (x34 + x32 + (-1 * x31)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x46 * ((-1 * (x29 + (-4 * x32)) * x45) + ((x9 + (-1 * x3) + (-1 * x1)) * x42)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x46 * ((-1 * (x35 + (4 * x24)) * x45) + (x41 * x39)));
}

// Full version Jacobian of SurvivePoseToErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0],
// (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModel(SurvivePose *out, const SurvivePose *_x0,
											const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (-1 * x6 * x7);
	const FLT x13 = x3 * x8;
	const FLT x14 = x5 * x9;
	const FLT x15 = (x7 * x14) + (x1 * x13);
	const FLT x16 = (x7 * x13) + (-1 * x1 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x11 * x11) + (x12 * x12) + (x15 * x15));
	const FLT x18 = x17 * (*_x0).Rot[3];
	const FLT x19 = x17 * x16;
	const FLT x20 = x12 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 = (x21 * (*_x0).Rot[1]) + (x20 * (*_x0).Rot[0]) + (x11 * x18) + (-1 * x19 * (*_x0).Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 = (x21 * (*_x0).Rot[0]) + (-1 * x20 * (*_x0).Rot[1]) + (x19 * (*_x0).Rot[3]) + (x23 * (*_x0).Rot[2]);
	const FLT x25 =
		(-1 * x19 * (*_x0).Rot[1]) + (x23 * (*_x0).Rot[0]) + (-1 * x20 * (*_x0).Rot[3]) + (-1 * x21 * (*_x0).Rot[2]);
	const FLT x26 = (x23 * (*_x0).Rot[1]) + (x19 * (*_x0).Rot[0]) + (-1 * x15 * x18) + (x20 * (*_x0).Rot[2]);
	const FLT x27 = 1. / sqrt((x26 * x26) + (x25 * x25) + (x22 * x22) + (x24 * x24));
	out->Pos[0] = (*_x0).Pos[0] + (*error_state).Pos[0];
	out->Pos[1] = (*_x0).Pos[1] + (*error_state).Pos[1];
	out->Pos[2] = (*_x0).Pos[2] + (*error_state).Pos[2];
	out->Rot[0] = x25 * x27;
	out->Rot[1] = x26 * x27;
	out->Rot[2] = x24 * x27;
	out->Rot[3] = x22 * x27;
}

// Jacobian of SurvivePoseAddErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0], (*_x0).Rot[1],
// (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModel_jac_x0(CnMat *Hx, const SurvivePose *_x0,
												   const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x3 * x8;
	const FLT x13 = x5 * x9;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x15 * x17;
	const FLT x19 = x17 * (*_x0).Rot[2];
	const FLT x20 = x11 * x17;
	const FLT x21 = x14 * x17;
	const FLT x22 = (x20 * (*_x0).Rot[0]) + (x21 * (*_x0).Rot[1]) + (x18 * (*_x0).Rot[3]) + (-1 * x19 * x16);
	const FLT x23 = x17 * x16;
	const FLT x24 = (-1 * x20 * (*_x0).Rot[1]) + (x21 * (*_x0).Rot[0]) + (x23 * (*_x0).Rot[3]) + (x15 * x19);
	const FLT x25 = (-1 * x23 * (*_x0).Rot[1]) + (x18 * (*_x0).Rot[0]) + (-1 * x20 * (*_x0).Rot[3]) + (-1 * x14 * x19);
	const FLT x26 = (x23 * (*_x0).Rot[0]) + (-1 * x21 * (*_x0).Rot[3]) + (x18 * (*_x0).Rot[1]) + (x11 * x19);
	const FLT x27 = (x26 * x26) + (x25 * x25) + (x22 * x22) + (x24 * x24);
	const FLT x28 = 1. / sqrt(x27);
	const FLT x29 = x28 * x18;
	const FLT x30 = 2 * x23;
	const FLT x31 = 2 * x18;
	const FLT x32 = 2 * x20;
	const FLT x33 = 2 * x21;
	const FLT x34 = 1.0 / 2.0 * (1. / (x27 * sqrt(x27)));
	const FLT x35 = ((x33 * x24) + (x32 * x22) + (x30 * x26) + (x31 * x25)) * x34;
	const FLT x36 = x23 * x28;
	const FLT x37 = -1 * x36;
	const FLT x38 = ((-1 * x32 * x24) + (x33 * x22) + (x31 * x26) + (-1 * x30 * x25)) * x34;
	const FLT x39 = x21 * x28;
	const FLT x40 = -1 * x39;
	const FLT x41 = ((x31 * x24) + (-1 * x30 * x22) + (x32 * x26) + (-1 * x33 * x25)) * x34;
	const FLT x42 = x20 * x28;
	const FLT x43 = -1 * x42;
	const FLT x44 = ((x30 * x24) + (-1 * x33 * x26) + (x31 * x22) + (-1 * x32 * x25)) * x34;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x25) + x29);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x25) + x37);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x25) + x40);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x25) + x43);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x26) + x36);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x26) + x29);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x26) + x42);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x26) + x40);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x24) + x39);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x24) + x43);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x24) + x29);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x24) + x36);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x22) + x42);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x22) + x39);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x22) + x37);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x22) + x29);
}

// Full version Jacobian of SurvivePoseAddErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0],
// (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]] Jacobian of SurvivePoseAddErrorModel wrt
// [(*error_state).AxisAngleRot[0], (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2],
// (*error_state).Pos[0], (*error_state).Pos[1], (*error_state).Pos[2]]
static inline void SurvivePoseAddErrorModel_jac_error_state(CnMat *Hx, const SurvivePose *_x0,
															const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + x7;
	const FLT x14 = x1 * x10;
	const FLT x15 = x5 * x14;
	const FLT x16 = x3 * x8;
	const FLT x17 = x9 * x16;
	const FLT x18 = x17 + (-1 * x15);
	const FLT x19 = x1 * x16;
	const FLT x20 = x5 * x11;
	const FLT x21 = x20 + x19;
	const FLT x22 = x6 * x9;
	const FLT x23 = x8 * x14;
	const FLT x24 = x23 + (-1 * x22);
	const FLT x25 = (x24 * x24) + (x13 * x13) + (x18 * x18) + (x21 * x21);
	const FLT x26 = 1. / sqrt(x25);
	const FLT x27 = x26 * (*_x0).Rot[3];
	const FLT x28 = x26 * (*_x0).Rot[2];
	const FLT x29 = x26 * (*_x0).Rot[0];
	const FLT x30 = x26 * (*_x0).Rot[1];
	const FLT x31 = (x29 * x18) + (x27 * x13) + (x30 * x21) + (-1 * x24 * x28);
	const FLT x32 = (-1 * x30 * x18) + (x21 * x29) + (x24 * x27) + (x28 * x13);
	const FLT x33 = (x29 * x13) + (-1 * x30 * x24) + (-1 * x27 * x18) + (-1 * x21 * x28);
	const FLT x34 = (x24 * x29) + (-1 * x21 * x27) + (x30 * x13) + (x28 * x18);
	const FLT x35 = (x34 * x34) + (x33 * x33) + (x31 * x31) + (x32 * x32);
	const FLT x36 = 1. / sqrt(x35);
	const FLT x37 = 0.5 * x12;
	const FLT x38 = 0.5 * x7;
	const FLT x39 = x38 + x37;
	const FLT x40 = x39 * x26;
	const FLT x41 = -1 * x40 * (*_x0).Rot[1];
	const FLT x42 = 2 * x39;
	const FLT x43 = 0.5 * x23;
	const FLT x44 = -1 * x43;
	const FLT x45 = 0.5 * x22;
	const FLT x46 = x45 + x44;
	const FLT x47 = 2 * x13;
	const FLT x48 = 0.5 * x19;
	const FLT x49 = -0.5 * x20;
	const FLT x50 = x49 + (-1 * x48);
	const FLT x51 = 2 * x50;
	const FLT x52 = 0.5 * x15;
	const FLT x53 = -1 * x52;
	const FLT x54 = 0.5 * x17;
	const FLT x55 = x54 + x53;
	const FLT x56 = 2 * x21;
	const FLT x57 = 1.0 / 2.0 * (1. / (x25 * sqrt(x25)));
	const FLT x58 = ((x56 * x55) + (x51 * x18) + (x42 * x24) + (x46 * x47)) * x57;
	const FLT x59 = x58 * x18;
	const FLT x60 = x50 * x27;
	const FLT x61 = x58 * x21;
	const FLT x62 = x58 * x24;
	const FLT x63 = x58 * x13;
	const FLT x64 = (-1 * x55 * x28) + (x46 * x29) + (x59 * (*_x0).Rot[3]) + (x62 * (*_x0).Rot[1]) + (-1 * x60) +
					(-1 * x63 * (*_x0).Rot[0]) + x41 + (x61 * (*_x0).Rot[2]);
	const FLT x65 = x24 * (*_x0).Rot[0];
	const FLT x66 = x50 * x28;
	const FLT x67 = x21 * (*_x0).Rot[3];
	const FLT x68 = x40 * (*_x0).Rot[0];
	const FLT x69 = (x67 * x58) + (-1 * x55 * x27) + x68 + (x46 * x30) + (-1 * x65 * x58) + x66 +
					(-1 * x63 * (*_x0).Rot[1]) + (-1 * x59 * (*_x0).Rot[2]);
	const FLT x70 = 2 * x34;
	const FLT x71 = 2 * x33;
	const FLT x72 = x13 * (*_x0).Rot[3];
	const FLT x73 = x24 * (*_x0).Rot[2];
	const FLT x74 = x40 * (*_x0).Rot[2];
	const FLT x75 = x50 * x29;
	const FLT x76 = (-1 * x74) + (-1 * x61 * (*_x0).Rot[1]) + (x55 * x30) + (x73 * x58) + (-1 * x72 * x58) +
					(-1 * x59 * (*_x0).Rot[0]) + x75 + (x46 * x27);
	const FLT x77 = 2 * x31;
	const FLT x78 = x40 * (*_x0).Rot[3];
	const FLT x79 = -1 * x50 * x30;
	const FLT x80 = (x55 * x29) + x79 + (x59 * (*_x0).Rot[1]) + x78 + (x46 * x28) + (-1 * x63 * (*_x0).Rot[2]) +
					(-1 * x61 * (*_x0).Rot[0]) + (-1 * x62 * (*_x0).Rot[3]);
	const FLT x81 = 2 * x32;
	const FLT x82 = (x80 * x81) + (x77 * x76) + (x70 * x69) + (x71 * x64);
	const FLT x83 = 1.0 / 2.0 * (1. / (x35 * sqrt(x35)));
	const FLT x84 = x82 * x83;
	const FLT x85 = -1 * x54;
	const FLT x86 = x85 + x53;
	const FLT x87 = x86 * x26;
	const FLT x88 = x48 + x49;
	const FLT x89 = -1 * x45;
	const FLT x90 = x44 + x89;
	const FLT x91 = (-1 * x38) + x37;
	const FLT x92 = ((x56 * x91) + (2 * x90 * x18) + (2 * x86 * x24) + (x88 * x47)) * x57;
	const FLT x93 = x92 * x13;
	const FLT x94 = x92 * x18;
	const FLT x95 = x92 * x21;
	const FLT x96 = x92 * x24;
	const FLT x97 = x90 * x26;
	const FLT x98 = (-1 * x97 * (*_x0).Rot[3]) + (-1 * x91 * x28) + (-1 * x93 * (*_x0).Rot[0]) +
					(-1 * x87 * (*_x0).Rot[1]) + (x94 * (*_x0).Rot[3]) + (x96 * (*_x0).Rot[1]) + (x88 * x29) +
					(x95 * (*_x0).Rot[2]);
	const FLT x99 = (x97 * (*_x0).Rot[0]) + (-1 * x72 * x92) + (x91 * x30) + (-1 * x94 * (*_x0).Rot[0]) +
					(-1 * x86 * x28) + (x88 * x27) + (x73 * x92) + (-1 * x95 * (*_x0).Rot[1]);
	const FLT x100 = (x87 * (*_x0).Rot[0]) + (-1 * x94 * (*_x0).Rot[2]) + (x97 * (*_x0).Rot[2]) +
					 (-1 * x93 * (*_x0).Rot[1]) + (x88 * x30) + (-1 * x91 * x27) + (-1 * x65 * x92) + (x67 * x92);
	const FLT x101 = (x91 * x29) + (-1 * x95 * (*_x0).Rot[0]) + (-1 * x93 * (*_x0).Rot[2]) +
					 (-1 * x97 * (*_x0).Rot[1]) + (x86 * x27) + (x94 * (*_x0).Rot[1]) + (-1 * x96 * (*_x0).Rot[3]) +
					 (x88 * x28);
	const FLT x102 = (x81 * x101) + (x71 * x98) + (x77 * x99) + (x70 * x100);
	const FLT x103 = x83 * x102;
	const FLT x104 = x52 + x85;
	const FLT x105 = x43 + x89;
	const FLT x106 = ((x56 * x105) + (x42 * x18) + (x51 * x24) + (x47 * x104)) * x57;
	const FLT x107 = x106 * (*_x0).Rot[1];
	const FLT x108 = x106 * (*_x0).Rot[0];
	const FLT x109 = x106 * (*_x0).Rot[3];
	const FLT x110 = x106 * (*_x0).Rot[2];
	const FLT x111 = (x21 * x110) + (-1 * x78) + (-1 * x13 * x108) + (x24 * x107) + (x29 * x104) + (-1 * x28 * x105) +
					 x79 + (x18 * x109);
	const FLT x112 = x13 * x106;
	const FLT x113 = x75 + (-1 * x18 * x110) + (-1 * x24 * x108) + (x67 * x106) + (-1 * x112 * (*_x0).Rot[1]) +
					 (-1 * x27 * x105) + (x30 * x104) + x74;
	const FLT x114 = (-1 * x66) + x68 + (x73 * x106) + (x30 * x105) + (-1 * x21 * x107) + (-1 * x18 * x108) +
					 (-1 * x72 * x106) + (x27 * x104);
	const FLT x115 = (-1 * x24 * x109) + (x28 * x104) + (x18 * x107) + x60 + x41 + (-1 * x112 * (*_x0).Rot[2]) +
					 (-1 * x21 * x108) + (x29 * x105);
	const FLT x116 = (x77 * x114) + (x70 * x113) + (x81 * x115) + (x71 * x111);
	const FLT x117 = x83 * x116;
	const FLT x118 = x83 * x34;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x84 * x33) + (x64 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), (-1 * x33 * x103) + (x98 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x33 * x117) + (x36 * x111));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x82 * x118) + (x69 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x102 * x118) + (x36 * x100));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x118 * x116) + (x36 * x113));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x84 * x32) + (x80 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x32 * x103) + (x36 * x101));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x32 * x117) + (x36 * x115));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x84 * x31) + (x76 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), (-1 * x31 * x103) + (x99 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x31 * x117) + (x36 * x114));
}

// Full version Jacobian of SurvivePoseAddErrorModel wrt [(*error_state).AxisAngleRot[0],
// (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2], (*error_state).Pos[0], (*error_state).Pos[1],
// (*error_state).Pos[2]]
static inline void SurvivePoseToErrorModelExact(SurviveAxisAnglePose *out, const SurvivePose *_x1,
												const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x4 = x0 * x0;
	out->Pos[0] = (*_x1).Pos[0] + (-1 * (*_x0).Pos[0]);
	out->Pos[1] = (*_x1).Pos[1] + (-1 * (*_x0).Pos[1]);
	out->Pos[2] = (*_x1).Pos[2] + (-1 * (*_x0).Pos[2]);
	out->AxisAngleRot[0] = atan2(2 * ((x2 * x3) + (x0 * x1)), 1 + (-2 * ((x2 * x2) + x4)));
	out->AxisAngleRot[1] = asin(2 * ((x0 * x3) + (-1 * x2 * x1)));
	out->AxisAngleRot[2] = atan2(2 * ((x1 * x3) + (x0 * x2)), 1 + (-2 * (x4 + (x1 * x1))));
}

// Jacobian of SurvivePoseToErrorModelExact wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2], (*_x1).Rot[0],
// (*_x1).Rot[1], (*_x1).Rot[2], (*_x1).Rot[3]]
static inline void SurvivePoseToErrorModelExact_jac_x1(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x0).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x0).Rot[2];
	const FLT x4 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x5 = x4 * (*_x0).Rot[1];
	const FLT x6 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x7 = x6 * (*_x0).Rot[0];
	const FLT x8 = x7 + (-1 * x5);
	const FLT x9 = x0 * x0;
	const FLT x10 = 1 + (-2 * ((x6 * x6) + x9));
	const FLT x11 = 2 * (1. / x10);
	const FLT x12 = x0 * (*_x0).Rot[2];
	const FLT x13 = 4 * x12;
	const FLT x14 = x6 * (*_x0).Rot[1];
	const FLT x15 = x10 * x10;
	const FLT x16 = (x4 * x6) + (x0 * x2);
	const FLT x17 = 2 * (1. / x15) * x16;
	const FLT x18 = x15 * (1. / (x15 + (4 * (x16 * x16))));
	const FLT x19 = x2 * (*_x0).Rot[3];
	const FLT x20 = x14 + (x4 * (*_x0).Rot[0]);
	const FLT x21 = x20 + x12 + (-1 * x19);
	const FLT x22 = 4 * x1;
	const FLT x23 = x6 * (*_x0).Rot[2];
	const FLT x24 = x4 * (*_x0).Rot[3];
	const FLT x25 = x2 * (*_x0).Rot[0];
	const FLT x26 = x0 * (*_x0).Rot[1];
	const FLT x27 = (-1 * x26) + x25;
	const FLT x28 = x0 * (*_x0).Rot[0];
	const FLT x29 = -4 * x28;
	const FLT x30 = x6 * (*_x0).Rot[3];
	const FLT x31 = x4 * (*_x0).Rot[2];
	const FLT x32 = x2 * (*_x0).Rot[1];
	const FLT x33 = x32 + x28;
	const FLT x34 = (-1 * x31) + x33 + x30;
	const FLT x35 = -4 * x26;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x4) + (-1 * x2 * x6)) * ((x0 * x4) + (-1 * x2 * x6))))));
	const FLT x37 = (-1 * x24) + (-1 * x23);
	const FLT x38 = x1 + x3;
	const FLT x39 = 1 + (-2 * (x9 + (x2 * x2)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x2 * x4) + (x0 * x6);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x14) + x13) * x17) + ((x8 + (-1 * x1) + (-1 * x3)) * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x18 * ((-1 * x17 * ((-4 * x7) + x22)) + (x21 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x18 * ((-1 * ((-4 * x30) + x29) * x17) + (x11 * (x23 + x27 + x24))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x23) + x35) * x17) + (x34 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x34 * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x36 * (x37 + x26 + (-1 * x25)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x36 * (x38 + x5 + (-1 * x7)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * (x13 + (4 * x19)) * x43) + ((x37 + x27) * x40)) * x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x44 * ((-1 * x43 * (x22 + (-4 * x3))) + (x40 * (x31 + x33 + (-1 * x30)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x44 * ((-1 * (x29 + (4 * x32)) * x43) + (x40 * (x38 + x8))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x44 * ((-1 * (x35 + (-4 * x25)) * x43) + (x40 * (x20 + x19 + (-1 * x12)))));
}

// Full version Jacobian of SurvivePoseToErrorModelExact wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2],
// (*_x1).Rot[0], (*_x1).Rot[1], (*_x1).Rot[2], (*_x1).Rot[3]] Jacobian of SurvivePoseToErrorModelExact wrt
// [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseToErrorModelExact_jac_x0(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x1).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x1).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x6 = x5 * (*_x1).Rot[1];
	const FLT x7 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x8 = x7 * (*_x1).Rot[2];
	const FLT x9 = x8 + x6;
	const FLT x10 = x0 * x0;
	const FLT x11 = 1 + (-2 * ((x2 * x2) + x10));
	const FLT x12 = 2 * (1. / x11);
	const FLT x13 = x0 * (*_x1).Rot[2];
	const FLT x14 = -4 * x13;
	const FLT x15 = x2 * (*_x1).Rot[1];
	const FLT x16 = x11 * x11;
	const FLT x17 = (x2 * x5) + (x0 * x7);
	const FLT x18 = 2 * x17 * (1. / x16);
	const FLT x19 = x16 * (1. / (x16 + (4 * (x17 * x17))));
	const FLT x20 = x7 * (*_x1).Rot[3];
	const FLT x21 = x20 + (-1 * x5 * (*_x1).Rot[0]);
	const FLT x22 = -4 * x1;
	const FLT x23 = x5 * (*_x1).Rot[3];
	const FLT x24 = x7 * (*_x1).Rot[0];
	const FLT x25 = x0 * (*_x1).Rot[1];
	const FLT x26 = x2 * (*_x1).Rot[2];
	const FLT x27 = x26 + x25;
	const FLT x28 = x0 * (*_x1).Rot[0];
	const FLT x29 = 4 * x28;
	const FLT x30 = x2 * (*_x1).Rot[3];
	const FLT x31 = x5 * (*_x1).Rot[2];
	const FLT x32 = x7 * (*_x1).Rot[1];
	const FLT x33 = (-1 * x32) + x31;
	const FLT x34 = (-1 * x28) + x30;
	const FLT x35 = 4 * x25;
	const FLT x36 = 1. / sqrt(1 + (-4 * (((x0 * x5) + (-1 * x2 * x7)) * ((x0 * x5) + (-1 * x2 * x7)))));
	const FLT x37 = 2 * x36;
	const FLT x38 = x23 + x27 + x24;
	const FLT x39 = 2 * (x21 + x13 + (-1 * x15));
	const FLT x40 = 1 + (-2 * (x10 + (x7 * x7)));
	const FLT x41 = 1. / x40;
	const FLT x42 = 2 * x41;
	const FLT x43 = x40 * x40;
	const FLT x44 = (x5 * x7) + (x0 * x2);
	const FLT x45 = 2 * (1. / x43) * x44;
	const FLT x46 = x43 * (1. / (x43 + (4 * (x44 * x44))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * ((-4 * x15) + x14) * x18) + ((x9 + x4) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x19 * ((-1 * x18 * ((4 * x3) + x22)) + (x12 * (x21 + x15 + (-1 * x13)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x19 * ((-1 * ((4 * x30) + x29) * x18) + (x12 * ((-1 * x23) + x27 + (-1 * x24)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						((-1 * ((-4 * x26) + x35) * x18) + ((x34 + x33) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x37 * (x28 + x33 + (-1 * x30)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x38 * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x39);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), (x4 + (-1 * x6) + (-1 * x8)) * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x46 * ((-1 * (x14 + (-4 * x20)) * x45) + (x42 * x38)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x46 * ((-1 * x45 * (x22 + (4 * x8))) + (x42 * (x34 + x32 + (-1 * x31)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x46 * ((-1 * (x29 + (-4 * x32)) * x45) + ((x9 + (-1 * x3) + (-1 * x1)) * x42)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x46 * ((-1 * (x35 + (4 * x24)) * x45) + (x41 * x39)));
}

// Full version Jacobian of SurvivePoseToErrorModelExact wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2],
// (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModelExact(SurvivePose *out, const SurvivePose *_x0,
												 const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (-1 * x6 * x7);
	const FLT x13 = x3 * x8;
	const FLT x14 = x5 * x9;
	const FLT x15 = (x7 * x14) + (x1 * x13);
	const FLT x16 = (x7 * x13) + (-1 * x1 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x11 * x11) + (x12 * x12) + (x15 * x15));
	const FLT x18 = x17 * (*_x0).Rot[3];
	const FLT x19 = x17 * x16;
	const FLT x20 = x12 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 = (x21 * (*_x0).Rot[1]) + (x20 * (*_x0).Rot[0]) + (x11 * x18) + (-1 * x19 * (*_x0).Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 = (x21 * (*_x0).Rot[0]) + (-1 * x20 * (*_x0).Rot[1]) + (x19 * (*_x0).Rot[3]) + (x23 * (*_x0).Rot[2]);
	const FLT x25 =
		(-1 * x19 * (*_x0).Rot[1]) + (x23 * (*_x0).Rot[0]) + (-1 * x20 * (*_x0).Rot[3]) + (-1 * x21 * (*_x0).Rot[2]);
	const FLT x26 = (x23 * (*_x0).Rot[1]) + (x19 * (*_x0).Rot[0]) + (-1 * x15 * x18) + (x20 * (*_x0).Rot[2]);
	const FLT x27 = 1. / sqrt((x26 * x26) + (x25 * x25) + (x22 * x22) + (x24 * x24));
	out->Pos[0] = (*_x0).Pos[0] + (*error_state).Pos[0];
	out->Pos[1] = (*_x0).Pos[1] + (*error_state).Pos[1];
	out->Pos[2] = (*_x0).Pos[2] + (*error_state).Pos[2];
	out->Rot[0] = x25 * x27;
	out->Rot[1] = x26 * x27;
	out->Rot[2] = x24 * x27;
	out->Rot[3] = x22 * x27;
}

// Jacobian of SurvivePoseAddErrorModelExact wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0],
// (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModelExact_jac_x0(CnMat *Hx, const SurvivePose *_x0,
														const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x3 * x8;
	const FLT x13 = x5 * x9;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x15 * x17;
	const FLT x19 = x17 * (*_x0).Rot[2];
	const FLT x20 = x11 * x17;
	const FLT x21 = x14 * x17;
	const FLT x22 = (x20 * (*_x0).Rot[0]) + (x21 * (*_x0).Rot[1]) + (x18 * (*_x0).Rot[3]) + (-1 * x19 * x16);
	const FLT x23 = x17 * x16;
	const FLT x24 = (-1 * x20 * (*_x0).Rot[1]) + (x21 * (*_x0).Rot[0]) + (x23 * (*_x0).Rot[3]) + (x15 * x19);
	const FLT x25 = (-1 * x23 * (*_x0).Rot[1]) + (x18 * (*_x0).Rot[0]) + (-1 * x20 * (*_x0).Rot[3]) + (-1 * x14 * x19);
	const FLT x26 = (x23 * (*_x0).Rot[0]) + (-1 * x21 * (*_x0).Rot[3]) + (x18 * (*_x0).Rot[1]) + (x11 * x19);
	const FLT x27 = (x26 * x26) + (x25 * x25) + (x22 * x22) + (x24 * x24);
	const FLT x28 = 1. / sqrt(x27);
	const FLT x29 = x28 * x18;
	const FLT x30 = 2 * x23;
	const FLT x31 = 2 * x18;
	const FLT x32 = 2 * x20;
	const FLT x33 = 2 * x21;
	const FLT x34 = 1.0 / 2.0 * (1. / (x27 * sqrt(x27)));
	const FLT x35 = ((x33 * x24) + (x32 * x22) + (x30 * x26) + (x31 * x25)) * x34;
	const FLT x36 = x23 * x28;
	const FLT x37 = -1 * x36;
	const FLT x38 = ((-1 * x32 * x24) + (x33 * x22) + (x31 * x26) + (-1 * x30 * x25)) * x34;
	const FLT x39 = x21 * x28;
	const FLT x40 = -1 * x39;
	const FLT x41 = ((x31 * x24) + (-1 * x30 * x22) + (x32 * x26) + (-1 * x33 * x25)) * x34;
	const FLT x42 = x20 * x28;
	const FLT x43 = -1 * x42;
	const FLT x44 = ((x30 * x24) + (-1 * x33 * x26) + (x31 * x22) + (-1 * x32 * x25)) * x34;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x25) + x29);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x25) + x37);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x25) + x40);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x25) + x43);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x26) + x36);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x26) + x29);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x26) + x42);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x26) + x40);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x24) + x39);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x24) + x43);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x24) + x29);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x24) + x36);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(-1 * x35 * x22) + x42);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(-1 * x38 * x22) + x39);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * x41 * x22) + x37);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						(-1 * x44 * x22) + x29);
}

// Full version Jacobian of SurvivePoseAddErrorModelExact wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2],
// (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]] Jacobian of SurvivePoseAddErrorModelExact wrt
// [(*error_state).AxisAngleRot[0], (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2],
// (*error_state).Pos[0], (*error_state).Pos[1], (*error_state).Pos[2]]
static inline void SurvivePoseAddErrorModelExact_jac_error_state(CnMat *Hx, const SurvivePose *_x0,
																 const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + x7;
	const FLT x14 = x1 * x10;
	const FLT x15 = x5 * x14;
	const FLT x16 = x3 * x8;
	const FLT x17 = x9 * x16;
	const FLT x18 = x17 + (-1 * x15);
	const FLT x19 = x1 * x16;
	const FLT x20 = x5 * x11;
	const FLT x21 = x20 + x19;
	const FLT x22 = x6 * x9;
	const FLT x23 = x8 * x14;
	const FLT x24 = x23 + (-1 * x22);
	const FLT x25 = (x24 * x24) + (x13 * x13) + (x18 * x18) + (x21 * x21);
	const FLT x26 = 1. / sqrt(x25);
	const FLT x27 = x26 * (*_x0).Rot[3];
	const FLT x28 = x26 * (*_x0).Rot[2];
	const FLT x29 = x26 * (*_x0).Rot[0];
	const FLT x30 = x26 * (*_x0).Rot[1];
	const FLT x31 = (x29 * x18) + (x27 * x13) + (x30 * x21) + (-1 * x24 * x28);
	const FLT x32 = (-1 * x30 * x18) + (x21 * x29) + (x24 * x27) + (x28 * x13);
	const FLT x33 = (x29 * x13) + (-1 * x30 * x24) + (-1 * x27 * x18) + (-1 * x21 * x28);
	const FLT x34 = (x24 * x29) + (-1 * x21 * x27) + (x30 * x13) + (x28 * x18);
	const FLT x35 = (x34 * x34) + (x33 * x33) + (x31 * x31) + (x32 * x32);
	const FLT x36 = 1. / sqrt(x35);
	const FLT x37 = 0.5 * x12;
	const FLT x38 = 0.5 * x7;
	const FLT x39 = x38 + x37;
	const FLT x40 = x39 * x26;
	const FLT x41 = -1 * x40 * (*_x0).Rot[1];
	const FLT x42 = 2 * x39;
	const FLT x43 = 0.5 * x23;
	const FLT x44 = -1 * x43;
	const FLT x45 = 0.5 * x22;
	const FLT x46 = x45 + x44;
	const FLT x47 = 2 * x13;
	const FLT x48 = 0.5 * x19;
	const FLT x49 = -0.5 * x20;
	const FLT x50 = x49 + (-1 * x48);
	const FLT x51 = 2 * x50;
	const FLT x52 = 0.5 * x15;
	const FLT x53 = -1 * x52;
	const FLT x54 = 0.5 * x17;
	const FLT x55 = x54 + x53;
	const FLT x56 = 2 * x21;
	const FLT x57 = 1.0 / 2.0 * (1. / (x25 * sqrt(x25)));
	const FLT x58 = ((x56 * x55) + (x51 * x18) + (x42 * x24) + (x46 * x47)) * x57;
	const FLT x59 = x58 * x18;
	const FLT x60 = x50 * x27;
	const FLT x61 = x58 * x21;
	const FLT x62 = x58 * x24;
	const FLT x63 = x58 * x13;
	const FLT x64 = (-1 * x55 * x28) + (x46 * x29) + (x59 * (*_x0).Rot[3]) + (x62 * (*_x0).Rot[1]) + (-1 * x60) +
					(-1 * x63 * (*_x0).Rot[0]) + x41 + (x61 * (*_x0).Rot[2]);
	const FLT x65 = x24 * (*_x0).Rot[0];
	const FLT x66 = x50 * x28;
	const FLT x67 = x21 * (*_x0).Rot[3];
	const FLT x68 = x40 * (*_x0).Rot[0];
	const FLT x69 = (x67 * x58) + (-1 * x55 * x27) + x68 + (x46 * x30) + (-1 * x65 * x58) + x66 +
					(-1 * x63 * (*_x0).Rot[1]) + (-1 * x59 * (*_x0).Rot[2]);
	const FLT x70 = 2 * x34;
	const FLT x71 = 2 * x33;
	const FLT x72 = x13 * (*_x0).Rot[3];
	const FLT x73 = x24 * (*_x0).Rot[2];
	const FLT x74 = x40 * (*_x0).Rot[2];
	const FLT x75 = x50 * x29;
	const FLT x76 = (-1 * x74) + (-1 * x61 * (*_x0).Rot[1]) + (x55 * x30) + (x73 * x58) + (-1 * x72 * x58) +
					(-1 * x59 * (*_x0).Rot[0]) + x75 + (x46 * x27);
	const FLT x77 = 2 * x31;
	const FLT x78 = x40 * (*_x0).Rot[3];
	const FLT x79 = -1 * x50 * x30;
	const FLT x80 = (x55 * x29) + x79 + (x59 * (*_x0).Rot[1]) + x78 + (x46 * x28) + (-1 * x63 * (*_x0).Rot[2]) +
					(-1 * x61 * (*_x0).Rot[0]) + (-1 * x62 * (*_x0).Rot[3]);
	const FLT x81 = 2 * x32;
	const FLT x82 = (x80 * x81) + (x77 * x76) + (x70 * x69) + (x71 * x64);
	const FLT x83 = 1.0 / 2.0 * (1. / (x35 * sqrt(x35)));
	const FLT x84 = x82 * x83;
	const FLT x85 = -1 * x54;
	const FLT x86 = x85 + x53;
	const FLT x87 = x86 * x26;
	const FLT x88 = x48 + x49;
	const FLT x89 = -1 * x45;
	const FLT x90 = x44 + x89;
	const FLT x91 = (-1 * x38) + x37;
	const FLT x92 = ((x56 * x91) + (2 * x90 * x18) + (2 * x86 * x24) + (x88 * x47)) * x57;
	const FLT x93 = x92 * x13;
	const FLT x94 = x92 * x18;
	const FLT x95 = x92 * x21;
	const FLT x96 = x92 * x24;
	const FLT x97 = x90 * x26;
	const FLT x98 = (-1 * x97 * (*_x0).Rot[3]) + (-1 * x91 * x28) + (-1 * x93 * (*_x0).Rot[0]) +
					(-1 * x87 * (*_x0).Rot[1]) + (x94 * (*_x0).Rot[3]) + (x96 * (*_x0).Rot[1]) + (x88 * x29) +
					(x95 * (*_x0).Rot[2]);
	const FLT x99 = (x97 * (*_x0).Rot[0]) + (-1 * x72 * x92) + (x91 * x30) + (-1 * x94 * (*_x0).Rot[0]) +
					(-1 * x86 * x28) + (x88 * x27) + (x73 * x92) + (-1 * x95 * (*_x0).Rot[1]);
	const FLT x100 = (x87 * (*_x0).Rot[0]) + (-1 * x94 * (*_x0).Rot[2]) + (x97 * (*_x0).Rot[2]) +
					 (-1 * x93 * (*_x0).Rot[1]) + (x88 * x30) + (-1 * x91 * x27) + (-1 * x65 * x92) + (x67 * x92);
	const FLT x101 = (x91 * x29) + (-1 * x95 * (*_x0).Rot[0]) + (-1 * x93 * (*_x0).Rot[2]) +
					 (-1 * x97 * (*_x0).Rot[1]) + (x86 * x27) + (x94 * (*_x0).Rot[1]) + (-1 * x96 * (*_x0).Rot[3]) +
					 (x88 * x28);
	const FLT x102 = (x81 * x101) + (x71 * x98) + (x77 * x99) + (x70 * x100);
	const FLT x103 = x83 * x102;
	const FLT x104 = x52 + x85;
	const FLT x105 = x43 + x89;
	const FLT x106 = ((x56 * x105) + (x42 * x18) + (x51 * x24) + (x47 * x104)) * x57;
	const FLT x107 = x106 * (*_x0).Rot[1];
	const FLT x108 = x106 * (*_x0).Rot[0];
	const FLT x109 = x106 * (*_x0).Rot[3];
	const FLT x110 = x106 * (*_x0).Rot[2];
	const FLT x111 = (x21 * x110) + (-1 * x78) + (-1 * x13 * x108) + (x24 * x107) + (x29 * x104) + (-1 * x28 * x105) +
					 x79 + (x18 * x109);
	const FLT x112 = x13 * x106;
	const FLT x113 = x75 + (-1 * x18 * x110) + (-1 * x24 * x108) + (x67 * x106) + (-1 * x112 * (*_x0).Rot[1]) +
					 (-1 * x27 * x105) + (x30 * x104) + x74;
	const FLT x114 = (-1 * x66) + x68 + (x73 * x106) + (x30 * x105) + (-1 * x21 * x107) + (-1 * x18 * x108) +
					 (-1 * x72 * x106) + (x27 * x104);
	const FLT x115 = (-1 * x24 * x109) + (x28 * x104) + (x18 * x107) + x60 + x41 + (-1 * x112 * (*_x0).Rot[2]) +
					 (-1 * x21 * x108) + (x29 * x105);
	const FLT x116 = (x77 * x114) + (x70 * x113) + (x81 * x115) + (x71 * x111);
	const FLT x117 = x83 * x116;
	const FLT x118 = x83 * x34;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x84 * x33) + (x64 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), (-1 * x33 * x103) + (x98 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x33 * x117) + (x36 * x111));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x82 * x118) + (x69 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x102 * x118) + (x36 * x100));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x118 * x116) + (x36 * x113));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x84 * x32) + (x80 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x32 * x103) + (x36 * x101));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x32 * x117) + (x36 * x115));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), (-1 * x84 * x31) + (x76 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), (-1 * x31 * x103) + (x99 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x31 * x117) + (x36 * x114));
}

// Full version Jacobian of SurvivePoseAddErrorModelExact wrt [(*error_state).AxisAngleRot[0],
// (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2], (*error_state).Pos[0], (*error_state).Pos[1],
// (*error_state).Pos[2]]
static inline void SurviveKalmanModelToErrorModel(SurviveKalmanErrorModel* out, const SurviveKalmanModel* _x1, const SurviveKalmanModel* _x0) {
	const FLT x0 = ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[3]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[2]);
	const FLT x1 = (-1 * (*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[2]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[0]);
	const FLT x2 = (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[2]);
	const FLT x3 = ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[0]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[2]);
	const FLT x4 = x0 * x0;
	out->Pose.Pos[0]=(*_x1).Pose.Pos[0] + (-1 * (*_x0).Pose.Pos[0]);
	out->Pose.Pos[1]=(*_x1).Pose.Pos[1] + (-1 * (*_x0).Pose.Pos[1]);
	out->Pose.Pos[2]=(*_x1).Pose.Pos[2] + (-1 * (*_x0).Pose.Pos[2]);
	out->Pose.AxisAngleRot[0]=atan2(2 * ((x2 * x3) + (x0 * x1)), 1 + (-2 * ((x2 * x2) + x4)));
	out->Pose.AxisAngleRot[1]=asin(2 * ((x0 * x3) + (-1 * x2 * x1)));
	out->Pose.AxisAngleRot[2]=atan2(2 * ((x1 * x3) + (x0 * x2)), 1 + (-2 * (x4 + (x1 * x1))));
	out->Velocity.Pos[0]=(*_x1).Velocity.Pos[0] + (-1 * (*_x0).Velocity.Pos[0]);
	out->Velocity.Pos[1]=(*_x1).Velocity.Pos[1] + (-1 * (*_x0).Velocity.Pos[1]);
	out->Velocity.Pos[2]=(*_x1).Velocity.Pos[2] + (-1 * (*_x0).Velocity.Pos[2]);
	out->Velocity.AxisAngleRot[0]=(*_x1).Velocity.AxisAngleRot[0] + (-1 * (*_x0).Velocity.AxisAngleRot[0]);
	out->Velocity.AxisAngleRot[1]=(*_x1).Velocity.AxisAngleRot[1] + (-1 * (*_x0).Velocity.AxisAngleRot[1]);
	out->Velocity.AxisAngleRot[2]=(*_x1).Velocity.AxisAngleRot[2] + (-1 * (*_x0).Velocity.AxisAngleRot[2]);
	out->Acc[0]=(*_x1).Acc[0] + (-1 * (*_x0).Acc[0]);
	out->Acc[1]=(*_x1).Acc[1] + (-1 * (*_x0).Acc[1]);
	out->Acc[2]=(*_x1).Acc[2] + (-1 * (*_x0).Acc[2]);
	out->AccScale=(*_x1).AccScale + (-1 * (*_x0).AccScale);
	out->IMUCorrection[0]=(*_x1).IMUCorrection[0] + (-1 * (*_x0).IMUCorrection[0]);
	out->IMUCorrection[1]=(*_x1).IMUCorrection[1] + (-1 * (*_x0).IMUCorrection[1]);
	out->IMUCorrection[2]=(*_x1).IMUCorrection[2] + (-1 * (*_x0).IMUCorrection[2]);
	out->IMUCorrection[3]=(*_x1).IMUCorrection[3] + (-1 * (*_x0).IMUCorrection[3]);
	out->AccBias[0]=(*_x1).AccBias[0] + (-1 * (*_x0).AccBias[0]);
	out->AccBias[1]=(*_x1).AccBias[1] + (-1 * (*_x0).AccBias[1]);
	out->AccBias[2]=(*_x1).AccBias[2] + (-1 * (*_x0).AccBias[2]);
	out->GyroBias[0]=(*_x1).GyroBias[0] + (-1 * (*_x0).GyroBias[0]);
	out->GyroBias[1]=(*_x1).GyroBias[1] + (-1 * (*_x0).GyroBias[1]);
	out->GyroBias[2]=(*_x1).GyroBias[2] + (-1 * (*_x0).GyroBias[2]);
}

// Jacobian of SurviveKalmanModelToErrorModel wrt [(*_x1).AccBias[0], (*_x1).AccBias[1], (*_x1).AccBias[2],
// (*_x1).Acc[0], (*_x1).Acc[1], (*_x1).Acc[2], (*_x1).GyroBias[0], (*_x1).GyroBias[1], (*_x1).GyroBias[2],
// (*_x1).IMUCorrection[0], (*_x1).IMUCorrection[1], (*_x1).IMUCorrection[2], (*_x1).IMUCorrection[3],
// (*_x1).Pose.Pos[0], (*_x1).Pose.Pos[1], (*_x1).Pose.Pos[2], (*_x1).Pose.Rot[0], (*_x1).Pose.Rot[1],
// (*_x1).Pose.Rot[2], (*_x1).Pose.Rot[3], (*_x1).Velocity.AxisAngleRot[0], (*_x1).Velocity.AxisAngleRot[1],
// (*_x1).Velocity.AxisAngleRot[2], (*_x1).Velocity.Pos[0], (*_x1).Velocity.Pos[1], (*_x1).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae572b0>]
static inline void SurviveKalmanModelToErrorModel_jac_x1(CnMat* Hx, const SurviveKalmanModel* _x1, const SurviveKalmanModel* _x0) {
	const FLT x0 = ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[3]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[2]);
	const FLT x1 = x0 * (*_x0).Pose.Rot[3];
	const FLT x2 = (-1 * (*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[2]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[0]);
	const FLT x3 = x2 * (*_x0).Pose.Rot[2];
	const FLT x4 = ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[0]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[2]);
	const FLT x5 = x4 * (*_x0).Pose.Rot[1];
	const FLT x6 = (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[2]);
	const FLT x7 = x6 * (*_x0).Pose.Rot[0];
	const FLT x8 = x7 + (-1 * x5);
	const FLT x9 = x0 * x0;
	const FLT x10 = 1 + (-2 * ((x6 * x6) + x9));
	const FLT x11 = 2 * (1. / x10);
	const FLT x12 = x0 * (*_x0).Pose.Rot[2];
	const FLT x13 = 4 * x12;
	const FLT x14 = x6 * (*_x0).Pose.Rot[1];
	const FLT x15 = x10 * x10;
	const FLT x16 = (x4 * x6) + (x0 * x2);
	const FLT x17 = 2 * (1. / x15) * x16;
	const FLT x18 = x15 * (1. / (x15 + (4 * (x16 * x16))));
	const FLT x19 = x2 * (*_x0).Pose.Rot[3];
	const FLT x20 = x14 + (x4 * (*_x0).Pose.Rot[0]);
	const FLT x21 = x20 + x12 + (-1 * x19);
	const FLT x22 = 4 * x1;
	const FLT x23 = x6 * (*_x0).Pose.Rot[2];
	const FLT x24 = x4 * (*_x0).Pose.Rot[3];
	const FLT x25 = x2 * (*_x0).Pose.Rot[0];
	const FLT x26 = x0 * (*_x0).Pose.Rot[1];
	const FLT x27 = (-1 * x26) + x25;
	const FLT x28 = x0 * (*_x0).Pose.Rot[0];
	const FLT x29 = -4 * x28;
	const FLT x30 = x6 * (*_x0).Pose.Rot[3];
	const FLT x31 = x4 * (*_x0).Pose.Rot[2];
	const FLT x32 = x2 * (*_x0).Pose.Rot[1];
	const FLT x33 = x28 + x32;
	const FLT x34 = (-1 * x31) + x33 + x30;
	const FLT x35 = -4 * x26;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x4) + (-1 * x2 * x6)) * ((x0 * x4) + (-1 * x2 * x6))))));
	const FLT x37 = (-1 * x23) + (-1 * x24);
	const FLT x38 = x3 + x1;
	const FLT x39 = 1 + (-2 * (x9 + (x2 * x2)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x2 * x4) + (x0 * x6);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x18 * ((-1 * ((4 * x14) + x13) * x17) + ((x8 + (-1 * x1) + (-1 * x3)) * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x18 * ((-1 * x17 * ((-4 * x7) + x22)) + (x21 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x18 * ((-1 * ((-4 * x30) + x29) * x17) + (x11 * (x23 + x27 + x24))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x18 * ((-1 * ((4 * x23) + x35) * x17) + (x34 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x34 * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x36 * (x37 + x26 + (-1 * x25)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x36 * x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x36 * (x38 + x5 + (-1 * x7)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), ((-1 * (x13 + (4 * x19)) * x43) + ((x37 + x27) * x40)) * x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x44 * ((-1 * x43 * (x22 + (-4 * x3))) + (x40 * (x31 + x33 + (-1 * x30)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x44 * ((-1 * (x29 + (4 * x32)) * x43) + (x40 * (x8 + x38))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x44 * ((-1 * (x35 + (-4 * x25)) * x43) + (x40 * (x20 + x19 + (-1 * x12)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccScale)/sizeof(FLT), offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[0])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[1])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[2])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[3])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelToErrorModel wrt [(*_x1).AccBias[0], (*_x1).AccBias[1], (*_x1).AccBias[2],
// (*_x1).Acc[0], (*_x1).Acc[1], (*_x1).Acc[2], (*_x1).GyroBias[0], (*_x1).GyroBias[1], (*_x1).GyroBias[2],
// (*_x1).IMUCorrection[0], (*_x1).IMUCorrection[1], (*_x1).IMUCorrection[2], (*_x1).IMUCorrection[3],
// (*_x1).Pose.Pos[0], (*_x1).Pose.Pos[1], (*_x1).Pose.Pos[2], (*_x1).Pose.Rot[0], (*_x1).Pose.Rot[1],
// (*_x1).Pose.Rot[2], (*_x1).Pose.Rot[3], (*_x1).Velocity.AxisAngleRot[0], (*_x1).Velocity.AxisAngleRot[1],
// (*_x1).Velocity.AxisAngleRot[2], (*_x1).Velocity.Pos[0], (*_x1).Velocity.Pos[1], (*_x1).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae572b0>] Jacobian of SurviveKalmanModelToErrorModel wrt
// [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1],
// (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2],
// (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae716d0>]
static inline void SurviveKalmanModelToErrorModel_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x1, const SurviveKalmanModel* _x0) {
	const FLT x0 = (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[2]);
	const FLT x1 = x0 * (*_x1).Pose.Rot[0];
	const FLT x2 = ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[3]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[2]);
	const FLT x3 = x2 * (*_x1).Pose.Rot[3];
	const FLT x4 = x3 + x1;
	const FLT x5 = ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[0]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[2]);
	const FLT x6 = x5 * (*_x1).Pose.Rot[1];
	const FLT x7 = (-1 * (*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[2]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[0]);
	const FLT x8 = x7 * (*_x1).Pose.Rot[2];
	const FLT x9 = x8 + x6;
	const FLT x10 = x2 * x2;
	const FLT x11 = 1 + (-2 * ((x0 * x0) + x10));
	const FLT x12 = 2 * (1. / x11);
	const FLT x13 = x2 * (*_x1).Pose.Rot[2];
	const FLT x14 = -4 * x13;
	const FLT x15 = x0 * (*_x1).Pose.Rot[1];
	const FLT x16 = x11 * x11;
	const FLT x17 = (x0 * x5) + (x2 * x7);
	const FLT x18 = 2 * x17 * (1. / x16);
	const FLT x19 = x16 * (1. / (x16 + (4 * (x17 * x17))));
	const FLT x20 = x7 * (*_x1).Pose.Rot[3];
	const FLT x21 = x20 + (-1 * x5 * (*_x1).Pose.Rot[0]);
	const FLT x22 = -4 * x3;
	const FLT x23 = x5 * (*_x1).Pose.Rot[3];
	const FLT x24 = x7 * (*_x1).Pose.Rot[0];
	const FLT x25 = x2 * (*_x1).Pose.Rot[1];
	const FLT x26 = x0 * (*_x1).Pose.Rot[2];
	const FLT x27 = x26 + x25;
	const FLT x28 = x2 * (*_x1).Pose.Rot[0];
	const FLT x29 = 4 * x28;
	const FLT x30 = x0 * (*_x1).Pose.Rot[3];
	const FLT x31 = (-1 * x28) + x30;
	const FLT x32 = x5 * (*_x1).Pose.Rot[2];
	const FLT x33 = x7 * (*_x1).Pose.Rot[1];
	const FLT x34 = (-1 * x33) + x32;
	const FLT x35 = 4 * x25;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x2 * x5) + (-1 * x0 * x7)) * ((x2 * x5) + (-1 * x0 * x7))))));
	const FLT x37 = x23 + x27 + x24;
	const FLT x38 = x21 + x13 + (-1 * x15);
	const FLT x39 = 1 + (-2 * (x10 + (x7 * x7)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x5 * x7) + (x0 * x2);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), ((-1 * ((-4 * x15) + x14) * x18) + ((x9 + x4) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x19 * ((-1 * x18 * ((4 * x1) + x22)) + (x12 * (x21 + x15 + (-1 * x13)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x19 * ((-1 * ((4 * x30) + x29) * x18) + (x12 * ((-1 * x23) + x27 + (-1 * x24)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), ((-1 * ((-4 * x26) + x35) * x18) + ((x34 + x31) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x36 * (x34 + x28 + (-1 * x30)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x36 * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x36 * x38);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (x4 + (-1 * x6) + (-1 * x8)) * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x44 * ((-1 * (x14 + (-4 * x20)) * x43) + (x40 * x37)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x44 * ((-1 * x43 * (x22 + (4 * x8))) + (x40 * (x31 + x33 + (-1 * x32)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x44 * ((-1 * (x29 + (-4 * x33)) * x43) + ((x9 + (-1 * x3) + (-1 * x1)) * x40)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x44 * ((-1 * (x35 + (4 * x24)) * x43) + (x40 * x38)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccScale)/sizeof(FLT), offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[0])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[1])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[2])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[3])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), -1);
}

// Full version Jacobian of SurviveKalmanModelToErrorModel wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae716d0>]
static inline void SurviveKalmanModelAddErrorModel(SurviveKalmanModel* out, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_state) {
	const FLT x0 = 0.5 * (*error_state).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).Pose.AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x3 * x8;
	const FLT x13 = x5 * x9;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x15 * x17;
	const FLT x19 = x17 * x16;
	const FLT x20 = x17 * (*_x0).Pose.Rot[0];
	const FLT x21 = x14 * x17;
	const FLT x22 =
		(x20 * x11) + (x21 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[3]) + (-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 =
		(-1 * x23 * (*_x0).Pose.Rot[1]) + (x20 * x14) + (x19 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[2]);
	const FLT x25 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (-1 * x23 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x26 =
		(x20 * x16) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[2]);
	const FLT x27 = 1. / sqrt((x26 * x26) + (x25 * x25) + (x22 * x22) + (x24 * x24));
	out->Pose.Pos[0]=(*_x0).Pose.Pos[0] + (*error_state).Pose.Pos[0];
	out->Pose.Pos[1]=(*_x0).Pose.Pos[1] + (*error_state).Pose.Pos[1];
	out->Pose.Pos[2]=(*_x0).Pose.Pos[2] + (*error_state).Pose.Pos[2];
	out->Pose.Rot[0] = x25 * x27;
	out->Pose.Rot[1] = x26 * x27;
	out->Pose.Rot[2] = x24 * x27;
	out->Pose.Rot[3] = x22 * x27;
	out->Velocity.Pos[0]=(*_x0).Velocity.Pos[0] + (*error_state).Velocity.Pos[0];
	out->Velocity.Pos[1]=(*_x0).Velocity.Pos[1] + (*error_state).Velocity.Pos[1];
	out->Velocity.Pos[2]=(*_x0).Velocity.Pos[2] + (*error_state).Velocity.Pos[2];
	out->Velocity.AxisAngleRot[0]=(*_x0).Velocity.AxisAngleRot[0] + (*error_state).Velocity.AxisAngleRot[0];
	out->Velocity.AxisAngleRot[1]=(*_x0).Velocity.AxisAngleRot[1] + (*error_state).Velocity.AxisAngleRot[1];
	out->Velocity.AxisAngleRot[2]=(*_x0).Velocity.AxisAngleRot[2] + (*error_state).Velocity.AxisAngleRot[2];
	out->Acc[0]=(*_x0).Acc[0] + (*error_state).Acc[0];
	out->Acc[1]=(*_x0).Acc[1] + (*error_state).Acc[1];
	out->Acc[2]=(*_x0).Acc[2] + (*error_state).Acc[2];
	out->AccScale=(*_x0).AccScale + (*error_state).AccScale;
	out->IMUCorrection[0]=(*_x0).IMUCorrection[0] + (*error_state).IMUCorrection[0];
	out->IMUCorrection[1]=(*_x0).IMUCorrection[1] + (*error_state).IMUCorrection[1];
	out->IMUCorrection[2]=(*_x0).IMUCorrection[2] + (*error_state).IMUCorrection[2];
	out->IMUCorrection[3]=(*_x0).IMUCorrection[3] + (*error_state).IMUCorrection[3];
	out->AccBias[0]=(*_x0).AccBias[0] + (*error_state).AccBias[0];
	out->AccBias[1]=(*_x0).AccBias[1] + (*error_state).AccBias[1];
	out->AccBias[2]=(*_x0).AccBias[2] + (*error_state).AccBias[2];
	out->GyroBias[0]=(*_x0).GyroBias[0] + (*error_state).GyroBias[0];
	out->GyroBias[1]=(*_x0).GyroBias[1] + (*error_state).GyroBias[1];
	out->GyroBias[2]=(*_x0).GyroBias[2] + (*error_state).GyroBias[2];
}

// Jacobian of SurviveKalmanModelAddErrorModel wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae64520>]
static inline void SurviveKalmanModelAddErrorModel_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_state) {
	const FLT x0 = 0.5 * (*error_state).Pose.AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).Pose.AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).Pose.AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x4);
	const FLT x8 = sin(x2);
	const FLT x9 = cos(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x1 * x7;
	const FLT x13 = (x6 * x9) + (x8 * x12);
	const FLT x14 = (x3 * x7 * x9) + (x1 * x5 * x8);
	const FLT x15 = (x3 * x12) + (-1 * x5 * x10);
	const FLT x16 = 1. / sqrt((x15 * x15) + (x14 * x14) + (x11 * x11) + (x13 * x13));
	const FLT x17 = x14 * x16;
	const FLT x18 = x15 * x16;
	const FLT x19 = x11 * x16;
	const FLT x20 = x13 * x16;
	const FLT x21 = (x19 * (*_x0).Pose.Rot[0]) + (x17 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[1]) +
					(-1 * x18 * (*_x0).Pose.Rot[2]);
	const FLT x22 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (x18 * (*_x0).Pose.Rot[3]) +
					(x17 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (x17 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x18 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x24 = (-1 * x20 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) +
					(x19 * (*_x0).Pose.Rot[2]);
	const FLT x25 = (x24 * x24) + (x23 * x23) + (x21 * x21) + (x22 * x22);
	const FLT x26 = 1. / sqrt(x25);
	const FLT x27 = x26 * x17;
	const FLT x28 = 2 * x18;
	const FLT x29 = 2 * x17;
	const FLT x30 = 2 * x19;
	const FLT x31 = 2 * x20;
	const FLT x32 = 1.0 / 2.0 * (1. / (x25 * sqrt(x25)));
	const FLT x33 = ((x30 * x21) + (x24 * x28) + (x31 * x22) + (x23 * x29)) * x32;
	const FLT x34 = x26 * x18;
	const FLT x35 = -1 * x34;
	const FLT x36 = 2 * x21;
	const FLT x37 = ((-1 * x30 * x22) + (x36 * x20) + (x24 * x29) + (-1 * x23 * x28)) * x32;
	const FLT x38 = x20 * x26;
	const FLT x39 = -1 * x38;
	const FLT x40 = ((x22 * x29) + (-1 * x36 * x18) + (-1 * x31 * x23) + (x30 * x24)) * x32;
	const FLT x41 = x26 * x19;
	const FLT x42 = -1 * x41;
	const FLT x43 = ((-1 * x31 * x24) + (-1 * x30 * x23) + (x22 * x28) + (x36 * x17)) * x32;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), (-1 * x33 * x23) + x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), (-1 * x37 * x23) + x35);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), (-1 * x40 * x23) + x39);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), (-1 * x43 * x23) + x42);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), (-1 * x33 * x24) + x34);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), (-1 * x37 * x24) + x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), (-1 * x40 * x24) + x41);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), (-1 * x43 * x24) + x39);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), (-1 * x33 * x22) + x38);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), (-1 * x37 * x22) + x42);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), (-1 * x40 * x22) + x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), (-1 * x43 * x22) + x34);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), (-1 * x33 * x21) + x41);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), (-1 * x37 * x21) + x38);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), (-1 * x40 * x21) + x35);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), (-1 * x43 * x21) + x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelAddErrorModel wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae64520>] Jacobian of
// SurviveKalmanModelAddErrorModel wrt [(*error_state).AccBias[0], (*error_state).AccBias[1], (*error_state).AccBias[2],
// (*error_state).Acc[0], (*error_state).Acc[1], (*error_state).Acc[2], (*error_state).GyroBias[0],
// (*error_state).GyroBias[1], (*error_state).GyroBias[2], (*error_state).IMUCorrection[0],
// (*error_state).IMUCorrection[1], (*error_state).IMUCorrection[2], (*error_state).IMUCorrection[3],
// (*error_state).Pose.AxisAngleRot[0], (*error_state).Pose.AxisAngleRot[1], (*error_state).Pose.AxisAngleRot[2],
// (*error_state).Pose.Pos[0], (*error_state).Pose.Pos[1], (*error_state).Pose.Pos[2],
// (*error_state).Velocity.AxisAngleRot[0], (*error_state).Velocity.AxisAngleRot[1],
// (*error_state).Velocity.AxisAngleRot[2], (*error_state).Velocity.Pos[0], (*error_state).Velocity.Pos[1],
// (*error_state).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae762b0>]
static inline void SurviveKalmanModelAddErrorModel_jac_error_state(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_state) {
	const FLT x0 = 0.5 * (*error_state).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).Pose.AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = cos(x0);
	const FLT x9 = sin(x4);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + (-1 * x7);
	const FLT x14 = x3 * x9;
	const FLT x15 = x8 * x14;
	const FLT x16 = x5 * x10;
	const FLT x17 = x1 * x16;
	const FLT x18 = x17 + x15;
	const FLT x19 = x1 * x14;
	const FLT x20 = x8 * x16;
	const FLT x21 = x20 + x19;
	const FLT x22 = x1 * x11;
	const FLT x23 = x6 * x8;
	const FLT x24 = x23 + (-1 * x22);
	const FLT x25 = (x24 * x24) + (x21 * x21) + (x13 * x13) + (x18 * x18);
	const FLT x26 = 1. / sqrt(x25);
	const FLT x27 = x21 * x26;
	const FLT x28 = x24 * x26;
	const FLT x29 = x26 * (*_x0).Pose.Rot[0];
	const FLT x30 = x26 * (*_x0).Pose.Rot[1];
	const FLT x31 = (x30 * x18) + (x29 * x13) + (x27 * (*_x0).Pose.Rot[3]) + (-1 * x28 * (*_x0).Pose.Rot[2]);
	const FLT x32 = (-1 * x30 * x13) + (x29 * x18) + (x28 * (*_x0).Pose.Rot[3]) + (x27 * (*_x0).Pose.Rot[2]);
	const FLT x33 = x26 * x13;
	const FLT x34 = x26 * x18;
	const FLT x35 = (x21 * x29) + (-1 * x33 * (*_x0).Pose.Rot[3]) + (-1 * x30 * x24) + (-1 * x34 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x30 * x21) + (x24 * x29) + (-1 * x34 * (*_x0).Pose.Rot[3]) + (x33 * (*_x0).Pose.Rot[2]);
	const FLT x37 = (x36 * x36) + (x35 * x35) + (x31 * x31) + (x32 * x32);
	const FLT x38 = 1. / sqrt(x37);
	const FLT x39 = 0.5 * x20;
	const FLT x40 = 0.5 * x19;
	const FLT x41 = x40 + x39;
	const FLT x42 = x41 * x26;
	const FLT x43 = -1 * x42 * (*_x0).Pose.Rot[1];
	const FLT x44 = 2 * x24;
	const FLT x45 = 0.5 * x23;
	const FLT x46 = -1 * x45;
	const FLT x47 = 0.5 * x22;
	const FLT x48 = x47 + x46;
	const FLT x49 = 2 * x21;
	const FLT x50 = 0.5 * x15;
	const FLT x51 = -0.5 * x17;
	const FLT x52 = x51 + (-1 * x50);
	const FLT x53 = 2 * x13;
	const FLT x54 = 0.5 * x7;
	const FLT x55 = -1 * x54;
	const FLT x56 = 0.5 * x12;
	const FLT x57 = x56 + x55;
	const FLT x58 = 2 * x18;
	const FLT x59 = 1.0 / 2.0 * (1. / (x25 * sqrt(x25)));
	const FLT x60 = ((x58 * x57) + (x53 * x52) + (x41 * x44) + (x48 * x49)) * x59;
	const FLT x61 = x60 * x24;
	const FLT x62 = x60 * (*_x0).Pose.Rot[0];
	const FLT x63 = x60 * x13;
	const FLT x64 = x52 * x26;
	const FLT x65 = x64 * (*_x0).Pose.Rot[3];
	const FLT x66 = x26 * (*_x0).Pose.Rot[2];
	const FLT x67 = x60 * x18;
	const FLT x68 = (x67 * (*_x0).Pose.Rot[2]) + (x61 * (*_x0).Pose.Rot[1]) + (x63 * (*_x0).Pose.Rot[3]) + (x48 * x29) +
					x43 + (-1 * x62 * x21) + (-1 * x66 * x57) + (-1 * x65);
	const FLT x69 = x60 * x21;
	const FLT x70 = x26 * (*_x0).Pose.Rot[3];
	const FLT x71 = x64 * (*_x0).Pose.Rot[2];
	const FLT x72 = x42 * (*_x0).Pose.Rot[0];
	const FLT x73 = x72 + (x48 * x30) + (-1 * x63 * (*_x0).Pose.Rot[2]) + (-1 * x69 * (*_x0).Pose.Rot[1]) +
					(-1 * x61 * (*_x0).Pose.Rot[0]) + (-1 * x70 * x57) + x71 + (x67 * (*_x0).Pose.Rot[3]);
	const FLT x74 = 2 * x36;
	const FLT x75 = x48 * x26;
	const FLT x76 = x42 * (*_x0).Pose.Rot[2];
	const FLT x77 = x64 * (*_x0).Pose.Rot[0];
	const FLT x78 = (-1 * x67 * (*_x0).Pose.Rot[1]) + (x61 * (*_x0).Pose.Rot[2]) + x77 +
					(-1 * x63 * (*_x0).Pose.Rot[0]) + (-1 * x76) + (-1 * x69 * (*_x0).Pose.Rot[3]) + (x57 * x30) +
					(x75 * (*_x0).Pose.Rot[3]);
	const FLT x79 = 2 * x31;
	const FLT x80 = 2 * x35;
	const FLT x81 = -1 * x64 * (*_x0).Pose.Rot[1];
	const FLT x82 = x42 * (*_x0).Pose.Rot[3];
	const FLT x83 = (x75 * (*_x0).Pose.Rot[2]) + (-1 * x69 * (*_x0).Pose.Rot[2]) + (x63 * (*_x0).Pose.Rot[1]) + x82 +
					x81 + (-1 * x62 * x18) + (x57 * x29) + (-1 * x61 * (*_x0).Pose.Rot[3]);
	const FLT x84 = 2 * x32;
	const FLT x85 = 1.0 / 2.0 * (1. / (x37 * sqrt(x37)));
	const FLT x86 = ((x83 * x84) + (x73 * x74) + (x80 * x68) + (x79 * x78)) * x85;
	const FLT x87 = -1 * x56;
	const FLT x88 = x87 + x55;
	const FLT x89 = x50 + x51;
	const FLT x90 = -1 * x47;
	const FLT x91 = x46 + x90;
	const FLT x92 = (-1 * x40) + x39;
	const FLT x93 = ((x58 * x92) + (x53 * x91) + (x88 * x44) + (x89 * x49)) * x59;
	const FLT x94 = x93 * x24;
	const FLT x95 = x21 * (*_x0).Pose.Rot[0];
	const FLT x96 = x93 * x13;
	const FLT x97 = x91 * x26;
	const FLT x98 = x93 * x18;
	const FLT x99 = (x89 * x29) + (-1 * x88 * x30) + (x98 * (*_x0).Pose.Rot[2]) + (-1 * x93 * x95) + (-1 * x66 * x92) +
					(x94 * (*_x0).Pose.Rot[1]) + (x96 * (*_x0).Pose.Rot[3]) + (-1 * x97 * (*_x0).Pose.Rot[3]);
	const FLT x100 = x93 * x21;
	const FLT x101 = (-1 * x96 * (*_x0).Pose.Rot[2]) + (x88 * x29) + (x97 * (*_x0).Pose.Rot[2]) +
					 (-1 * x100 * (*_x0).Pose.Rot[1]) + (-1 * x94 * (*_x0).Pose.Rot[0]) + (x89 * x30) +
					 (x98 * (*_x0).Pose.Rot[3]) + (-1 * x70 * x92);
	const FLT x102 = x88 * x26;
	const FLT x103 = (x91 * x29) + (-1 * x102 * (*_x0).Pose.Rot[2]) + (x92 * x30) + (-1 * x98 * (*_x0).Pose.Rot[1]) +
					 (-1 * x100 * (*_x0).Pose.Rot[3]) + (x89 * x70) + (-1 * x96 * (*_x0).Pose.Rot[0]) +
					 (x94 * (*_x0).Pose.Rot[2]);
	const FLT x104 = (-1 * x100 * (*_x0).Pose.Rot[2]) + (x92 * x29) + (-1 * x98 * (*_x0).Pose.Rot[0]) +
					 (-1 * x91 * x30) + (x102 * (*_x0).Pose.Rot[3]) + (x89 * x66) + (x96 * (*_x0).Pose.Rot[1]) +
					 (-1 * x94 * (*_x0).Pose.Rot[3]);
	const FLT x105 = x85 * ((x84 * x104) + (x74 * x101) + (x79 * x103) + (x80 * x99));
	const FLT x106 = x54 + x87;
	const FLT x107 = x45 + x90;
	const FLT x108 = ((x49 * x106) + (x58 * x107) + (x53 * x41) + (x52 * x44)) * x59;
	const FLT x109 = x24 * x108;
	const FLT x110 = x13 * x108;
	const FLT x111 = x18 * x108;
	const FLT x112 = (x29 * x106) + (x111 * (*_x0).Pose.Rot[2]) + (-1 * x66 * x107) + x81 +
					 (x109 * (*_x0).Pose.Rot[1]) + (-1 * x82) + (-1 * x95 * x108) + (x110 * (*_x0).Pose.Rot[3]);
	const FLT x113 = x21 * x108;
	const FLT x114 = x77 + (-1 * x109 * (*_x0).Pose.Rot[0]) + (x30 * x106) + (-1 * x113 * (*_x0).Pose.Rot[1]) +
					 (-1 * x110 * (*_x0).Pose.Rot[2]) + x76 + (-1 * x70 * x107) + (x111 * (*_x0).Pose.Rot[3]);
	const FLT x115 = (x109 * (*_x0).Pose.Rot[2]) + (-1 * x71) + (x30 * x107) + (-1 * x111 * (*_x0).Pose.Rot[1]) +
					 (x70 * x106) + (-1 * x110 * (*_x0).Pose.Rot[0]) + x72 + (-1 * x113 * (*_x0).Pose.Rot[3]);
	const FLT x116 = (x66 * x106) + (x110 * (*_x0).Pose.Rot[1]) + (-1 * x111 * (*_x0).Pose.Rot[0]) + x43 +
					 (x29 * x107) + (-1 * x113 * (*_x0).Pose.Rot[2]) + (-1 * x109 * (*_x0).Pose.Rot[3]) + x65;
	const FLT x117 = ((x84 * x116) + (x79 * x115) + (x74 * x114) + (x80 * x112)) * x85;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x86 * x35) + (x68 * x38));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x35 * x105) + (x99 * x38));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x35 * x117) + (x38 * x112));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x86 * x36) + (x73 * x38));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x36 * x105) + (x38 * x101));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x36 * x117) + (x38 * x114));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x86 * x32) + (x83 * x38));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x32 * x105) + (x38 * x104));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x32 * x117) + (x38 * x116));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x86 * x31) + (x78 * x38));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x31 * x105) + (x38 * x103));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x31 * x117) + (x38 * x115));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccScale)/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[3])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccBias[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, GyroBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, GyroBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, GyroBias[2])/sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelAddErrorModel wrt [(*error_state).AccBias[0], (*error_state).AccBias[1],
// (*error_state).AccBias[2], (*error_state).Acc[0], (*error_state).Acc[1], (*error_state).Acc[2],
// (*error_state).GyroBias[0], (*error_state).GyroBias[1], (*error_state).GyroBias[2], (*error_state).IMUCorrection[0],
// (*error_state).IMUCorrection[1], (*error_state).IMUCorrection[2], (*error_state).IMUCorrection[3],
// (*error_state).Pose.AxisAngleRot[0], (*error_state).Pose.AxisAngleRot[1], (*error_state).Pose.AxisAngleRot[2],
// (*error_state).Pose.Pos[0], (*error_state).Pose.Pos[1], (*error_state).Pose.Pos[2],
// (*error_state).Velocity.AxisAngleRot[0], (*error_state).Velocity.AxisAngleRot[1],
// (*error_state).Velocity.AxisAngleRot[2], (*error_state).Velocity.Pos[0], (*error_state).Velocity.Pos[1],
// (*error_state).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae762b0>]
static inline void SurviveKalmanModelPredict(SurviveKalmanModel* out, const FLT t, const SurviveKalmanModel* kalman_model) {
	const FLT x0 = t * (*kalman_model).Acc[0];
	const FLT x1 = 1.0/2.0 * fabs(t);
	const FLT x2 = t * (*kalman_model).Acc[1];
	const FLT x3 = t * (*kalman_model).Acc[2];
	const FLT x4 = t * t;
	const FLT x5 = x4 * ((*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2]);
	const FLT x6 = x4 * ((*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0]);
	const FLT x7 = x4 * ((*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1]);
	const FLT x8 = 1e-10 + x7 + x5 + x6;
	const FLT x9 = sqrt(x8);
	const FLT x10 = 0.5 * x9;
	const FLT x11 = sin(x10);
	const FLT x12 = (1. / x8) * (x11 * x11);
	const FLT x13 = cos(x10);
	const FLT x14 = 1. / sqrt((x6 * x12) + (x13 * x13) + (x5 * x12) + (x7 * x12));
	const FLT x15 = t * (1. / x9) * x14 * x11;
	const FLT x16 = x15 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x17 = x15 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x18 = x14 * x13;
	const FLT x19 = x15 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x20 = x15 * (*kalman_model).Pose.Rot[0];
	out->Pose.Pos[0]=(x0 * x1) + (t * (*kalman_model).Velocity.Pos[0]) + (*kalman_model).Pose.Pos[0];
	out->Pose.Pos[1]=(t * (*kalman_model).Velocity.Pos[1]) + (x2 * x1) + (*kalman_model).Pose.Pos[1];
	out->Pose.Pos[2]=(t * (*kalman_model).Velocity.Pos[2]) + (x1 * x3) + (*kalman_model).Pose.Pos[2];
	out->Pose.Rot[0]=(-1 * x19 * (*kalman_model).Pose.Rot[1]) + (x18 * (*kalman_model).Pose.Rot[0]) + (-1 * x16 * (*kalman_model).Pose.Rot[3]) + (-1 * x17 * (*kalman_model).Pose.Rot[2]);
	out->Pose.Rot[1]=(x20 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x18 * (*kalman_model).Pose.Rot[1]) + (-1 * x16 * (*kalman_model).Pose.Rot[2]) + (x17 * (*kalman_model).Pose.Rot[3]);
	out->Pose.Rot[2]=(-1 * x19 * (*kalman_model).Pose.Rot[3]) + (x18 * (*kalman_model).Pose.Rot[2]) + (x20 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x16 * (*kalman_model).Pose.Rot[1]);
	out->Pose.Rot[3]=(x19 * (*kalman_model).Pose.Rot[2]) + (x18 * (*kalman_model).Pose.Rot[3]) + (x20 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x17 * (*kalman_model).Pose.Rot[1]);
	out->Velocity.Pos[0]=(*kalman_model).Velocity.Pos[0] + x0;
	out->Velocity.Pos[1]=(*kalman_model).Velocity.Pos[1] + x2;
	out->Velocity.Pos[2]=(*kalman_model).Velocity.Pos[2] + x3;
	out->Velocity.AxisAngleRot[0]=(*kalman_model).Velocity.AxisAngleRot[0];
	out->Velocity.AxisAngleRot[1]=(*kalman_model).Velocity.AxisAngleRot[1];
	out->Velocity.AxisAngleRot[2]=(*kalman_model).Velocity.AxisAngleRot[2];
	out->Acc[0]=(*kalman_model).Acc[0];
	out->Acc[1]=(*kalman_model).Acc[1];
	out->Acc[2]=(*kalman_model).Acc[2];
	out->AccScale=(*kalman_model).AccScale;
	out->IMUCorrection[0]=(*kalman_model).IMUCorrection[0];
	out->IMUCorrection[1]=(*kalman_model).IMUCorrection[1];
	out->IMUCorrection[2]=(*kalman_model).IMUCorrection[2];
	out->IMUCorrection[3]=(*kalman_model).IMUCorrection[3];
	out->AccBias[0]=(*kalman_model).AccBias[0];
	out->AccBias[1]=(*kalman_model).AccBias[1];
	out->AccBias[2]=(*kalman_model).AccBias[2];
	out->GyroBias[0]=(*kalman_model).GyroBias[0];
	out->GyroBias[1]=(*kalman_model).GyroBias[1];
	out->GyroBias[2]=(*kalman_model).GyroBias[2];
}

// Jacobian of SurviveKalmanModelPredict wrt [t]
static inline void SurviveKalmanModelPredict_jac_t(CnMat* Hx, const FLT t, const SurviveKalmanModel* kalman_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = x0 * ((t) > 0 ? 1 : -1) /* Note: Maybe not valid for == 0 */;
	const FLT x2 = fabs(t);
	const FLT x3 = 1.0/2.0 * x2;
	const FLT x4 = t * t;
	const FLT x5 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x6 = x4 * x5;
	const FLT x7 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x8 = x4 * x7;
	const FLT x9 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x10 = x4 * x9;
	const FLT x11 = 1e-10 + x10 + x6 + x8;
	const FLT x12 = 1. / x11;
	const FLT x13 = sqrt(x11);
	const FLT x14 = 0.5 * x13;
	const FLT x15 = sin(x14);
	const FLT x16 = x15 * x15;
	const FLT x17 = x12 * x16;
	const FLT x18 = cos(x14);
	const FLT x19 = (x8 * x17) + (x6 * x17) + (x18 * x18) + (x10 * x17);
	const FLT x20 = 1. / sqrt(x19);
	const FLT x21 = x15 * (1. / x13);
	const FLT x22 = x21 * (*kalman_model).Pose.Rot[1];
	const FLT x23 = x22 * x20;
	const FLT x24 = x18 * (*kalman_model).Pose.Rot[2];
	const FLT x25 = 2 * t;
	const FLT x26 = x9 * x25;
	const FLT x27 = x5 * x25;
	const FLT x28 = x7 * x25;
	const FLT x29 = x28 + x26 + x27;
	const FLT x30 = 0.25 * x29;
	const FLT x31 = t * x30 * x12;
	const FLT x32 = x31 * x24;
	const FLT x33 = x32 * x20;
	const FLT x34 = x15 * (1. / (x11 * sqrt(x11)));
	const FLT x35 = x0 * x34 * x29;
	const FLT x36 = x35 * x20;
	const FLT x37 = x36 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x38 = (1. / (x11 * x11)) * x16;
	const FLT x39 = x38 * x29;
	const FLT x40 = 0.5 * x18;
	const FLT x41 = x40 * x29;
	const FLT x42 = x41 * x34;
	const FLT x43 = x29 * x10;
	const FLT x44 = (1. / (x19 * sqrt(x19))) * ((x6 * x42) + (x26 * x17) + (-1 * x6 * x39) + (x40 * x43 * x34) + (x27 * x17) + (x28 * x17) + (-1 * x43 * x38) + (-1 * x8 * x39) + (x8 * x42) + (-1 * x41 * x21));
	const FLT x45 = x0 * x44;
	const FLT x46 = x45 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x47 = x46 * x21;
	const FLT x48 = x20 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x49 = x48 * (*kalman_model).Pose.Rot[3];
	const FLT x50 = x31 * x18;
	const FLT x51 = x45 * x21;
	const FLT x52 = x51 * (*kalman_model).Pose.Rot[3];
	const FLT x53 = x50 * x20;
	const FLT x54 = x53 * (*kalman_model).Pose.Rot[1];
	const FLT x55 = 1.0/2.0 * x44;
	const FLT x56 = x55 * x18;
	const FLT x57 = x48 * x21;
	const FLT x58 = x20 * x21;
	const FLT x59 = x58 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x60 = x58 * (*kalman_model).Pose.Rot[0];
	const FLT x61 = x45 * x22;
	const FLT x62 = x36 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x63 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[0];
	const FLT x64 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[3];
	const FLT x65 = x51 * (*kalman_model).Pose.Rot[2];
	const FLT x66 = x48 * x35;
	const FLT x67 = x58 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x68 = x50 * x48;
	const FLT x69 = x58 * x30;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 0, (x3 * (*kalman_model).Acc[0]) + (*kalman_model).Velocity.Pos[0] + (x1 * (*kalman_model).Acc[0]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 0, (x3 * (*kalman_model).Acc[1]) + (*kalman_model).Velocity.Pos[1] + (x1 * (*kalman_model).Acc[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 0, (x3 * (*kalman_model).Acc[2]) + (*kalman_model).Velocity.Pos[2] + (x1 * (*kalman_model).Acc[2]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), 0, (-1 * x60 * x30) + (x47 * (*kalman_model).Pose.Rot[2]) + (-1 * x57 * (*kalman_model).Pose.Rot[3]) + (-1 * x50 * x49) + (x61 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x59 * (*kalman_model).Pose.Rot[2]) + (-1 * x23 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x33 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x52 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x62 * (*kalman_model).Pose.Rot[1]) + (-1 * x56 * (*kalman_model).Pose.Rot[0]) + (x49 * x35) + (x37 * (*kalman_model).Pose.Rot[2]) + (-1 * x54 * (*kalman_model).Velocity.AxisAngleRot[0]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), 0, (x59 * (*kalman_model).Pose.Rot[3]) + (-1 * x47 * (*kalman_model).Pose.Rot[3]) + (-1 * x56 * (*kalman_model).Pose.Rot[1]) + (x66 * (*kalman_model).Pose.Rot[2]) + (x64 * x53) + (-1 * x48 * x32) + (x63 * x53) + (x60 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x57 * (*kalman_model).Pose.Rot[2]) + (-1 * x62 * (*kalman_model).Pose.Rot[0]) + (x65 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x30 * x23) + (-1 * x63 * x51) + (-1 * x64 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), 0, (-1 * x53 * (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[3]) + (-1 * x37 * (*kalman_model).Pose.Rot[0]) + (-1 * x47 * (*kalman_model).Pose.Rot[0]) + (x52 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x55 * x24) + (x53 * (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[0]) + (x60 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x61 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x68 * (*kalman_model).Pose.Rot[1]) + (-1 * x69 * (*kalman_model).Pose.Rot[2]) + (x48 * x22) + (x62 * (*kalman_model).Pose.Rot[3]) + (-1 * x67 * (*kalman_model).Pose.Rot[3]) + (-1 * x66 * (*kalman_model).Pose.Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), 0, (x33 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x56 * (*kalman_model).Pose.Rot[3]) + (-1 * x66 * (*kalman_model).Pose.Rot[0]) + (-1 * x51 * (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Pose.Rot[0]) + (-1 * x65 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x46 * x22) + (x67 * (*kalman_model).Pose.Rot[2]) + (-1 * x54 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x62 * (*kalman_model).Pose.Rot[2]) + (-1 * x69 * (*kalman_model).Pose.Rot[3]) + (x37 * (*kalman_model).Pose.Rot[1]) + (x68 * (*kalman_model).Pose.Rot[0]) + (-1 * x23 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x57 * (*kalman_model).Pose.Rot[0]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 0, (*kalman_model).Acc[0]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 0, (*kalman_model).Acc[1]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 0, (*kalman_model).Acc[2]);
}

// Full version Jacobian of SurviveKalmanModelPredict wrt [t]
// Jacobian of SurviveKalmanModelPredict wrt [(*kalman_model).AccBias[0], (*kalman_model).AccBias[1],
// (*kalman_model).AccBias[2], (*kalman_model).Acc[0], (*kalman_model).Acc[1], (*kalman_model).Acc[2],
// (*kalman_model).GyroBias[0], (*kalman_model).GyroBias[1], (*kalman_model).GyroBias[2],
// (*kalman_model).IMUCorrection[0], (*kalman_model).IMUCorrection[1], (*kalman_model).IMUCorrection[2],
// (*kalman_model).IMUCorrection[3], (*kalman_model).Pose.Pos[0], (*kalman_model).Pose.Pos[1],
// (*kalman_model).Pose.Pos[2], (*kalman_model).Pose.Rot[0], (*kalman_model).Pose.Rot[1], (*kalman_model).Pose.Rot[2],
// (*kalman_model).Pose.Rot[3], (*kalman_model).Velocity.AxisAngleRot[0], (*kalman_model).Velocity.AxisAngleRot[1],
// (*kalman_model).Velocity.AxisAngleRot[2], (*kalman_model).Velocity.Pos[0], (*kalman_model).Velocity.Pos[1],
// (*kalman_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae63cd0>]
static inline void SurviveKalmanModelPredict_jac_kalman_model(CnMat* Hx, const FLT t, const SurviveKalmanModel* kalman_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = fabs(t) * x0;
	const FLT x2 = t * t;
	const FLT x3 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x4 = x2 * x3;
	const FLT x5 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x6 = x2 * x5;
	const FLT x7 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x8 = x2 * x7;
	const FLT x9 = 1e-10 + x8 + x4 + x6;
	const FLT x10 = 1. / x9;
	const FLT x11 = sqrt(x9);
	const FLT x12 = 0.5 * x11;
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * x13;
	const FLT x15 = x14 * x10;
	const FLT x16 = cos(x12);
	const FLT x17 = (x6 * x15) + (x16 * x16) + (x4 * x15) + (x8 * x15);
	const FLT x18 = 1. / sqrt(x17);
	const FLT x19 = x18 * x16;
	const FLT x20 = x13 * x18;
	const FLT x21 = 1. / x11;
	const FLT x22 = t * x21;
	const FLT x23 = x22 * x20;
	const FLT x24 = x23 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x25 = -1 * x24;
	const FLT x26 = x23 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x27 = -1 * x26;
	const FLT x28 = x23 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x29 = -1 * x28;
	const FLT x30 = t * t * t;
	const FLT x31 = 0.5 * x30 * x10 * x19;
	const FLT x32 = x31 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x33 = x32 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x34 = x33 * (*kalman_model).Pose.Rot[2];
	const FLT x35 = 1. / (x17 * sqrt(x17));
	const FLT x36 = 2 * x15;
	const FLT x37 = x2 * x36;
	const FLT x38 = t * t * t * t;
	const FLT x39 = x38 * ((*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0]);
	const FLT x40 = 2 * (1. / (x9 * x9)) * x14;
	const FLT x41 = 1. / (x9 * sqrt(x9));
	const FLT x42 = 1.0 * x13 * x16;
	const FLT x43 = x41 * x42;
	const FLT x44 = x43 * x38;
	const FLT x45 = x3 * x44;
	const FLT x46 = x40 * x38;
	const FLT x47 = x3 * x46;
	const FLT x48 = x7 * x46;
	const FLT x49 = x7 * x44;
	const FLT x50 = x42 * x21;
	const FLT x51 = x2 * x50;
	const FLT x52 = ((-1 * x51 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x49 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x48 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x40 * x39) + (x37 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x43 * x39) + (x45 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x47 * (*kalman_model).Velocity.AxisAngleRot[0])) * x35;
	const FLT x53 = x0 * x21 * x13;
	const FLT x54 = x53 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x55 = x54 * x52;
	const FLT x56 = x20 * (*kalman_model).Pose.Rot[0];
	const FLT x57 = 0.5 * x21;
	const FLT x58 = x2 * x57;
	const FLT x59 = x58 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x60 = x53 * x52;
	const FLT x61 = x60 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x62 = x20 * (*kalman_model).Pose.Rot[2];
	const FLT x63 = x41 * x30;
	const FLT x64 = x63 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x65 = x64 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x66 = x62 * x65;
	const FLT x67 = 1.0/2.0 * x16;
	const FLT x68 = x67 * x52;
	const FLT x69 = x5 * x31;
	const FLT x70 = x23 * (*kalman_model).Pose.Rot[1];
	const FLT x71 = -1 * x70;
	const FLT x72 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[2];
	const FLT x73 = x5 * x63;
	const FLT x74 = x20 * (*kalman_model).Pose.Rot[1];
	const FLT x75 = x20 * (*kalman_model).Pose.Rot[3];
	const FLT x76 = x64 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x77 = x31 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x78 = x77 * (*kalman_model).Pose.Rot[3];
	const FLT x79 = (-1 * x78 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x75 * x76);
	const FLT x80 = x23 * (*kalman_model).Pose.Rot[2];
	const FLT x81 = -1 * x80;
	const FLT x82 = x7 * x63;
	const FLT x83 = x78 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x84 = x5 * x46;
	const FLT x85 = x5 * x44;
	const FLT x86 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x87 = ((x37 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x86 * x46) + (-1 * x51 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x84 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x86 * x44) + (x85 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x47 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x45 * (*kalman_model).Velocity.AxisAngleRot[1])) * x35;
	const FLT x88 = x87 * x53;
	const FLT x89 = x88 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x90 = x7 * x31;
	const FLT x91 = x58 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x92 = x75 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x93 = x63 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x94 = x93 * x92;
	const FLT x95 = x87 * x54;
	const FLT x96 = x87 * x67;
	const FLT x97 = x74 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x98 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[1];
	const FLT x99 = (-1 * x98 * x32) + (x64 * x97);
	const FLT x100 = x74 * x76;
	const FLT x101 = x2 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x102 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x103 = ((-1 * x48 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x49 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x46 * x102) + (-1 * x50 * x101) + (x85 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x84 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x36 * x101) + (x44 * x102)) * x35;
	const FLT x104 = x103 * (*kalman_model).Pose.Rot[3];
	const FLT x105 = x53 * x104;
	const FLT x106 = x53 * x103;
	const FLT x107 = x106 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x108 = x3 * x63;
	const FLT x109 = x23 * (*kalman_model).Pose.Rot[3];
	const FLT x110 = -1 * x109;
	const FLT x111 = x57 * x101;
	const FLT x112 = x67 * x103;
	const FLT x113 = x3 * x31;
	const FLT x114 = x77 * x98;
	const FLT x115 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Pose.Rot[2];
	const FLT x116 = x93 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x117 = (x62 * x116) + (-1 * x32 * x115);
	const FLT x118 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[3];
	const FLT x119 = x33 * (*kalman_model).Pose.Rot[3];
	const FLT x120 = x76 * x62;
	const FLT x121 = x75 * x65;
	const FLT x122 = x31 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x123 = x115 * x122;
	const FLT x124 = x56 * x22;
	const FLT x125 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[0];
	const FLT x126 = (x122 * x125) + (-1 * x65 * x56);
	const FLT x127 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[0];
	const FLT x128 = (x77 * x127) + (-1 * x76 * x56);
	const FLT x129 = x67 * (*kalman_model).Pose.Rot[2];
	const FLT x130 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[1];
	const FLT x131 = x77 * x130;
	const FLT x132 = x93 * x97;
	const FLT x133 = x106 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x134 = (x77 * x125) + (-1 * x56 * x116);
	const FLT x135 = x54 * (*kalman_model).Pose.Rot[2];
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x25);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x29);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x79 + (x72 * x60) + x71 + (-1 * x69 * (*kalman_model).Pose.Rot[1]) + (-1 * x68 * (*kalman_model).Pose.Rot[0]) + (x55 * (*kalman_model).Pose.Rot[1]) + (-1 * x34) + (x73 * x74) + (-1 * x56 * x59) + (x61 * (*kalman_model).Pose.Rot[3]) + x66);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), (x95 * (*kalman_model).Pose.Rot[1]) + x94 + (x82 * x62) + (-1 * x83) + (x88 * x72) + (-1 * x90 * (*kalman_model).Pose.Rot[2]) + x99 + (-1 * x96 * (*kalman_model).Pose.Rot[0]) + (-1 * x56 * x91) + x81 + (x89 * (*kalman_model).Pose.Rot[3]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), (x98 * x106) + (-1 * x113 * (*kalman_model).Pose.Rot[3]) + (-1 * x56 * x111) + (-1 * x114) + (x105 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x112 * (*kalman_model).Pose.Rot[0]) + (x75 * x108) + x100 + x117 + (x107 * (*kalman_model).Pose.Rot[2]) + x110);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x24);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x29);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x26);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x120 + (x69 * (*kalman_model).Pose.Rot[0]) + (-1 * x123) + (-1 * x73 * x56) + x119 + (-1 * x121) + (-1 * x55 * (*kalman_model).Pose.Rot[0]) + (-1 * x60 * x118) + (-1 * x74 * x59) + x124 + (-1 * x68 * (*kalman_model).Pose.Rot[1]) + (x60 * x115));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x126 + x117 + (-1 * x88 * x118) + x109 + (x88 * x115) + (-1 * x95 * (*kalman_model).Pose.Rot[0]) + (-1 * x96 * (*kalman_model).Pose.Rot[1]) + (x90 * (*kalman_model).Pose.Rot[3]) + (-1 * x58 * x97) + (-1 * x82 * x75));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x128 + (-1 * x105 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x113 * (*kalman_model).Pose.Rot[2]) + (-1 * x112 * (*kalman_model).Pose.Rot[1]) + (-1 * x94) + (-1 * x74 * x111) + (x106 * x115) + x83 + (-1 * x106 * x127) + (x62 * x108) + x81);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x26);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x28);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x25);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x126 + (-1 * x62 * x59) + (-1 * x100) + (-1 * x69 * (*kalman_model).Pose.Rot[3]) + (-1 * x52 * x129) + x110 + (-1 * x60 * x125) + (x55 * (*kalman_model).Pose.Rot[3]) + x114 + (x73 * x75) + (-1 * x61 * (*kalman_model).Pose.Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), (x95 * (*kalman_model).Pose.Rot[3]) + x131 + (-1 * x87 * x129) + (-1 * x88 * x125) + (-1 * x82 * x56) + (-1 * x119) + x121 + (-1 * x62 * x91) + (x90 * (*kalman_model).Pose.Rot[0]) + (-1 * x132) + x124 + (-1 * x89 * (*kalman_model).Pose.Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x79 + x134 + (-1 * x62 * x111) + (-1 * x133 * (*kalman_model).Pose.Rot[1]) + (x54 * x104) + (-1 * x107 * (*kalman_model).Pose.Rot[0]) + (x113 * (*kalman_model).Pose.Rot[1]) + x70 + (-1 * x74 * x108) + (-1 * x103 * x129));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x28);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x24);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x128 + x80 + (x69 * (*kalman_model).Pose.Rot[2]) + (-1 * x68 * (*kalman_model).Pose.Rot[3]) + (-1 * x73 * x62) + x99 + (x60 * x130) + (-1 * x52 * x135) + (-1 * x61 * (*kalman_model).Pose.Rot[0]) + (-1 * x75 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x134 + x34 + (x82 * x74) + (-1 * x58 * x92) + x71 + (-1 * x87 * x135) + (-1 * x89 * (*kalman_model).Pose.Rot[0]) + (-1 * x96 * (*kalman_model).Pose.Rot[3]) + (-1 * x66) + (-1 * x90 * (*kalman_model).Pose.Rot[1]) + (x88 * x130));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), (x113 * (*kalman_model).Pose.Rot[0]) + (-1 * x120) + (-1 * x131) + x123 + (-1 * x67 * x104) + (-1 * x133 * (*kalman_model).Pose.Rot[0]) + x132 + (-1 * x75 * x111) + (-1 * x106 * (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[2]) + x124 + (x107 * (*kalman_model).Pose.Rot[1]) + (-1 * x56 * x108));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), offsetof(SurviveKalmanModel, AccScale)/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), offsetof(SurviveKalmanModel, IMUCorrection[3])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, AccBias[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), offsetof(SurviveKalmanModel, GyroBias[2])/sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelPredict wrt [(*kalman_model).AccBias[0], (*kalman_model).AccBias[1],
// (*kalman_model).AccBias[2], (*kalman_model).Acc[0], (*kalman_model).Acc[1], (*kalman_model).Acc[2],
// (*kalman_model).GyroBias[0], (*kalman_model).GyroBias[1], (*kalman_model).GyroBias[2],
// (*kalman_model).IMUCorrection[0], (*kalman_model).IMUCorrection[1], (*kalman_model).IMUCorrection[2],
// (*kalman_model).IMUCorrection[3], (*kalman_model).Pose.Pos[0], (*kalman_model).Pose.Pos[1],
// (*kalman_model).Pose.Pos[2], (*kalman_model).Pose.Rot[0], (*kalman_model).Pose.Rot[1], (*kalman_model).Pose.Rot[2],
// (*kalman_model).Pose.Rot[3], (*kalman_model).Velocity.AxisAngleRot[0], (*kalman_model).Velocity.AxisAngleRot[1],
// (*kalman_model).Velocity.AxisAngleRot[2], (*kalman_model).Velocity.Pos[0], (*kalman_model).Velocity.Pos[1],
// (*kalman_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae63cd0>]
static inline void AxisAngleFlip(CnMat* out, const FLT* _x0) {
	const FLT _x00 = _x0[0];
	const FLT _x01 = _x0[1];
	const FLT _x02 = _x0[2];
	const FLT x0 = sqrt(1e-10 + (_x01 * _x01) + (_x02 * _x02) + (_x00 * _x00));
	const FLT x1 = (1. / x0) * (-6.28318530717959 + x0);
	cnMatrixOptionalSet(out, 0, 0, x1 * _x00);
	cnMatrixOptionalSet(out, 1, 0, x1 * _x01);
	cnMatrixOptionalSet(out, 2, 0, x1 * _x02);
}

// Jacobian of AxisAngleFlip wrt [_x00, _x01, _x02]
static inline void AxisAngleFlip_jac_x0(CnMat* Hx, const FLT* _x0) {
	const FLT _x00 = _x0[0];
	const FLT _x01 = _x0[1];
	const FLT _x02 = _x0[2];
	const FLT x0 = _x00 * _x00;
	const FLT x1 = 1e-10 + (_x01 * _x01) + (_x02 * _x02) + x0;
	const FLT x2 = 1. / x1;
	const FLT x3 = sqrt(x1);
	const FLT x4 = -6.28318530717959 + x3;
	const FLT x5 = (1. / (x1 * sqrt(x1))) * x4;
	const FLT x6 = x2 * _x00;
	const FLT x7 = x5 * _x00;
	cnMatrixOptionalSet(Hx, 0, 0, (-1 * x0 * x5) + (x0 * x2) + (x4 * (1. / x3)));
	cnMatrixOptionalSet(Hx, 0, 1, (-1 * x7 * _x01) + (x6 * _x01));
	cnMatrixOptionalSet(Hx, 0, 2, (-1 * x7 * _x02) + (x6 * _x02));
}

// Full version Jacobian of AxisAngleFlip wrt [_x00, _x01, _x02]

static inline void AxisAngleFlip_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT* _x0) {
    if(hx != 0) { 
        AxisAngleFlip(hx, _x0);
    }
    if(Hx != 0) { 
        AxisAngleFlip_jac_x0(Hx, _x0);
    }
}
static inline void SurviveKalmanModelErrorPredict(SurviveKalmanErrorModel* out, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = t * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x1 = 1.0/2.0 * fabs(t);
	const FLT x2 = t * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x3 = t * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x4 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x8 = sin(x7);
	const FLT x9 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x10 = cos(x9);
	const FLT x11 = x8 * x10;
	const FLT x12 = sin(x9);
	const FLT x13 = cos(x5);
	const FLT x14 = cos(x7);
	const FLT x15 = x14 * x13;
	const FLT x16 = (x15 * x12) + (-1 * x6 * x11);
	const FLT x17 = x6 * x12;
	const FLT x18 = (x15 * x10) + (x8 * x17);
	const FLT x19 = (x6 * x14 * x10) + (x8 * x13 * x12);
	const FLT x20 = (x13 * x11) + (-1 * x14 * x17);
	const FLT x21 = 1. / sqrt((x20 * x20) + (x16 * x16) + (x19 * x19) + (x18 * x18));
	const FLT x22 = x21 * x18;
	const FLT x23 = x21 * x19;
	const FLT x24 = x20 * x21;
	const FLT x25 = x21 * x16;
	const FLT x26 = (x24 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) + (-1 * x25 * (*_x0).Pose.Rot[1]) +
					(x23 * (*_x0).Pose.Rot[0]);
	const FLT x27 = t * t;
	const FLT x28 = (x4 * x4) * x27;
	const FLT x29 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x30 = (x29 * x29) * x27;
	const FLT x31 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x32 = (x31 * x31) * x27;
	const FLT x33 = 1e-10 + x32 + x28 + x30;
	const FLT x34 = sqrt(x33);
	const FLT x35 = 0.5 * x34;
	const FLT x36 = sin(x35);
	const FLT x37 = (-1 * x24 * (*_x0).Pose.Rot[1]) + (-1 * x25 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[0]) +
					(-1 * x23 * (*_x0).Pose.Rot[2]);
	const FLT x38 = (x23 * (*_x0).Pose.Rot[1]) + (x25 * (*_x0).Pose.Rot[0]) + (x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x24 * (*_x0).Pose.Rot[2]);
	const FLT x39 = (x22 * (*_x0).Pose.Rot[1]) + (x25 * (*_x0).Pose.Rot[2]) + (-1 * x23 * (*_x0).Pose.Rot[3]) +
					(x24 * (*_x0).Pose.Rot[0]);
	const FLT x40 = (1. / x33) * (x36 * x36);
	const FLT x41 = cos(x35);
	const FLT x42 = (1. / sqrt((x39 * x39) + (x38 * x38) + (x26 * x26) + (x37 * x37))) *
					(1. / sqrt((x40 * x30) + (x41 * x41) + (x40 * x28) + (x40 * x32)));
	const FLT x43 = t * x42 * (1. / x34) * x36;
	const FLT x44 = x43 * x26;
	const FLT x45 = x43 * x31;
	const FLT x46 = x41 * x42;
	const FLT x47 = x43 * x37;
	const FLT x48 = (x47 * x29) + (x46 * x39) + (-1 * x4 * x44) + (x45 * x38);
	const FLT x49 = (x44 * x29) + (-1 * x45 * x39) + (x4 * x47) + (x46 * x38);
	const FLT x50 = x43 * x38;
	const FLT x51 = x43 * x39;
	const FLT x52 = (-1 * x51 * x29) + (-1 * x4 * x50) + (x46 * x37) + (-1 * x45 * x26);
	const FLT x53 = (-1 * x50 * x29) + (x46 * x26) + (x4 * x51) + (x45 * x37);
	const FLT x54 = (-1 * x52 * (*_x0).Pose.Rot[3]) + (-1 * x53 * (*_x0).Pose.Rot[1]) + (x48 * (*_x0).Pose.Rot[2]) +
					(x49 * (*_x0).Pose.Rot[0]);
	const FLT x55 = (x49 * (*_x0).Pose.Rot[1]) + (x53 * (*_x0).Pose.Rot[0]) + (-1 * x52 * (*_x0).Pose.Rot[2]) +
					(-1 * x48 * (*_x0).Pose.Rot[3]);
	const FLT x56 = (-1 * x52 * (*_x0).Pose.Rot[1]) + (x53 * (*_x0).Pose.Rot[3]) + (x48 * (*_x0).Pose.Rot[0]) +
					(-1 * x49 * (*_x0).Pose.Rot[2]);
	const FLT x57 = (x48 * (*_x0).Pose.Rot[1]) + (x52 * (*_x0).Pose.Rot[0]) + (x49 * (*_x0).Pose.Rot[3]) +
					(x53 * (*_x0).Pose.Rot[2]);
	const FLT x58 = x55 * x55;
	out->Pose.Pos[0]=(t * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*error_model).Pose.Pos[0] + (x0 * x1);
	out->Pose.Pos[1]=(t * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + (*error_model).Pose.Pos[1] + (x2 * x1);
	out->Pose.Pos[2]=(t * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + (*error_model).Pose.Pos[2] + (x1 * x3);
	out->Pose.AxisAngleRot[0] = atan2(2 * ((x57 * x56) + (x54 * x55)), 1 + (-2 * ((x56 * x56) + x58)));
	out->Pose.AxisAngleRot[1] = asin(2 * ((x57 * x55) + (-1 * x54 * x56)));
	out->Pose.AxisAngleRot[2] = atan2(2 * ((x54 * x57) + (x56 * x55)), 1 + (-2 * (x58 + (x54 * x54))));
	out->Velocity.Pos[0]=x0 + (*error_model).Velocity.Pos[0];
	out->Velocity.Pos[1]=(*error_model).Velocity.Pos[1] + x2;
	out->Velocity.Pos[2]=x3 + (*error_model).Velocity.Pos[2];
	out->Velocity.AxisAngleRot[0]=(*error_model).Velocity.AxisAngleRot[0];
	out->Velocity.AxisAngleRot[1]=(*error_model).Velocity.AxisAngleRot[1];
	out->Velocity.AxisAngleRot[2]=(*error_model).Velocity.AxisAngleRot[2];
	out->Acc[0]=(*error_model).Acc[0];
	out->Acc[1]=(*error_model).Acc[1];
	out->Acc[2]=(*error_model).Acc[2];
	out->AccScale=(*error_model).AccScale;
	out->IMUCorrection[0]=(*error_model).IMUCorrection[0];
	out->IMUCorrection[1]=(*error_model).IMUCorrection[1];
	out->IMUCorrection[2]=(*error_model).IMUCorrection[2];
	out->IMUCorrection[3]=(*error_model).IMUCorrection[3];
	out->AccBias[0]=(*error_model).AccBias[0];
	out->AccBias[1]=(*error_model).AccBias[1];
	out->AccBias[2]=(*error_model).AccBias[2];
	out->GyroBias[0]=(*error_model).GyroBias[0];
	out->GyroBias[1]=(*error_model).GyroBias[1];
	out->GyroBias[2]=(*error_model).GyroBias[2];
}

// Jacobian of SurviveKalmanModelErrorPredict wrt [t]
static inline void SurviveKalmanModelErrorPredict_jac_t(CnMat* Hx, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = (*_x0).Acc[0] + (*error_model).Acc[0];
	const FLT x1 = 1.0/2.0 * t;
	const FLT x2 = x1 * ((t) > 0 ? 1 : -1) /* Note: Maybe not valid for == 0 */;
	const FLT x3 = fabs(t);
	const FLT x4 = 1.0/2.0 * x3;
	const FLT x5 = (*_x0).Acc[1] + (*error_model).Acc[1];
	const FLT x6 = (*_x0).Acc[2] + (*error_model).Acc[2];
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x8 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x9 = cos(x8);
	const FLT x10 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x11 = sin(x10);
	const FLT x12 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * x11;
	const FLT x15 = sin(x8);
	const FLT x16 = cos(x12);
	const FLT x17 = cos(x10);
	const FLT x18 = x17 * x16;
	const FLT x19 = (x15 * x18) + (-1 * x9 * x14);
	const FLT x20 = (x9 * x18) + (x15 * x14);
	const FLT x21 = x13 * x17;
	const FLT x22 = x11 * x16;
	const FLT x23 = (x9 * x22) + (x21 * x15);
	const FLT x24 = (x9 * x21) + (-1 * x22 * x15);
	const FLT x25 = 1. / sqrt((x24 * x24) + (x23 * x23) + (x19 * x19) + (x20 * x20));
	const FLT x26 = x25 * x20;
	const FLT x27 = x25 * (*_x0).Pose.Rot[2];
	const FLT x28 = x25 * x19;
	const FLT x29 = x25 * x23;
	const FLT x30 =
		(x28 * (*_x0).Pose.Rot[0]) + (x26 * (*_x0).Pose.Rot[3]) + (x29 * (*_x0).Pose.Rot[1]) + (-1 * x24 * x27);
	const FLT x31 = x25 * (*_x0).Pose.Rot[0];
	const FLT x32 = x24 * x25;
	const FLT x33 = (-1 * x28 * (*_x0).Pose.Rot[1]) + (x20 * x27) + (x32 * (*_x0).Pose.Rot[3]) + (x31 * x23);
	const FLT x34 = (-1 * x32 * (*_x0).Pose.Rot[1]) + (x31 * x20) + (-1 * x28 * (*_x0).Pose.Rot[3]) +
					(-1 * x29 * (*_x0).Pose.Rot[2]);
	const FLT x35 =
		(x26 * (*_x0).Pose.Rot[1]) + (x28 * (*_x0).Pose.Rot[2]) + (-1 * x29 * (*_x0).Pose.Rot[3]) + (x31 * x24);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x30 * x30) + (x33 * x33) + (x34 * x34));
	const FLT x37 = t * t;
	const FLT x38 = x7 * x7;
	const FLT x39 = x38 * x37;
	const FLT x40 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x41 = x40 * x40;
	const FLT x42 = x41 * x37;
	const FLT x43 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x44 = x43 * x43;
	const FLT x45 = x44 * x37;
	const FLT x46 = 1e-10 + x45 + x39 + x42;
	const FLT x47 = sqrt(x46);
	const FLT x48 = 0.5 * x47;
	const FLT x49 = sin(x48);
	const FLT x50 = x49 * x49;
	const FLT x51 = 1. / x46;
	const FLT x52 = x50 * x51;
	const FLT x53 = cos(x48);
	const FLT x54 = (x52 * x42) + (x53 * x53) + (x52 * x39) + (x52 * x45);
	const FLT x55 = (1. / sqrt(x54)) * x36;
	const FLT x56 = (1. / x47) * x49;
	const FLT x57 = x56 * x55;
	const FLT x58 = x57 * x30;
	const FLT x59 = x7 * x58;
	const FLT x60 = x57 * x43;
	const FLT x61 = x60 * x33;
	const FLT x62 = x53 * x55;
	const FLT x63 = x62 * x34;
	const FLT x64 = x57 * x35;
	const FLT x65 = x64 * x40;
	const FLT x66 = (-1 * t * x65) + x63 + (-1 * t * x59) + (-1 * t * x61);
	const FLT x67 = x57 * x33;
	const FLT x68 = x7 * x67;
	const FLT x69 = x58 * x43;
	const FLT x70 = x62 * x35;
	const FLT x71 = x57 * x34;
	const FLT x72 = x71 * x40;
	const FLT x73 = (t * x72) + (-1 * t * x68) + x70 + (t * x69);
	const FLT x74 = x7 * x64;
	const FLT x75 = x60 * x34;
	const FLT x76 = x62 * x33;
	const FLT x77 = x58 * x40;
	const FLT x78 = (-1 * t * x77) + x76 + (t * x74) + (t * x75);
	const FLT x79 = x7 * x71;
	const FLT x80 = x62 * x30;
	const FLT x81 = x60 * x35;
	const FLT x82 = x67 * x40;
	const FLT x83 = (t * x82) + (-1 * t * x81) + (t * x79) + x80;
	const FLT x84 = (x83 * (*_x0).Pose.Rot[1]) + (-1 * x66 * (*_x0).Pose.Rot[2]) + (x78 * (*_x0).Pose.Rot[0]) +
					(-1 * x73 * (*_x0).Pose.Rot[3]);
	const FLT x85 = x84 * x84;
	const FLT x86 = (x73 * (*_x0).Pose.Rot[0]) + (-1 * x66 * (*_x0).Pose.Rot[1]) + (x78 * (*_x0).Pose.Rot[3]) +
					(-1 * x83 * (*_x0).Pose.Rot[2]);
	const FLT x87 = 1 + (-2 * ((x86 * x86) + x85));
	const FLT x88 = x87 * x87;
	const FLT x89 = (-1 * x78 * (*_x0).Pose.Rot[1]) + (-1 * x66 * (*_x0).Pose.Rot[3]) + (x73 * (*_x0).Pose.Rot[2]) +
					(x83 * (*_x0).Pose.Rot[0]);
	const FLT x90 = (x73 * (*_x0).Pose.Rot[1]) + (x66 * (*_x0).Pose.Rot[0]) + (x83 * (*_x0).Pose.Rot[3]) +
					(x78 * (*_x0).Pose.Rot[2]);
	const FLT x91 = (x86 * x90) + (x89 * x84);
	const FLT x92 = 2 * t;
	const FLT x93 = x92 * x44;
	const FLT x94 = x92 * x38;
	const FLT x95 = x92 * x41;
	const FLT x96 = x95 + x93 + x94;
	const FLT x97 = x96 * x40;
	const FLT x98 = (1. / (x46 * sqrt(x46))) * x49;
	const FLT x99 = x55 * x98;
	const FLT x100 = x99 * x97;
	const FLT x101 = x1 * x34;
	const FLT x102 = x1 * x43;
	const FLT x103 = x56 * x96;
	const FLT x104 = 0.5 * x53;
	const FLT x105 = x96 * x42;
	const FLT x106 = x50 * (1. / (x46 * x46));
	const FLT x107 = x98 * x104;
	const FLT x108 = x96 * x107;
	const FLT x109 = x96 * x106;
	const FLT x110 = (1. / (x54 * sqrt(x54))) * x36 *
					 ((x39 * x108) + (-1 * x39 * x109) + (x52 * x93) + (-1 * x45 * x109) + (x105 * x107) + (x52 * x95) +
					  (-1 * x105 * x106) + (-1 * x103 * x104) + (x45 * x108) + (x52 * x94));
	const FLT x111 = x30 * x110;
	const FLT x112 = x56 * x111;
	const FLT x113 = x55 * x30;
	const FLT x114 = x98 * x113;
	const FLT x115 = x96 * x102;
	const FLT x116 = 0.25 * t * x51;
	const FLT x117 = x96 * x116;
	const FLT x118 = x7 * x117;
	const FLT x119 = x97 * x116;
	const FLT x120 = x1 * x33;
	const FLT x121 = x99 * x96;
	const FLT x122 = x7 * x121;
	const FLT x123 = x56 * x110;
	const FLT x124 = x120 * x123;
	const FLT x125 = x40 * x123;
	const FLT x126 = x80 * x116;
	const FLT x127 = 1.0 / 2.0 * x53;
	const FLT x128 = x110 * x127;
	const FLT x129 = 0.25 * x103;
	const FLT x130 = x55 * x129;
	const FLT x131 = (-1 * x35 * x130) + (-1 * x35 * x128) + (x96 * x43 * x126) + (-1 * x101 * x125) +
					 (-1 * x114 * x115) + (-1 * x102 * x112) + (-1 * x101 * x100) + (x63 * x119) + x69 + x72 +
					 (x120 * x122) + (-1 * x76 * x118) + (-1 * x68) + (x7 * x124);
	const FLT x132 = x99 * x115;
	const FLT x133 = x7 * x96;
	const FLT x134 = x102 * x123;
	const FLT x135 = x1 * x114;
	const FLT x136 = x1 * x35;
	const FLT x137 = x1 * x112;
	const FLT x138 = x43 * x117;
	const FLT x139 = (-1 * x34 * x130) + (-1 * x34 * x128) + (-1 * x76 * x138) + (x33 * x134) + (-1 * x61) +
					 (-1 * x126 * x133) + (x33 * x132) + (x133 * x135) + (x100 * x136) + (-1 * x59) + (-1 * x65) +
					 (x125 * x136) + (-1 * x70 * x119) + (x7 * x137);
	const FLT x140 = x7 * x101;
	const FLT x141 = (-1 * x70 * x138) + (-1 * x123 * x140) + (x35 * x132) + (-1 * x100 * x120) + (-1 * x111 * x127) +
					 (-1 * x121 * x140) + x82 + (-1 * x40 * x124) + x79 + (x35 * x134) + (-1 * x81) +
					 (-1 * x113 * x129) + (x76 * x119) + (x63 * x118);
	const FLT x142 = x34 * x102;
	const FLT x143 = (-1 * x33 * x130) + (-1 * x33 * x128) + x74 + (x70 * x118) + (-1 * x77) + (-1 * x97 * x126) +
					 (x97 * x135) + (x40 * x137) + (-1 * x122 * x136) + (-1 * x121 * x142) + (-1 * x123 * x142) +
					 (x63 * x138) + x75 + (-1 * x7 * x123 * x136);
	const FLT x144 = (x143 * (*_x0).Pose.Rot[2]) + (x141 * (*_x0).Pose.Rot[3]) + (x131 * (*_x0).Pose.Rot[1]) +
					 (x139 * (*_x0).Pose.Rot[0]);
	const FLT x145 = (-1 * x131 * (*_x0).Pose.Rot[3]) + (-1 * x139 * (*_x0).Pose.Rot[2]) + (x141 * (*_x0).Pose.Rot[1]) +
					 (x143 * (*_x0).Pose.Rot[0]);
	const FLT x146 = (-1 * x139 * (*_x0).Pose.Rot[1]) + (-1 * x141 * (*_x0).Pose.Rot[2]) + (x131 * (*_x0).Pose.Rot[0]) +
					 (x143 * (*_x0).Pose.Rot[3]);
	const FLT x147 = (x141 * (*_x0).Pose.Rot[0]) + (-1 * x143 * (*_x0).Pose.Rot[1]) + (x131 * (*_x0).Pose.Rot[2]) +
					 (-1 * x139 * (*_x0).Pose.Rot[3]);
	const FLT x148 = -4 * x84 * x145;
	const FLT x149 = 1 + (-2 * (x85 + (x89 * x89)));
	const FLT x150 = x149 * x149;
	const FLT x151 = (x89 * x90) + (x84 * x86);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 0, (x0 * x4) + (*error_model).Velocity.Pos[0] + (*_x0).Velocity.Pos[0] + (x0 * x2));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 0, (x4 * x5) + (x2 * x5) + (*error_model).Velocity.Pos[1] + (*_x0).Velocity.Pos[1]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 0, (x2 * x6) + (*error_model).Velocity.Pos[2] + (x4 * x6) + (*_x0).Velocity.Pos[2]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT), 0,
						x88 * (1. / (x88 + (4 * (x91 * x91)))) *
							((-2 * (1. / x88) * x91 * ((-4 * x86 * x146) + x148)) +
							 (2 * ((x84 * x147) + (x90 * x146) + (x86 * x144) + (x89 * x145)) * (1. / x87))));
	cnMatrixOptionalSet(
		Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT), 0,
		2 * ((-1 * x89 * x146) + (x90 * x145) + (-1 * x86 * x147) + (x84 * x144)) *
			(1. / sqrt(1 + (-4 * (((x84 * x90) + (-1 * x89 * x86)) * ((x84 * x90) + (-1 * x89 * x86)))))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT), 0,
						x150 * (1. / (x150 + (4 * (x151 * x151)))) *
							((-2 * (1. / x150) * x151 * (x148 + (-4 * x89 * x147))) +
							 (2 * ((x89 * x144) + (x84 * x146) + (x90 * x147) + (x86 * x145)) * (1. / x149))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), 0, x0);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), 0, x5);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), 0, x6);
}

// Full version Jacobian of SurviveKalmanModelErrorPredict wrt [t]
// Jacobian of SurviveKalmanModelErrorPredict wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae6bfa0>]
static inline void SurviveKalmanModelErrorPredict_jac_x0(CnMat* Hx, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = fabs(t) * x0;
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = cos(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x8 = sin(x7);
	const FLT x9 = x6 * x8;
	const FLT x10 = cos(x5);
	const FLT x11 = cos(x7);
	const FLT x12 = sin(x3);
	const FLT x13 = x12 * x11;
	const FLT x14 = (x13 * x10) + (-1 * x4 * x9);
	const FLT x15 = x4 * x11;
	const FLT x16 = (x15 * x10) + (x9 * x12);
	const FLT x17 = x8 * x10;
	const FLT x18 = (x4 * x17) + (x6 * x13);
	const FLT x19 = (x6 * x15) + (-1 * x12 * x17);
	const FLT x20 = 1. / sqrt((x19 * x19) + (x18 * x18) + (x14 * x14) + (x16 * x16));
	const FLT x21 = x20 * x14;
	const FLT x22 = x20 * x18;
	const FLT x23 = x20 * (*_x0).Pose.Rot[0];
	const FLT x24 = x20 * x19;
	const FLT x25 = (x23 * x16) + (-1 * x24 * (*_x0).Pose.Rot[1]) + (-1 * x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x26 = x20 * x16;
	const FLT x27 =
		(-1 * x21 * (*_x0).Pose.Rot[1]) + (x24 * (*_x0).Pose.Rot[3]) + (x26 * (*_x0).Pose.Rot[2]) + (x23 * x18);
	const FLT x28 =
		(x22 * (*_x0).Pose.Rot[1]) + (x23 * x14) + (x26 * (*_x0).Pose.Rot[3]) + (-1 * x24 * (*_x0).Pose.Rot[2]);
	const FLT x29 =
		(x26 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[2]) + (-1 * x22 * (*_x0).Pose.Rot[3]) + (x23 * x19);
	const FLT x30 = (x29 * x29) + (x28 * x28) + (x27 * x27) + (x25 * x25);
	const FLT x31 = 1. / sqrt(x30);
	const FLT x32 = t * t;
	const FLT x33 = x2 * x2;
	const FLT x34 = x32 * x33;
	const FLT x35 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x36 = x35 * x35;
	const FLT x37 = x32 * x36;
	const FLT x38 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x39 = x38 * x38;
	const FLT x40 = x32 * x39;
	const FLT x41 = 1e-10 + x40 + x34 + x37;
	const FLT x42 = sqrt(x41);
	const FLT x43 = 0.5 * x42;
	const FLT x44 = sin(x43);
	const FLT x45 = (1. / x42) * x44;
	const FLT x46 = x44 * x44;
	const FLT x47 = 1. / x41;
	const FLT x48 = x46 * x47;
	const FLT x49 = cos(x43);
	const FLT x50 = (x49 * x49) + (x48 * x37) + (x48 * x34) + (x40 * x48);
	const FLT x51 = 1. / sqrt(x50);
	const FLT x52 = t * x51;
	const FLT x53 = x52 * x45;
	const FLT x54 = x53 * x31;
	const FLT x55 = x54 * x25;
	const FLT x56 = x2 * x55;
	const FLT x57 = x51 * x49;
	const FLT x58 = x31 * x28;
	const FLT x59 = x58 * x57;
	const FLT x60 = x31 * x29;
	const FLT x61 = x45 * x38;
	const FLT x62 = x61 * x52;
	const FLT x63 = x60 * x62;
	const FLT x64 = x54 * x27;
	const FLT x65 = x64 * x35;
	const FLT x66 = x65 + (-1 * x63) + x56 + x59;
	const FLT x67 = x60 * x53;
	const FLT x68 = x2 * x67;
	const FLT x69 = x31 * x25;
	const FLT x70 = x62 * x69;
	const FLT x71 = x57 * x31;
	const FLT x72 = x71 * x27;
	const FLT x73 = x53 * x58;
	const FLT x74 = x73 * x35;
	const FLT x75 = x72 + (-1 * x74) + x68 + x70;
	const FLT x76 = x2 * x73;
	const FLT x77 = x31 * x27;
	const FLT x78 = x77 * x62;
	const FLT x79 = x71 * x25;
	const FLT x80 = x67 * x35;
	const FLT x81 = x79 + (-1 * x80) + (-1 * x76) + (-1 * x78);
	const FLT x82 = x2 * x64;
	const FLT x83 = x62 * x58;
	const FLT x84 = x71 * x29;
	const FLT x85 = x55 * x35;
	const FLT x86 = x85 + (-1 * x82) + x84 + x83;
	const FLT x87 = (x86 * (*_x0).Pose.Rot[1]) + (x66 * (*_x0).Pose.Rot[3]) + (x81 * (*_x0).Pose.Rot[0]) +
					(x75 * (*_x0).Pose.Rot[2]);
	const FLT x88 = x2 * x54;
	const FLT x89 = x88 * x21;
	const FLT x90 = -1 * x89;
	const FLT x91 = x62 * x31;
	const FLT x92 = x91 * x22;
	const FLT x93 = -1 * x92;
	const FLT x94 = 1. / (x30 * sqrt(x30));
	const FLT x95 = 2 * x29;
	const FLT x96 = 2 * x21;
	const FLT x97 = 2 * x22;
	const FLT x98 = 2 * x26;
	const FLT x99 = ((x98 * x25) + (x95 * x24) + (x97 * x27) + (x96 * x28)) * x94;
	const FLT x100 = x99 * x29;
	const FLT x101 = x0 * x51;
	const FLT x102 = x45 * x101;
	const FLT x103 = x35 * x102;
	const FLT x104 = x2 * x102;
	const FLT x105 = x28 * x104;
	const FLT x106 = 1.0 / 2.0 * x25;
	const FLT x107 = x57 * x106;
	const FLT x108 = x61 * x101;
	const FLT x109 = x99 * x27;
	const FLT x110 = x71 * x26;
	const FLT x111 = x54 * x24;
	const FLT x112 = x35 * x111;
	const FLT x113 = (-1 * x112) + x110;
	const FLT x114 = x113 + (x99 * x105) + x90 + (x100 * x103) + (x109 * x108) + x93 + (-1 * x99 * x107);
	const FLT x115 = x54 * x22;
	const FLT x116 = x35 * x115;
	const FLT x117 = x25 * x104;
	const FLT x118 = x71 * x21;
	const FLT x119 = x99 * x103;
	const FLT x120 = 1.0 / 2.0 * x57;
	const FLT x121 = x28 * x120;
	const FLT x122 = x88 * x26;
	const FLT x123 = -1 * x91 * x24;
	const FLT x124 = x123 + x122;
	const FLT x125 = (-1 * x99 * x121) + x116 + (-1 * x99 * x117) + x124 + (x100 * x108) + (-1 * x27 * x119) + x118;
	const FLT x126 = x2 * x111;
	const FLT x127 = x71 * x22;
	const FLT x128 = x27 * x120;
	const FLT x129 = x99 * x108;
	const FLT x130 = x54 * x35;
	const FLT x131 = -1 * x21 * x130;
	const FLT x132 = x91 * x26;
	const FLT x133 = x132 + x131;
	const FLT x134 = (-1 * x25 * x129) + x133 + x127 + (x28 * x119) + x126 + (-1 * x99 * x128) + (-1 * x100 * x104);
	const FLT x135 = x91 * x21;
	const FLT x136 = x71 * x24;
	const FLT x137 = x29 * x120;
	const FLT x138 = -1 * x2 * x115;
	const FLT x139 = x26 * x130;
	const FLT x140 = x139 + x138;
	const FLT x141 = x140 + x136 + x135 + (-1 * x28 * x129) + (-1 * x25 * x119) + (-1 * x99 * x137) + (x109 * x104);
	const FLT x142 = x86 + (x134 * (*_x0).Pose.Rot[3]) + (x141 * (*_x0).Pose.Rot[0]) +
					 (-1 * x114 * (*_x0).Pose.Rot[1]) + (-1 * x125 * (*_x0).Pose.Rot[2]);
	const FLT x143 = (x86 * (*_x0).Pose.Rot[0]) + (-1 * x81 * (*_x0).Pose.Rot[1]) + (x75 * (*_x0).Pose.Rot[3]) +
					 (-1 * x66 * (*_x0).Pose.Rot[2]);
	const FLT x144 = x81 + (x125 * (*_x0).Pose.Rot[3]) + (x114 * (*_x0).Pose.Rot[0]) + (x141 * (*_x0).Pose.Rot[1]) +
					 (x134 * (*_x0).Pose.Rot[2]);
	const FLT x145 = (-1 * x75 * (*_x0).Pose.Rot[1]) + (-1 * x81 * (*_x0).Pose.Rot[3]) + (x86 * (*_x0).Pose.Rot[2]) +
					 (x66 * (*_x0).Pose.Rot[0]);
	const FLT x146 = (-1 * x141 * (*_x0).Pose.Rot[3]) + (x125 * (*_x0).Pose.Rot[1]) + x75 +
					 (-1 * x114 * (*_x0).Pose.Rot[2]) + (x134 * (*_x0).Pose.Rot[0]);
	const FLT x147 = (x125 * (*_x0).Pose.Rot[0]) + (x141 * (*_x0).Pose.Rot[2]) + x66 +
					 (-1 * x134 * (*_x0).Pose.Rot[1]) + (-1 * x114 * (*_x0).Pose.Rot[3]);
	const FLT x148 = (x75 * (*_x0).Pose.Rot[0]) + (x66 * (*_x0).Pose.Rot[1]) + (-1 * x81 * (*_x0).Pose.Rot[2]) +
					 (-1 * x86 * (*_x0).Pose.Rot[3]);
	const FLT x149 = x148 * x148;
	const FLT x150 = 1 + (-2 * ((x143 * x143) + x149));
	const FLT x151 = 2 * (1. / x150);
	const FLT x152 = 4 * x148;
	const FLT x153 = -1 * x146 * x152;
	const FLT x154 = 4 * x143;
	const FLT x155 = x150 * x150;
	const FLT x156 = (x87 * x143) + (x145 * x148);
	const FLT x157 = 2 * (1. / x155) * x156;
	const FLT x158 = x155 * (1. / (x155 + (4 * (x156 * x156))));
	const FLT x159 = 2 * x25;
	const FLT x160 = x94 * ((-1 * x24 * x159) + (-1 * x96 * x27) + (x98 * x29) + (x97 * x28));
	const FLT x161 = x108 * x160;
	const FLT x162 = x29 * x160;
	const FLT x163 = -1 * x136;
	const FLT x164 = x138 + (-1 * x139);
	const FLT x165 = x164 + x163 + (x27 * x161) + (-1 * x107 * x160) + x135 + (x105 * x160) + (x103 * x162);
	const FLT x166 = -1 * x116;
	const FLT x167 = x103 * x160;
	const FLT x168 = -1 * x118;
	const FLT x169 = x168 + x124 + (x28 * x167) + (-1 * x128 * x160) + x166 + (-1 * x25 * x161) + (-1 * x104 * x162);
	const FLT x170 =
		(-1 * x28 * x161) + x113 + x89 + (-1 * x160 * x137) + (x27 * x104 * x160) + x92 + (-1 * x25 * x167);
	const FLT x171 = -1 * x126;
	const FLT x172 = (-1 * x132) + x131;
	const FLT x173 = (-1 * x27 * x167) + (-1 * x117 * x160) + x127 + (x108 * x162) + x172 + (-1 * x121 * x160) + x171;
	const FLT x174 = x78 + (-1 * x79) + x80 + x76;
	const FLT x175 = x174 + (-1 * x173 * (*_x0).Pose.Rot[2]) + (x170 * (*_x0).Pose.Rot[0]) +
					 (-1 * x165 * (*_x0).Pose.Rot[1]) + (x169 * (*_x0).Pose.Rot[3]);
	const FLT x176 = (x165 * (*_x0).Pose.Rot[0]) + (x169 * (*_x0).Pose.Rot[2]) + x86 + (x173 * (*_x0).Pose.Rot[3]) +
					 (x170 * (*_x0).Pose.Rot[1]);
	const FLT x177 = x66 + (x169 * (*_x0).Pose.Rot[0]) + (x173 * (*_x0).Pose.Rot[1]) +
					 (-1 * x165 * (*_x0).Pose.Rot[2]) + (-1 * x170 * (*_x0).Pose.Rot[3]);
	const FLT x178 = (-1 * x72) + (-1 * x165 * (*_x0).Pose.Rot[3]) + (x170 * (*_x0).Pose.Rot[2]) +
					 (-1 * x169 * (*_x0).Pose.Rot[1]) + (x173 * (*_x0).Pose.Rot[0]) + x74 + (-1 * x68) + (-1 * x70);
	const FLT x179 = -1 * x177 * x152;
	const FLT x180 = 2 * x24;
	const FLT x181 = ((-1 * x22 * x159) + (x98 * x27) + (-1 * x28 * x180) + (x96 * x29)) * x94;
	const FLT x182 = x29 * x181;
	const FLT x183 = x28 * x181;
	const FLT x184 = -1 * x127;
	const FLT x185 = x27 * x181;
	const FLT x186 = x172 + (x108 * x185) + (-1 * x107 * x181) + (x103 * x182) + (x104 * x183) + x126 + x184;
	const FLT x187 = x25 * x181;
	const FLT x188 = x112 + x110;
	const FLT x189 = (-1 * x108 * x187) + x89 + (-1 * x104 * x182) + x188 + (-1 * x128 * x181) + (x103 * x183) + x93;
	const FLT x190 = (-1 * x122) + x123;
	const FLT x191 = x190 + x118 + (-1 * x108 * x183) + (x104 * x185) + x166 + (-1 * x103 * x187) + (-1 * x181 * x137);
	const FLT x192 = -1 * x135;
	const FLT x193 = x140 + (-1 * x121 * x181) + x192 + x163 + (-1 * x103 * x185) + (x108 * x182) + (-1 * x117 * x181);
	const FLT x194 = (-1 * x193 * (*_x0).Pose.Rot[2]) + (x191 * (*_x0).Pose.Rot[0]) + (-1 * x56) + (-1 * x59) + x63 +
					 (-1 * x186 * (*_x0).Pose.Rot[1]) + (-1 * x65) + (x189 * (*_x0).Pose.Rot[3]);
	const FLT x195 = x75 + (x189 * (*_x0).Pose.Rot[2]) + (x193 * (*_x0).Pose.Rot[3]) + (x191 * (*_x0).Pose.Rot[1]) +
					 (x186 * (*_x0).Pose.Rot[0]);
	const FLT x196 = x174 + (x193 * (*_x0).Pose.Rot[1]) + (x189 * (*_x0).Pose.Rot[0]) +
					 (-1 * x186 * (*_x0).Pose.Rot[2]) + (-1 * x191 * (*_x0).Pose.Rot[3]);
	const FLT x197 = x86 + (x191 * (*_x0).Pose.Rot[2]) + (-1 * x189 * (*_x0).Pose.Rot[1]) +
					 (x193 * (*_x0).Pose.Rot[0]) + (-1 * x186 * (*_x0).Pose.Rot[3]);
	const FLT x198 = -1 * x196 * x152;
	const FLT x199 = x94 * ((x27 * x180) + (-1 * x96 * x25) + (x98 * x28) + (-1 * x95 * x22));
	const FLT x200 = x27 * x199;
	const FLT x201 = x29 * x199;
	const FLT x202 = x188 + (-1 * x121 * x199) + (-1 * x117 * x199) + (-1 * x200 * x103) + x90 + (x201 * x108) + x92;
	const FLT x203 = x25 * x199;
	const FLT x204 = x28 * x199;
	const FLT x205 = x133 + (-1 * x204 * x108) + x171 + x184 + (-1 * x203 * x103) + (x200 * x104) + (-1 * x199 * x137);
	const FLT x206 = x164 + (-1 * x203 * x108) + (x204 * x103) + x136 + (-1 * x128 * x199) + (-1 * x201 * x104) + x192;
	const FLT x207 = x190 + (x200 * x108) + x116 + (x201 * x103) + (-1 * x107 * x199) + x168 + (x105 * x199);
	const FLT x208 = (-1 * x207 * (*_x0).Pose.Rot[1]) + x75 + (x206 * (*_x0).Pose.Rot[3]) +
					 (-1 * x202 * (*_x0).Pose.Rot[2]) + (x205 * (*_x0).Pose.Rot[0]);
	const FLT x209 = (x205 * (*_x0).Pose.Rot[1]) + x66 + (x202 * (*_x0).Pose.Rot[3]) + (x207 * (*_x0).Pose.Rot[0]) +
					 (x206 * (*_x0).Pose.Rot[2]);
	const FLT x210 = (-1 * x83) + (-1 * x84) + (-1 * x85) + (x206 * (*_x0).Pose.Rot[0]) +
					 (-1 * x207 * (*_x0).Pose.Rot[2]) + x82 + (x202 * (*_x0).Pose.Rot[1]) +
					 (-1 * x205 * (*_x0).Pose.Rot[3]);
	const FLT x211 = (-1 * x206 * (*_x0).Pose.Rot[1]) + x174 + (x202 * (*_x0).Pose.Rot[0]) +
					 (-1 * x207 * (*_x0).Pose.Rot[3]) + (x205 * (*_x0).Pose.Rot[2]);
	const FLT x212 = -1 * x210 * x152;
	const FLT x213 = 0.5 * x47;
	const FLT x214 = x72 * x213;
	const FLT x215 = x35 * x214;
	const FLT x216 = t * t * t;
	const FLT x217 = x38 * x216;
	const FLT x218 = x215 * x217;
	const FLT x219 = (1. / (x41 * sqrt(x41))) * x44;
	const FLT x220 = x51 * x219;
	const FLT x221 = x216 * x220;
	const FLT x222 = x38 * x221;
	const FLT x223 = x77 * x35;
	const FLT x224 = x223 * x222;
	const FLT x225 = x35 * x35 * x35;
	const FLT x226 = t * t * t * t;
	const FLT x227 = 1.0 * x49;
	const FLT x228 = x219 * x227;
	const FLT x229 = x228 * x226;
	const FLT x230 = (1. / (x41 * x41)) * x46;
	const FLT x231 = 2 * x230;
	const FLT x232 = x231 * x226;
	const FLT x233 = x33 * x226;
	const FLT x234 = x233 * x228;
	const FLT x235 = x48 * x32;
	const FLT x236 = 2 * x235;
	const FLT x237 = x39 * x229;
	const FLT x238 = x35 * x232;
	const FLT x239 = x45 * x32;
	const FLT x240 = x239 * x227;
	const FLT x241 = (-1 * x35 * x240) + (-1 * x33 * x238) + (-1 * x39 * x238) + (-1 * x232 * x225) + (x225 * x229) +
					 (x35 * x236) + (x35 * x237) + (x35 * x234);
	const FLT x242 = x58 * x241;
	const FLT x243 = 1. / (x50 * sqrt(x50));
	const FLT x244 = x0 * x243;
	const FLT x245 = x45 * x244;
	const FLT x246 = x2 * x245;
	const FLT x247 = -1 * x67;
	const FLT x248 = 0.5 * x51;
	const FLT x249 = x239 * x248;
	const FLT x250 = x69 * x35;
	const FLT x251 = x49 * x243;
	const FLT x252 = x251 * x106;
	const FLT x253 = x31 * x241;
	const FLT x254 = x36 * x221;
	const FLT x255 = x61 * x244;
	const FLT x256 = x27 * x253;
	const FLT x257 = x36 * x216;
	const FLT x258 = x213 * x257;
	const FLT x259 = x60 * x35;
	const FLT x260 = x241 * x245;
	const FLT x261 = x59 * x213;
	const FLT x262 = x2 * x216;
	const FLT x263 = x35 * x262;
	const FLT x264 = x2 * x221;
	const FLT x265 = x58 * x35;
	const FLT x266 = (x264 * x265) + (-1 * x263 * x261);
	const FLT x267 = x266 + (x260 * x259) + (x60 * x254) + (-1 * x252 * x253) + x224 + (x256 * x255) + (x242 * x246) +
					 (-1 * x218) + x247 + (-1 * x84 * x258) + (-1 * x250 * x249);
	const FLT x268 = x35 * x217;
	const FLT x269 = x268 * x261;
	const FLT x270 = x215 * x262;
	const FLT x271 = x264 * x223;
	const FLT x272 = x265 * x222;
	const FLT x273 = x35 * x245;
	const FLT x274 = x25 * x253;
	const FLT x275 = 1.0 / 2.0 * x251;
	const FLT x276 = x60 * x275;
	const FLT x277 = x79 * x213;
	const FLT x278 = (x277 * x257) + (-1 * x270) + (-1 * x259 * x249) + x271 + (-1 * x274 * x273) + x55 + x269 +
					 (-1 * x272) + (x256 * x246) + (-1 * x69 * x254) + (-1 * x255 * x242) + (-1 * x276 * x241);
	const FLT x279 = -1 * x73;
	const FLT x280 = x264 * x259;
	const FLT x281 = x84 * x213;
	const FLT x282 = x263 * x281;
	const FLT x283 = x77 * x248;
	const FLT x284 = x239 * x283;
	const FLT x285 = x2 * x60;
	const FLT x286 = x27 * x275;
	const FLT x287 = (x277 * x268) + (-1 * x250 * x222);
	const FLT x288 = x287 + (x58 * x254) + (-1 * x286 * x253) + (-1 * x59 * x258) + (-1 * x274 * x255) +
					 (-1 * x260 * x285) + x279 + (x273 * x242) + (-1 * x280) + x282 + (-1 * x35 * x284);
	const FLT x289 = x25 * x246;
	const FLT x290 = x60 * x61;
	const FLT x291 = (-1 * x264 * x250) + (x277 * x263);
	const FLT x292 = (-1 * x268 * x281) + (x259 * x222);
	const FLT x293 = x292 + x291 + (-1 * x273 * x256) + (-1 * x265 * x249) + x64 + (-1 * x289 * x253) +
					 (-1 * x77 * x254) + (-1 * x275 * x242) + (x290 * x241 * x244) + (x214 * x257);
	const FLT x294 = (-1 * x293 * (*_x0).Pose.Rot[2]) + (x288 * (*_x0).Pose.Rot[3]) + (-1 * x267 * (*_x0).Pose.Rot[1]) +
					 (x278 * (*_x0).Pose.Rot[0]);
	const FLT x295 = (x288 * (*_x0).Pose.Rot[2]) + (x278 * (*_x0).Pose.Rot[1]) + (x293 * (*_x0).Pose.Rot[3]) +
					 (x267 * (*_x0).Pose.Rot[0]);
	const FLT x296 = (-1 * x278 * (*_x0).Pose.Rot[3]) + (-1 * x267 * (*_x0).Pose.Rot[2]) + (x293 * (*_x0).Pose.Rot[1]) +
					 (x288 * (*_x0).Pose.Rot[0]);
	const FLT x297 = (x278 * (*_x0).Pose.Rot[2]) + (-1 * x288 * (*_x0).Pose.Rot[1]) + (x293 * (*_x0).Pose.Rot[0]) +
					 (-1 * x267 * (*_x0).Pose.Rot[3]);
	const FLT x298 = -1 * x296 * x152;
	const FLT x299 = x36 * x226;
	const FLT x300 = x299 * x228;
	const FLT x301 = x61 * x32;
	const FLT x302 = 2 * x38;
	const FLT x303 = x230 * x302;
	const FLT x304 = (x38 * x38 * x38) * x226;
	const FLT x305 = (x228 * x304) + (-1 * x231 * x304) + (-1 * x299 * x303) + (-1 * x227 * x301) + (x235 * x302) +
					 (x38 * x300) + (-1 * x233 * x303) + (x38 * x234);
	const FLT x306 = x31 * x305;
	const FLT x307 = x25 * x306;
	const FLT x308 = x39 * x221;
	const FLT x309 = x39 * x216;
	const FLT x310 = x213 * x309;
	const FLT x311 = x27 * x306;
	const FLT x312 = x58 * x305;
	const FLT x313 = x29 * x306;
	const FLT x314 = x248 * x301;
	const FLT x315 = x2 * x222;
	const FLT x316 = x38 * x262;
	const FLT x317 = (-1 * x214 * x316) + (x77 * x315);
	const FLT x318 = x287 + (-1 * x60 * x314) + x73 + (-1 * x58 * x308) + (-1 * x273 * x307) + (x59 * x310) + x317 +
					 (-1 * x275 * x313) + (x246 * x311) + (-1 * x255 * x312);
	const FLT x319 = -1 * x64;
	const FLT x320 = x58 * x315;
	const FLT x321 = x261 * x316;
	const FLT x322 = x320 + (x255 * x311) + (-1 * x321) + (x273 * x313) + x292 + x319 + (-1 * x69 * x314) +
					 (-1 * x252 * x306) + (x77 * x308) + (-1 * x214 * x309) + (x246 * x312);
	const FLT x323 = x58 * x275;
	const FLT x324 = (-1 * x69 * x315) + (x277 * x316);
	const FLT x325 = x324 + (-1 * x58 * x314) + (x255 * x313) + x218 + (-1 * x84 * x310) + (-1 * x289 * x306) +
					 (-1 * x273 * x311) + (x60 * x308) + (-1 * x305 * x323) + x247 + (-1 * x224);
	const FLT x326 = x285 * x222;
	const FLT x327 = x281 * x316;
	const FLT x328 = (x277 * x309) + (x265 * x245 * x305) + (-1 * x326) + (-1 * x269) + (-1 * x69 * x308) + x327 + x55 +
					 (-1 * x255 * x307) + x272 + (-1 * x286 * x306) + (-1 * x246 * x313) + (-1 * x283 * x301);
	const FLT x329 = (x325 * (*_x0).Pose.Rot[3]) + (x328 * (*_x0).Pose.Rot[2]) + (x318 * (*_x0).Pose.Rot[1]) +
					 (x322 * (*_x0).Pose.Rot[0]);
	const FLT x330 = (-1 * x325 * (*_x0).Pose.Rot[2]) + (x328 * (*_x0).Pose.Rot[3]) + (-1 * x322 * (*_x0).Pose.Rot[1]) +
					 (x318 * (*_x0).Pose.Rot[0]);
	const FLT x331 = (-1 * x318 * (*_x0).Pose.Rot[3]) + (-1 * x322 * (*_x0).Pose.Rot[2]) + (x328 * (*_x0).Pose.Rot[0]) +
					 (x325 * (*_x0).Pose.Rot[1]);
	const FLT x332 = (x325 * (*_x0).Pose.Rot[0]) + (-1 * x322 * (*_x0).Pose.Rot[3]) + (x318 * (*_x0).Pose.Rot[2]) +
					 (-1 * x328 * (*_x0).Pose.Rot[1]);
	const FLT x333 = -1 * x331 * x152;
	const FLT x334 = x2 * x2 * x2;
	const FLT x335 = x2 * x232;
	const FLT x336 = (-1 * x39 * x335) + (x2 * x237) + (x2 * x236) + (-1 * x2 * x240) + (-1 * x232 * x334) +
					 (x229 * x334) + (x2 * x300) + (-1 * x36 * x335);
	const FLT x337 = x244 * x336;
	const FLT x338 = x45 * x337;
	const FLT x339 = x33 * x216;
	const FLT x340 = x220 * x339;
	const FLT x341 = x213 * x339;
	const FLT x342 = x2 * x249;
	const FLT x343 = x31 * x336;
	const FLT x344 = x27 * x343;
	const FLT x345 = (-1 * x252 * x343) + x317 + (-1 * x69 * x342) + (x255 * x344) + (x259 * x338) + (x2 * x58 * x338) +
					 x279 + (x58 * x340) + x280 + (-1 * x282) + (-1 * x59 * x341);
	const FLT x346 = x25 * x343;
	const FLT x347 = x291 + (-1 * x320) + (x77 * x340) + (-1 * x285 * x249) + x321 + (-1 * x61 * x58 * x337) +
					 (-1 * x273 * x346) + (x246 * x344) + (-1 * x276 * x336) + (-1 * x214 * x339) + x319;
	const FLT x348 = x324 + (-1 * x286 * x343) + (-1 * x2 * x284) + (-1 * x255 * x346) + (-1 * x60 * x340) +
					 (-1 * x285 * x338) + (x265 * x338) + x67 + x266 + (x84 * x341);
	const FLT x349 = x270 + (-1 * x273 * x344) + (-1 * x69 * x340) + (-1 * x271) + (-1 * x289 * x343) +
					 (-1 * x336 * x323) + (-1 * x58 * x342) + x55 + (-1 * x327) + (x277 * x339) + x326 + (x290 * x337);
	const FLT x350 = (-1 * x349 * (*_x0).Pose.Rot[2]) + (-1 * x345 * (*_x0).Pose.Rot[1]) + (x348 * (*_x0).Pose.Rot[3]) +
					 (x347 * (*_x0).Pose.Rot[0]);
	const FLT x351 = (-1 * x347 * (*_x0).Pose.Rot[3]) + (-1 * x345 * (*_x0).Pose.Rot[2]) + (x348 * (*_x0).Pose.Rot[0]) +
					 (x349 * (*_x0).Pose.Rot[1]);
	const FLT x352 = (x348 * (*_x0).Pose.Rot[2]) + (x347 * (*_x0).Pose.Rot[1]) + (x345 * (*_x0).Pose.Rot[0]) +
					 (x349 * (*_x0).Pose.Rot[3]);
	const FLT x353 = (x349 * (*_x0).Pose.Rot[0]) + (x347 * (*_x0).Pose.Rot[2]) + (-1 * x345 * (*_x0).Pose.Rot[3]) +
					 (-1 * x348 * (*_x0).Pose.Rot[1]);
	const FLT x354 = -1 * x351 * x152;
	const FLT x355 =
		2 * (1. / sqrt(1 + (-4 * (((x87 * x148) + (-1 * x143 * x145)) * ((x87 * x148) + (-1 * x143 * x145))))));
	const FLT x356 = 1 + (-2 * (x149 + (x145 * x145)));
	const FLT x357 = 2 * (1. / x356);
	const FLT x358 = 4 * x145;
	const FLT x359 = x356 * x356;
	const FLT x360 = (x87 * x145) + (x143 * x148);
	const FLT x361 = 2 * x360 * (1. / x359);
	const FLT x362 = x359 * (1. / (x359 + (4 * (x360 * x360))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x142 * x154) + x153)) +
								(x151 * ((x148 * x147) + (x146 * x145) + (x87 * x142) + (x144 * x143)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x175 * x154) + x179)) +
								(x151 * ((x177 * x145) + (x178 * x148) + (x87 * x175) + (x176 * x143)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x194 * x154) + x198)) +
								(x151 * ((x197 * x148) + (x196 * x145) + (x87 * x194) + (x195 * x143)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x208 * x154) + x212)) +
								(x151 * ((x210 * x145) + (x211 * x148) + (x87 * x208) + (x209 * x143)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x294 * x154) + x298)) +
								(x151 * ((x297 * x148) + (x87 * x294) + (x296 * x145) + (x295 * x143)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x330 * x154) + x333)) +
								(x151 * ((x332 * x148) + (x329 * x143) + (x331 * x145) + (x87 * x330)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x158 * ((-1 * x157 * ((-1 * x350 * x154) + x354)) +
								(x151 * ((x353 * x148) + (x352 * x143) + (x87 * x350) + (x351 * x145)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x355 * ((-1 * x143 * x147) + (x87 * x146) + (-1 * x142 * x145) + (x144 * x148)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x355 * ((-1 * x178 * x143) + (x176 * x148) + (x87 * x177) + (-1 * x175 * x145)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x355 * ((-1 * x197 * x143) + (-1 * x194 * x145) + (x87 * x196) + (x195 * x148)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x355 * ((-1 * x211 * x143) + (x87 * x210) + (x209 * x148) + (-1 * x208 * x145)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x355 * ((x87 * x296) + (x295 * x148) + (-1 * x297 * x143) + (-1 * x294 * x145)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x355 * ((-1 * x332 * x143) + (-1 * x330 * x145) + (x329 * x148) + (x87 * x331)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x355 * ((-1 * x353 * x143) + (x352 * x148) + (x87 * x351) + (-1 * x350 * x145)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x153 + (-1 * x358 * x147))) +
								(x357 * ((x142 * x148) + (x143 * x146) + (x87 * x147) + (x144 * x145)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x179 + (-1 * x358 * x178))) +
								(x357 * ((x87 * x178) + (x176 * x145) + (x175 * x148) + (x177 * x143)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x198 + (-1 * x358 * x197))) +
								(x357 * ((x194 * x148) + (x196 * x143) + (x87 * x197) + (x195 * x145)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x212 + (-1 * x211 * x358))) +
								(x357 * ((x208 * x148) + (x209 * x145) + (x210 * x143) + (x87 * x211)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x298 + (-1 * x297 * x358))) +
								(x357 * ((x294 * x148) + (x296 * x143) + (x87 * x297) + (x295 * x145)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x333 + (-1 * x358 * x332))) +
								(x357 * ((x330 * x148) + (x331 * x143) + (x87 * x332) + (x329 * x145)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x362 * ((-1 * x361 * (x354 + (-1 * x353 * x358))) +
								(x357 * ((x350 * x148) + (x87 * x353) + (x351 * x143) + (x352 * x145)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), t);
}

// Full version Jacobian of SurviveKalmanModelErrorPredict wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae6bfa0>] Jacobian of SurviveKalmanModelErrorPredict wrt
// [(*error_model).AccBias[0], (*error_model).AccBias[1], (*error_model).AccBias[2], (*error_model).Acc[0],
// (*error_model).Acc[1], (*error_model).Acc[2], (*error_model).GyroBias[0], (*error_model).GyroBias[1],
// (*error_model).GyroBias[2], (*error_model).IMUCorrection[0], (*error_model).IMUCorrection[1],
// (*error_model).IMUCorrection[2], (*error_model).IMUCorrection[3], (*error_model).Pose.AxisAngleRot[0],
// (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0],
// (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0],
// (*error_model).Velocity.AxisAngleRot[1], (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0],
// (*error_model).Velocity.Pos[1], (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at
// 0x7f5abae640d0>]
static inline void SurviveKalmanModelErrorPredict_jac_error_model(CnMat* Hx, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = fabs(t) * x0;
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x3 = t * t;
	const FLT x4 = x2 * x2;
	const FLT x5 = x4 * x3;
	const FLT x6 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x7 = x6 * x6;
	const FLT x8 = x3 * x7;
	const FLT x9 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x10 = x9 * x9;
	const FLT x11 = x3 * x10;
	const FLT x12 = 1e-10 + x11 + x5 + x8;
	const FLT x13 = sqrt(x12);
	const FLT x14 = 0.5 * x13;
	const FLT x15 = sin(x14);
	const FLT x16 = x15 * x15;
	const FLT x17 = 1. / x12;
	const FLT x18 = x17 * x16;
	const FLT x19 = cos(x14);
	const FLT x20 = (x19 * x19) + (x5 * x18) + (x8 * x18) + (x11 * x18);
	const FLT x21 = 1. / sqrt(x20);
	const FLT x22 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x23 = sin(x22);
	const FLT x24 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x25 = cos(x24);
	const FLT x26 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x27 = sin(x26);
	const FLT x28 = x25 * x27;
	const FLT x29 = x23 * x28;
	const FLT x30 = cos(x26);
	const FLT x31 = cos(x22);
	const FLT x32 = sin(x24);
	const FLT x33 = x32 * x31;
	const FLT x34 = x30 * x33;
	const FLT x35 = x34 + (-1 * x29);
	const FLT x36 = x32 * x23;
	const FLT x37 = x36 * x27;
	const FLT x38 = x30 * x25;
	const FLT x39 = x31 * x38;
	const FLT x40 = x39 + x37;
	const FLT x41 = x33 * x27;
	const FLT x42 = x38 * x23;
	const FLT x43 = x42 + x41;
	const FLT x44 = x30 * x36;
	const FLT x45 = x31 * x28;
	const FLT x46 = x45 + (-1 * x44);
	const FLT x47 = (x43 * x43) + (x46 * x46) + (x35 * x35) + (x40 * x40);
	const FLT x48 = 1. / sqrt(x47);
	const FLT x49 = x48 * (*_x0).Pose.Rot[3];
	const FLT x50 = x48 * (*_x0).Pose.Rot[2];
	const FLT x51 = x48 * (*_x0).Pose.Rot[0];
	const FLT x52 = x48 * (*_x0).Pose.Rot[1];
	const FLT x53 = (-1 * x52 * x46) + (x51 * x40) + (-1 * x49 * x35) + (-1 * x50 * x43);
	const FLT x54 = (-1 * x52 * x35) + (x46 * x49) + (x50 * x40) + (x51 * x43);
	const FLT x55 = (x52 * x43) + (x51 * x35) + (x40 * x49) + (-1 * x50 * x46);
	const FLT x56 = (x50 * x35) + (x52 * x40) + (-1 * x43 * x49) + (x51 * x46);
	const FLT x57 = (x55 * x55) + (x56 * x56) + (x54 * x54) + (x53 * x53);
	const FLT x58 = 1. / sqrt(x57);
	const FLT x59 = x53 * x58;
	const FLT x60 = x59 * x21;
	const FLT x61 = x15 * (1. / x13);
	const FLT x62 = t * x61;
	const FLT x63 = x60 * x62;
	const FLT x64 = x21 * x19;
	const FLT x65 = x64 * x58;
	const FLT x66 = x65 * x55;
	const FLT x67 = x58 * x21;
	const FLT x68 = x62 * x67;
	const FLT x69 = x68 * x56;
	const FLT x70 = x68 * x54;
	const FLT x71 = (x6 * x70) + (x2 * x63) + (-1 * x9 * x69) + x66;
	const FLT x72 = x65 * x54;
	const FLT x73 = x68 * x55;
	const FLT x74 = (-1 * x6 * x73) + x72 + (x2 * x69) + (x9 * x63);
	const FLT x75 = x64 * x59;
	const FLT x76 = x75 + (-1 * x2 * x73) + (-1 * x6 * x69) + (-1 * x9 * x70);
	const FLT x77 = x65 * x56;
	const FLT x78 = (x6 * x63) + x77 + (-1 * x2 * x70) + (x9 * x73);
	const FLT x79 = (x78 * (*_x0).Pose.Rot[1]) + (x71 * (*_x0).Pose.Rot[3]) + (x76 * (*_x0).Pose.Rot[0]) +
					(x74 * (*_x0).Pose.Rot[2]);
	const FLT x80 = 1. / (x57 * sqrt(x57));
	const FLT x81 = 1.0 / 2.0 * (1. / (x47 * sqrt(x47)));
	const FLT x82 = x81 * x40;
	const FLT x83 = 0.5 * x39;
	const FLT x84 = 0.5 * x37;
	const FLT x85 = x84 + x83;
	const FLT x86 = 2 * x46;
	const FLT x87 = 0.5 * x29;
	const FLT x88 = -1 * x87;
	const FLT x89 = 0.5 * x34;
	const FLT x90 = x89 + x88;
	const FLT x91 = 2 * x43;
	const FLT x92 = 0.5 * x41;
	const FLT x93 = -0.5 * x42;
	const FLT x94 = x93 + (-1 * x92);
	const FLT x95 = 2 * x35;
	const FLT x96 = 0.5 * x45;
	const FLT x97 = -1 * x96;
	const FLT x98 = 0.5 * x44;
	const FLT x99 = x98 + x97;
	const FLT x100 = 2 * x40;
	const FLT x101 = (x99 * x100) + (x85 * x86) + (x95 * x94) + (x91 * x90);
	const FLT x102 = x101 * (*_x0).Pose.Rot[1];
	const FLT x103 = x81 * x35;
	const FLT x104 = x101 * x103;
	const FLT x105 = x50 * x94;
	const FLT x106 = x81 * x43;
	const FLT x107 = x101 * x106;
	const FLT x108 = x85 * x51;
	const FLT x109 = x81 * x46;
	const FLT x110 = x101 * x109;
	const FLT x111 = (-1 * x110 * (*_x0).Pose.Rot[0]) + x108 + (-1 * x90 * x49) + (-1 * x104 * (*_x0).Pose.Rot[2]) +
					 (x107 * (*_x0).Pose.Rot[3]) + (x52 * x99) + (-1 * x82 * x102) + x105;
	const FLT x112 = 2 * x56;
	const FLT x113 = -1 * x52 * x94;
	const FLT x114 = x82 * x101;
	const FLT x115 = x85 * x49;
	const FLT x116 = x115 + (x51 * x90) + (x104 * (*_x0).Pose.Rot[1]) + (-1 * x107 * (*_x0).Pose.Rot[0]) +
					 (-1 * x114 * (*_x0).Pose.Rot[2]) + (-1 * x110 * (*_x0).Pose.Rot[3]) + x113 + (x50 * x99);
	const FLT x117 = 2 * x54;
	const FLT x118 = x85 * x50;
	const FLT x119 = x51 * x94;
	const FLT x120 = (-1 * x118) + (x52 * x90) + (-1 * x114 * (*_x0).Pose.Rot[3]) + (-1 * x102 * x106) + x119 +
					 (x110 * (*_x0).Pose.Rot[2]) + (-1 * x104 * (*_x0).Pose.Rot[0]) + (x99 * x49);
	const FLT x121 = 2 * x55;
	const FLT x122 = -1 * x85 * x52;
	const FLT x123 = x82 * (*_x0).Pose.Rot[0];
	const FLT x124 = x94 * x49;
	const FLT x125 = (x51 * x99) + (x104 * (*_x0).Pose.Rot[3]) + x122 + (-1 * x101 * x123) +
					 (x110 * (*_x0).Pose.Rot[1]) + (-1 * x124) + (-1 * x50 * x90) + (x107 * (*_x0).Pose.Rot[2]);
	const FLT x126 = 2 * x53;
	const FLT x127 = ((x126 * x125) + (x120 * x121) + (x111 * x112) + (x116 * x117)) * x80;
	const FLT x128 = x0 * x61;
	const FLT x129 = x21 * x128;
	const FLT x130 = x127 * x129;
	const FLT x131 = x6 * x56;
	const FLT x132 = x6 * x68;
	const FLT x133 = 1.0 / 2.0 * x64;
	const FLT x134 = x53 * x133;
	const FLT x135 = x2 * x68;
	const FLT x136 = x2 * x129;
	const FLT x137 = x55 * x136;
	const FLT x138 = x9 * x68;
	const FLT x139 = x9 * x129;
	const FLT x140 = x127 * x139;
	const FLT x141 = (x65 * x125) + (-1 * x116 * x138) + (-1 * x111 * x132) + (x54 * x140) + (x130 * x131) +
					 (-1 * x120 * x135) + (-1 * x127 * x134) + (x127 * x137);
	const FLT x142 = x6 * x130;
	const FLT x143 = 1.0 / 2.0 * x56;
	const FLT x144 = x64 * x143;
	const FLT x145 = x127 * x136;
	const FLT x146 = (-1 * x55 * x140) + (x65 * x111) + (-1 * x127 * x144) + (-1 * x53 * x142) + (x125 * x132) +
					 (x54 * x145) + (-1 * x116 * x135) + (x120 * x138);
	const FLT x147 = x54 * x133;
	const FLT x148 = x56 * x136;
	const FLT x149 = x6 * x55;
	const FLT x150 = (x65 * x116) + (-1 * x120 * x132) + (-1 * x127 * x148) + (x125 * x138) + (-1 * x127 * x147) +
					 (x130 * x149) + (-1 * x53 * x140) + (x111 * x135);
	const FLT x151 = 1.0 / 2.0 * x55;
	const FLT x152 = x64 * x151;
	const FLT x153 = (-1 * x127 * x152) + (-1 * x111 * x138) + (-1 * x53 * x145) + (x65 * x120) + (-1 * x54 * x142) +
					 (x56 * x140) + (x116 * x132) + (x125 * x135);
	const FLT x154 = (-1 * x153 * (*_x0).Pose.Rot[2]) + (x150 * (*_x0).Pose.Rot[3]) + (-1 * x141 * (*_x0).Pose.Rot[1]) +
					 (x146 * (*_x0).Pose.Rot[0]);
	const FLT x155 = (-1 * x76 * (*_x0).Pose.Rot[1]) + (x78 * (*_x0).Pose.Rot[0]) + (x74 * (*_x0).Pose.Rot[3]) +
					 (-1 * x71 * (*_x0).Pose.Rot[2]);
	const FLT x156 = (x146 * (*_x0).Pose.Rot[1]) + (x141 * (*_x0).Pose.Rot[0]) + (x150 * (*_x0).Pose.Rot[2]) +
					 (x153 * (*_x0).Pose.Rot[3]);
	const FLT x157 = (-1 * x74 * (*_x0).Pose.Rot[1]) + (-1 * x76 * (*_x0).Pose.Rot[3]) + (x78 * (*_x0).Pose.Rot[2]) +
					 (x71 * (*_x0).Pose.Rot[0]);
	const FLT x158 = (-1 * x146 * (*_x0).Pose.Rot[3]) + (-1 * x141 * (*_x0).Pose.Rot[2]) + (x150 * (*_x0).Pose.Rot[0]) +
					 (x153 * (*_x0).Pose.Rot[1]);
	const FLT x159 = (x71 * (*_x0).Pose.Rot[1]) + (x74 * (*_x0).Pose.Rot[0]) + (-1 * x76 * (*_x0).Pose.Rot[2]) +
					 (-1 * x78 * (*_x0).Pose.Rot[3]);
	const FLT x160 = (x153 * (*_x0).Pose.Rot[0]) + (-1 * x150 * (*_x0).Pose.Rot[1]) + (-1 * x141 * (*_x0).Pose.Rot[3]) +
					 (x146 * (*_x0).Pose.Rot[2]);
	const FLT x161 = x159 * x159;
	const FLT x162 = 1 + (-2 * ((x155 * x155) + x161));
	const FLT x163 = 2 * (1. / x162);
	const FLT x164 = 4 * x159;
	const FLT x165 = -1 * x164 * x158;
	const FLT x166 = 4 * x155;
	const FLT x167 = x162 * x162;
	const FLT x168 = (x79 * x155) + (x157 * x159);
	const FLT x169 = 2 * x168 * (1. / x167);
	const FLT x170 = x167 * (1. / (x167 + (4 * (x168 * x168))));
	const FLT x171 = -1 * x89;
	const FLT x172 = x171 + x88;
	const FLT x173 = (-1 * x84) + x83;
	const FLT x174 = -1 * x98;
	const FLT x175 = x97 + x174;
	const FLT x176 = x92 + x93;
	const FLT x177 = (x100 * x176) + (x95 * x175) + (x86 * x172) + (x91 * x173);
	const FLT x178 = x103 * x177;
	const FLT x179 = x48 * x173;
	const FLT x180 = x106 * (*_x0).Pose.Rot[0];
	const FLT x181 = x177 * (*_x0).Pose.Rot[3];
	const FLT x182 = x177 * (*_x0).Pose.Rot[2];
	const FLT x183 = (-1 * x82 * x182) + (-1 * x109 * x181) + (x49 * x172) + (x50 * x176) + (-1 * x52 * x175) +
					 (x179 * (*_x0).Pose.Rot[0]) + (x178 * (*_x0).Pose.Rot[1]) + (-1 * x177 * x180);
	const FLT x184 = x177 * (*_x0).Pose.Rot[1];
	const FLT x185 = (x50 * x175) + (-1 * x82 * x184) + (x52 * x176) + (x106 * x181) + (-1 * x103 * x182) +
					 (x51 * x172) + (-1 * x109 * x177 * (*_x0).Pose.Rot[0]) + (-1 * x49 * x173);
	const FLT x186 = (x109 * x182) + (x179 * (*_x0).Pose.Rot[1]) + (x51 * x175) + (-1 * x106 * x184) +
					 (-1 * x178 * (*_x0).Pose.Rot[0]) + (x49 * x176) + (-1 * x82 * x181) + (-1 * x50 * x172);
	const FLT x187 = (x51 * x176) + (x103 * x181) + (-1 * x52 * x172) + (-1 * x49 * x175) + (-1 * x123 * x177) +
					 (-1 * x50 * x173) + (x106 * x182) + (x109 * x184);
	const FLT x188 = ((x126 * x187) + (x121 * x186) + (x117 * x183) + (x112 * x185)) * x80;
	const FLT x189 = x6 * x129;
	const FLT x190 = x188 * x139;
	const FLT x191 = x68 * x186;
	const FLT x192 = (-1 * x183 * x138) + (-1 * x2 * x191) + (x56 * x189 * x188) + (-1 * x188 * x134) +
					 (-1 * x185 * x132) + (x188 * x137) + (x65 * x187) + (x54 * x190);
	const FLT x193 = x129 * x149;
	const FLT x194 = x53 * x188;
	const FLT x195 = (x65 * x183) + (-1 * x6 * x191) + (-1 * x194 * x139) + (-1 * x188 * x147) + (-1 * x188 * x148) +
					 (x188 * x193) + (x185 * x135) + (x187 * x138);
	const FLT x196 = x54 * x188;
	const FLT x197 = x55 * x139;
	const FLT x198 = (x65 * x185) + (-1 * x188 * x144) + (-1 * x188 * x197) + (x196 * x136) + (-1 * x189 * x194) +
					 (x187 * x132) + (-1 * x183 * x135) + (x9 * x191);
	const FLT x199 = (-1 * x185 * x138) + (x65 * x186) + (x183 * x132) + (-1 * x188 * x152) + (-1 * x189 * x196) +
					 (x56 * x190) + (-1 * x194 * x136) + (x187 * x135);
	const FLT x200 = (x198 * (*_x0).Pose.Rot[0]) + (-1 * x192 * (*_x0).Pose.Rot[1]) + (-1 * x199 * (*_x0).Pose.Rot[2]) +
					 (x195 * (*_x0).Pose.Rot[3]);
	const FLT x201 = (x199 * (*_x0).Pose.Rot[3]) + (x195 * (*_x0).Pose.Rot[2]) + (x198 * (*_x0).Pose.Rot[1]) +
					 (x192 * (*_x0).Pose.Rot[0]);
	const FLT x202 = (-1 * x192 * (*_x0).Pose.Rot[2]) + (-1 * x198 * (*_x0).Pose.Rot[3]) + (x199 * (*_x0).Pose.Rot[1]) +
					 (x195 * (*_x0).Pose.Rot[0]);
	const FLT x203 = (x199 * (*_x0).Pose.Rot[0]) + (x198 * (*_x0).Pose.Rot[2]) + (-1 * x195 * (*_x0).Pose.Rot[1]) +
					 (-1 * x192 * (*_x0).Pose.Rot[3]);
	const FLT x204 = -1 * x202 * x164;
	const FLT x205 = x96 + x174;
	const FLT x206 = x87 + x171;
	const FLT x207 = (x206 * x100) + (x91 * x205) + (x86 * x94) + (x85 * x95);
	const FLT x208 = x82 * x207;
	const FLT x209 = x207 * x103;
	const FLT x210 = x207 * x106;
	const FLT x211 = x207 * x109;
	const FLT x212 = x118 + (x52 * x206) + (-1 * x211 * (*_x0).Pose.Rot[0]) + (-1 * x209 * (*_x0).Pose.Rot[2]) +
					 (x210 * (*_x0).Pose.Rot[3]) + (-1 * x208 * (*_x0).Pose.Rot[1]) + (-1 * x49 * x205) + x119;
	const FLT x213 = (-1 * x208 * (*_x0).Pose.Rot[3]) + (-1 * x105) + x108 + (-1 * x209 * (*_x0).Pose.Rot[0]) +
					 (x52 * x205) + (x211 * (*_x0).Pose.Rot[2]) + (x49 * x206) + (-1 * x210 * (*_x0).Pose.Rot[1]);
	const FLT x214 = (-1 * x207 * x180) + (-1 * x211 * (*_x0).Pose.Rot[3]) + (x209 * (*_x0).Pose.Rot[1]) + x122 +
					 (-1 * x208 * (*_x0).Pose.Rot[2]) + (x51 * x205) + (x50 * x206) + x124;
	const FLT x215 = (x51 * x206) + (-1 * x115) + (-1 * x207 * x123) + (x210 * (*_x0).Pose.Rot[2]) + x113 +
					 (x209 * (*_x0).Pose.Rot[3]) + (x211 * (*_x0).Pose.Rot[1]) + (-1 * x50 * x205);
	const FLT x216 = ((x215 * x126) + (x214 * x117) + (x212 * x112) + (x213 * x121)) * x80;
	const FLT x217 = x56 * x216;
	const FLT x218 = x53 * x216;
	const FLT x219 = x54 * x216;
	const FLT x220 = (-1 * x212 * x132) + (-1 * x218 * x133) + (x65 * x215) + (x217 * x189) + (x219 * x139) +
					 (-1 * x214 * x138) + (x216 * x137) + (-1 * x213 * x135);
	const FLT x221 = (x65 * x212) + (x213 * x138) + (-1 * x214 * x135) + (-1 * x218 * x189) + (x215 * x132) +
					 (x219 * x136) + (-1 * x216 * x144) + (-1 * x216 * x197);
	const FLT x222 = (x65 * x213) + (-1 * x216 * x152) + (x217 * x139) + (x214 * x132) + (x215 * x135) +
					 (-1 * x212 * x138) + (-1 * x218 * x136) + (-1 * x219 * x189);
	const FLT x223 = (x65 * x214) + (x215 * x138) + (x212 * x135) + (-1 * x216 * x147) + (x216 * x193) +
					 (-1 * x218 * x139) + (-1 * x213 * x132) + (-1 * x216 * x148);
	const FLT x224 = (x223 * (*_x0).Pose.Rot[2]) + (x222 * (*_x0).Pose.Rot[3]) + (x220 * (*_x0).Pose.Rot[0]) +
					 (x221 * (*_x0).Pose.Rot[1]);
	const FLT x225 = (-1 * x220 * (*_x0).Pose.Rot[1]) + (-1 * x222 * (*_x0).Pose.Rot[2]) + (x223 * (*_x0).Pose.Rot[3]) +
					 (x221 * (*_x0).Pose.Rot[0]);
	const FLT x226 = (-1 * x221 * (*_x0).Pose.Rot[3]) + (-1 * x220 * (*_x0).Pose.Rot[2]) + (x222 * (*_x0).Pose.Rot[1]) +
					 (x223 * (*_x0).Pose.Rot[0]);
	const FLT x227 = (x222 * (*_x0).Pose.Rot[0]) + (x221 * (*_x0).Pose.Rot[2]) + (-1 * x223 * (*_x0).Pose.Rot[1]) +
					 (-1 * x220 * (*_x0).Pose.Rot[3]);
	const FLT x228 = -1 * x226 * x164;
	const FLT x229 = t * t * t;
	const FLT x230 = 0.5 * x17 * x229;
	const FLT x231 = x72 * x230;
	const FLT x232 = x6 * x9;
	const FLT x233 = x232 * x231;
	const FLT x234 = x15 * (1. / (x12 * sqrt(x12)));
	const FLT x235 = x234 * x229;
	const FLT x236 = x67 * x54;
	const FLT x237 = x236 * x235;
	const FLT x238 = x232 * x237;
	const FLT x239 = t * t * t * t;
	const FLT x240 = (x6 * x6 * x6) * x239;
	const FLT x241 = 1.0 * x19;
	const FLT x242 = x234 * x241;
	const FLT x243 = 2 * (1. / (x12 * x12)) * x16;
	const FLT x244 = x239 * x242;
	const FLT x245 = x4 * x244;
	const FLT x246 = x3 * x6;
	const FLT x247 = 2 * x18;
	const FLT x248 = x6 * x10;
	const FLT x249 = x239 * x243;
	const FLT x250 = x4 * x249;
	const FLT x251 = x61 * x241;
	const FLT x252 = (-1 * x248 * x249) + (-1 * x240 * x243) + (-1 * x251 * x246) + (x240 * x242) + (x6 * x245) +
					 (-1 * x6 * x250) + (x246 * x247) + (x244 * x248);
	const FLT x253 = 1. / (x20 * sqrt(x20));
	const FLT x254 = x253 * x128;
	const FLT x255 = x58 * x254;
	const FLT x256 = x252 * x255;
	const FLT x257 = x55 * x256;
	const FLT x258 = -1 * x69;
	const FLT x259 = 0.5 * x61;
	const FLT x260 = x259 * x246;
	const FLT x261 = x19 * x253;
	const FLT x262 = x59 * x261;
	const FLT x263 = 1.0 / 2.0 * x252;
	const FLT x264 = x7 * x235;
	const FLT x265 = x67 * x56;
	const FLT x266 = x54 * x256;
	const FLT x267 = x7 * x230;
	const FLT x268 = x66 * x230;
	const FLT x269 = x2 * x6;
	const FLT x270 = x67 * x55;
	const FLT x271 = x2 * x235;
	const FLT x272 = x6 * x271;
	const FLT x273 = (x272 * x270) + (-1 * x268 * x269);
	const FLT x274 = x273 + (x256 * x131) + (-1 * x77 * x267) + (x264 * x265) + (-1 * x262 * x263) + x238 +
					 (x2 * x257) + x258 + (x9 * x266) + (-1 * x233) + (-1 * x60 * x260);
	const FLT x275 = x232 * x268;
	const FLT x276 = x231 * x269;
	const FLT x277 = x2 * x237;
	const FLT x278 = x6 * x277;
	const FLT x279 = x9 * x235;
	const FLT x280 = x6 * x279 * x270;
	const FLT x281 = x59 * x254;
	const FLT x282 = x281 * x252;
	const FLT x283 = x58 * x261;
	const FLT x284 = x283 * x143;
	const FLT x285 = (x75 * x267) + (-1 * x276) + x63 + (-1 * x265 * x260) + x278 + (-1 * x280) + (-1 * x9 * x257) +
					 (x2 * x266) + (-1 * x6 * x282) + (-1 * x60 * x264) + x275 + (-1 * x284 * x252);
	const FLT x286 = -1 * x73;
	const FLT x287 = x6 * x265;
	const FLT x288 = x271 * x287;
	const FLT x289 = x77 * x230;
	const FLT x290 = x269 * x289;
	const FLT x291 = x56 * x256;
	const FLT x292 = x54 * x283;
	const FLT x293 = x9 * x60;
	const FLT x294 = x75 * x230;
	const FLT x295 = (x232 * x294) + (-1 * x6 * x235 * x293);
	const FLT x296 = (x270 * x264) + (-1 * x292 * x263) + (-1 * x66 * x267) + (-1 * x9 * x282) + (-1 * x288) + x295 +
					 (-1 * x236 * x260) + x286 + x290 + (-1 * x2 * x291) + (x256 * x149);
	const FLT x297 = x283 * x151;
	const FLT x298 = (-1 * x60 * x272) + (x294 * x269);
	const FLT x299 = (-1 * x232 * x289) + (x279 * x287);
	const FLT x300 = x298 + (-1 * x6 * x266) + (-1 * x7 * x237) + (x9 * x291) + x299 + (-1 * x2 * x282) +
					 (-1 * x270 * x260) + x70 + (x7 * x231) + (-1 * x297 * x252);
	const FLT x301 = (-1 * x300 * (*_x0).Pose.Rot[2]) + (x296 * (*_x0).Pose.Rot[3]) + (-1 * x274 * (*_x0).Pose.Rot[1]) +
					 (x285 * (*_x0).Pose.Rot[0]);
	const FLT x302 = (x296 * (*_x0).Pose.Rot[2]) + (x300 * (*_x0).Pose.Rot[3]) + (x285 * (*_x0).Pose.Rot[1]) +
					 (x274 * (*_x0).Pose.Rot[0]);
	const FLT x303 = (-1 * x285 * (*_x0).Pose.Rot[3]) + (-1 * x274 * (*_x0).Pose.Rot[2]) + (x300 * (*_x0).Pose.Rot[1]) +
					 (x296 * (*_x0).Pose.Rot[0]);
	const FLT x304 = (x300 * (*_x0).Pose.Rot[0]) + (x285 * (*_x0).Pose.Rot[2]) + (-1 * x296 * (*_x0).Pose.Rot[1]) +
					 (-1 * x274 * (*_x0).Pose.Rot[3]);
	const FLT x305 = -1 * x303 * x164;
	const FLT x306 = x7 * x9;
	const FLT x307 = x3 * x251;
	const FLT x308 = x3 * x247;
	const FLT x309 = x9 * x9 * x9;
	const FLT x310 = (x244 * x309) + (-1 * x249 * x306) + (-1 * x9 * x307) + (x244 * x306) + (x9 * x245) +
					 (-1 * x9 * x250) + (-1 * x249 * x309) + (x9 * x308);
	const FLT x311 = x281 * x310;
	const FLT x312 = x10 * x235;
	const FLT x313 = x10 * x230;
	const FLT x314 = x255 * x310;
	const FLT x315 = x54 * x314;
	const FLT x316 = x55 * x314;
	const FLT x317 = x3 * x259;
	const FLT x318 = x9 * x317;
	const FLT x319 = x2 * x9;
	const FLT x320 = (-1 * x231 * x319) + (x9 * x277);
	const FLT x321 = x295 + x73 + (-1 * x265 * x318) + (-1 * x270 * x312) + (-1 * x6 * x311) + x320 + (x2 * x315) +
					 (-1 * x9 * x316) + (-1 * x284 * x310) + (x66 * x313);
	const FLT x322 = -1 * x70;
	const FLT x323 = 1.0 / 2.0 * x310;
	const FLT x324 = x9 * x271;
	const FLT x325 = x270 * x324;
	const FLT x326 = x268 * x319;
	const FLT x327 = x325 + (x9 * x315) + (-1 * x262 * x323) + (x314 * x131) + x322 + (-1 * x72 * x313) + (-1 * x326) +
					 (-1 * x293 * x317) + (x10 * x237) + x299 + (x2 * x316);
	const FLT x328 = x56 * x314;
	const FLT x329 = (x294 * x319) + (-1 * x271 * x293);
	const FLT x330 = x233 + (-1 * x77 * x313) + (-1 * x270 * x318) + (x9 * x328) + (-1 * x2 * x311) + x329 +
					 (x265 * x312) + x258 + (-1 * x238) + (-1 * x6 * x315) + (-1 * x297 * x310);
	const FLT x331 = x265 * x324;
	const FLT x332 = x289 * x319;
	const FLT x333 = (-1 * x275) + x332 + (-1 * x331) + (x314 * x149) + (x75 * x313) + (-1 * x9 * x311) + x63 +
					 (-1 * x2 * x328) + x280 + (-1 * x60 * x312) + (-1 * x292 * x323) + (-1 * x236 * x318);
	const FLT x334 = (x333 * (*_x0).Pose.Rot[2]) + (x330 * (*_x0).Pose.Rot[3]) + (x321 * (*_x0).Pose.Rot[1]) +
					 (x327 * (*_x0).Pose.Rot[0]);
	const FLT x335 = (-1 * x330 * (*_x0).Pose.Rot[2]) + (x333 * (*_x0).Pose.Rot[3]) + (-1 * x327 * (*_x0).Pose.Rot[1]) +
					 (x321 * (*_x0).Pose.Rot[0]);
	const FLT x336 = (-1 * x321 * (*_x0).Pose.Rot[3]) + (-1 * x327 * (*_x0).Pose.Rot[2]) + (x333 * (*_x0).Pose.Rot[0]) +
					 (x330 * (*_x0).Pose.Rot[1]);
	const FLT x337 = (x330 * (*_x0).Pose.Rot[0]) + (x321 * (*_x0).Pose.Rot[2]) + (-1 * x327 * (*_x0).Pose.Rot[3]) +
					 (-1 * x333 * (*_x0).Pose.Rot[1]);
	const FLT x338 = -1 * x336 * x164;
	const FLT x339 = x2 * x244;
	const FLT x340 = x2 * x2 * x2;
	const FLT x341 = x2 * x249;
	const FLT x342 = (x10 * x339) + (x2 * x308) + (-1 * x2 * x307) + (-1 * x10 * x341) + (x7 * x339) +
					 (-1 * x7 * x341) + (-1 * x249 * x340) + (x244 * x340);
	const FLT x343 = x6 * x342;
	const FLT x344 = x56 * x255;
	const FLT x345 = x4 * x235;
	const FLT x346 = x67 * x345;
	const FLT x347 = x55 * x255;
	const FLT x348 = x2 * x342;
	const FLT x349 = x4 * x230;
	const FLT x350 = x2 * x317;
	const FLT x351 = 1.0 / 2.0 * x342;
	const FLT x352 = x9 * x342;
	const FLT x353 = x54 * x255;
	const FLT x354 = x286 + (-1 * x290) + (-1 * x262 * x351) + (x55 * x346) + (x344 * x343) + x320 + (-1 * x66 * x349) +
					 x288 + (x348 * x347) + (x352 * x353) + (-1 * x60 * x350);
	const FLT x355 = x283 * x351;
	const FLT x356 = x255 * x342;
	const FLT x357 = x298 + (-1 * x325) + (-1 * x265 * x350) + x326 + (-1 * x352 * x347) + (x236 * x345) +
					 (x2 * x54 * x356) + (-1 * x281 * x343) + (-1 * x56 * x355) + x322 + (-1 * x4 * x231);
	const FLT x358 = x281 * x342;
	const FLT x359 = x329 + x273 + (-1 * x236 * x350) + (-1 * x9 * x358) + (-1 * x56 * x346) + x69 + (x356 * x149) +
					 (-1 * x348 * x344) + (-1 * x54 * x355) + (x77 * x349);
	const FLT x360 = x276 + (-1 * x297 * x342) + (-1 * x278) + (-1 * x332) + (-1 * x2 * x358) + (-1 * x60 * x345) +
					 (-1 * x270 * x350) + x63 + (x75 * x349) + x331 + (x352 * x344) + (-1 * x353 * x343);
	const FLT x361 = (-1 * x360 * (*_x0).Pose.Rot[2]) + (x359 * (*_x0).Pose.Rot[3]) + (-1 * x354 * (*_x0).Pose.Rot[1]) +
					 (x357 * (*_x0).Pose.Rot[0]);
	const FLT x362 = (-1 * x357 * (*_x0).Pose.Rot[3]) + (x359 * (*_x0).Pose.Rot[0]) + (-1 * x354 * (*_x0).Pose.Rot[2]) +
					 (x360 * (*_x0).Pose.Rot[1]);
	const FLT x363 = (x359 * (*_x0).Pose.Rot[2]) + (x354 * (*_x0).Pose.Rot[0]) + (x357 * (*_x0).Pose.Rot[1]) +
					 (x360 * (*_x0).Pose.Rot[3]);
	const FLT x364 = (x360 * (*_x0).Pose.Rot[0]) + (x357 * (*_x0).Pose.Rot[2]) + (-1 * x354 * (*_x0).Pose.Rot[3]) +
					 (-1 * x359 * (*_x0).Pose.Rot[1]);
	const FLT x365 = -1 * x362 * x164;
	const FLT x366 =
		2 * (1. / sqrt(1 + (-4 * (((x79 * x159) + (-1 * x155 * x157)) * ((x79 * x159) + (-1 * x155 * x157))))));
	const FLT x367 = 1 + (-2 * (x161 + (x157 * x157)));
	const FLT x368 = 2 * (1. / x367);
	const FLT x369 = 4 * x157;
	const FLT x370 = x367 * x367;
	const FLT x371 = (x79 * x157) + (x155 * x159);
	const FLT x372 = 2 * x371 * (1. / x370);
	const FLT x373 = x370 * (1. / (x370 + (4 * (x371 * x371))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x170 * ((-1 * x169 * ((-1 * x166 * x154) + x165)) +
								(x163 * ((x157 * x158) + (x160 * x159) + (x79 * x154) + (x155 * x156)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x170 * ((-1 * x169 * ((-1 * x200 * x166) + x204)) +
								(x163 * ((x203 * x159) + (x202 * x157) + (x79 * x200) + (x201 * x155)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x170 * ((-1 * x169 * ((-1 * x225 * x166) + x228)) +
								(x163 * ((x226 * x157) + (x227 * x159) + (x224 * x155) + (x79 * x225)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x170 * ((-1 * x169 * ((-1 * x301 * x166) + x305)) +
								(x163 * ((x304 * x159) + (x303 * x157) + (x79 * x301) + (x302 * x155)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x170 * ((-1 * x169 * ((-1 * x335 * x166) + x338)) +
								(x163 * ((x337 * x159) + (x336 * x157) + (x334 * x155) + (x79 * x335)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x170 * ((-1 * x169 * ((-1 * x361 * x166) + x365)) +
								(x163 * ((x364 * x159) + (x363 * x155) + (x79 * x361) + (x362 * x157)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x366 * ((x156 * x159) + (-1 * x160 * x155) + (x79 * x158) + (-1 * x154 * x157)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x366 * ((-1 * x203 * x155) + (x201 * x159) + (-1 * x200 * x157) + (x79 * x202)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x366 * ((-1 * x227 * x155) + (-1 * x225 * x157) + (x224 * x159) + (x79 * x226)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x366 * ((-1 * x304 * x155) + (x302 * x159) + (x79 * x303) + (-1 * x301 * x157)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x366 * ((-1 * x337 * x155) + (-1 * x335 * x157) + (x334 * x159) + (x79 * x336)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x366 * ((-1 * x364 * x155) + (x79 * x362) + (x363 * x159) + (-1 * x361 * x157)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x373 * ((-1 * x372 * (x165 + (-1 * x369 * x160))) +
								(x368 * ((x154 * x159) + (x155 * x158) + (x79 * x160) + (x156 * x157)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x373 * ((-1 * x372 * (x204 + (-1 * x203 * x369))) +
								(x368 * ((x200 * x159) + (x201 * x157) + (x79 * x203) + (x202 * x155)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x373 * ((-1 * x372 * (x228 + (-1 * x227 * x369))) +
								(x368 * ((x225 * x159) + (x79 * x227) + (x226 * x155) + (x224 * x157)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x373 * ((-1 * x372 * (x305 + (-1 * x369 * x304))) +
								(x368 * ((x301 * x159) + (x303 * x155) + (x79 * x304) + (x302 * x157)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x373 * ((-1 * x372 * (x338 + (-1 * x369 * x337))) +
								(x368 * ((x335 * x159) + (x336 * x155) + (x79 * x337) + (x334 * x157)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x373 * ((-1 * x372 * (x365 + (-1 * x369 * x364))) +
								(x368 * ((x361 * x159) + (x362 * x155) + (x79 * x364) + (x363 * x157)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccScale)/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccScale)/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUCorrection[3])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, IMUCorrection[3])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, AccBias[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, AccBias[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, GyroBias[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, GyroBias[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, GyroBias[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, GyroBias[2])/sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelErrorPredict wrt [(*error_model).AccBias[0], (*error_model).AccBias[1],
// (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2],
// (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2], (*error_model).IMUCorrection[0],
// (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2], (*error_model).IMUCorrection[3],
// (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2],
// (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2],
// (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae640d0>]
static inline void SurviveObsErrorModelNoFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = sqrt(1e-10 + ((*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2]) + ((*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1]));
	const FLT x1 = 2 * (1. / x0) * atan2(x0, (*_x0).Pose.Rot[0]);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]);
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]);
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]);
	out->AxisAngleRot[0]=(x1 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	out->AxisAngleRot[1]=(x1 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	out->AxisAngleRot[2]=(x1 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
}

// Jacobian of SurviveObsErrorModelNoFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2], (*_x0).Acc[0],
// (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2], (*_x0).IMUCorrection[0],
// (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at
// 0x7f5abae84640>]
static inline void SurviveObsErrorModelNoFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = (*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3];
	const FLT x1 = (*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1];
	const FLT x2 = (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2];
	const FLT x3 = 1e-10 + x2 + x0 + x1;
	const FLT x4 = 2 * (1. / (x3 + ((*_x0).Pose.Rot[0] * (*_x0).Pose.Rot[0])));
	const FLT x5 = (1. / x3) * (*_x0).Pose.Rot[0];
	const FLT x6 = x4 * x5;
	const FLT x7 = sqrt(x3);
	const FLT x8 = 2 * atan2(x7, (*_x0).Pose.Rot[0]);
	const FLT x9 = x8 * (1. / x7);
	const FLT x10 = (1. / (x3 * sqrt(x3))) * x8;
	const FLT x11 = x4 * (*_x0).Pose.Rot[2];
	const FLT x12 = x5 * (*_x0).Pose.Rot[1];
	const FLT x13 = (x12 * x11) + (-1 * x10 * (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[1]);
	const FLT x14 = x10 * (*_x0).Pose.Rot[3];
	const FLT x15 = x4 * (*_x0).Pose.Rot[3];
	const FLT x16 = (x15 * x12) + (-1 * x14 * (*_x0).Pose.Rot[1]);
	const FLT x17 = (x5 * x15 * (*_x0).Pose.Rot[2]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), -1 * x4 * (*_x0).Pose.Rot[1]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (-1 * x1 * x10) + (x1 * x6) + x9);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x13);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x16);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), -1 * x11);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x13);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (-1 * x2 * x10) + (x2 * x6) + x9);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x17);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), -1 * x15);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x16);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x17);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (x0 * x6) + (-1 * x0 * x10) + x9);
}

// Full version Jacobian of SurviveObsErrorModelNoFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae84640>] Jacobian of SurviveObsErrorModelNoFlip wrt
// [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorModelNoFlip_jac_Z(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), -1);
}

// Full version Jacobian of SurviveObsErrorModelNoFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorModelFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = sqrt(1e-10 + ((*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2]) + ((*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1]));
	const FLT x1 = 2 * (1. / x0) * atan2(x0, (*_x0).Pose.Rot[0]);
	const FLT x2 = (x1 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x3 = (x1 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x4 = (x1 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x5 = sqrt(1e-10 + (x4 * x4) + (x3 * x3) + (x2 * x2));
	const FLT x6 = (1. / x5) * (-6.28318530717959 + x5);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]);
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]);
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]);
	out->AxisAngleRot[0]=x2 * x6;
	out->AxisAngleRot[1]=x4 * x6;
	out->AxisAngleRot[2]=x3 * x6;
}

// Jacobian of SurviveObsErrorModelFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2], (*_x0).Acc[0],
// (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2], (*_x0).IMUCorrection[0],
// (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at
// 0x7f5abae10c70>]
static inline void SurviveObsErrorModelFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = (*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3];
	const FLT x1 = (*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1];
	const FLT x2 = (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2];
	const FLT x3 = 1e-10 + x2 + x0 + x1;
	const FLT x4 = sqrt(x3);
	const FLT x5 = 2 * atan2(x4, (*_x0).Pose.Rot[0]);
	const FLT x6 = (1. / x4) * x5;
	const FLT x7 = (x6 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x8 = 1. / (x3 + ((*_x0).Pose.Rot[0] * (*_x0).Pose.Rot[0]));
	const FLT x9 = 4 * x8;
	const FLT x10 = (x6 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x11 = (x6 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x12 = (-1 * x9 * x11 * (*_x0).Pose.Rot[1]) + (-1 * x7 * x9 * (*_x0).Pose.Rot[2]) + (-1 * x9 * x10 * (*_x0).Pose.Rot[3]);
	const FLT x13 = 1e-10 + (x10 * x10) + (x7 * x7) + (x11 * x11);
	const FLT x14 = 1.0/2.0 * (1. / x13);
	const FLT x15 = x14 * x11;
	const FLT x16 = sqrt(x13);
	const FLT x17 = -6.28318530717959 + x16;
	const FLT x18 = 1.0/2.0 * (1. / (x13 * sqrt(x13))) * x17;
	const FLT x19 = x11 * x18;
	const FLT x20 = x17 * (1. / x16);
	const FLT x21 = 2 * x8;
	const FLT x22 = x20 * x21;
	const FLT x23 = (1. / (x3 * sqrt(x3))) * x5;
	const FLT x24 = (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[1];
	const FLT x25 = (1. / x3) * x21 * (*_x0).Pose.Rot[0];
	const FLT x26 = (x24 * x25) + (-1 * x24 * x23);
	const FLT x27 = 2 * x7;
	const FLT x28 = x23 * (*_x0).Pose.Rot[3];
	const FLT x29 = x25 * (*_x0).Pose.Rot[3];
	const FLT x30 = (x29 * (*_x0).Pose.Rot[1]) + (-1 * x28 * (*_x0).Pose.Rot[1]);
	const FLT x31 = 2 * x10;
	const FLT x32 = (-1 * x1 * x23) + (x1 * x25) + x6;
	const FLT x33 = 2 * x11;
	const FLT x34 = (x32 * x33) + (x26 * x27) + (x30 * x31);
	const FLT x35 = (-1 * x2 * x23) + (x2 * x25) + x6;
	const FLT x36 = (x29 * (*_x0).Pose.Rot[2]) + (-1 * x28 * (*_x0).Pose.Rot[2]);
	const FLT x37 = (x33 * x26) + (x35 * x27) + (x31 * x36);
	const FLT x38 = x20 * x26;
	const FLT x39 = (-1 * x0 * x23) + (x0 * x25) + x6;
	const FLT x40 = (x30 * x33) + (x36 * x27) + (x31 * x39);
	const FLT x41 = x30 * x20;
	const FLT x42 = x7 * x14;
	const FLT x43 = x7 * x18;
	const FLT x44 = x36 * x20;
	const FLT x45 = x14 * x10;
	const FLT x46 = x10 * x18;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), (-1 * x22 * (*_x0).Pose.Rot[1]) + (x15 * x12) + (-1 * x12 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (x32 * x20) + (x34 * x15) + (-1 * x34 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x38 + (x37 * x15) + (-1 * x37 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x41 + (x40 * x15) + (-1 * x40 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), (-1 * x22 * (*_x0).Pose.Rot[2]) + (x42 * x12) + (-1 * x43 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (x42 * x34) + x38 + (-1 * x43 * x34));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (x35 * x20) + (x42 * x37) + (-1 * x43 * x37));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x44 + (x40 * x42) + (-1 * x40 * x43));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), (-1 * x22 * (*_x0).Pose.Rot[3]) + (x45 * x12) + (-1 * x46 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x41 + (x45 * x34) + (-1 * x46 * x34));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (x45 * x37) + x44 + (-1 * x46 * x37));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (x40 * x45) + (x39 * x20) + (-1 * x40 * x46));
}

// Full version Jacobian of SurviveObsErrorModelFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae10c70>] Jacobian of SurviveObsErrorModelFlip wrt
// [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorModelFlip_jac_Z(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = sqrt(1e-10 + ((*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2]) + ((*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1]));
	const FLT x1 = 2 * (1. / x0) * atan2(x0, (*_x0).Pose.Rot[0]);
	const FLT x2 = (x1 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x3 = x2 * x2;
	const FLT x4 = (x1 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x5 = x4 * x4;
	const FLT x6 = (x1 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x7 = x6 * x6;
	const FLT x8 = 1e-10 + x7 + x3 + x5;
	const FLT x9 = 1. / x8;
	const FLT x10 = sqrt(x8);
	const FLT x11 = -6.28318530717959 + x10;
	const FLT x12 = (1. / (x8 * sqrt(x8))) * x11;
	const FLT x13 = -1 * x11 * (1. / x10);
	const FLT x14 = x4 * x6;
	const FLT x15 = (x14 * x12) + (-1 * x9 * x14);
	const FLT x16 = x2 * x9;
	const FLT x17 = x2 * x12;
	const FLT x18 = (x4 * x17) + (-1 * x4 * x16);
	const FLT x19 = (x6 * x17) + (-1 * x6 * x16);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), (-1 * x5 * x9) + x13 + (x5 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), x15);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), x15);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), x13 + (-1 * x7 * x9) + (x7 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), (-1 * x3 * x9) + x13 + (x3 * x12));
}

// Full version Jacobian of SurviveObsErrorModelFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelNoFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = sin(x0);
	const FLT x9 = cos(x4);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x1 * x9;
	const FLT x13 = (x7 * x12) + (x6 * x8);
	const FLT x14 = x5 * x7;
	const FLT x15 = (x3 * x12) + (-1 * x8 * x14);
	const FLT x16 = (x1 * x14) + (-1 * x3 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x13 * x13));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * x16;
	const FLT x21 = x13 * x17;
	const FLT x22 =
		(x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x11 * x18) + (x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) + (-1 * x15 * x18) +
					(-1 * x23 * (*_x0).Pose.Rot[2]);
	const FLT x25 =
		(x23 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[2]) + (x13 * x18);
	const FLT x26 = x25 * x25;
	const FLT x27 =
		(-1 * x19 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[0]) + (x18 * x16) + (x21 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x27 * x27;
	const FLT x29 = x22 * x22;
	const FLT x30 = x29 + x28 + (x24 * x24) + x26;
	const FLT x31 = 1. / sqrt(x30);
	const FLT x32 = 1. / x30;
	const FLT x33 = sqrt(1e-10 + (x32 * x26) + (x32 * x28) + (x32 * x29));
	const FLT x34 = 2 * x31 * (1. / x33) * atan2(x33, x31 * x24);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]) + (*err).Pose.Pos[0];
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]) + (*err).Pose.Pos[1];
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]) + (*err).Pose.Pos[2];
	out->AxisAngleRot[0] = (x34 * x22) + (-1 * (*Z).AxisAngleRot[0]);
	out->AxisAngleRot[1] = (x34 * x27) + (-1 * (*Z).AxisAngleRot[1]);
	out->AxisAngleRot[2] = (x34 * x25) + (-1 * (*Z).AxisAngleRot[2]);
}

// Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae84340>]
static inline void SurviveObsErrorStateErrorModelNoFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = cos(x4);
	const FLT x9 = sin(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x1 * x8;
	const FLT x13 = (x7 * x12) + (x6 * x9);
	const FLT x14 = x5 * x7;
	const FLT x15 = (x3 * x12) + (-1 * x9 * x14);
	const FLT x16 = (x1 * x14) + (-1 * x3 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x13 * x13));
	const FLT x18 = x17 * x16;
	const FLT x19 = 2 * x18;
	const FLT x20 = x15 * x17;
	const FLT x21 = x11 * x17;
	const FLT x22 = x13 * x17;
	const FLT x23 = (-1 * x18 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x24 = x23 * x23;
	const FLT x25 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[1]) +
					(x22 * (*_x0).Pose.Rot[3]);
	const FLT x26 = x25 * x25;
	const FLT x27 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[0]) +
					(x22 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x27 * x27;
	const FLT x29 = (x18 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[1]) +
					(x20 * (*_x0).Pose.Rot[2]);
	const FLT x30 = x29 * x29;
	const FLT x31 = x28 + x30 + x24 + x26;
	const FLT x32 = sqrt(x31);
	const FLT x33 = 1. / x32;
	const FLT x34 = 1. / x31;
	const FLT x35 = 1e-10 + (x34 * x26) + (x34 * x28) + (x30 * x34);
	const FLT x36 = sqrt(x35);
	const FLT x37 = atan2(x36, x33 * x23);
	const FLT x38 = 1. / x36;
	const FLT x39 = x33 * x38 * x37;
	const FLT x40 = x39 * x19;
	const FLT x41 = 2 * x22;
	const FLT x42 = x29 * x19;
	const FLT x43 = 2 * x21;
	const FLT x44 = x43 * x27;
	const FLT x45 = 2 * x20;
	const FLT x46 = x45 * x25;
	const FLT x47 = x44 + x46 + (x41 * x23) + x42;
	const FLT x48 = (1. / (x31 * sqrt(x31))) * x38;
	const FLT x49 = x48 * x37;
	const FLT x50 = x49 * x29;
	const FLT x51 = 1. / (x31 * x31);
	const FLT x52 = x51 * x47;
	const FLT x53 = (x44 * x34) + (-1 * x52 * x26) + (-1 * x52 * x28) + (x42 * x34) + (-1 * x52 * x30) + (x46 * x34);
	const FLT x54 = 1.0 / 2.0 * (1. / x23);
	const FLT x55 = x54 * x32 * x38;
	const FLT x56 = x54 * x33 * x36;
	const FLT x57 = x32 * x36 * (1. / x24);
	const FLT x58 = (-1 * x57 * x22) + (x53 * x55) + (x56 * x47);
	const FLT x59 = 2 * x48 * x24 * (1. / (x35 + (x34 * x24)));
	const FLT x60 = x59 * x29;
	const FLT x61 = x33 * (1. / (x35 * sqrt(x35)));
	const FLT x62 = x61 * x37;
	const FLT x63 = x62 * x29;
	const FLT x64 = x41 * x39;
	const FLT x65 = x41 * x29;
	const FLT x66 = x45 * x27;
	const FLT x67 = x43 * x25;
	const FLT x68 = x67 + (-1 * x66) + x65 + (-1 * x23 * x19);
	const FLT x69 = x68 * x51;
	const FLT x70 =
		(-1 * x66 * x34) + (x65 * x34) + (-1 * x69 * x30) + (-1 * x69 * x26) + (-1 * x69 * x28) + (x67 * x34);
	const FLT x71 = (x57 * x18) + (x70 * x55) + (x68 * x56);
	const FLT x72 = x45 * x39;
	const FLT x73 = x45 * x29;
	const FLT x74 = x41 * x27;
	const FLT x75 = x25 * x19;
	const FLT x76 = (-1 * x75) + x74 + (-1 * x43 * x23) + x73;
	const FLT x77 = x76 * x51;
	const FLT x78 =
		(-1 * x77 * x30) + (-1 * x75 * x34) + (x73 * x34) + (-1 * x77 * x26) + (x74 * x34) + (-1 * x77 * x28);
	const FLT x79 = (x57 * x21) + (x78 * x55) + (x76 * x56);
	const FLT x80 = x43 * x39;
	const FLT x81 = x43 * x29;
	const FLT x82 = x27 * x19;
	const FLT x83 = x41 * x25;
	const FLT x84 = x83 + (-1 * x81) + (-1 * x45 * x23) + x82;
	const FLT x85 = x84 * x51;
	const FLT x86 =
		(-1 * x85 * x26) + (-1 * x85 * x28) + (x83 * x34) + (x82 * x34) + (-1 * x85 * x30) + (-1 * x81 * x34);
	const FLT x87 = (x57 * x20) + (x86 * x55) + (x84 * x56);
	const FLT x88 = x59 * x27;
	const FLT x89 = x62 * x27;
	const FLT x90 = x49 * x27;
	const FLT x91 = x37 * x25;
	const FLT x92 = x91 * x48;
	const FLT x93 = x59 * x25;
	const FLT x94 = x61 * x91;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x60 * x58) + x40 + (-1 * x63 * x53) + (-1 * x50 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x70 * x63) + (x71 * x60) + x64 + (-1 * x68 * x50));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(-1 * x76 * x50) + (x79 * x60) + x72 + (-1 * x78 * x63));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(-1 * x84 * x50) + (x87 * x60) + (-1 * x80) + (-1 * x86 * x63));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(-1 * x90 * x47) + (-1 * x89 * x53) + x80 + (x88 * x58));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x89 * x70) + (-1 * x68 * x90) + (-1 * x72) + (x88 * x71));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(-1 * x89 * x78) + (-1 * x76 * x90) + x64 + (x88 * x79));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(-1 * x89 * x86) + (x88 * x87) + x40 + (-1 * x84 * x90));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x58 * x93) + x72 + (-1 * x53 * x94) + (-1 * x92 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x71 * x93) + (-1 * x70 * x94) + x80 + (-1 * x68 * x92));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(-1 * x78 * x94) + (x79 * x93) + (-1 * x40) + (-1 * x76 * x92));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x87 * x93) + (-1 * x86 * x94) + x64 + (-1 * x84 * x92));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae84340>] Jacobian of
// SurviveObsErrorStateErrorModelNoFlip wrt [(*err).AccBias[0], (*err).AccBias[1], (*err).AccBias[2], (*err).Acc[0],
// (*err).Acc[1], (*err).Acc[2], (*err).GyroBias[0], (*err).GyroBias[1], (*err).GyroBias[2], (*err).IMUCorrection[0],
// (*err).IMUCorrection[1], (*err).IMUCorrection[2], (*err).IMUCorrection[3], (*err).Pose.AxisAngleRot[0],
// (*err).Pose.AxisAngleRot[1], (*err).Pose.AxisAngleRot[2], (*err).Pose.Pos[0], (*err).Pose.Pos[1], (*err).Pose.Pos[2],
// (*err).Velocity.AxisAngleRot[0], (*err).Velocity.AxisAngleRot[1], (*err).Velocity.AxisAngleRot[2],
// (*err).Velocity.Pos[0], (*err).Velocity.Pos[1], (*err).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at
// 0x7f5abae0e0d0>]
static inline void SurviveObsErrorStateErrorModelNoFlip_jac_err(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = cos(x0);
	const FLT x9 = cos(x4);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + x7;
	const FLT x14 = 0.5 * x12;
	const FLT x15 = 0.5 * x7;
	const FLT x16 = x15 + x14;
	const FLT x17 = x3 * x9;
	const FLT x18 = x1 * x17;
	const FLT x19 = x5 * x10;
	const FLT x20 = x8 * x19;
	const FLT x21 = x20 + (-1 * x18);
	const FLT x22 = 2 * x21;
	const FLT x23 = x6 * x8;
	const FLT x24 = 0.5 * x23;
	const FLT x25 = x1 * x11;
	const FLT x26 = -0.5 * x25;
	const FLT x27 = x26 + (-1 * x24);
	const FLT x28 = x1 * x19;
	const FLT x29 = x8 * x17;
	const FLT x30 = x29 + (-1 * x28);
	const FLT x31 = 2 * x30;
	const FLT x32 = 0.5 * x28;
	const FLT x33 = -1 * x32;
	const FLT x34 = 0.5 * x29;
	const FLT x35 = x34 + x33;
	const FLT x36 = x25 + x23;
	const FLT x37 = 2 * x36;
	const FLT x38 = 0.5 * x20;
	const FLT x39 = -1 * x38;
	const FLT x40 = 0.5 * x18;
	const FLT x41 = x40 + x39;
	const FLT x42 = 2 * x13;
	const FLT x43 = (x21 * x21) + (x30 * x30) + (x36 * x36) + (x13 * x13);
	const FLT x44 = 1.0 / 2.0 * (1. / (x43 * sqrt(x43)));
	const FLT x45 = ((x41 * x42) + (x22 * x16) + (x35 * x37) + (x31 * x27)) * x44;
	const FLT x46 = x45 * x13;
	const FLT x47 = 1. / sqrt(x43);
	const FLT x48 = x47 * (*_x0).Pose.Rot[1];
	const FLT x49 = x45 * x21;
	const FLT x50 = x45 * x36;
	const FLT x51 = x47 * x35;
	const FLT x52 = x47 * (*_x0).Pose.Rot[0];
	const FLT x53 = x52 * x16;
	const FLT x54 = x47 * (*_x0).Pose.Rot[2];
	const FLT x55 = x54 * x27;
	const FLT x56 = x45 * x30;
	const FLT x57 = (-1 * x56 * (*_x0).Pose.Rot[2]) + x55 + x53 + (-1 * x46 * (*_x0).Pose.Rot[1]) + (x41 * x48) +
					(-1 * x49 * (*_x0).Pose.Rot[0]) + (x50 * (*_x0).Pose.Rot[3]) + (-1 * x51 * (*_x0).Pose.Rot[3]);
	const FLT x58 = x47 * (*_x0).Pose.Rot[3];
	const FLT x59 = (x52 * x13) + (-1 * x48 * x21) + (-1 * x58 * x30) + (-1 * x54 * x36);
	const FLT x60 = x59 * x59;
	const FLT x61 = (x52 * x30) + (x48 * x36) + (-1 * x54 * x21) + (x58 * x13);
	const FLT x62 = x61 * x61;
	const FLT x63 = (x52 * x36) + (x58 * x21) + (-1 * x48 * x30) + (x54 * x13);
	const FLT x64 = x63 * x63;
	const FLT x65 = (x48 * x13) + (x52 * x21) + (-1 * x58 * x36) + (x54 * x30);
	const FLT x66 = x65 * x65;
	const FLT x67 = x64 + x60 + x66 + x62;
	const FLT x68 = sqrt(x67);
	const FLT x69 = 1. / x68;
	const FLT x70 = 1. / x67;
	const FLT x71 = 1e-10 + (x70 * x64) + (x70 * x62) + (x70 * x66);
	const FLT x72 = sqrt(x71);
	const FLT x73 = 1. / x72;
	const FLT x74 = atan2(x72, x69 * x59);
	const FLT x75 = x73 * x74;
	const FLT x76 = 2 * x75 * x69;
	const FLT x77 = 2 * x65;
	const FLT x78 = x77 * x57;
	const FLT x79 = -1 * x48 * x27;
	const FLT x80 = x58 * x16;
	const FLT x81 = (x54 * x41) + (-1 * x50 * (*_x0).Pose.Rot[0]) + (-1 * x49 * (*_x0).Pose.Rot[3]) + x80 + x79 +
					(x51 * (*_x0).Pose.Rot[0]) + (-1 * x46 * (*_x0).Pose.Rot[2]) + (x56 * (*_x0).Pose.Rot[1]);
	const FLT x82 = 2 * x63;
	const FLT x83 = x81 * x82;
	const FLT x84 = -1 * x48 * x16;
	const FLT x85 = x58 * x27;
	const FLT x86 = (x52 * x41) + (x50 * (*_x0).Pose.Rot[2]) + (-1 * x85) + x84 + (x49 * (*_x0).Pose.Rot[1]) +
					(x56 * (*_x0).Pose.Rot[3]) + (-1 * x46 * (*_x0).Pose.Rot[0]) + (-1 * x51 * (*_x0).Pose.Rot[2]);
	const FLT x87 = 2 * x59;
	const FLT x88 = x54 * x16;
	const FLT x89 = x52 * x27;
	const FLT x90 = x89 + (x49 * (*_x0).Pose.Rot[2]) + (-1 * x46 * (*_x0).Pose.Rot[3]) + (-1 * x88) +
					(-1 * x50 * (*_x0).Pose.Rot[1]) + (x58 * x41) + (-1 * x56 * (*_x0).Pose.Rot[0]) +
					(x51 * (*_x0).Pose.Rot[1]);
	const FLT x91 = 2 * x61;
	const FLT x92 = x91 * x90;
	const FLT x93 = (x86 * x87) + x92 + x78 + x83;
	const FLT x94 = 1. / (x67 * sqrt(x67));
	const FLT x95 = x75 * x94;
	const FLT x96 = x65 * x95;
	const FLT x97 = 1. / (x67 * x67);
	const FLT x98 = x62 * x97;
	const FLT x99 = x93 * x97;
	const FLT x100 = (x83 * x70) + (-1 * x64 * x99) + (-1 * x93 * x98) + (x70 * x92) + (x70 * x78) + (-1 * x66 * x99);
	const FLT x101 = 1.0 / 2.0 * (1. / x59);
	const FLT x102 = x73 * x68 * x101;
	const FLT x103 = x72 * x69 * x101;
	const FLT x104 = x72 * (1. / x60) * x68;
	const FLT x105 = x73 * x60 * x94 * (1. / (x71 + (x70 * x60)));
	const FLT x106 = x105 * ((-1 * x86 * x104) + (x100 * x102) + (x93 * x103));
	const FLT x107 = (1. / (x71 * sqrt(x71))) * x74 * x69;
	const FLT x108 = x65 * x107;
	const FLT x109 = -1 * x34;
	const FLT x110 = x109 + x33;
	const FLT x111 = -1 * x40;
	const FLT x112 = x39 + x111;
	const FLT x113 = (-1 * x15) + x14;
	const FLT x114 = x24 + x26;
	const FLT x115 = ((x42 * x114) + (x37 * x113) + (x22 * x110) + (x31 * x112)) * x44;
	const FLT x116 = x13 * x115;
	const FLT x117 = x115 * (*_x0).Pose.Rot[0];
	const FLT x118 = x36 * x115;
	const FLT x119 = x30 * x115;
	const FLT x120 = (x48 * x114) + (-1 * x119 * (*_x0).Pose.Rot[2]) + (-1 * x116 * (*_x0).Pose.Rot[1]) +
					 (-1 * x21 * x117) + (x54 * x112) + (-1 * x58 * x113) + (x52 * x110) + (x118 * (*_x0).Pose.Rot[3]);
	const FLT x121 = x77 * x120;
	const FLT x122 = x21 * x115;
	const FLT x123 = (x52 * x113) + (-1 * x36 * x117) + (-1 * x122 * (*_x0).Pose.Rot[3]) + (-1 * x48 * x112) +
					 (x58 * x110) + (x54 * x114) + (x119 * (*_x0).Pose.Rot[1]) + (-1 * x116 * (*_x0).Pose.Rot[2]);
	const FLT x124 = x82 * x123;
	const FLT x125 = x36 * (*_x0).Pose.Rot[2];
	const FLT x126 = (x115 * x125) + (-1 * x54 * x113) + (-1 * x48 * x110) + (-1 * x116 * (*_x0).Pose.Rot[0]) +
					 (x122 * (*_x0).Pose.Rot[1]) + (-1 * x58 * x112) + (x52 * x114) + (x119 * (*_x0).Pose.Rot[3]);
	const FLT x127 = (-1 * x54 * x110) + (-1 * x116 * (*_x0).Pose.Rot[3]) + (x58 * x114) +
					 (-1 * x118 * (*_x0).Pose.Rot[1]) + (x48 * x113) + (x122 * (*_x0).Pose.Rot[2]) + (x52 * x112) +
					 (-1 * x30 * x117);
	const FLT x128 = x91 * x127;
	const FLT x129 = (x87 * x126) + x121 + x128 + x124;
	const FLT x130 = x97 * x129;
	const FLT x131 =
		(x70 * x124) + (-1 * x98 * x129) + (x70 * x128) + (x70 * x121) + (-1 * x64 * x130) + (-1 * x66 * x130);
	const FLT x132 = (-1 * x104 * x126) + (x102 * x131) + (x103 * x129);
	const FLT x133 = x77 * x105;
	const FLT x134 = x38 + x111;
	const FLT x135 = x32 + x109;
	const FLT x136 = ((x42 * x135) + (x37 * x134) + (x22 * x27) + (x31 * x16)) * x44;
	const FLT x137 = x21 * x136;
	const FLT x138 = x13 * x136;
	const FLT x139 = x36 * x136;
	const FLT x140 = x30 * x136;
	const FLT x141 = x47 * x135;
	const FLT x142 = x88 + (x141 * (*_x0).Pose.Rot[1]) + x89 + (-1 * x58 * x134) + (-1 * x138 * (*_x0).Pose.Rot[1]) +
					 (-1 * x137 * (*_x0).Pose.Rot[0]) + (x139 * (*_x0).Pose.Rot[3]) + (-1 * x140 * (*_x0).Pose.Rot[2]);
	const FLT x143 = x77 * x142;
	const FLT x144 = (-1 * x138 * (*_x0).Pose.Rot[2]) + (x140 * (*_x0).Pose.Rot[1]) + (x141 * (*_x0).Pose.Rot[2]) +
					 (-1 * x137 * (*_x0).Pose.Rot[3]) + x84 + (-1 * x139 * (*_x0).Pose.Rot[0]) + x85 + (x52 * x134);
	const FLT x145 = x82 * x144;
	const FLT x146 = (x141 * (*_x0).Pose.Rot[0]) + (x137 * (*_x0).Pose.Rot[1]) + (-1 * x138 * (*_x0).Pose.Rot[0]) +
					 (x125 * x136) + (-1 * x54 * x134) + x79 + (x140 * (*_x0).Pose.Rot[3]) + (-1 * x80);
	const FLT x147 = x53 + (-1 * x55) + (x141 * (*_x0).Pose.Rot[3]) + (x48 * x134) + (-1 * x139 * (*_x0).Pose.Rot[1]) +
					 (-1 * x138 * (*_x0).Pose.Rot[3]) + (-1 * x140 * (*_x0).Pose.Rot[0]) + (x137 * (*_x0).Pose.Rot[2]);
	const FLT x148 = x91 * x147;
	const FLT x149 = x148 + (x87 * x146) + x143 + x145;
	const FLT x150 = x97 * x149;
	const FLT x151 =
		(x70 * x148) + (x70 * x143) + (-1 * x66 * x150) + (-1 * x64 * x150) + (-1 * x98 * x149) + (x70 * x145);
	const FLT x152 = (-1 * x104 * x146) + (x102 * x151) + (x103 * x149);
	const FLT x153 = x107 * x151;
	const FLT x154 = x63 * x95;
	const FLT x155 = x100 * x107;
	const FLT x156 = x82 * x105;
	const FLT x157 = x107 * x131;
	const FLT x158 = x61 * x95;
	const FLT x159 = x91 * x105;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x100 * x108) + (x76 * x57) + (x77 * x106) + (-1 * x93 * x96));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x108 * x131) + (x76 * x120) + (x133 * x132) + (-1 * x96 * x129));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x133 * x152) + (-1 * x65 * x153) + (x76 * x142) + (-1 * x96 * x149));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x82 * x106) + (x81 * x76) + (-1 * x63 * x155) + (-1 * x93 * x154));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x63 * x157) + (-1 * x129 * x154) + (x76 * x123) + (x132 * x156));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x149 * x154) + (x152 * x156) + (x76 * x144) + (-1 * x63 * x153));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x91 * x106) + (-1 * x61 * x155) + (x76 * x90) + (-1 * x93 * x158));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x132 * x159) + (-1 * x61 * x157) + (x76 * x127) + (-1 * x129 * x158));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x61 * x153) + (x76 * x147) + (x152 * x159) + (-1 * x149 * x158));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*err).AccBias[0], (*err).AccBias[1],
// (*err).AccBias[2], (*err).Acc[0], (*err).Acc[1], (*err).Acc[2], (*err).GyroBias[0], (*err).GyroBias[1],
// (*err).GyroBias[2], (*err).IMUCorrection[0], (*err).IMUCorrection[1], (*err).IMUCorrection[2],
// (*err).IMUCorrection[3], (*err).Pose.AxisAngleRot[0], (*err).Pose.AxisAngleRot[1], (*err).Pose.AxisAngleRot[2],
// (*err).Pose.Pos[0], (*err).Pose.Pos[1], (*err).Pose.Pos[2], (*err).Velocity.AxisAngleRot[0],
// (*err).Velocity.AxisAngleRot[1], (*err).Velocity.AxisAngleRot[2], (*err).Velocity.Pos[0], (*err).Velocity.Pos[1],
// (*err).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae0e0d0>] Jacobian of
// SurviveObsErrorStateErrorModelNoFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2],
// (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelNoFlip_jac_Z(CnMat *Hx, const SurviveKalmanModel *_x0,
															  const SurviveKalmanErrorModel *err,
															  const SurviveAxisAnglePose *Z) {
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), -1);
}

// Full version Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x4);
	const FLT x8 = cos(x0);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x3 * x7;
	const FLT x13 = (x5 * x10) + (x1 * x12);
	const FLT x14 = x1 * x9;
	const FLT x15 = (x6 * x8) + (-1 * x7 * x14);
	const FLT x16 = (x5 * x14) + (-1 * x8 * x12);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x13 * x13));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * x16;
	const FLT x21 = x13 * x17;
	const FLT x22 =
		(x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x11 * x18) + (x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) + (-1 * x15 * x18) +
					(-1 * x23 * (*_x0).Pose.Rot[2]);
	const FLT x25 =
		(x23 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[2]) + (x13 * x18);
	const FLT x26 = x25 * x25;
	const FLT x27 =
		(-1 * x19 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[0]) + (x18 * x16) + (x21 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x27 * x27;
	const FLT x29 = x22 * x22;
	const FLT x30 = x29 + x28 + (x24 * x24) + x26;
	const FLT x31 = 1. / sqrt(x30);
	const FLT x32 = 1. / x30;
	const FLT x33 = sqrt(1e-10 + (x32 * x26) + (x32 * x28) + (x32 * x29));
	const FLT x34 = 2 * x31 * (1. / x33) * atan2(x33, x31 * x24);
	const FLT x35 = (x34 * x22) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x36 = (x34 * x25) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x37 = (x34 * x27) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x38 = sqrt(1e-10 + (x37 * x37) + (x36 * x36) + (x35 * x35));
	const FLT x39 = (1. / x38) * (-6.28318530717959 + x38);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]) + (*err).Pose.Pos[0];
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]) + (*err).Pose.Pos[1];
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]) + (*err).Pose.Pos[2];
	out->AxisAngleRot[0] = x35 * x39;
	out->AxisAngleRot[1] = x37 * x39;
	out->AxisAngleRot[2] = x36 * x39;
}

// Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae11280>]
static inline void SurviveObsErrorStateErrorModelFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x2);
	const FLT x9 = cos(x4);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x5 * x8;
	const FLT x14 = x3 * x9;
	const FLT x15 = (x1 * x14) + (-1 * x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x11 * x17;
	const FLT x19 = 2 * x18;
	const FLT x20 = x15 * x17;
	const FLT x21 = x12 * x17;
	const FLT x22 = x17 * x16;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x18 * (*_x0).Pose.Rot[2]);
	const FLT x24 = x23 * x23;
	const FLT x25 = (x18 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[3]);
	const FLT x26 = x25 * x25;
	const FLT x27 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (x22 * (*_x0).Pose.Rot[3]) +
					(x21 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x27 * x27;
	const FLT x29 = (x21 * (*_x0).Pose.Rot[1]) + (-1 * x18 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[0]) +
					(x20 * (*_x0).Pose.Rot[2]);
	const FLT x30 = x29 * x29;
	const FLT x31 = x28 + x30 + x24 + x26;
	const FLT x32 = sqrt(x31);
	const FLT x33 = 1. / x32;
	const FLT x34 = 1. / x31;
	const FLT x35 = 1e-10 + (x34 * x26) + (x34 * x28) + (x30 * x34);
	const FLT x36 = sqrt(x35);
	const FLT x37 = atan2(x36, x33 * x23);
	const FLT x38 = 1. / x36;
	const FLT x39 = x33 * x38 * x37;
	const FLT x40 = x39 * x19;
	const FLT x41 = 1. / (x31 * x31);
	const FLT x42 = 2 * x21;
	const FLT x43 = 2 * x22;
	const FLT x44 = x43 * x29;
	const FLT x45 = x27 * x19;
	const FLT x46 = 2 * x20;
	const FLT x47 = x46 * x25;
	const FLT x48 = x45 + x47 + (x42 * x23) + x44;
	const FLT x49 = x41 * x48;
	const FLT x50 = (-1 * x49 * x30) + (x45 * x34) + (x44 * x34) + (-1 * x49 * x26) + (-1 * x49 * x28) + (x47 * x34);
	const FLT x51 = 1.0 / 2.0 * (1. / x23);
	const FLT x52 = x51 * x32 * x38;
	const FLT x53 = x51 * x33 * x36;
	const FLT x54 = x32 * x36 * (1. / x24);
	const FLT x55 = (x50 * x52) + (-1 * x54 * x21) + (x53 * x48);
	const FLT x56 = (1. / (x31 * sqrt(x31))) * x38;
	const FLT x57 = 2 * x56 * x24 * (1. / (x35 + (x34 * x24)));
	const FLT x58 = x57 * x27;
	const FLT x59 = 1. / (x35 * sqrt(x35));
	const FLT x60 = x37 * x27;
	const FLT x61 = x60 * x33;
	const FLT x62 = x61 * x59;
	const FLT x63 = x60 * x56;
	const FLT x64 = (-1 * x62 * x50) + x40 + (-1 * x63 * x48) + (x58 * x55);
	const FLT x65 = 2 * x38;
	const FLT x66 = (x61 * x65) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x67 = 2 * x66;
	const FLT x68 = x46 * x39;
	const FLT x69 = x37 * x25;
	const FLT x70 = x69 * x56;
	const FLT x71 = x57 * x25;
	const FLT x72 = x69 * x33;
	const FLT x73 = x72 * x59;
	const FLT x74 = (x71 * x55) + (-1 * x73 * x50) + x68 + (-1 * x70 * x48);
	const FLT x75 = (x72 * x65) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x76 = 2 * x75;
	const FLT x77 = x43 * x39;
	const FLT x78 = x37 * x29;
	const FLT x79 = x78 * x56;
	const FLT x80 = x57 * x29;
	const FLT x81 = x78 * x33;
	const FLT x82 = x81 * x59;
	const FLT x83 = (x80 * x55) + (-1 * x82 * x50) + x77 + (-1 * x79 * x48);
	const FLT x84 = (x81 * x65) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x85 = 2 * x84;
	const FLT x86 = (x83 * x85) + (x64 * x67) + (x74 * x76);
	const FLT x87 = 1e-10 + (x66 * x66) + (x75 * x75) + (x84 * x84);
	const FLT x88 = 1.0 / 2.0 * (1. / x87);
	const FLT x89 = x88 * x84;
	const FLT x90 = sqrt(x87);
	const FLT x91 = -6.28318530717959 + x90;
	const FLT x92 = 1.0 / 2.0 * (1. / (x87 * sqrt(x87))) * x91;
	const FLT x93 = x86 * x92;
	const FLT x94 = x91 * (1. / x90);
	const FLT x95 = x42 * x29;
	const FLT x96 = x46 * x27;
	const FLT x97 = x25 * x19;
	const FLT x98 = x97 + (-1 * x96) + x95 + (-1 * x43 * x23);
	const FLT x99 = x98 * x41;
	const FLT x100 =
		(-1 * x96 * x34) + (x95 * x34) + (x97 * x34) + (-1 * x99 * x26) + (-1 * x99 * x28) + (-1 * x99 * x30);
	const FLT x101 = (x54 * x22) + (x52 * x100) + (x53 * x98);
	const FLT x102 = (-1 * x62 * x100) + (-1 * x68) + (-1 * x63 * x98) + (x58 * x101);
	const FLT x103 = (-1 * x73 * x100) + (x71 * x101) + x40 + (-1 * x70 * x98);
	const FLT x104 = x42 * x39;
	const FLT x105 = (-1 * x82 * x100) + x104 + (x80 * x101) + (-1 * x79 * x98);
	const FLT x106 = (x67 * x102) + (x85 * x105) + (x76 * x103);
	const FLT x107 = x92 * x106;
	const FLT x108 = x46 * x29;
	const FLT x109 = x42 * x27;
	const FLT x110 = x43 * x25;
	const FLT x111 = (-1 * x110) + x109 + (-1 * x23 * x19) + x108;
	const FLT x112 = x41 * x111;
	const FLT x113 =
		(-1 * x30 * x112) + (x34 * x109) + (-1 * x26 * x112) + (x34 * x108) + (-1 * x28 * x112) + (-1 * x34 * x110);
	const FLT x114 = x57 * ((x54 * x18) + (x52 * x113) + (x53 * x111));
	const FLT x115 = x56 * x111;
	const FLT x116 = (-1 * x60 * x115) + (-1 * x62 * x113) + x104 + (x27 * x114);
	const FLT x117 = (-1 * x73 * x113) + (x25 * x114) + (-1 * x77) + (-1 * x69 * x115);
	const FLT x118 = (-1 * x78 * x115) + x68 + (x29 * x114) + (-1 * x82 * x113);
	const FLT x119 = (x85 * x118) + (x67 * x116) + (x76 * x117);
	const FLT x120 = x92 * x119;
	const FLT x121 = x29 * x19;
	const FLT x122 = x43 * x27;
	const FLT x123 = x42 * x25;
	const FLT x124 = x123 + (-1 * x46 * x23) + (-1 * x121) + x122;
	const FLT x125 = x56 * x124;
	const FLT x126 = x41 * x124;
	const FLT x127 =
		(-1 * x28 * x126) + (-1 * x26 * x126) + (x34 * x123) + (x34 * x122) + (-1 * x30 * x126) + (-1 * x34 * x121);
	const FLT x128 = (x54 * x20) + (x52 * x127) + (x53 * x124);
	const FLT x129 = x59 * x127;
	const FLT x130 = x33 * x129;
	const FLT x131 = (-1 * x60 * x130) + (x58 * x128) + x77 + (-1 * x60 * x125);
	const FLT x132 = (x71 * x128) + x104 + (-1 * x72 * x129) + (-1 * x69 * x125);
	const FLT x133 = (x80 * x128) + (-1 * x78 * x125) + (-1 * x40) + (-1 * x78 * x130);
	const FLT x134 = (x67 * x131) + (x85 * x133) + (x76 * x132);
	const FLT x135 = x92 * x134;
	const FLT x136 = x88 * x66;
	const FLT x137 = x75 * x92;
	const FLT x138 = x88 * x75;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x83 * x94) + (x89 * x86) + (-1 * x84 * x93));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x94 * x105) + (-1 * x84 * x107) + (x89 * x106));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(-1 * x84 * x120) + (x94 * x118) + (x89 * x119));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x94 * x133) + (-1 * x84 * x135) + (x89 * x134));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(-1 * x66 * x93) + (x86 * x136) + (x64 * x94));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x106 * x136) + (-1 * x66 * x107) + (x94 * x102));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x119 * x136) + (-1 * x66 * x120) + (x94 * x116));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x134 * x136) + (-1 * x66 * x135) + (x94 * x131));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x74 * x94) + (-1 * x86 * x137) + (x86 * x138));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x75 * x107) + (x94 * x103) + (x106 * x138));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x94 * x117) + (-1 * x119 * x137) + (x119 * x138));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x94 * x132) + (-1 * x134 * x137) + (x134 * x138));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae11280>] Jacobian of
// SurviveObsErrorStateErrorModelFlip wrt [(*err).AccBias[0], (*err).AccBias[1], (*err).AccBias[2], (*err).Acc[0],
// (*err).Acc[1], (*err).Acc[2], (*err).GyroBias[0], (*err).GyroBias[1], (*err).GyroBias[2], (*err).IMUCorrection[0],
// (*err).IMUCorrection[1], (*err).IMUCorrection[2], (*err).IMUCorrection[3], (*err).Pose.AxisAngleRot[0],
// (*err).Pose.AxisAngleRot[1], (*err).Pose.AxisAngleRot[2], (*err).Pose.Pos[0], (*err).Pose.Pos[1], (*err).Pose.Pos[2],
// (*err).Velocity.AxisAngleRot[0], (*err).Velocity.AxisAngleRot[1], (*err).Velocity.AxisAngleRot[2],
// (*err).Velocity.Pos[0], (*err).Velocity.Pos[1], (*err).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at
// 0x7f5abae11fd0>]
static inline void SurviveObsErrorStateErrorModelFlip_jac_err(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = sin(x0);
	const FLT x9 = cos(x4);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + x7;
	const FLT x14 = x6 * x8;
	const FLT x15 = x1 * x11;
	const FLT x16 = x15 + x14;
	const FLT x17 = x3 * x9;
	const FLT x18 = x8 * x17;
	const FLT x19 = x5 * x10;
	const FLT x20 = x1 * x19;
	const FLT x21 = x20 + (-1 * x18);
	const FLT x22 = x8 * x19;
	const FLT x23 = x1 * x17;
	const FLT x24 = x23 + (-1 * x22);
	const FLT x25 = (x24 * x24) + (x13 * x13) + (x21 * x21) + (x16 * x16);
	const FLT x26 = 1. / sqrt(x25);
	const FLT x27 = x26 * (*_x0).Pose.Rot[3];
	const FLT x28 = x21 * x26;
	const FLT x29 = x26 * (*_x0).Pose.Rot[0];
	const FLT x30 = x26 * (*_x0).Pose.Rot[1];
	const FLT x31 = (x30 * x16) + (x24 * x29) + (-1 * x27 * x13) + (x28 * (*_x0).Pose.Rot[2]);
	const FLT x32 = 2 * x31;
	const FLT x33 = x26 * (*_x0).Pose.Rot[2];
	const FLT x34 = (-1 * x30 * x24) + (-1 * x28 * (*_x0).Pose.Rot[3]) + (x29 * x16) + (-1 * x33 * x13);
	const FLT x35 = x34 * x34;
	const FLT x36 = x24 * x26;
	const FLT x37 = (x21 * x29) + (-1 * x36 * (*_x0).Pose.Rot[2]) + (x30 * x13) + (x27 * x16);
	const FLT x38 = x37 * x37;
	const FLT x39 = (-1 * x30 * x21) + (x29 * x13) + (x36 * (*_x0).Pose.Rot[3]) + (x33 * x16);
	const FLT x40 = x39 * x39;
	const FLT x41 = x31 * x31;
	const FLT x42 = x40 + x41 + x35 + x38;
	const FLT x43 = sqrt(x42);
	const FLT x44 = 1. / x43;
	const FLT x45 = 1. / x42;
	const FLT x46 = 1e-10 + (x40 * x45) + (x45 * x38) + (x41 * x45);
	const FLT x47 = sqrt(x46);
	const FLT x48 = 1. / x47;
	const FLT x49 = atan2(x47, x44 * x34);
	const FLT x50 = x48 * x49;
	const FLT x51 = x50 * x44;
	const FLT x52 = (x51 * x32) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x53 = 0.5 * x7;
	const FLT x54 = -0.5 * x12;
	const FLT x55 = x54 + (-1 * x53);
	const FLT x56 = -1 * x55 * x30;
	const FLT x57 = 0.5 * x15;
	const FLT x58 = 0.5 * x14;
	const FLT x59 = x58 + x57;
	const FLT x60 = 2 * x59;
	const FLT x61 = 2 * x55;
	const FLT x62 = 0.5 * x18;
	const FLT x63 = -1 * x62;
	const FLT x64 = 0.5 * x20;
	const FLT x65 = x64 + x63;
	const FLT x66 = 2 * x13;
	const FLT x67 = 0.5 * x23;
	const FLT x68 = -1 * x67;
	const FLT x69 = 0.5 * x22;
	const FLT x70 = x69 + x68;
	const FLT x71 = 2 * x16;
	const FLT x72 = 1.0 / 2.0 * (1. / (x25 * sqrt(x25)));
	const FLT x73 = ((x71 * x70) + (x65 * x66) + (x60 * x24) + (x61 * x21)) * x72;
	const FLT x74 = x73 * x13;
	const FLT x75 = x21 * (*_x0).Pose.Rot[1];
	const FLT x76 = x73 * x24;
	const FLT x77 = x73 * x16;
	const FLT x78 = x59 * x27;
	const FLT x79 = x70 * x26;
	const FLT x80 = x65 * x26;
	const FLT x81 = (x79 * (*_x0).Pose.Rot[2]) + (-1 * x74 * (*_x0).Pose.Rot[0]) + (-1 * x76 * (*_x0).Pose.Rot[3]) +
					(x80 * (*_x0).Pose.Rot[0]) + x56 + x78 + (x73 * x75) + (-1 * x77 * (*_x0).Pose.Rot[2]);
	const FLT x82 = 2 * x51;
	const FLT x83 = x59 * x29;
	const FLT x84 = x55 * x33;
	const FLT x85 = x73 * (*_x0).Pose.Rot[2];
	const FLT x86 = x84 + x83 + (x79 * (*_x0).Pose.Rot[1]) + (-1 * x77 * (*_x0).Pose.Rot[1]) +
					(-1 * x76 * (*_x0).Pose.Rot[0]) + (-1 * x85 * x21) + (x74 * (*_x0).Pose.Rot[3]) +
					(-1 * x80 * (*_x0).Pose.Rot[3]);
	const FLT x87 = x86 * x32;
	const FLT x88 = 2 * x39;
	const FLT x89 = x81 * x88;
	const FLT x90 = -1 * x59 * x30;
	const FLT x91 = x73 * x21;
	const FLT x92 = x55 * x27;
	const FLT x93 = (x70 * x29) + (x74 * (*_x0).Pose.Rot[2]) + (-1 * x92) + x90 + (-1 * x77 * (*_x0).Pose.Rot[0]) +
					(x91 * (*_x0).Pose.Rot[3]) + (x76 * (*_x0).Pose.Rot[1]) + (-1 * x80 * (*_x0).Pose.Rot[2]);
	const FLT x94 = 2 * x34;
	const FLT x95 = x59 * x33;
	const FLT x96 = x55 * x29;
	const FLT x97 = (x85 * x24) + (-1 * x77 * (*_x0).Pose.Rot[3]) + (-1 * x91 * (*_x0).Pose.Rot[0]) + x96 +
					(x79 * (*_x0).Pose.Rot[3]) + (x80 * (*_x0).Pose.Rot[1]) + (-1 * x74 * (*_x0).Pose.Rot[1]) +
					(-1 * x95);
	const FLT x98 = 2 * x37;
	const FLT x99 = x98 * x97;
	const FLT x100 = x99 + (x93 * x94) + x87 + x89;
	const FLT x101 = 1. / (x42 * sqrt(x42));
	const FLT x102 = x50 * x101;
	const FLT x103 = x39 * x102;
	const FLT x104 = 1. / (x42 * x42);
	const FLT x105 = x100 * x104;
	const FLT x106 = x41 * x104;
	const FLT x107 =
		(x89 * x45) + (-1 * x40 * x105) + (x99 * x45) + (x87 * x45) + (-1 * x38 * x105) + (-1 * x100 * x106);
	const FLT x108 = 1.0 / 2.0 * (1. / x34);
	const FLT x109 = x43 * x48 * x108;
	const FLT x110 = x44 * x47 * x108;
	const FLT x111 = x43 * x47 * (1. / x35);
	const FLT x112 = (x109 * x107) + (-1 * x93 * x111) + (x100 * x110);
	const FLT x113 = x48 * x35 * x101 * (1. / (x46 + (x45 * x35)));
	const FLT x114 = x88 * x113;
	const FLT x115 = x44 * (1. / (x46 * sqrt(x46))) * x49;
	const FLT x116 = x107 * x115;
	const FLT x117 = (-1 * x39 * x116) + (x112 * x114) + (x81 * x82) + (-1 * x100 * x103);
	const FLT x118 = (x88 * x51) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x119 = 2 * x118;
	const FLT x120 = x37 * x102;
	const FLT x121 = x98 * x113;
	const FLT x122 = (x112 * x121) + (-1 * x37 * x116) + (x82 * x97) + (-1 * x100 * x120);
	const FLT x123 = (x51 * x98) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x124 = 2 * x123;
	const FLT x125 = x31 * x102;
	const FLT x126 = x32 * x113;
	const FLT x127 = (x112 * x126) + (-1 * x31 * x116) + (x82 * x86) + (-1 * x100 * x125);
	const FLT x128 = 2 * x52;
	const FLT x129 = (x128 * x127) + (x119 * x117) + (x124 * x122);
	const FLT x130 = 1e-10 + (x118 * x118) + (x123 * x123) + (x52 * x52);
	const FLT x131 = sqrt(x130);
	const FLT x132 = -6.28318530717959 + x131;
	const FLT x133 = 1.0 / 2.0 * (1. / (x130 * sqrt(x130))) * x132;
	const FLT x134 = x129 * x133;
	const FLT x135 = 1.0 / 2.0 * (1. / x130);
	const FLT x136 = x52 * x135;
	const FLT x137 = (1. / x131) * x132;
	const FLT x138 = -1 * x69;
	const FLT x139 = x68 + x138;
	const FLT x140 = -1 * x64;
	const FLT x141 = x140 + x63;
	const FLT x142 = (-1 * x58) + x57;
	const FLT x143 = x53 + x54;
	const FLT x144 = ((x71 * x143) + (x66 * x142) + (2 * x24 * x141) + (2 * x21 * x139)) * x72;
	const FLT x145 = x24 * x144;
	const FLT x146 = x21 * x144;
	const FLT x147 = x26 * x141;
	const FLT x148 = x16 * x144;
	const FLT x149 = x13 * x144;
	const FLT x150 = (x29 * x142) + (x33 * x143) + (-1 * x149 * (*_x0).Pose.Rot[0]) + (x147 * (*_x0).Pose.Rot[3]) +
					 (-1 * x30 * x139) + (x146 * (*_x0).Pose.Rot[1]) + (-1 * x145 * (*_x0).Pose.Rot[3]) +
					 (-1 * x148 * (*_x0).Pose.Rot[2]);
	const FLT x151 = x144 * (*_x0).Pose.Rot[0];
	const FLT x152 = (x29 * x141) + (x30 * x143) + (x33 * x139) + (-1 * x148 * (*_x0).Pose.Rot[1]) + (-1 * x27 * x142) +
					 (-1 * x146 * (*_x0).Pose.Rot[2]) + (-1 * x24 * x151) + (x149 * (*_x0).Pose.Rot[3]);
	const FLT x153 = x32 * x152;
	const FLT x154 = x88 * x150;
	const FLT x155 = (x29 * x143) + (-1 * x33 * x142) + (x149 * (*_x0).Pose.Rot[2]) + (-1 * x30 * x141) +
					 (x145 * (*_x0).Pose.Rot[1]) + (-1 * x27 * x139) + (-1 * x148 * (*_x0).Pose.Rot[0]) +
					 (x146 * (*_x0).Pose.Rot[3]);
	const FLT x156 = (-1 * x148 * (*_x0).Pose.Rot[3]) + (x27 * x143) + (-1 * x147 * (*_x0).Pose.Rot[2]) + (x29 * x139) +
					 (x30 * x142) + (-1 * x21 * x151) + (-1 * x149 * (*_x0).Pose.Rot[1]) + (x145 * (*_x0).Pose.Rot[2]);
	const FLT x157 = x98 * x156;
	const FLT x158 = (x94 * x155) + x157 + x153 + x154;
	const FLT x159 = x104 * x158;
	const FLT x160 =
		(x45 * x154) + (-1 * x38 * x159) + (-1 * x40 * x159) + (x45 * x153) + (x45 * x157) + (-1 * x106 * x158);
	const FLT x161 = (-1 * x111 * x155) + (x109 * x160) + (x110 * x158);
	const FLT x162 = x115 * x160;
	const FLT x163 = (-1 * x39 * x162) + (-1 * x103 * x158) + (x82 * x150) + (x114 * x161);
	const FLT x164 = (-1 * x37 * x162) + (x121 * x161) + (x82 * x156) + (-1 * x120 * x158);
	const FLT x165 = (-1 * x31 * x162) + (x126 * x161) + (x82 * x152) + (-1 * x125 * x158);
	const FLT x166 = (x128 * x165) + (x119 * x163) + (x124 * x164);
	const FLT x167 = x52 * x133;
	const FLT x168 = x67 + x138;
	const FLT x169 = x62 + x140;
	const FLT x170 = ((x66 * x168) + (x71 * x169) + (x61 * x24) + (x60 * x21)) * x72;
	const FLT x171 = x170 * (*_x0).Pose.Rot[3];
	const FLT x172 = x13 * x170;
	const FLT x173 = x26 * x169;
	const FLT x174 = x16 * x170;
	const FLT x175 = (-1 * x174 * (*_x0).Pose.Rot[2]) + (x173 * (*_x0).Pose.Rot[2]) + (-1 * x24 * x171) + x92 + x90 +
					 (-1 * x172 * (*_x0).Pose.Rot[0]) + (x75 * x170) + (x29 * x168);
	const FLT x176 = x24 * x170;
	const FLT x177 = x21 * x170;
	const FLT x178 = x26 * x168;
	const FLT x179 = x95 + (x173 * (*_x0).Pose.Rot[1]) + (-1 * x178 * (*_x0).Pose.Rot[3]) +
					 (-1 * x174 * (*_x0).Pose.Rot[1]) + x96 + (-1 * x176 * (*_x0).Pose.Rot[0]) +
					 (x172 * (*_x0).Pose.Rot[3]) + (-1 * x177 * (*_x0).Pose.Rot[2]);
	const FLT x180 = x32 * x179;
	const FLT x181 = x88 * x175;
	const FLT x182 = (x176 * (*_x0).Pose.Rot[1]) + (-1 * x174 * (*_x0).Pose.Rot[0]) + (x29 * x169) + x56 +
					 (x21 * x171) + (-1 * x178 * (*_x0).Pose.Rot[2]) + (x172 * (*_x0).Pose.Rot[2]) + (-1 * x78);
	const FLT x183 = x83 + (-1 * x84) + (x173 * (*_x0).Pose.Rot[3]) + (x178 * (*_x0).Pose.Rot[1]) +
					 (-1 * x172 * (*_x0).Pose.Rot[1]) + (-1 * x16 * x171) + (-1 * x177 * (*_x0).Pose.Rot[0]) +
					 (x176 * (*_x0).Pose.Rot[2]);
	const FLT x184 = x98 * x183;
	const FLT x185 = (x94 * x182) + x180 + x184 + x181;
	const FLT x186 = x104 * x185;
	const FLT x187 =
		(-1 * x106 * x185) + (x45 * x184) + (-1 * x40 * x186) + (x45 * x181) + (x45 * x180) + (-1 * x38 * x186);
	const FLT x188 = x115 * x187;
	const FLT x189 = (-1 * x111 * x182) + (x109 * x187) + (x110 * x185);
	const FLT x190 = (x114 * x189) + (-1 * x103 * x185) + (x82 * x175) + (-1 * x39 * x188);
	const FLT x191 = (-1 * x37 * x188) + (x121 * x189) + (x82 * x183) + (-1 * x120 * x185);
	const FLT x192 = (-1 * x31 * x188) + (x82 * x179) + (x126 * x189) + (-1 * x125 * x185);
	const FLT x193 = (x128 * x192) + (x119 * x190) + (x124 * x191);
	const FLT x194 = x118 * x135;
	const FLT x195 = x118 * x133;
	const FLT x196 = x123 * x135;
	const FLT x197 = x123 * x133;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x127 * x137) + (-1 * x52 * x134) + (x129 * x136));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x165 * x137) + (-1 * x167 * x166) + (x166 * x136));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x192 * x137) + (-1 * x167 * x193) + (x193 * x136));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x129 * x194) + (-1 * x118 * x134) + (x117 * x137));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x166 * x194) + (-1 * x166 * x195) + (x163 * x137));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x193 * x194) + (-1 * x193 * x195) + (x190 * x137));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x122 * x137) + (x129 * x196) + (-1 * x123 * x134));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x164 * x137) + (-1 * x166 * x197) + (x166 * x196));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x191 * x137) + (-1 * x197 * x193) + (x196 * x193));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*err).AccBias[0], (*err).AccBias[1],
// (*err).AccBias[2], (*err).Acc[0], (*err).Acc[1], (*err).Acc[2], (*err).GyroBias[0], (*err).GyroBias[1],
// (*err).GyroBias[2], (*err).IMUCorrection[0], (*err).IMUCorrection[1], (*err).IMUCorrection[2],
// (*err).IMUCorrection[3], (*err).Pose.AxisAngleRot[0], (*err).Pose.AxisAngleRot[1], (*err).Pose.AxisAngleRot[2],
// (*err).Pose.Pos[0], (*err).Pose.Pos[1], (*err).Pose.Pos[2], (*err).Velocity.AxisAngleRot[0],
// (*err).Velocity.AxisAngleRot[1], (*err).Velocity.AxisAngleRot[2], (*err).Velocity.Pos[0], (*err).Velocity.Pos[1],
// (*err).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae11fd0>] Jacobian of
// SurviveObsErrorStateErrorModelFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2],
// (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelFlip_jac_Z(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = cos(x0);
	const FLT x9 = sin(x4);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x1 * x9;
	const FLT x13 = x5 * x7;
	const FLT x14 = (x8 * x13) + (x3 * x12);
	const FLT x15 = (x6 * x8) + (-1 * x7 * x12);
	const FLT x16 = (x1 * x13) + (-1 * x3 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * x16;
	const FLT x21 = x14 * x17;
	const FLT x22 =
		(x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x11 * x18) + (x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 = (x21 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[1]) + (-1 * x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x23 * (*_x0).Pose.Rot[2]);
	const FLT x25 =
		(x19 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[2]) + (x23 * (*_x0).Pose.Rot[1]) + (x14 * x18);
	const FLT x26 = x25 * x25;
	const FLT x27 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[3]) +
					(x21 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x27 * x27;
	const FLT x29 = x22 * x22;
	const FLT x30 = x29 + x28 + (x24 * x24) + x26;
	const FLT x31 = 1. / sqrt(x30);
	const FLT x32 = 1. / x30;
	const FLT x33 = sqrt(1e-10 + (x32 * x26) + (x32 * x28) + (x32 * x29));
	const FLT x34 = 2 * x31 * (1. / x33) * atan2(x33, x31 * x24);
	const FLT x35 = (x34 * x22) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x36 = x35 * x35;
	const FLT x37 = (x34 * x25) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x38 = x37 * x37;
	const FLT x39 = (x34 * x27) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x40 = x39 * x39;
	const FLT x41 = 1e-10 + x38 + x40 + x36;
	const FLT x42 = sqrt(x41);
	const FLT x43 = -6.28318530717959 + x42;
	const FLT x44 = (1. / (x41 * sqrt(x41))) * x43;
	const FLT x45 = 1. / x41;
	const FLT x46 = -1 * (1. / x42) * x43;
	const FLT x47 = x44 * x35;
	const FLT x48 = x45 * x35;
	const FLT x49 = (-1 * x48 * x39) + (x47 * x39);
	const FLT x50 = (-1 * x48 * x37) + (x47 * x37);
	const FLT x51 = x37 * x39;
	const FLT x52 = (-1 * x51 * x45) + (x51 * x44);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						x46 + (x44 * x36) + (-1 * x45 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), x49);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT), x50);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), x49);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(x40 * x44) + (-1 * x40 * x45) + x46);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT), x52);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), x50);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), x52);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						x46 + (x44 * x38) + (-1 * x45 * x38));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline FLT SurviveKalmanModel_LightMeas_x_gen1(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x26 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[1]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]);
	const FLT x29 = x25 + (*lh_p).Pos[1] + (2 * ((x28 * (*lh_p).Rot[3]) + (-1 * x27 * (*lh_p).Rot[1])));
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[1]) + (x25 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[3]);
	const FLT x31 = x23 + (2 * ((x30 * (*lh_p).Rot[1]) + (-1 * x28 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = x26 + (2 * ((x27 * (*lh_p).Rot[2]) + (-1 * x30 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x33 = -1 * x31;
	const FLT x34 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x32 * x32) + (x31 * x31))) * x29 * (*bsc0).tilt)) + (-1 * atan2(x32, x33));
	return x34 + (-1 * cos(1.5707963267949 + x34 + (*bsc0).gibpha) * (*bsc0).gibmag) + ((atan2(x29, x33) * atan2(x29, x33)) * (*bsc0).curve);
}

// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abaebbfd0>]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[3];
	const FLT x4 = x3 * (*lh_p).Rot[0];
	const FLT x5 = x4 + x2;
	const FLT x6 = 1.0/2.0 * x0;
	const FLT x7 = dt * dt;
	const FLT x8 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x9 = x8 * x7;
	const FLT x10 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x11 = x7 * x10;
	const FLT x12 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x13 = x7 * x12;
	const FLT x14 = 1e-10 + x9 + x11 + x13;
	const FLT x15 = sqrt(x14);
	const FLT x16 = 0.5 * x15;
	const FLT x17 = sin(x16);
	const FLT x18 = x17 * x17;
	const FLT x19 = 1. / x14;
	const FLT x20 = x19 * x18;
	const FLT x21 = cos(x16);
	const FLT x22 = (x20 * x13) + (x20 * x11) + (x9 * x20) + (x21 * x21);
	const FLT x23 = 1. / sqrt(x22);
	const FLT x24 = (1. / x15) * x17;
	const FLT x25 = dt * x24;
	const FLT x26 = x25 * x23;
	const FLT x27 = x26 * (*_x0).Pose.Rot[0];
	const FLT x28 = x23 * x21;
	const FLT x29 = x28 * (*_x0).Pose.Rot[2];
	const FLT x30 = x26 * (*_x0).Pose.Rot[1];
	const FLT x31 = x23 * (*_x0).Pose.Rot[3];
	const FLT x32 = x31 * x25;
	const FLT x33 = (-1 * x32 * (*_x0).Velocity.AxisAngleRot[0]) + (x30 * (*_x0).Velocity.AxisAngleRot[2]) + (x27 * (*_x0).Velocity.AxisAngleRot[1]) + x29;
	const FLT x34 = x26 * (*_x0).Pose.Rot[2];
	const FLT x35 = x28 * (*_x0).Pose.Rot[0];
	const FLT x36 = (-1 * x30 * (*_x0).Velocity.AxisAngleRot[0]) + x35 + (-1 * x32 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x37 = x28 * (*_x0).Pose.Rot[3];
	const FLT x38 = (x34 * (*_x0).Velocity.AxisAngleRot[0]) + x37 + (x27 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x39 = (-1 * x38 * sensor_pt[1]) + (x33 * sensor_pt[2]) + (x36 * sensor_pt[0]);
	const FLT x40 = x28 * (*_x0).Pose.Rot[1];
	const FLT x41 = (x27 * (*_x0).Velocity.AxisAngleRot[0]) + x40 + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[2]) + (x32 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x42 = (-1 * x41 * sensor_pt[2]) + (x38 * sensor_pt[0]) + (x36 * sensor_pt[1]);
	const FLT x43 = (2 * ((x41 * x42) + (-1 * x33 * x39))) + sensor_pt[2] + (x6 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x44 = (-1 * x33 * sensor_pt[0]) + (x36 * sensor_pt[2]) + (x41 * sensor_pt[1]);
	const FLT x45 = (2 * ((x44 * x33) + (-1 * x42 * x38))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x6 * (*_x0).Acc[0]);
	const FLT x46 = sensor_pt[1] + (2 * ((x38 * x39) + (-1 * x41 * x44))) + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x6 * (*_x0).Acc[1]);
	const FLT x47 = (-1 * x46 * (*lh_p).Rot[3]) + (x43 * (*lh_p).Rot[2]) + (x45 * (*lh_p).Rot[0]);
	const FLT x48 = (x46 * (*lh_p).Rot[0]) + (-1 * x43 * (*lh_p).Rot[1]) + (x45 * (*lh_p).Rot[3]);
	const FLT x49 = (2 * ((x48 * (*lh_p).Rot[1]) + (-1 * x47 * (*lh_p).Rot[2]))) + x43 + (*lh_p).Pos[2];
	const FLT x50 = 1. / x49;
	const FLT x51 = x0 * (*lh_p).Rot[2] * (*lh_p).Rot[0];
	const FLT x52 = x1 * (*lh_p).Rot[3];
	const FLT x53 = x52 + (-1 * x51);
	const FLT x54 = x49 * x49;
	const FLT x55 = 1. / x54;
	const FLT x56 = (x43 * (*lh_p).Rot[0]) + (-1 * x45 * (*lh_p).Rot[2]) + (x46 * (*lh_p).Rot[1]);
	const FLT x57 = (*lh_p).Pos[1] + x46 + (2 * ((x47 * (*lh_p).Rot[3]) + (-1 * x56 * (*lh_p).Rot[1])));
	const FLT x58 = x57 * x55;
	const FLT x59 = x57 * x57;
	const FLT x60 = -1 * x49;
	const FLT x61 = 2 * (1. / (x54 + x59)) * x54 * atan2(x57, x60) * (*bsc0).curve;
	const FLT x62 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x63 = -1 * x0 * x62;
	const FLT x64 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x65 = -1 * x0 * x64;
	const FLT x66 = x65 + x6 + x63;
	const FLT x67 = x45 + (2 * ((x56 * (*lh_p).Rot[2]) + (-1 * x48 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x68 = x67 * x55;
	const FLT x69 = x54 + (x67 * x67);
	const FLT x70 = 1. / x69;
	const FLT x71 = x70 * x54;
	const FLT x72 = 1. / sqrt(1 + (-1 * x70 * x59 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x73 = 2 * x67;
	const FLT x74 = 2 * x49;
	const FLT x75 = 1.0/2.0 * (1. / (x69 * sqrt(x69))) * x57 * (*bsc0).tilt;
	const FLT x76 = (1. / sqrt(x69)) * (*bsc0).tilt;
	const FLT x77 = (-1 * x72 * ((x5 * x76) + (-1 * ((x74 * x53) + (x73 * x66)) * x75))) + (-1 * ((x68 * x53) + (-1 * x66 * x50)) * x71);
	const FLT x78 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * asin(x76 * x57)) + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * atan2(x67, x60)));
	const FLT x79 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x80 = (-1 * x0 * x79) + x6;
	const FLT x81 = x80 + x65;
	const FLT x82 = x3 * (*lh_p).Rot[2];
	const FLT x83 = x1 * (*lh_p).Rot[0];
	const FLT x84 = x83 + x82;
	const FLT x85 = x2 + (-1 * x4);
	const FLT x86 = (-1 * x72 * ((x81 * x76) + (-1 * ((x84 * x74) + (x85 * x73)) * x75))) + (-1 * ((x84 * x68) + (-1 * x85 * x50)) * x71);
	const FLT x87 = x82 + (-1 * x83);
	const FLT x88 = x80 + x63;
	const FLT x89 = x51 + x52;
	const FLT x90 = (-1 * x72 * ((x87 * x76) + (-1 * ((x88 * x74) + (x89 * x73)) * x75))) + (-1 * ((x88 * x68) + (-1 * x89 * x50)) * x71);
	const FLT x91 = 2 * (*lh_p).Rot[1];
	const FLT x92 = x91 * (*lh_p).Rot[2];
	const FLT x93 = 2 * (*lh_p).Rot[3];
	const FLT x94 = x93 * (*lh_p).Rot[0];
	const FLT x95 = x94 + x92;
	const FLT x96 = 2 * (*lh_p).Rot[2];
	const FLT x97 = x96 * (*lh_p).Rot[0];
	const FLT x98 = x91 * (*lh_p).Rot[3];
	const FLT x99 = x98 + (-1 * x97);
	const FLT x100 = 2 * x62;
	const FLT x101 = -1 * x100;
	const FLT x102 = 2 * x64;
	const FLT x103 = 1 + (-1 * x102);
	const FLT x104 = x103 + x101;
	const FLT x105 = (-1 * x72 * ((x76 * x95) + (-1 * x75 * ((x74 * x99) + (x73 * x104))))) + (-1 * x71 * ((x68 * x99) + (-1 * x50 * x104)));
	const FLT x106 = 2 * x79;
	const FLT x107 = -1 * x106;
	const FLT x108 = x103 + x107;
	const FLT x109 = x93 * (*lh_p).Rot[2];
	const FLT x110 = x91 * (*lh_p).Rot[0];
	const FLT x111 = x110 + x109;
	const FLT x112 = x92 + (-1 * x94);
	const FLT x113 = (-1 * x72 * ((x76 * x108) + (-1 * ((x74 * x111) + (x73 * x112)) * x75))) + (-1 * ((x68 * x111) + (-1 * x50 * x112)) * x71);
	const FLT x114 = x109 + (-1 * x110);
	const FLT x115 = 1 + x107 + x101;
	const FLT x116 = x97 + x98;
	const FLT x117 = (-1 * x72 * ((x76 * x114) + (-1 * ((x74 * x115) + (x73 * x116)) * x75))) + (-1 * ((x68 * x115) + (-1 * x50 * x116)) * x71);
	const FLT x118 = x26 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x119 = -1 * x118 * sensor_pt[2];
	const FLT x120 = x26 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x121 = x120 * sensor_pt[0];
	const FLT x122 = x28 * sensor_pt[1];
	const FLT x123 = x122 + x119 + x121;
	const FLT x124 = 2 * x38;
	const FLT x125 = 2 * x42;
	const FLT x126 = -1 * x120 * x125;
	const FLT x127 = x118 * sensor_pt[1];
	const FLT x128 = x26 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x129 = -1 * x128 * sensor_pt[0];
	const FLT x130 = x28 * sensor_pt[2];
	const FLT x131 = x130 + x129;
	const FLT x132 = x131 + x127;
	const FLT x133 = 2 * x33;
	const FLT x134 = 2 * x44;
	const FLT x135 = x128 * x134;
	const FLT x136 = x135 + (-1 * x124 * x123) + (x133 * x132) + x126;
	const FLT x137 = x128 * sensor_pt[2];
	const FLT x138 = x28 * sensor_pt[0];
	const FLT x139 = -1 * x120 * sensor_pt[1];
	const FLT x140 = x139 + x138;
	const FLT x141 = x140 + x137;
	const FLT x142 = x118 * x125;
	const FLT x143 = 2 * x39;
	const FLT x144 = -1 * x128 * x143;
	const FLT x145 = 2 * x41;
	const FLT x146 = x144 + (-1 * x133 * x141) + (x123 * x145) + x142;
	const FLT x147 = x120 * x143;
	const FLT x148 = -1 * x118 * x134;
	const FLT x149 = x148 + x147 + (-1 * x132 * x145) + (x124 * x141);
	const FLT x150 = (x149 * (*lh_p).Rot[1]) + (-1 * x136 * (*lh_p).Rot[2]) + (x146 * (*lh_p).Rot[0]);
	const FLT x151 = (-1 * x149 * (*lh_p).Rot[3]) + (x136 * (*lh_p).Rot[0]) + (x146 * (*lh_p).Rot[2]);
	const FLT x152 = x149 + (-1 * x91 * x150) + (x93 * x151);
	const FLT x153 = (x136 * (*lh_p).Rot[3]) + (-1 * x146 * (*lh_p).Rot[1]) + (x149 * (*lh_p).Rot[0]);
	const FLT x154 = x146 + (-1 * x96 * x151) + (x91 * x153);
	const FLT x155 = x136 + (-1 * x93 * x153) + (x96 * x150);
	const FLT x156 = (-1 * x72 * ((x76 * x152) + (-1 * ((x74 * x154) + (x73 * x155)) * x75))) + (-1 * ((x68 * x154) + (-1 * x50 * x155)) * x71);
	const FLT x157 = x120 * x134;
	const FLT x158 = -1 * x127;
	const FLT x159 = x158 + (-1 * x130) + x129;
	const FLT x160 = x128 * x125;
	const FLT x161 = (-1 * x121) + x119;
	const FLT x162 = x161 + x122;
	const FLT x163 = (x162 * x133) + x160 + x157 + (-1 * x124 * x159);
	const FLT x164 = x128 * sensor_pt[1];
	const FLT x165 = x120 * sensor_pt[2];
	const FLT x166 = x118 * sensor_pt[0];
	const FLT x167 = (-1 * x166) + x164 + x165;
	const FLT x168 = x28 * x125;
	const FLT x169 = (-1 * x147) + x168 + (-1 * x167 * x133) + (x145 * x159);
	const FLT x170 = x28 * x134;
	const FLT x171 = x144 + (-1 * x170) + (-1 * x162 * x145) + (x124 * x167);
	const FLT x172 = (x171 * (*lh_p).Rot[1]) + (-1 * x163 * (*lh_p).Rot[2]) + (x169 * (*lh_p).Rot[0]);
	const FLT x173 = 2 * ((-1 * x171 * (*lh_p).Rot[3]) + (x163 * (*lh_p).Rot[0]) + (x169 * (*lh_p).Rot[2]));
	const FLT x174 = x171 + (-1 * x91 * x172) + (x173 * (*lh_p).Rot[3]);
	const FLT x175 = (x163 * (*lh_p).Rot[3]) + (-1 * x169 * (*lh_p).Rot[1]) + (x171 * (*lh_p).Rot[0]);
	const FLT x176 = x169 + (-1 * x173 * (*lh_p).Rot[2]) + (x91 * x175);
	const FLT x177 = x163 + (-1 * x93 * x175) + (x96 * x172);
	const FLT x178 = (-1 * x72 * ((x76 * x174) + (-1 * ((x74 * x176) + (x73 * x177)) * x75))) + (-1 * ((x68 * x176) + (-1 * x50 * x177)) * x71);
	const FLT x179 = -1 * x137;
	const FLT x180 = x139 + (-1 * x138) + x179;
	const FLT x181 = x131 + x158;
	const FLT x182 = x118 * x143;
	const FLT x183 = x182 + (x124 * x181) + (-1 * x180 * x145) + x157;
	const FLT x184 = x28 * x143;
	const FLT x185 = 2 * ((-1 * x164) + x165 + x166);
	const FLT x186 = x126 + (x41 * x185) + (-1 * x181 * x133) + (-1 * x184);
	const FLT x187 = (x180 * x133) + x170 + (-1 * x142) + (-1 * x38 * x185);
	const FLT x188 = (x187 * (*lh_p).Rot[3]) + (x183 * (*lh_p).Rot[0]) + (-1 * x186 * (*lh_p).Rot[1]);
	const FLT x189 = (x183 * (*lh_p).Rot[1]) + (x186 * (*lh_p).Rot[0]) + (-1 * x187 * (*lh_p).Rot[2]);
	const FLT x190 = (-1 * x93 * x188) + x187 + (x96 * x189);
	const FLT x191 = (x187 * (*lh_p).Rot[0]) + (-1 * x183 * (*lh_p).Rot[3]) + (x186 * (*lh_p).Rot[2]);
	const FLT x192 = x186 + (-1 * x96 * x191) + (x91 * x188);
	const FLT x193 = (-1 * x91 * x189) + x183 + (x93 * x191);
	const FLT x194 = (-1 * x72 * ((x76 * x193) + (-1 * ((x74 * x192) + (x73 * x190)) * x75))) + (-1 * ((x68 * x192) + (-1 * x50 * x190)) * x71);
	const FLT x195 = x161 + (-1 * x122);
	const FLT x196 = x140 + x179;
	const FLT x197 = x160 + (x196 * x145) + (-1 * x195 * x133) + x182;
	const FLT x198 = 2 * (x164 + x166 + (-1 * x165));
	const FLT x199 = (-1 * x135) + x184 + (-1 * x41 * x198) + (x124 * x195);
	const FLT x200 = (-1 * x168) + x148 + (x33 * x198) + (-1 * x124 * x196);
	const FLT x201 = (-1 * x197 * (*lh_p).Rot[1]) + (x200 * (*lh_p).Rot[3]) + (x199 * (*lh_p).Rot[0]);
	const FLT x202 = (x199 * (*lh_p).Rot[1]) + (-1 * x200 * (*lh_p).Rot[2]) + (x197 * (*lh_p).Rot[0]);
	const FLT x203 = (-1 * x93 * x201) + x200 + (x96 * x202);
	const FLT x204 = (x200 * (*lh_p).Rot[0]) + (-1 * x199 * (*lh_p).Rot[3]) + (x197 * (*lh_p).Rot[2]);
	const FLT x205 = x197 + (-1 * x96 * x204) + (x91 * x201);
	const FLT x206 = x199 + (x93 * x204) + (-1 * x91 * x202);
	const FLT x207 = (-1 * x72 * ((x76 * x206) + (-1 * ((x74 * x205) + (x73 * x203)) * x75))) + (-1 * ((x68 * x205) + (-1 * x50 * x203)) * x71);
	const FLT x208 = -1 * x32;
	const FLT x209 = x23 * (*_x0).Pose.Rot[2];
	const FLT x210 = x7 * x24;
	const FLT x211 = 0.5 * x210;
	const FLT x212 = x211 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x213 = 0.5 * x19;
	const FLT x214 = dt * dt * dt;
	const FLT x215 = x12 * x214;
	const FLT x216 = x213 * x215;
	const FLT x217 = 1.0/2.0 * (1. / (x22 * sqrt(x22)));
	const FLT x218 = x25 * x217;
	const FLT x219 = x218 * (*_x0).Pose.Rot[3];
	const FLT x220 = dt * dt * dt * dt;
	const FLT x221 = x220 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x222 = (1. / (x14 * x14)) * x18;
	const FLT x223 = 2 * x222;
	const FLT x224 = 1.0 * x21;
	const FLT x225 = (1. / (x14 * sqrt(x14))) * x17;
	const FLT x226 = x224 * x225;
	const FLT x227 = x220 * x226;
	const FLT x228 = 2 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x229 = x222 * x228;
	const FLT x230 = x8 * x220;
	const FLT x231 = x210 * x224;
	const FLT x232 = x7 * x20;
	const FLT x233 = x10 * x220;
	const FLT x234 = x233 * x226;
	const FLT x235 = (-1 * x233 * x229) + (x234 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x223 * x221) + (x232 * x228) + (x8 * x227 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x230 * x229) + (x221 * x226) + (-1 * x231 * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x236 = x235 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x237 = x21 * x217;
	const FLT x238 = x237 * x235;
	const FLT x239 = x235 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x240 = x218 * x239;
	const FLT x241 = x23 * (*_x0).Pose.Rot[1];
	const FLT x242 = x214 * x225;
	const FLT x243 = x242 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x244 = x243 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x245 = x241 * x244;
	const FLT x246 = x214 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x247 = x213 * x246 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x248 = x40 * x247;
	const FLT x249 = x218 * (*_x0).Pose.Rot[1];
	const FLT x250 = x235 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x251 = x12 * x242;
	const FLT x252 = x214 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x253 = x35 * x213;
	const FLT x254 = x253 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x255 = x23 * (*_x0).Pose.Rot[0];
	const FLT x256 = x255 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x257 = x242 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x258 = (-1 * x256 * x257) + (x252 * x254);
	const FLT x259 = (x31 * x251) + x258 + (-1 * x250 * x249) + x248 + (-1 * x245) + (-1 * x212 * x209) + (-1 * x240 * (*_x0).Pose.Rot[0]) + (-1 * x37 * x216) + (x219 * x236) + x208 + (-1 * x238 * (*_x0).Pose.Rot[2]);
	const FLT x260 = x213 * x252;
	const FLT x261 = x260 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x262 = x37 * x261;
	const FLT x263 = x257 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x264 = x31 * x263;
	const FLT x265 = x29 * x247;
	const FLT x266 = x209 * x244;
	const FLT x267 = x218 * (*_x0).Pose.Rot[2];
	const FLT x268 = x218 * (*_x0).Pose.Rot[0];
	const FLT x269 = (-1 * x236 * x268) + x27 + (-1 * x264) + (x215 * x253) + (-1 * x238 * (*_x0).Pose.Rot[1]) + x266 + (-1 * x219 * x239) + x262 + (-1 * x212 * x241) + (-1 * x265) + (x267 * x250) + (-1 * x251 * x255);
	const FLT x270 = x31 * x211;
	const FLT x271 = x255 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x272 = (x254 * x246) + (-1 * x271 * x243);
	const FLT x273 = (-1 * x40 * x261) + (x263 * x241);
	const FLT x274 = x272 + x273 + (-1 * x236 * x267) + (x29 * x216) + (-1 * x270 * (*_x0).Velocity.AxisAngleRot[0]) + x34 + (-1 * x209 * x251) + (-1 * x238 * (*_x0).Pose.Rot[3]) + (-1 * x268 * x250) + (x239 * x249);
	const FLT x275 = -1 * x30;
	const FLT x276 = x29 * x260;
	const FLT x277 = x276 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x278 = x209 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x279 = x278 * x257;
	const FLT x280 = (x31 * x244) + (-1 * x37 * x247);
	const FLT x281 = x280 + (x251 * x241) + (-1 * x40 * x216) + (-1 * x211 * x271) + (x219 * x250) + (-1 * x277) + (x240 * (*_x0).Pose.Rot[2]) + x275 + (-1 * x238 * (*_x0).Pose.Rot[0]) + (x236 * x249) + x279;
	const FLT x282 = (x281 * sensor_pt[1]) + (-1 * x269 * sensor_pt[2]) + (x274 * sensor_pt[0]);
	const FLT x283 = (x269 * sensor_pt[1]) + (-1 * x259 * sensor_pt[0]) + (x281 * sensor_pt[2]);
	const FLT x284 = (x283 * x133) + (-1 * x274 * x125) + (x259 * x134) + (-1 * x282 * x124);
	const FLT x285 = (-1 * x274 * sensor_pt[1]) + (x281 * sensor_pt[0]) + (x259 * sensor_pt[2]);
	const FLT x286 = 2 * x269;
	const FLT x287 = (x282 * x145) + (-1 * x285 * x133) + (x42 * x286) + (-1 * x259 * x143);
	const FLT x288 = (x285 * x124) + (-1 * x44 * x286) + (-1 * x283 * x145) + (x274 * x143);
	const FLT x289 = (x288 * (*lh_p).Rot[1]) + (-1 * x284 * (*lh_p).Rot[2]) + (x287 * (*lh_p).Rot[0]);
	const FLT x290 = (x284 * (*lh_p).Rot[0]) + (x287 * (*lh_p).Rot[2]) + (-1 * x288 * (*lh_p).Rot[3]);
	const FLT x291 = x288 + (-1 * x91 * x289) + (x93 * x290);
	const FLT x292 = (x284 * (*lh_p).Rot[3]) + (-1 * x287 * (*lh_p).Rot[1]) + (x288 * (*lh_p).Rot[0]);
	const FLT x293 = (-1 * x96 * x290) + x287 + (x91 * x292);
	const FLT x294 = x284 + (-1 * x93 * x292) + (x96 * x289);
	const FLT x295 = (-1 * x72 * ((x76 * x291) + (-1 * ((x74 * x293) + (x73 * x294)) * x75))) + (-1 * ((x68 * x293) + (-1 * x50 * x294)) * x71);
	const FLT x296 = x220 * x223;
	const FLT x297 = x296 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x298 = 2 * x232;
	const FLT x299 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x300 = (x299 * x227) + (-1 * x10 * x297) + (-1 * x231 * (*_x0).Velocity.AxisAngleRot[1]) + (x234 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x12 * x297) + (x298 * (*_x0).Velocity.AxisAngleRot[1]) + (x12 * x227 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x296 * x299);
	const FLT x301 = x300 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x302 = x218 * x301;
	const FLT x303 = x8 * x242;
	const FLT x304 = x300 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x305 = x300 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x306 = x8 * x214;
	const FLT x307 = x213 * x306;
	const FLT x308 = x237 * x300;
	const FLT x309 = x211 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x310 = (x278 * x243) + (-1 * x276 * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x311 = (-1 * x241 * x309) + x32 + (-1 * x31 * x303) + (x37 * x307) + (-1 * x302 * (*_x0).Pose.Rot[0]) + (-1 * x308 * (*_x0).Pose.Rot[1]) + (-1 * x219 * x305) + x258 + x310 + (x267 * x304);
	const FLT x312 = (x252 * x253 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x256 * x243);
	const FLT x313 = x277 + (-1 * x270 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x279) + (-1 * x268 * x304) + (x249 * x305) + x312 + (-1 * x302 * (*_x0).Pose.Rot[2]) + x275 + (-1 * x40 * x307) + (x241 * x303) + (-1 * x308 * (*_x0).Pose.Rot[3]);
	const FLT x314 = -1 * x34;
	const FLT x315 = x260 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x316 = x37 * x315;
	const FLT x317 = x243 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x318 = x31 * x317;
	const FLT x319 = x273 + x318 + (-1 * x308 * (*_x0).Pose.Rot[0]) + (-1 * x211 * x256) + (x219 * x304) + (x267 * x305) + x314 + (-1 * x316) + (x249 * x301) + (x209 * x303) + (-1 * x29 * x307);
	const FLT x320 = (x319 * sensor_pt[1]) + (-1 * x311 * sensor_pt[2]) + (x313 * sensor_pt[0]);
	const FLT x321 = x241 * x317;
	const FLT x322 = x40 * x315;
	const FLT x323 = x264 + x27 + (-1 * x308 * (*_x0).Pose.Rot[2]) + (x302 * (*_x0).Pose.Rot[3]) + (-1 * x262) + (-1 * x255 * x303) + (-1 * x249 * x304) + (x253 * x306) + (-1 * x268 * x305) + (-1 * x209 * x309) + (-1 * x321) + x322;
	const FLT x324 = (x311 * sensor_pt[1]) + (-1 * x323 * sensor_pt[0]) + (x319 * sensor_pt[2]);
	const FLT x325 = (-1 * x313 * x125) + (x323 * x134) + (-1 * x320 * x124) + (x324 * x133);
	const FLT x326 = (-1 * x313 * sensor_pt[1]) + (x319 * sensor_pt[0]) + (x323 * sensor_pt[2]);
	const FLT x327 = (x320 * x145) + (-1 * x323 * x143) + (-1 * x326 * x133) + (x311 * x125);
	const FLT x328 = (x313 * x143) + (x326 * x124) + (-1 * x324 * x145) + (-1 * x311 * x134);
	const FLT x329 = (x328 * (*lh_p).Rot[1]) + (-1 * x325 * (*lh_p).Rot[2]) + (x327 * (*lh_p).Rot[0]);
	const FLT x330 = (-1 * x328 * (*lh_p).Rot[3]) + (x325 * (*lh_p).Rot[0]) + (x327 * (*lh_p).Rot[2]);
	const FLT x331 = x328 + (-1 * x91 * x329) + (x93 * x330);
	const FLT x332 = (x325 * (*lh_p).Rot[3]) + (-1 * x327 * (*lh_p).Rot[1]) + (x328 * (*lh_p).Rot[0]);
	const FLT x333 = x327 + (-1 * x96 * x330) + (x91 * x332);
	const FLT x334 = (-1 * x93 * x332) + x325 + (x96 * x329);
	const FLT x335 = (-1 * x72 * ((x76 * x331) + (-1 * ((x74 * x333) + (x73 * x334)) * x75))) + (-1 * ((x68 * x333) + (-1 * x50 * x334)) * x71);
	const FLT x336 = x296 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x337 = x224 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x338 = x225 * x337;
	const FLT x339 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x340 = (-1 * x296 * x339) + (x298 * (*_x0).Velocity.AxisAngleRot[2]) + (x12 * x220 * x338) + (x230 * x338) + (-1 * x8 * x336) + (-1 * x12 * x336) + (x227 * x339) + (-1 * x210 * x337);
	const FLT x341 = x340 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x342 = x10 * x214;
	const FLT x343 = x225 * x342;
	const FLT x344 = x23 * x343;
	const FLT x345 = x340 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x346 = x340 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x347 = x237 * x340;
	const FLT x348 = x211 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x349 = x213 * x342;
	const FLT x350 = x272 + (-1 * x29 * x349) + (-1 * x241 * x348) + (-1 * x268 * x346) + (-1 * x219 * x345) + (x267 * x341) + (-1 * x318) + (-1 * x347 * (*_x0).Pose.Rot[1]) + x316 + x314 + (x344 * (*_x0).Pose.Rot[2]);
	const FLT x351 = x267 * x340;
	const FLT x352 = (-1 * x266) + x27 + (-1 * x351 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x347 * (*_x0).Pose.Rot[3]) + (-1 * x268 * x341) + (-1 * x322) + x321 + (x253 * x342) + (x249 * x345) + x265 + (-1 * x344 * (*_x0).Pose.Rot[0]) + (-1 * x270 * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x353 = (-1 * x255 * x348) + (-1 * x347 * (*_x0).Pose.Rot[0]) + x310 + (x219 * x341) + (-1 * x248) + (-1 * x37 * x349) + (x351 * (*_x0).Velocity.AxisAngleRot[1]) + (x249 * x346) + x245 + x208 + (x31 * x343);
	const FLT x354 = (x353 * sensor_pt[1]) + (-1 * x350 * sensor_pt[2]) + (x352 * sensor_pt[0]);
	const FLT x355 = x280 + (-1 * x249 * x341) + (-1 * x241 * x343) + x312 + (-1 * x209 * x348) + (x219 * x346) + (-1 * x268 * x345) + (-1 * x347 * (*_x0).Pose.Rot[2]) + x30 + (x40 * x349);
	const FLT x356 = (x350 * sensor_pt[1]) + (-1 * x355 * sensor_pt[0]) + (x353 * sensor_pt[2]);
	const FLT x357 = (x356 * x133) + (-1 * x354 * x124) + (-1 * x352 * x125) + (x355 * x134);
	const FLT x358 = (x353 * sensor_pt[0]) + (-1 * x352 * sensor_pt[1]) + (x355 * sensor_pt[2]);
	const FLT x359 = 2 * x350;
	const FLT x360 = (x42 * x359) + (-1 * x358 * x133) + (-1 * x355 * x143) + (x354 * x145);
	const FLT x361 = (-1 * x44 * x359) + (x358 * x124) + (-1 * x356 * x145) + (x352 * x143);
	const FLT x362 = (-1 * x357 * (*lh_p).Rot[2]) + (x361 * (*lh_p).Rot[1]) + (x360 * (*lh_p).Rot[0]);
	const FLT x363 = (-1 * x361 * (*lh_p).Rot[3]) + (x357 * (*lh_p).Rot[0]) + (x360 * (*lh_p).Rot[2]);
	const FLT x364 = x361 + (-1 * x91 * x362) + (x93 * x363);
	const FLT x365 = (x357 * (*lh_p).Rot[3]) + (-1 * x360 * (*lh_p).Rot[1]) + (x361 * (*lh_p).Rot[0]);
	const FLT x366 = x360 + (x91 * x365) + (-1 * x96 * x363);
	const FLT x367 = x357 + (-1 * x93 * x365) + (x96 * x362);
	const FLT x368 = (-1 * x72 * ((x76 * x364) + (-1 * ((x74 * x366) + (x73 * x367)) * x75))) + (-1 * ((x68 * x366) + (-1 * x50 * x367)) * x71);
	const FLT x369 = dt * x92;
	const FLT x370 = dt * x94;
	const FLT x371 = x370 + x369;
	const FLT x372 = dt * x97;
	const FLT x373 = dt * x98;
	const FLT x374 = x373 + (-1 * x372);
	const FLT x375 = -1 * dt * x102;
	const FLT x376 = (-1 * dt * x100) + dt;
	const FLT x377 = x376 + x375;
	const FLT x378 = (-1 * x72 * ((x76 * x371) + (-1 * ((x74 * x374) + (x73 * x377)) * x75))) + (-1 * ((x68 * x374) + (-1 * x50 * x377)) * x71);
	const FLT x379 = -1 * dt * x106;
	const FLT x380 = x379 + x375 + dt;
	const FLT x381 = dt * x109;
	const FLT x382 = dt * x110;
	const FLT x383 = x382 + x381;
	const FLT x384 = x369 + (-1 * x370);
	const FLT x385 = (-1 * x72 * ((x76 * x380) + (-1 * ((x74 * x383) + (x73 * x384)) * x75))) + (-1 * ((x68 * x383) + (-1 * x50 * x384)) * x71);
	const FLT x386 = x381 + (-1 * x382);
	const FLT x387 = x376 + x379;
	const FLT x388 = x372 + x373;
	const FLT x389 = (-1 * x72 * ((x76 * x386) + (-1 * ((x74 * x387) + (x73 * x388)) * x75))) + (-1 * ((x68 * x387) + (-1 * x50 * x388)) * x71);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x77 + (x61 * ((x53 * x58) + (-1 * x5 * x50))) + (x78 * x77));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), (((x84 * x58) + (-1 * x81 * x50)) * x61) + x86 + (x86 * x78));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), (((x88 * x58) + (-1 * x87 * x50)) * x61) + x90 + (x78 * x90));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x105 + (((x58 * x99) + (-1 * x50 * x95)) * x61) + (x78 * x105));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x113 + (((x58 * x111) + (-1 * x50 * x108)) * x61) + (x78 * x113));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x117 + (((x58 * x115) + (-1 * x50 * x114)) * x61) + (x78 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x156 + (((x58 * x154) + (-1 * x50 * x152)) * x61) + (x78 * x156));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (((x58 * x176) + (-1 * x50 * x174)) * x61) + x178 + (x78 * x178));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x194 + (x78 * x194) + (((x58 * x192) + (-1 * x50 * x193)) * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x207 + (x78 * x207) + (((x58 * x205) + (-1 * x50 * x206)) * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x295 + (((x58 * x293) + (-1 * x50 * x291)) * x61) + (x78 * x295));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x335 + (((x58 * x333) + (-1 * x50 * x331)) * x61) + (x78 * x335));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x368 + (((x58 * x366) + (-1 * x50 * x364)) * x61) + (x78 * x368));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x378 + (((x58 * x374) + (-1 * x50 * x371)) * x61) + (x78 * x378));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x385 + (((x58 * x383) + (-1 * x50 * x380)) * x61) + (x78 * x385));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), (((x58 * x387) + (-1 * x50 * x386)) * x61) + x389 + (x78 * x389));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abaebbfd0>]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * dt;
	const FLT x1 = x0 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x2 = x0 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x3 = x0 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x4 = 1e-10 + x3 + x1 + x2;
	const FLT x5 = sqrt(x4);
	const FLT x6 = 0.5 * x5;
	const FLT x7 = cos(x6);
	const FLT x8 = sin(x6);
	const FLT x9 = (1. / x4) * (x8 * x8);
	const FLT x10 = 1. / sqrt((x2 * x9) + (x1 * x9) + (x3 * x9) + (x7 * x7));
	const FLT x11 = x7 * x10;
	const FLT x12 = x11 * (*_x0).Pose.Rot[2];
	const FLT x13 = (1. / x5) * x8 * dt * x10;
	const FLT x14 = x13 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x14 * (*_x0).Pose.Rot[0];
	const FLT x16 = x13 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = x16 * (*_x0).Pose.Rot[3];
	const FLT x18 = x13 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x19 = x18 * (*_x0).Pose.Rot[1];
	const FLT x20 = (-1 * x19) + x17 + (-1 * x12) + (-1 * x15);
	const FLT x21 = x18 * (*_x0).Pose.Rot[2];
	const FLT x22 = x14 * (*_x0).Pose.Rot[3];
	const FLT x23 = x11 * (*_x0).Pose.Rot[1];
	const FLT x24 = x16 * (*_x0).Pose.Rot[0];
	const FLT x25 = x23 + x24 + (-1 * x21) + x22;
	const FLT x26 = 2 * x25;
	const FLT x27 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x11 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[3]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x18 * (*_x0).Pose.Rot[0];
	const FLT x29 = x14 * (*_x0).Pose.Rot[1];
	const FLT x30 = x11 * (*_x0).Pose.Rot[3];
	const FLT x31 = x16 * (*_x0).Pose.Rot[2];
	const FLT x32 = x30 + x28 + x31 + (-1 * x29);
	const FLT x33 = 2 * x32;
	const FLT x34 = x33 * x27;
	const FLT x35 = x34 + (-1 * x20 * x26);
	const FLT x36 = (-1 * x17) + x19 + x15 + x12;
	const FLT x37 = 2 * x36;
	const FLT x38 = x37 * x27;
	const FLT x39 = (x33 * x25) + (-1 * x38);
	const FLT x40 = 1 + (x37 * x20) + (-2 * (x32 * x32));
	const FLT x41 = (x40 * (*lh_p).Rot[0]) + (-1 * x35 * (*lh_p).Rot[3]) + (x39 * (*lh_p).Rot[2]);
	const FLT x42 = 2 * (*lh_p).Rot[3];
	const FLT x43 = (x35 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]) + (x39 * (*lh_p).Rot[0]);
	const FLT x44 = 2 * (*lh_p).Rot[1];
	const FLT x45 = x35 + (x41 * x42) + (-1 * x43 * x44);
	const FLT x46 = 1.0/2.0 * dt * fabs(dt);
	const FLT x47 = (-1 * x32 * sensor_pt[1]) + (x36 * sensor_pt[2]) + (x27 * sensor_pt[0]);
	const FLT x48 = (-1 * x25 * sensor_pt[2]) + (x32 * sensor_pt[0]) + (x27 * sensor_pt[1]);
	const FLT x49 = (2 * ((x48 * x25) + (-1 * x47 * x36))) + sensor_pt[2] + (x46 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x50 = (-1 * x36 * sensor_pt[0]) + (x27 * sensor_pt[2]) + (x25 * sensor_pt[1]);
	const FLT x51 = (2 * ((x50 * x36) + (-1 * x48 * x32))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x46 * (*_x0).Acc[0]);
	const FLT x52 = (2 * ((x47 * x32) + (-1 * x50 * x25))) + (dt * (*_x0).Velocity.Pos[1]) + (*_x0).Pose.Pos[1] + sensor_pt[1] + (x46 * (*_x0).Acc[1]);
	const FLT x53 = (-1 * x52 * (*lh_p).Rot[3]) + (x49 * (*lh_p).Rot[2]) + (x51 * (*lh_p).Rot[0]);
	const FLT x54 = (-1 * x49 * (*lh_p).Rot[1]) + (x52 * (*lh_p).Rot[0]) + (x51 * (*lh_p).Rot[3]);
	const FLT x55 = x49 + (2 * ((x54 * (*lh_p).Rot[1]) + (-1 * x53 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x56 = 1. / x55;
	const FLT x57 = (x40 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1]) + (x35 * (*lh_p).Rot[0]);
	const FLT x58 = 2 * (*lh_p).Rot[2];
	const FLT x59 = x39 + (x57 * x44) + (-1 * x58 * x41);
	const FLT x60 = x55 * x55;
	const FLT x61 = 1. / x60;
	const FLT x62 = (-1 * x51 * (*lh_p).Rot[2]) + (x49 * (*lh_p).Rot[0]) + (x52 * (*lh_p).Rot[1]);
	const FLT x63 = x52 + (*lh_p).Pos[1] + (2 * ((x53 * (*lh_p).Rot[3]) + (-1 * x62 * (*lh_p).Rot[1])));
	const FLT x64 = x63 * x61;
	const FLT x65 = x63 * x63;
	const FLT x66 = -1 * x55;
	const FLT x67 = 2 * (1. / (x60 + x65)) * x60 * atan2(x63, x66) * (*bsc0).curve;
	const FLT x68 = (x58 * x43) + x40 + (-1 * x57 * x42);
	const FLT x69 = x51 + (2 * ((x62 * (*lh_p).Rot[2]) + (-1 * x54 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x70 = x61 * x69;
	const FLT x71 = x60 + (x69 * x69);
	const FLT x72 = 1. / x71;
	const FLT x73 = x72 * x60;
	const FLT x74 = 1. / sqrt(1 + (-1 * x72 * x65 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x75 = 2 * x69;
	const FLT x76 = 2 * x55;
	const FLT x77 = 1.0/2.0 * (1. / (x71 * sqrt(x71))) * x63 * (*bsc0).tilt;
	const FLT x78 = (1. / sqrt(x71)) * (*bsc0).tilt;
	const FLT x79 = (-1 * x74 * ((x78 * x45) + (-1 * ((x76 * x59) + (x75 * x68)) * x77))) + (-1 * ((x70 * x59) + (-1 * x68 * x56)) * x73);
	const FLT x80 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x78 * x63)) + (-1 * atan2(x69, x66)));
	const FLT x81 = (-1 * x30) + (-1 * x31) + x29 + (-1 * x28);
	const FLT x82 = x26 * x27;
	const FLT x83 = x82 + (-1 * x81 * x37);
	const FLT x84 = 1 + (x81 * x33) + (-2 * (x25 * x25));
	const FLT x85 = (x37 * x25) + (-1 * x34);
	const FLT x86 = 2 * ((x85 * (*lh_p).Rot[0]) + (x83 * (*lh_p).Rot[2]) + (-1 * x84 * (*lh_p).Rot[3]));
	const FLT x87 = 2 * ((x84 * (*lh_p).Rot[1]) + (x83 * (*lh_p).Rot[0]) + (-1 * x85 * (*lh_p).Rot[2]));
	const FLT x88 = x84 + (x86 * (*lh_p).Rot[3]) + (-1 * x87 * (*lh_p).Rot[1]);
	const FLT x89 = 2 * ((x85 * (*lh_p).Rot[3]) + (-1 * x83 * (*lh_p).Rot[1]) + (x84 * (*lh_p).Rot[0]));
	const FLT x90 = x83 + (x89 * (*lh_p).Rot[1]) + (-1 * x86 * (*lh_p).Rot[2]);
	const FLT x91 = x85 + (x87 * (*lh_p).Rot[2]) + (-1 * x89 * (*lh_p).Rot[3]);
	const FLT x92 = (-1 * x74 * ((x88 * x78) + (-1 * ((x76 * x90) + (x75 * x91)) * x77))) + (-1 * ((x70 * x90) + (-1 * x56 * x91)) * x73);
	const FLT x93 = (x32 * x37) + (-1 * x82);
	const FLT x94 = x21 + (-1 * x24) + (-1 * x22) + (-1 * x23);
	const FLT x95 = 1 + (x94 * x26) + (-2 * (x36 * x36));
	const FLT x96 = x38 + (-1 * x94 * x33);
	const FLT x97 = (x96 * (*lh_p).Rot[0]) + (-1 * x93 * (*lh_p).Rot[3]) + (x95 * (*lh_p).Rot[2]);
	const FLT x98 = (x93 * (*lh_p).Rot[1]) + (-1 * x96 * (*lh_p).Rot[2]) + (x95 * (*lh_p).Rot[0]);
	const FLT x99 = x93 + (x97 * x42) + (-1 * x98 * x44);
	const FLT x100 = (x96 * (*lh_p).Rot[3]) + (-1 * x95 * (*lh_p).Rot[1]) + (x93 * (*lh_p).Rot[0]);
	const FLT x101 = x95 + (x44 * x100) + (-1 * x58 * x97);
	const FLT x102 = x96 + (x58 * x98) + (-1 * x42 * x100);
	const FLT x103 = (-1 * x74 * ((x78 * x99) + (-1 * ((x76 * x101) + (x75 * x102)) * x77))) + (-1 * ((x70 * x101) + (-1 * x56 * x102)) * x73);
	cnMatrixOptionalSet(Hx, 0, 0, x79 + (((x64 * x59) + (-1 * x56 * x45)) * x67) + (x80 * x79));
	cnMatrixOptionalSet(Hx, 0, 1, x92 + (((x64 * x90) + (-1 * x88 * x56)) * x67) + (x80 * x92));
	cnMatrixOptionalSet(Hx, 0, 2, x103 + (x67 * ((x64 * x101) + (-1 * x56 * x99))) + (x80 * x103));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * (*_x0).Velocity.Pos[2];
	const FLT x1 = 1.0/2.0 * dt * fabs(dt);
	const FLT x2 = x1 * (*_x0).Acc[2];
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = x14 * (*_x0).Pose.Rot[2];
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x20 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x22 = (x20 * (*_x0).Velocity.AxisAngleRot[0]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x23 = (x19 * sensor_pt[2]) + (-1 * x22 * sensor_pt[1]) + (x21 * sensor_pt[0]);
	const FLT x24 = (-1 * x20 * (*_x0).Velocity.AxisAngleRot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x25 = (x22 * sensor_pt[0]) + (-1 * x24 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x26 = 2 * ((x24 * x25) + (-1 * x23 * x19));
	const FLT x27 = sensor_pt[2] + x2 + x0 + x26 + (*_x0).Pose.Pos[2];
	const FLT x28 = x27 * (*lh_p).Rot[2];
	const FLT x29 = dt * (*_x0).Velocity.Pos[0];
	const FLT x30 = x1 * (*_x0).Acc[0];
	const FLT x31 = (-1 * x19 * sensor_pt[0]) + (x21 * sensor_pt[2]) + (x24 * sensor_pt[1]);
	const FLT x32 = 2 * ((x31 * x19) + (-1 * x25 * x22));
	const FLT x33 = x32 + (*_x0).Pose.Pos[0] + x29 + sensor_pt[0] + x30;
	const FLT x34 = x33 * (*lh_p).Rot[0];
	const FLT x35 = x1 * (*_x0).Acc[1];
	const FLT x36 = dt * (*_x0).Velocity.Pos[1];
	const FLT x37 = 2 * ((x22 * x23) + (-1 * x31 * x24));
	const FLT x38 = x37 + x36 + (*_x0).Pose.Pos[1] + sensor_pt[1] + x35;
	const FLT x39 = x38 * (*lh_p).Rot[3];
	const FLT x40 = (-1 * x39) + x28 + x34;
	const FLT x41 = x38 * (*lh_p).Rot[0];
	const FLT x42 = x33 * (*lh_p).Rot[3];
	const FLT x43 = x27 * (*lh_p).Rot[1];
	const FLT x44 = (-1 * x43) + x41 + x42;
	const FLT x45 = (2 * ((x44 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]))) + x27 + (*lh_p).Pos[2];
	const FLT x46 = x27 * (*lh_p).Rot[0];
	const FLT x47 = x38 * (*lh_p).Rot[1];
	const FLT x48 = x33 * (*lh_p).Rot[2];
	const FLT x49 = (-1 * x48) + x46 + x47;
	const FLT x50 = x33 + (2 * ((x49 * (*lh_p).Rot[2]) + (-1 * x44 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x51 = x45 * x45;
	const FLT x52 = x51 + (x50 * x50);
	const FLT x53 = 1. / x52;
	const FLT x54 = (*lh_p).Pos[1] + x38 + (2 * ((x40 * (*lh_p).Rot[3]) + (-1 * x49 * (*lh_p).Rot[1])));
	const FLT x55 = x54 * x54;
	const FLT x56 = 1. / sqrt(1 + (-1 * x53 * x55 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x57 = x54 * (1. / (x52 * sqrt(x52))) * (*bsc0).tilt;
	const FLT x58 = x57 * x56;
	const FLT x59 = (x50 * x58) + (x53 * x45);
	const FLT x60 = (1. / sqrt(x52)) * (*bsc0).tilt;
	const FLT x61 = -1 * x45;
	const FLT x62 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x60 * x54)) + (-1 * atan2(x50, x61)));
	const FLT x63 = 2 * x45;
	const FLT x64 = (1. / (x51 + x55)) * atan2(x54, x61) * (*bsc0).curve;
	const FLT x65 = x60 * x56;
	const FLT x66 = 2 * x64;
	const FLT x67 = (x58 * x45) + (-1 * x50 * x53);
	const FLT x68 = 1. / x45;
	const FLT x69 = 2 * x43;
	const FLT x70 = (2 * x42) + (-1 * x69);
	const FLT x71 = 2 * x48;
	const FLT x72 = (2 * x47) + (-1 * x71);
	const FLT x73 = 1. / x51;
	const FLT x74 = x73 * x54;
	const FLT x75 = x66 * x51;
	const FLT x76 = 2 * x39;
	const FLT x77 = (2 * x28) + (-1 * x76);
	const FLT x78 = x73 * x50;
	const FLT x79 = x53 * x51;
	const FLT x80 = 2 * x50;
	const FLT x81 = 1.0/2.0 * x57;
	const FLT x82 = (-1 * x56 * ((x70 * x60) + (-1 * ((x72 * x63) + (x80 * x77)) * x81))) + (-1 * ((x72 * x78) + (-1 * x77 * x68)) * x79);
	const FLT x83 = 2 * x46;
	const FLT x84 = (-1 * x83) + (-4 * x47) + x71;
	const FLT x85 = (-1 * sensor_pt[2]) + (-1 * x2) + (-1 * x26) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x0);
	const FLT x86 = 2 * (*lh_p).Rot[1];
	const FLT x87 = 2 * x41;
	const FLT x88 = x70 + (x85 * x86) + x87;
	const FLT x89 = 2 * (*lh_p).Rot[3];
	const FLT x90 = 2 * (*lh_p).Rot[2];
	const FLT x91 = (x90 * x38) + (-1 * x89 * x85);
	const FLT x92 = (-1 * x56 * ((x84 * x60) + (-1 * ((x88 * x63) + (x80 * x91)) * x81))) + (-1 * ((x88 * x78) + (-1 * x68 * x91)) * x79);
	const FLT x93 = 2 * ((-1 * (*_x0).Pose.Pos[0]) + (-1 * x32) + (-1 * x29) + (-1 * x30) + (-1 * sensor_pt[0]));
	const FLT x94 = (x89 * x27) + (-1 * x93 * (*lh_p).Rot[1]);
	const FLT x95 = 2 * x34;
	const FLT x96 = (-1 * x95) + (-4 * x28) + x76;
	const FLT x97 = x72 + x83 + (x93 * (*lh_p).Rot[2]);
	const FLT x98 = (-1 * x56 * ((x60 * x94) + (-1 * ((x63 * x96) + (x80 * x97)) * x81))) + (-1 * ((x78 * x96) + (-1 * x68 * x97)) * x79);
	const FLT x99 = (-1 * x37) + (-1 * x36) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x35) + (-1 * sensor_pt[1]);
	const FLT x100 = x77 + (x89 * x99) + x95;
	const FLT x101 = (x86 * x33) + (-1 * x90 * x99);
	const FLT x102 = (-1 * x87) + x69 + (-4 * x42);
	const FLT x103 = (-1 * x56 * ((x60 * x100) + (-1 * ((x63 * x101) + (x80 * x102)) * x81))) + (-1 * ((x78 * x101) + (-1 * x68 * x102)) * x79);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), x59 + (x62 * x59));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), (-1 * x65) + (-1 * x63 * x64) + (-1 * x62 * x65));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x67 + (x66 * x54) + (x62 * x67));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x82 + (((x72 * x74) + (-1 * x70 * x68)) * x75) + (x82 * x62));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), x92 + (((x88 * x74) + (-1 * x84 * x68)) * x75) + (x62 * x92));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x98 + (((x74 * x96) + (-1 * x68 * x94)) * x75) + (x62 * x98));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), x103 + (((x74 * x101) + (-1 * x68 * x100)) * x75) + (x62 * x103));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae13ee0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae13fa0>, <cnkalman.codegen.WrapMember object at 0x7f5abae13f40>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae120a0>, <cnkalman.codegen.WrapMember object at 0x7f5abae12040>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae13e50>, <cnkalman.codegen.WrapMember object at 0x7f5abae13d60>]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x26 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[1]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]);
	const FLT x29 = x25 + (*lh_p).Pos[1] + (2 * ((x28 * (*lh_p).Rot[3]) + (-1 * x27 * (*lh_p).Rot[1])));
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[1]) + (x25 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[3]);
	const FLT x31 = x23 + (2 * ((x30 * (*lh_p).Rot[1]) + (-1 * x28 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = -1 * x31;
	const FLT x33 = x26 + (2 * ((x27 * (*lh_p).Rot[2]) + (-1 * x30 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x34 = (x33 * x33) + (x31 * x31);
	const FLT x35 = (1. / sqrt(x34)) * x29;
	const FLT x36 = 1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x35 * (*bsc0).tilt)) + (-1 * atan2(x33, x32));
	const FLT x37 = sin(x36) * (*bsc0).gibmag;
	const FLT x38 = x35 * (1. / sqrt(1 + (-1 * (1. / x34) * (x29 * x29) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), atan2(x29, x32) * atan2(x29, x32));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), -1 * cos(x36));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x37);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1 + (-1 * x37));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x38 * x37) + (-1 * x38));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae13ee0>, <cnkalman.codegen.WrapMember object at 0x7f5abae13fa0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae13f40>, <cnkalman.codegen.WrapMember object at 0x7f5abae120a0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae12040>, <cnkalman.codegen.WrapMember object at 0x7f5abae13e50>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae13d60>]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanModel_LightMeas_y_gen1(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x14 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x11 * x10;
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[3]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (x15 * (*_x0).Pose.Rot[1]) + (x16 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[2]) + (x14 * (*_x0).Pose.Rot[3]);
	const FLT x19 = (x13 * (*_x0).Pose.Rot[1]) + (-1 * x16 * (*_x0).Pose.Rot[3]) + (x14 * (*_x0).Pose.Rot[0]) + (x15 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (-1 * x19 * sensor_pt[0]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[2]) + (x15 * (*_x0).Pose.Rot[3]) + (x13 * (*_x0).Pose.Rot[0]) + (-1 * x14 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x17 * sensor_pt[0]);
	const FLT x23 = (dt * (*_x0).Velocity.Pos[1]) + (2 * ((x22 * x21) + (-1 * x20 * x18))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x24 = (-1 * x18 * sensor_pt[2]) + (x21 * sensor_pt[0]) + (x17 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = sensor_pt[2] + (2 * ((x24 * x18) + (-1 * x22 * x19))) + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[1]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]) + (x23 * (*lh_p).Rot[1]);
	const FLT x29 = (2 * ((x28 * (*lh_p).Rot[2]) + (-1 * x27 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[3]) + (x26 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x31 = x26 + (2 * ((x27 * (*lh_p).Rot[1]) + (-1 * x30 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = -1 * x31;
	const FLT x33 = x23 + (*lh_p).Pos[1] + (2 * ((x30 * (*lh_p).Rot[3]) + (-1 * x28 * (*lh_p).Rot[1])));
	const FLT x34 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x33 * x33) + (x31 * x31))) * x29 * (*bsc0).tilt)) + (-1 * atan2(-1 * x33, x32));
	return ((atan2(x29, x32) * atan2(x29, x32)) * (*bsc0).curve) + x34 + (-1 * cos(1.5707963267949 + x34 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae12a00>]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x1 = dt * fabs(dt);
	const FLT x2 = -1 * x0 * x1;
	const FLT x3 = 1.0/2.0 * x1;
	const FLT x4 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x5 = (-1 * x1 * x4) + x3;
	const FLT x6 = x5 + x2;
	const FLT x7 = dt * dt;
	const FLT x8 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x9 = x8 * x7;
	const FLT x10 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x11 = x7 * x10;
	const FLT x12 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x13 = x7 * x12;
	const FLT x14 = 1e-10 + x9 + x11 + x13;
	const FLT x15 = sqrt(x14);
	const FLT x16 = 0.5 * x15;
	const FLT x17 = sin(x16);
	const FLT x18 = x17 * x17;
	const FLT x19 = 1. / x14;
	const FLT x20 = x19 * x18;
	const FLT x21 = cos(x16);
	const FLT x22 = (x20 * x13) + (x20 * x11) + (x9 * x20) + (x21 * x21);
	const FLT x23 = 1. / sqrt(x22);
	const FLT x24 = x23 * x17;
	const FLT x25 = 1. / x15;
	const FLT x26 = dt * x25;
	const FLT x27 = x24 * x26;
	const FLT x28 = x27 * (*_x0).Pose.Rot[0];
	const FLT x29 = x23 * x21;
	const FLT x30 = x29 * (*_x0).Pose.Rot[2];
	const FLT x31 = x27 * (*_x0).Pose.Rot[1];
	const FLT x32 = x24 * (*_x0).Pose.Rot[3];
	const FLT x33 = x32 * x26;
	const FLT x34 = (-1 * x33 * (*_x0).Velocity.AxisAngleRot[0]) + (x31 * (*_x0).Velocity.AxisAngleRot[2]) + (x28 * (*_x0).Velocity.AxisAngleRot[1]) + x30;
	const FLT x35 = x27 * (*_x0).Pose.Rot[2];
	const FLT x36 = x29 * (*_x0).Pose.Rot[0];
	const FLT x37 = (-1 * x31 * (*_x0).Velocity.AxisAngleRot[0]) + x36 + (-1 * x33 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x35 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x38 = x29 * (*_x0).Pose.Rot[3];
	const FLT x39 = (x35 * (*_x0).Velocity.AxisAngleRot[0]) + x38 + (x28 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x31 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x40 = (-1 * x39 * sensor_pt[1]) + (x34 * sensor_pt[2]) + (x37 * sensor_pt[0]);
	const FLT x41 = x29 * (*_x0).Pose.Rot[1];
	const FLT x42 = (x28 * (*_x0).Velocity.AxisAngleRot[0]) + x41 + (-1 * x35 * (*_x0).Velocity.AxisAngleRot[2]) + (x33 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x43 = (-1 * x42 * sensor_pt[2]) + (x39 * sensor_pt[0]) + (x37 * sensor_pt[1]);
	const FLT x44 = sensor_pt[2] + (x3 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (2 * ((x42 * x43) + (-1 * x40 * x34))) + (*_x0).Pose.Pos[2];
	const FLT x45 = (-1 * x34 * sensor_pt[0]) + (x37 * sensor_pt[2]) + (x42 * sensor_pt[1]);
	const FLT x46 = (*_x0).Pose.Pos[0] + sensor_pt[0] + (2 * ((x45 * x34) + (-1 * x43 * x39))) + (dt * (*_x0).Velocity.Pos[0]) + (x3 * (*_x0).Acc[0]);
	const FLT x47 = (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (2 * ((x40 * x39) + (-1 * x42 * x45))) + (*_x0).Pose.Pos[1] + (x3 * (*_x0).Acc[1]);
	const FLT x48 = (x44 * (*lh_p).Rot[2]) + (-1 * x47 * (*lh_p).Rot[3]) + (x46 * (*lh_p).Rot[0]);
	const FLT x49 = (-1 * x44 * (*lh_p).Rot[1]) + (x47 * (*lh_p).Rot[0]) + (x46 * (*lh_p).Rot[3]);
	const FLT x50 = x44 + (2 * ((x49 * (*lh_p).Rot[1]) + (-1 * x48 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x51 = 1. / x50;
	const FLT x52 = x1 * (*lh_p).Rot[0];
	const FLT x53 = x52 * (*lh_p).Rot[2];
	const FLT x54 = x1 * (*lh_p).Rot[3];
	const FLT x55 = x54 * (*lh_p).Rot[1];
	const FLT x56 = x55 + (-1 * x53);
	const FLT x57 = x50 * x50;
	const FLT x58 = 1. / x57;
	const FLT x59 = (x44 * (*lh_p).Rot[0]) + (-1 * x46 * (*lh_p).Rot[2]) + (x47 * (*lh_p).Rot[1]);
	const FLT x60 = x46 + (2 * ((x59 * (*lh_p).Rot[2]) + (-1 * x49 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x61 = x60 * x58;
	const FLT x62 = -1 * x50;
	const FLT x63 = x60 * x60;
	const FLT x64 = 2 * (1. / (x57 + x63)) * x57 * atan2(x60, x62) * (*bsc0).curve;
	const FLT x65 = x1 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x66 = x54 * (*lh_p).Rot[0];
	const FLT x67 = x66 + x65;
	const FLT x68 = (*lh_p).Pos[1] + x47 + (2 * ((x48 * (*lh_p).Rot[3]) + (-1 * x59 * (*lh_p).Rot[1])));
	const FLT x69 = x68 * x58;
	const FLT x70 = (x68 * x68) + x57;
	const FLT x71 = 1. / x70;
	const FLT x72 = x71 * x57;
	const FLT x73 = 1. / sqrt(1 + (-1 * x71 * x63 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x74 = (1. / sqrt(x70)) * (*bsc0).tilt;
	const FLT x75 = 2 * x68;
	const FLT x76 = 2 * x50;
	const FLT x77 = 1.0/2.0 * (1. / (x70 * sqrt(x70))) * x60 * (*bsc0).tilt;
	const FLT x78 = (-1 * x73 * ((-1 * ((x76 * x56) + (x75 * x67)) * x77) + (x6 * x74))) + (-1 * ((-1 * x69 * x56) + (x67 * x51)) * x72);
	const FLT x79 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x74 * x60)) + (-1 * atan2(-1 * x68, x62)));
	const FLT x80 = x65 + (-1 * x66);
	const FLT x81 = x54 * (*lh_p).Rot[2];
	const FLT x82 = x52 * (*lh_p).Rot[1];
	const FLT x83 = x82 + x81;
	const FLT x84 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x85 = -1 * x1 * x84;
	const FLT x86 = x85 + x2 + x3;
	const FLT x87 = (-1 * x73 * ((-1 * ((x83 * x76) + (x86 * x75)) * x77) + (x80 * x74))) + (-1 * ((-1 * x83 * x69) + (x86 * x51)) * x72);
	const FLT x88 = x53 + x55;
	const FLT x89 = x5 + x85;
	const FLT x90 = x81 + (-1 * x82);
	const FLT x91 = (-1 * x73 * ((-1 * ((x89 * x76) + (x75 * x90)) * x77) + (x88 * x74))) + (-1 * ((-1 * x89 * x69) + (x51 * x90)) * x72);
	const FLT x92 = 2 * x4;
	const FLT x93 = -1 * x92;
	const FLT x94 = 2 * x0;
	const FLT x95 = 1 + (-1 * x94);
	const FLT x96 = x95 + x93;
	const FLT x97 = 2 * (*lh_p).Rot[2];
	const FLT x98 = x97 * (*lh_p).Rot[0];
	const FLT x99 = 2 * (*lh_p).Rot[1];
	const FLT x100 = x99 * (*lh_p).Rot[3];
	const FLT x101 = x100 + (-1 * x98);
	const FLT x102 = x97 * (*lh_p).Rot[1];
	const FLT x103 = 2 * (*lh_p).Rot[3];
	const FLT x104 = x103 * (*lh_p).Rot[0];
	const FLT x105 = x104 + x102;
	const FLT x106 = (-1 * x73 * ((-1 * ((x76 * x101) + (x75 * x105)) * x77) + (x74 * x96))) + (-1 * ((-1 * x69 * x101) + (x51 * x105)) * x72);
	const FLT x107 = x102 + (-1 * x104);
	const FLT x108 = x97 * (*lh_p).Rot[3];
	const FLT x109 = x99 * (*lh_p).Rot[0];
	const FLT x110 = x109 + x108;
	const FLT x111 = 2 * x84;
	const FLT x112 = -1 * x111;
	const FLT x113 = x95 + x112;
	const FLT x114 = (-1 * x73 * ((-1 * ((x76 * x110) + (x75 * x113)) * x77) + (x74 * x107))) + (-1 * ((-1 * x69 * x110) + (x51 * x113)) * x72);
	const FLT x115 = x98 + x100;
	const FLT x116 = 1 + x112 + x93;
	const FLT x117 = x108 + (-1 * x109);
	const FLT x118 = (-1 * x73 * ((-1 * ((x76 * x116) + (x75 * x117)) * x77) + (x74 * x115))) + (-1 * ((-1 * x69 * x116) + (x51 * x117)) * x72);
	const FLT x119 = x27 * sensor_pt[2];
	const FLT x120 = x119 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x121 = x29 * sensor_pt[0];
	const FLT x122 = x27 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x123 = -1 * x122 * sensor_pt[1];
	const FLT x124 = x123 + x121;
	const FLT x125 = x124 + x120;
	const FLT x126 = 2 * x34;
	const FLT x127 = 2 * x43;
	const FLT x128 = x27 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x129 = x128 * x127;
	const FLT x130 = 2 * x40;
	const FLT x131 = x27 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x132 = -1 * x130 * x131;
	const FLT x133 = x122 * sensor_pt[0];
	const FLT x134 = -1 * x119 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x135 = x29 * sensor_pt[1];
	const FLT x136 = x135 + x134;
	const FLT x137 = x136 + x133;
	const FLT x138 = 2 * x42;
	const FLT x139 = (x137 * x138) + x132 + (-1 * x126 * x125) + x129;
	const FLT x140 = -1 * x131 * sensor_pt[0];
	const FLT x141 = x29 * sensor_pt[2];
	const FLT x142 = x128 * sensor_pt[1];
	const FLT x143 = x142 + x140 + x141;
	const FLT x144 = 2 * x39;
	const FLT x145 = x122 * x130;
	const FLT x146 = 2 * x45;
	const FLT x147 = -1 * x128 * x146;
	const FLT x148 = x145 + (-1 * x138 * x143) + x147 + (x125 * x144);
	const FLT x149 = -1 * x122 * x127;
	const FLT x150 = x131 * x146;
	const FLT x151 = x150 + (-1 * x137 * x144) + (x126 * x143) + x149;
	const FLT x152 = (x151 * (*lh_p).Rot[3]) + (-1 * x139 * (*lh_p).Rot[1]) + (x148 * (*lh_p).Rot[0]);
	const FLT x153 = (x148 * (*lh_p).Rot[1]) + (-1 * x151 * (*lh_p).Rot[2]) + (x139 * (*lh_p).Rot[0]);
	const FLT x154 = x151 + (-1 * x103 * x152) + (x97 * x153);
	const FLT x155 = (x151 * (*lh_p).Rot[0]) + (-1 * x148 * (*lh_p).Rot[3]) + (x139 * (*lh_p).Rot[2]);
	const FLT x156 = x139 + (-1 * x97 * x155) + (x99 * x152);
	const FLT x157 = (-1 * x99 * x153) + x148 + (x103 * x155);
	const FLT x158 = (-1 * x73 * ((-1 * ((x76 * x156) + (x75 * x157)) * x77) + (x74 * x154))) + (-1 * ((-1 * x69 * x156) + (x51 * x157)) * x72);
	const FLT x159 = x131 * sensor_pt[1];
	const FLT x160 = x119 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x161 = x128 * sensor_pt[0];
	const FLT x162 = (-1 * x161) + x159 + x160;
	const FLT x163 = (-1 * x142) + x140;
	const FLT x164 = x163 + (-1 * x141);
	const FLT x165 = x29 * x127;
	const FLT x166 = (-1 * x126 * x162) + (-1 * x145) + x165 + (x164 * x138);
	const FLT x167 = -1 * x133;
	const FLT x168 = x136 + x167;
	const FLT x169 = x29 * x146;
	const FLT x170 = (-1 * x169) + x132 + (-1 * x168 * x138) + (x162 * x144);
	const FLT x171 = x122 * x146;
	const FLT x172 = x127 * x131;
	const FLT x173 = (x126 * x168) + x172 + x171 + (-1 * x164 * x144);
	const FLT x174 = (x173 * (*lh_p).Rot[3]) + (-1 * x166 * (*lh_p).Rot[1]) + (x170 * (*lh_p).Rot[0]);
	const FLT x175 = 2 * ((-1 * x173 * (*lh_p).Rot[2]) + (x170 * (*lh_p).Rot[1]) + (x166 * (*lh_p).Rot[0]));
	const FLT x176 = x173 + (-1 * x103 * x174) + (x175 * (*lh_p).Rot[2]);
	const FLT x177 = 2 * ((x173 * (*lh_p).Rot[0]) + (-1 * x170 * (*lh_p).Rot[3]) + (x166 * (*lh_p).Rot[2]));
	const FLT x178 = x166 + (-1 * x177 * (*lh_p).Rot[2]) + (x99 * x174);
	const FLT x179 = x170 + (-1 * x175 * (*lh_p).Rot[1]) + (x177 * (*lh_p).Rot[3]);
	const FLT x180 = (-1 * x73 * ((-1 * ((x76 * x178) + (x75 * x179)) * x77) + (x74 * x176))) + (-1 * ((-1 * x69 * x178) + (x51 * x179)) * x72);
	const FLT x181 = -1 * x120;
	const FLT x182 = x123 + (-1 * x121) + x181;
	const FLT x183 = x163 + x141;
	const FLT x184 = x128 * x130;
	const FLT x185 = (-1 * x182 * x138) + x184 + (x183 * x144) + x171;
	const FLT x186 = x29 * x130;
	const FLT x187 = (-1 * x159) + x160 + x161;
	const FLT x188 = x149 + (x187 * x138) + (-1 * x126 * x183) + (-1 * x186);
	const FLT x189 = (x126 * x182) + x169 + (-1 * x129) + (-1 * x187 * x144);
	const FLT x190 = (x189 * (*lh_p).Rot[3]) + (x185 * (*lh_p).Rot[0]) + (-1 * x188 * (*lh_p).Rot[1]);
	const FLT x191 = (x185 * (*lh_p).Rot[1]) + (x188 * (*lh_p).Rot[0]) + (-1 * x189 * (*lh_p).Rot[2]);
	const FLT x192 = x189 + (-1 * x103 * x190) + (x97 * x191);
	const FLT x193 = (-1 * x185 * (*lh_p).Rot[3]) + (x189 * (*lh_p).Rot[0]) + (x188 * (*lh_p).Rot[2]);
	const FLT x194 = x188 + (-1 * x97 * x193) + (x99 * x190);
	const FLT x195 = x185 + (-1 * x99 * x191) + (x103 * x193);
	const FLT x196 = (-1 * x73 * ((-1 * ((x76 * x194) + (x75 * x195)) * x77) + (x74 * x192))) + (-1 * ((-1 * x69 * x194) + (x51 * x195)) * x72);
	const FLT x197 = x167 + (-1 * x135) + x134;
	const FLT x198 = x124 + x181;
	const FLT x199 = (x198 * x138) + (-1 * x126 * x197) + x172 + x184;
	const FLT x200 = x161 + x159 + (-1 * x160);
	const FLT x201 = (-1 * x150) + x186 + (-1 * x200 * x138) + (x197 * x144);
	const FLT x202 = x147 + (x200 * x126) + (-1 * x165) + (-1 * x198 * x144);
	const FLT x203 = (x202 * (*lh_p).Rot[3]) + (-1 * x199 * (*lh_p).Rot[1]) + (x201 * (*lh_p).Rot[0]);
	const FLT x204 = (x201 * (*lh_p).Rot[1]) + (-1 * x202 * (*lh_p).Rot[2]) + (x199 * (*lh_p).Rot[0]);
	const FLT x205 = x202 + (-1 * x203 * x103) + (x97 * x204);
	const FLT x206 = (x202 * (*lh_p).Rot[0]) + (-1 * x201 * (*lh_p).Rot[3]) + (x199 * (*lh_p).Rot[2]);
	const FLT x207 = (-1 * x97 * x206) + x199 + (x99 * x203);
	const FLT x208 = x201 + (x206 * x103) + (-1 * x99 * x204);
	const FLT x209 = (-1 * x73 * ((-1 * ((x76 * x207) + (x75 * x208)) * x77) + (x74 * x205))) + (-1 * ((-1 * x69 * x207) + (x51 * x208)) * x72);
	const FLT x210 = dt * dt * dt;
	const FLT x211 = 0.5 * x19 * x210;
	const FLT x212 = x12 * x211;
	const FLT x213 = 1.0/2.0 * (1. / (x22 * sqrt(x22)));
	const FLT x214 = x26 * x17 * x213;
	const FLT x215 = x214 * (*_x0).Pose.Rot[0];
	const FLT x216 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x217 = dt * dt * dt * dt;
	const FLT x218 = 2 * (1. / (x14 * x14)) * x18;
	const FLT x219 = x218 * x217;
	const FLT x220 = x8 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x221 = 1. / (x14 * sqrt(x14));
	const FLT x222 = 1.0 * x21 * x17;
	const FLT x223 = x221 * x222;
	const FLT x224 = x217 * x223;
	const FLT x225 = x25 * x222;
	const FLT x226 = x7 * x225;
	const FLT x227 = 2 * x20;
	const FLT x228 = x7 * x227;
	const FLT x229 = x10 * x224;
	const FLT x230 = x10 * x219;
	const FLT x231 = (-1 * x230 * (*_x0).Velocity.AxisAngleRot[0]) + (x229 * (*_x0).Velocity.AxisAngleRot[0]) + (x220 * x224) + (-1 * x219 * x216) + (-1 * x219 * x220) + (x216 * x224) + (x228 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x226 * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x232 = x231 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x233 = x210 * x221;
	const FLT x234 = x12 * x233;
	const FLT x235 = x24 * (*_x0).Pose.Rot[2];
	const FLT x236 = x21 * x213;
	const FLT x237 = x231 * x236;
	const FLT x238 = x231 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x239 = x214 * x238;
	const FLT x240 = 0.5 * x25;
	const FLT x241 = x7 * x240;
	const FLT x242 = x241 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x243 = x214 * (*_x0).Pose.Rot[2];
	const FLT x244 = x231 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x245 = x211 * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x246 = x24 * (*_x0).Pose.Rot[0];
	const FLT x247 = x233 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x248 = x247 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x249 = (-1 * x246 * x248) + (x36 * x245);
	const FLT x250 = x24 * (*_x0).Pose.Rot[1];
	const FLT x251 = x247 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x252 = x211 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x253 = x252 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x254 = (-1 * x41 * x253) + (x250 * x251);
	const FLT x255 = x249 + (-1 * x243 * x244) + x254 + (-1 * x32 * x242) + x35 + (-1 * x215 * x232) + (x30 * x212) + (-1 * x234 * x235) + (-1 * x237 * (*_x0).Pose.Rot[3]) + (x239 * (*_x0).Pose.Rot[1]);
	const FLT x256 = -1 * x33;
	const FLT x257 = x214 * (*_x0).Pose.Rot[3];
	const FLT x258 = x250 * x248;
	const FLT x259 = x41 * x245;
	const FLT x260 = x214 * (*_x0).Pose.Rot[1];
	const FLT x261 = (-1 * x251 * x246) + (x36 * x253);
	const FLT x262 = x261 + (-1 * x232 * x260) + (-1 * x258) + (-1 * x239 * (*_x0).Pose.Rot[0]) + x256 + (-1 * x235 * x242) + (-1 * x237 * (*_x0).Pose.Rot[2]) + (-1 * x38 * x212) + (x32 * x234) + x259 + (x257 * x244);
	const FLT x263 = x30 * x253;
	const FLT x264 = x235 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x265 = x264 * x247;
	const FLT x266 = -1 * x31;
	const FLT x267 = (-1 * x38 * x245) + (x32 * x248);
	const FLT x268 = x267 + (x234 * x250) + (-1 * x41 * x212) + (-1 * x237 * (*_x0).Pose.Rot[0]) + x266 + (x239 * (*_x0).Pose.Rot[2]) + (-1 * x263) + (x232 * x257) + (x260 * x244) + (-1 * x242 * x246) + x265;
	const FLT x269 = (x268 * sensor_pt[0]) + (-1 * x255 * sensor_pt[1]) + (x262 * sensor_pt[2]);
	const FLT x270 = x38 * x253;
	const FLT x271 = x32 * x251;
	const FLT x272 = x30 * x245;
	const FLT x273 = x235 * x248;
	const FLT x274 = (-1 * x215 * x244) + x28 + (-1 * x234 * x246) + (-1 * x272) + (x232 * x243) + x270 + (-1 * x271) + (-1 * x250 * x242) + x273 + (-1 * x237 * (*_x0).Pose.Rot[1]) + (-1 * x238 * x257) + (x36 * x212);
	const FLT x275 = (x268 * sensor_pt[1]) + (-1 * x274 * sensor_pt[2]) + (x255 * sensor_pt[0]);
	const FLT x276 = 2 * x274;
	const FLT x277 = (x43 * x276) + (x275 * x138) + (-1 * x269 * x126) + (-1 * x262 * x130);
	const FLT x278 = (x274 * sensor_pt[1]) + (-1 * x262 * sensor_pt[0]) + (x268 * sensor_pt[2]);
	const FLT x279 = (x269 * x144) + (-1 * x278 * x138) + (-1 * x45 * x276) + (x255 * x130);
	const FLT x280 = (x278 * x126) + (x262 * x146) + (-1 * x255 * x127) + (-1 * x275 * x144);
	const FLT x281 = 2 * ((x280 * (*lh_p).Rot[3]) + (-1 * x277 * (*lh_p).Rot[1]) + (x279 * (*lh_p).Rot[0]));
	const FLT x282 = 2 * ((x279 * (*lh_p).Rot[1]) + (-1 * x280 * (*lh_p).Rot[2]) + (x277 * (*lh_p).Rot[0]));
	const FLT x283 = (-1 * x281 * (*lh_p).Rot[3]) + x280 + (x282 * (*lh_p).Rot[2]);
	const FLT x284 = 2 * ((x280 * (*lh_p).Rot[0]) + (x277 * (*lh_p).Rot[2]) + (-1 * x279 * (*lh_p).Rot[3]));
	const FLT x285 = x277 + (-1 * x284 * (*lh_p).Rot[2]) + (x281 * (*lh_p).Rot[1]);
	const FLT x286 = x279 + (-1 * x282 * (*lh_p).Rot[1]) + (x284 * (*lh_p).Rot[3]);
	const FLT x287 = (-1 * x73 * ((-1 * ((x76 * x285) + (x75 * x286)) * x77) + (x74 * x283))) + (-1 * ((-1 * x69 * x285) + (x51 * x286)) * x72);
	const FLT x288 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x289 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x290 = (-1 * x230 * (*_x0).Velocity.AxisAngleRot[1]) + (x229 * (*_x0).Velocity.AxisAngleRot[1]) + (x289 * x224) + (-1 * x226 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x219 * x288) + (x288 * x224) + (x228 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x219 * x289);
	const FLT x291 = x214 * x290;
	const FLT x292 = x291 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x293 = x291 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x294 = x8 * x233;
	const FLT x295 = x236 * x290;
	const FLT x296 = x291 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x297 = x8 * x211;
	const FLT x298 = x241 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x299 = x246 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x300 = x233 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x301 = x252 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x302 = (x36 * x301) + (-1 * x299 * x300);
	const FLT x303 = x263 + (-1 * x32 * x298) + x302 + (-1 * x265) + (-1 * x296 * (*_x0).Pose.Rot[0]) + (-1 * x292 * (*_x0).Pose.Rot[2]) + (x294 * x250) + (x293 * (*_x0).Pose.Rot[1]) + (-1 * x41 * x297) + x266 + (-1 * x295 * (*_x0).Pose.Rot[3]);
	const FLT x304 = x300 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x305 = x250 * x304;
	const FLT x306 = x41 * x301;
	const FLT x307 = (-1 * x293 * (*_x0).Pose.Rot[0]) + (-1 * x264 * x241) + (-1 * x294 * x246) + (-1 * x270) + (x292 * (*_x0).Pose.Rot[3]) + (-1 * x295 * (*_x0).Pose.Rot[2]) + x28 + (-1 * x305) + (-1 * x296 * (*_x0).Pose.Rot[1]) + x271 + (x36 * x297) + x306;
	const FLT x308 = -1 * x35;
	const FLT x309 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Pose.Rot[2];
	const FLT x310 = x38 * x301;
	const FLT x311 = x32 * x304;
	const FLT x312 = x254 + (x235 * x294) + (-1 * x299 * x241) + x311 + (x291 * x309) + (-1 * x295 * (*_x0).Pose.Rot[0]) + x308 + (-1 * x30 * x297) + (-1 * x310) + (x296 * (*_x0).Pose.Rot[3]) + (x292 * (*_x0).Pose.Rot[1]);
	const FLT x313 = (x312 * sensor_pt[0]) + (-1 * x303 * sensor_pt[1]) + (x307 * sensor_pt[2]);
	const FLT x314 = (-1 * x30 * x301) + (x264 * x300);
	const FLT x315 = (-1 * x295 * (*_x0).Pose.Rot[1]) + (x38 * x297) + x33 + x314 + (-1 * x293 * (*_x0).Pose.Rot[3]) + x261 + (-1 * x298 * x250) + (x296 * (*_x0).Pose.Rot[2]) + (-1 * x292 * (*_x0).Pose.Rot[0]) + (-1 * x32 * x294);
	const FLT x316 = (x312 * sensor_pt[1]) + (-1 * x315 * sensor_pt[2]) + (x303 * sensor_pt[0]);
	const FLT x317 = (x316 * x138) + (-1 * x307 * x130) + (-1 * x313 * x126) + (x315 * x127);
	const FLT x318 = (x315 * sensor_pt[1]) + (-1 * x307 * sensor_pt[0]) + (x312 * sensor_pt[2]);
	const FLT x319 = (x303 * x130) + (x313 * x144) + (-1 * x318 * x138) + (-1 * x315 * x146);
	const FLT x320 = (-1 * x316 * x144) + (-1 * x303 * x127) + (x307 * x146) + (x318 * x126);
	const FLT x321 = (-1 * x317 * (*lh_p).Rot[1]) + (x320 * (*lh_p).Rot[3]) + (x319 * (*lh_p).Rot[0]);
	const FLT x322 = (x319 * (*lh_p).Rot[1]) + (-1 * x320 * (*lh_p).Rot[2]) + (x317 * (*lh_p).Rot[0]);
	const FLT x323 = x320 + (-1 * x321 * x103) + (x97 * x322);
	const FLT x324 = (-1 * x319 * (*lh_p).Rot[3]) + (x320 * (*lh_p).Rot[0]) + (x317 * (*lh_p).Rot[2]);
	const FLT x325 = (-1 * x97 * x324) + x317 + (x99 * x321);
	const FLT x326 = x319 + (-1 * x99 * x322) + (x324 * x103);
	const FLT x327 = (-1 * x73 * ((-1 * ((x76 * x325) + (x75 * x326)) * x77) + (x74 * x323))) + (-1 * ((-1 * x69 * x325) + (x51 * x326)) * x72);
	const FLT x328 = x10 * x211;
	const FLT x329 = x219 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x330 = x224 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x331 = x217 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x332 = x7 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x333 = (-1 * x218 * x331) + (x227 * x332) + (x12 * x330) + (-1 * x8 * x329) + (-1 * x12 * x329) + (x223 * x331) + (x8 * x330) + (-1 * x225 * x332);
	const FLT x334 = x333 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x335 = x333 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x336 = x214 * x335;
	const FLT x337 = x10 * x233;
	const FLT x338 = x236 * x333;
	const FLT x339 = x333 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x340 = x240 * x332;
	const FLT x341 = (-1 * x273) + (-1 * x336 * (*_x0).Pose.Rot[2]) + (-1 * x215 * x339) + (x260 * x334) + (-1 * x306) + x305 + x28 + (-1 * x338 * (*_x0).Pose.Rot[3]) + (-1 * x246 * x337) + (x36 * x328) + (-1 * x32 * x340) + x272;
	const FLT x342 = x267 + x31 + (-1 * x250 * x337) + (x257 * x335) + (-1 * x260 * x339) + (-1 * x215 * x334) + (-1 * x338 * (*_x0).Pose.Rot[2]) + x302 + (-1 * x235 * x340) + (x41 * x328);
	const FLT x343 = x214 * x333;
	const FLT x344 = x314 + (-1 * x338 * (*_x0).Pose.Rot[0]) + (x257 * x339) + (-1 * x246 * x340) + (x32 * x337) + (x260 * x335) + (-1 * x38 * x328) + x256 + x258 + (-1 * x259) + (x309 * x343);
	const FLT x345 = (x344 * sensor_pt[0]) + (-1 * x341 * sensor_pt[1]) + (x342 * sensor_pt[2]);
	const FLT x346 = x249 + (-1 * x250 * x340) + (-1 * x338 * (*_x0).Pose.Rot[1]) + (-1 * x336 * (*_x0).Pose.Rot[0]) + (-1 * x311) + (-1 * x30 * x328) + x310 + (-1 * x257 * x334) + (x235 * x337) + (x343 * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Pose.Rot[2]) + x308;
	const FLT x347 = (-1 * x346 * sensor_pt[2]) + (x344 * sensor_pt[1]) + (x341 * sensor_pt[0]);
	const FLT x348 = 2 * x342;
	const FLT x349 = 2 * x346;
	const FLT x350 = (x43 * x349) + (-1 * x40 * x348) + (-1 * x345 * x126) + (x347 * x138);
	const FLT x351 = (x346 * sensor_pt[1]) + (-1 * x342 * sensor_pt[0]) + (x344 * sensor_pt[2]);
	const FLT x352 = 2 * x341;
	const FLT x353 = (-1 * x45 * x349) + (x345 * x144) + (-1 * x351 * x138) + (x40 * x352);
	const FLT x354 = (x351 * x126) + (-1 * x43 * x352) + (-1 * x347 * x144) + (x45 * x348);
	const FLT x355 = (x354 * (*lh_p).Rot[3]) + (-1 * x350 * (*lh_p).Rot[1]) + (x353 * (*lh_p).Rot[0]);
	const FLT x356 = (-1 * x354 * (*lh_p).Rot[2]) + (x353 * (*lh_p).Rot[1]) + (x350 * (*lh_p).Rot[0]);
	const FLT x357 = x354 + (-1 * x355 * x103) + (x97 * x356);
	const FLT x358 = (x354 * (*lh_p).Rot[0]) + (-1 * x353 * (*lh_p).Rot[3]) + (x350 * (*lh_p).Rot[2]);
	const FLT x359 = x350 + (x99 * x355) + (-1 * x97 * x358);
	const FLT x360 = x353 + (-1 * x99 * x356) + (x358 * x103);
	const FLT x361 = (-1 * x73 * ((-1 * ((x76 * x359) + (x75 * x360)) * x77) + (x74 * x357))) + (-1 * ((-1 * x69 * x359) + (x51 * x360)) * x72);
	const FLT x362 = -1 * dt * x92;
	const FLT x363 = (-1 * dt * x94) + dt;
	const FLT x364 = x363 + x362;
	const FLT x365 = dt * x98;
	const FLT x366 = dt * x100;
	const FLT x367 = x366 + (-1 * x365);
	const FLT x368 = dt * x102;
	const FLT x369 = dt * x104;
	const FLT x370 = x369 + x368;
	const FLT x371 = (-1 * x73 * ((-1 * ((x76 * x367) + (x75 * x370)) * x77) + (x74 * x364))) + (-1 * ((-1 * x69 * x367) + (x51 * x370)) * x72);
	const FLT x372 = x368 + (-1 * x369);
	const FLT x373 = dt * x108;
	const FLT x374 = dt * x109;
	const FLT x375 = x374 + x373;
	const FLT x376 = -1 * dt * x111;
	const FLT x377 = x363 + x376;
	const FLT x378 = (-1 * x73 * ((-1 * ((x76 * x375) + (x75 * x377)) * x77) + (x74 * x372))) + (-1 * ((-1 * x69 * x375) + (x51 * x377)) * x72);
	const FLT x379 = x365 + x366;
	const FLT x380 = x362 + dt + x376;
	const FLT x381 = x373 + (-1 * x374);
	const FLT x382 = (-1 * x73 * ((-1 * ((x76 * x380) + (x75 * x381)) * x77) + (x74 * x379))) + (-1 * ((-1 * x69 * x380) + (x51 * x381)) * x72);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x78 + (x64 * ((x61 * x56) + (-1 * x6 * x51))) + (x79 * x78));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x87 + (((x83 * x61) + (-1 * x80 * x51)) * x64) + (x87 * x79));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x91 + (((x89 * x61) + (-1 * x88 * x51)) * x64) + (x79 * x91));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x106 + (x64 * ((x61 * x101) + (-1 * x51 * x96))) + (x79 * x106));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x114 + (((x61 * x110) + (-1 * x51 * x107)) * x64) + (x79 * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x118 + (((x61 * x116) + (-1 * x51 * x115)) * x64) + (x79 * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x158 + (((x61 * x156) + (-1 * x51 * x154)) * x64) + (x79 * x158));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x180 + (((x61 * x178) + (-1 * x51 * x176)) * x64) + (x79 * x180));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (((x61 * x194) + (-1 * x51 * x192)) * x64) + x196 + (x79 * x196));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x209 + (((x61 * x207) + (-1 * x51 * x205)) * x64) + (x79 * x209));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x287 + (((x61 * x285) + (-1 * x51 * x283)) * x64) + (x79 * x287));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x327 + (((x61 * x325) + (-1 * x51 * x323)) * x64) + (x79 * x327));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x361 + (((x61 * x359) + (-1 * x51 * x357)) * x64) + (x79 * x361));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x371 + (((x61 * x367) + (-1 * x51 * x364)) * x64) + (x79 * x371));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x378 + (((x61 * x375) + (-1 * x51 * x372)) * x64) + (x79 * x378));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), x382 + (((x61 * x380) + (-1 * x51 * x379)) * x64) + (x79 * x382));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae12a00>]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * dt;
	const FLT x1 = x0 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x2 = x0 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x3 = x0 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x4 = 1e-10 + x1 + x2 + x3;
	const FLT x5 = sqrt(x4);
	const FLT x6 = 0.5 * x5;
	const FLT x7 = sin(x6);
	const FLT x8 = (1. / x4) * (x7 * x7);
	const FLT x9 = cos(x6);
	const FLT x10 = 1. / sqrt((x3 * x8) + (x1 * x8) + (x2 * x8) + (x9 * x9));
	const FLT x11 = (1. / x5) * x7 * dt * x10;
	const FLT x12 = x11 * (*_x0).Pose.Rot[0];
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x14 = x11 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x14 * (*_x0).Pose.Rot[1];
	const FLT x16 = x9 * x10;
	const FLT x17 = x16 * (*_x0).Pose.Rot[3];
	const FLT x18 = x11 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = x18 * (*_x0).Pose.Rot[2];
	const FLT x20 = x17 + x19 + x13 + (-1 * x15);
	const FLT x21 = x16 * (*_x0).Pose.Rot[2];
	const FLT x22 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x23 = x18 * (*_x0).Pose.Rot[3];
	const FLT x24 = x11 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x25 = x24 * (*_x0).Pose.Rot[1];
	const FLT x26 = (-1 * x25) + x23 + (-1 * x21) + (-1 * x22);
	const FLT x27 = (-1 * x23) + x25 + x22 + x21;
	const FLT x28 = 2 * x27;
	const FLT x29 = 1 + (x28 * x26) + (-2 * (x20 * x20));
	const FLT x30 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x24 * (*_x0).Pose.Rot[3]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x31 = 2 * x30;
	const FLT x32 = x31 * x27;
	const FLT x33 = x24 * (*_x0).Pose.Rot[2];
	const FLT x34 = x14 * (*_x0).Pose.Rot[3];
	const FLT x35 = x16 * (*_x0).Pose.Rot[1];
	const FLT x36 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x37 = x36 + x35 + (-1 * x33) + x34;
	const FLT x38 = 2 * x20;
	const FLT x39 = (x38 * x37) + (-1 * x32);
	const FLT x40 = 2 * x37;
	const FLT x41 = x31 * x20;
	const FLT x42 = x41 + (-1 * x40 * x26);
	const FLT x43 = (x42 * (*lh_p).Rot[1]) + (-1 * x29 * (*lh_p).Rot[2]) + (x39 * (*lh_p).Rot[0]);
	const FLT x44 = 2 * (*lh_p).Rot[2];
	const FLT x45 = (x29 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1]) + (x42 * (*lh_p).Rot[0]);
	const FLT x46 = 2 * (*lh_p).Rot[3];
	const FLT x47 = x29 + (x43 * x44) + (-1 * x45 * x46);
	const FLT x48 = 1.0/2.0 * dt * fabs(dt);
	const FLT x49 = (-1 * x20 * sensor_pt[1]) + (x27 * sensor_pt[2]) + (x30 * sensor_pt[0]);
	const FLT x50 = (-1 * x37 * sensor_pt[2]) + (x20 * sensor_pt[0]) + (x30 * sensor_pt[1]);
	const FLT x51 = sensor_pt[2] + (x48 * (*_x0).Acc[2]) + (2 * ((x50 * x37) + (-1 * x49 * x27))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x52 = (-1 * x27 * sensor_pt[0]) + (x30 * sensor_pt[2]) + (x37 * sensor_pt[1]);
	const FLT x53 = (*_x0).Pose.Pos[0] + sensor_pt[0] + (2 * ((x52 * x27) + (-1 * x50 * x20))) + (dt * (*_x0).Velocity.Pos[0]) + (x48 * (*_x0).Acc[0]);
	const FLT x54 = (2 * ((x49 * x20) + (-1 * x52 * x37))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x48 * (*_x0).Acc[1]);
	const FLT x55 = (-1 * x54 * (*lh_p).Rot[3]) + (x51 * (*lh_p).Rot[2]) + (x53 * (*lh_p).Rot[0]);
	const FLT x56 = (-1 * x51 * (*lh_p).Rot[1]) + (x54 * (*lh_p).Rot[0]) + (x53 * (*lh_p).Rot[3]);
	const FLT x57 = (2 * ((x56 * (*lh_p).Rot[1]) + (-1 * x55 * (*lh_p).Rot[2]))) + x51 + (*lh_p).Pos[2];
	const FLT x58 = 1. / x57;
	const FLT x59 = 2 * (*lh_p).Rot[1];
	const FLT x60 = (x29 * (*lh_p).Rot[0]) + (-1 * x42 * (*lh_p).Rot[3]) + (x39 * (*lh_p).Rot[2]);
	const FLT x61 = x39 + (x59 * x45) + (-1 * x60 * x44);
	const FLT x62 = x57 * x57;
	const FLT x63 = 1. / x62;
	const FLT x64 = (-1 * x53 * (*lh_p).Rot[2]) + (x51 * (*lh_p).Rot[0]) + (x54 * (*lh_p).Rot[1]);
	const FLT x65 = x53 + (2 * ((x64 * (*lh_p).Rot[2]) + (-1 * x56 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x66 = x63 * x65;
	const FLT x67 = -1 * x57;
	const FLT x68 = x65 * x65;
	const FLT x69 = 2 * (1. / (x62 + x68)) * x62 * atan2(x65, x67) * (*bsc0).curve;
	const FLT x70 = x42 + (x60 * x46) + (-1 * x59 * x43);
	const FLT x71 = x54 + (*lh_p).Pos[1] + (2 * ((x55 * (*lh_p).Rot[3]) + (-1 * x64 * (*lh_p).Rot[1])));
	const FLT x72 = x71 * x63;
	const FLT x73 = x62 + (x71 * x71);
	const FLT x74 = 1. / x73;
	const FLT x75 = x74 * x62;
	const FLT x76 = 1. / sqrt(1 + (-1 * x74 * x68 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x77 = (1. / sqrt(x73)) * (*bsc0).tilt;
	const FLT x78 = 2 * x71;
	const FLT x79 = 2 * x57;
	const FLT x80 = 1.0/2.0 * (1. / (x73 * sqrt(x73))) * x65 * (*bsc0).tilt;
	const FLT x81 = (-1 * x76 * ((-1 * ((x79 * x61) + (x70 * x78)) * x80) + (x77 * x47))) + (-1 * ((-1 * x72 * x61) + (x70 * x58)) * x75);
	const FLT x82 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x77 * x65)) + (-1 * atan2(-1 * x71, x67)));
	const FLT x83 = (-1 * x17) + x15 + (-1 * x19) + (-1 * x13);
	const FLT x84 = x31 * x37;
	const FLT x85 = x84 + (-1 * x83 * x28);
	const FLT x86 = (x40 * x27) + (-1 * x41);
	const FLT x87 = 1 + (x83 * x38) + (-2 * (x37 * x37));
	const FLT x88 = 2 * ((x87 * (*lh_p).Rot[1]) + (x85 * (*lh_p).Rot[0]) + (-1 * x86 * (*lh_p).Rot[2]));
	const FLT x89 = 2 * ((x86 * (*lh_p).Rot[3]) + (-1 * x85 * (*lh_p).Rot[1]) + (x87 * (*lh_p).Rot[0]));
	const FLT x90 = x86 + (x88 * (*lh_p).Rot[2]) + (-1 * x89 * (*lh_p).Rot[3]);
	const FLT x91 = 2 * ((x86 * (*lh_p).Rot[0]) + (x85 * (*lh_p).Rot[2]) + (-1 * x87 * (*lh_p).Rot[3]));
	const FLT x92 = x85 + (x89 * (*lh_p).Rot[1]) + (-1 * x91 * (*lh_p).Rot[2]);
	const FLT x93 = (x91 * (*lh_p).Rot[3]) + x87 + (-1 * x88 * (*lh_p).Rot[1]);
	const FLT x94 = (-1 * x76 * ((-1 * ((x79 * x92) + (x78 * x93)) * x80) + (x77 * x90))) + (-1 * ((-1 * x72 * x92) + (x58 * x93)) * x75);
	const FLT x95 = x33 + (-1 * x36) + (-1 * x34) + (-1 * x35);
	const FLT x96 = x32 + (-1 * x95 * x38);
	const FLT x97 = 1 + (x95 * x40) + (-2 * (x27 * x27));
	const FLT x98 = (x38 * x27) + (-1 * x84);
	const FLT x99 = (-1 * x96 * (*lh_p).Rot[2]) + (x98 * (*lh_p).Rot[1]) + (x97 * (*lh_p).Rot[0]);
	const FLT x100 = (x96 * (*lh_p).Rot[3]) + (-1 * x97 * (*lh_p).Rot[1]) + (x98 * (*lh_p).Rot[0]);
	const FLT x101 = x96 + (x99 * x44) + (-1 * x46 * x100);
	const FLT x102 = (x96 * (*lh_p).Rot[0]) + (-1 * x98 * (*lh_p).Rot[3]) + (x97 * (*lh_p).Rot[2]);
	const FLT x103 = x97 + (x59 * x100) + (-1 * x44 * x102);
	const FLT x104 = (x46 * x102) + x98 + (-1 * x59 * x99);
	const FLT x105 = (-1 * x76 * ((-1 * ((x79 * x103) + (x78 * x104)) * x80) + (x77 * x101))) + (-1 * ((-1 * x72 * x103) + (x58 * x104)) * x75);
	cnMatrixOptionalSet(Hx, 0, 0, x81 + (((x61 * x66) + (-1 * x58 * x47)) * x69) + (x81 * x82));
	cnMatrixOptionalSet(Hx, 0, 1, (((x66 * x92) + (-1 * x58 * x90)) * x69) + x94 + (x82 * x94));
	cnMatrixOptionalSet(Hx, 0, 2, x105 + (((x66 * x103) + (-1 * x58 * x101)) * x69) + (x82 * x105));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * (*_x0).Velocity.Pos[2];
	const FLT x1 = 1.0/2.0 * dt * fabs(dt);
	const FLT x2 = x1 * (*_x0).Acc[2];
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x15 * (*_x0).Pose.Rot[2]);
	const FLT x21 = (x18 * (*_x0).Pose.Rot[2]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x20 * sensor_pt[0]);
	const FLT x23 = (-1 * x17 * (*_x0).Pose.Rot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x24 = (x21 * sensor_pt[0]) + (-1 * x23 * sensor_pt[2]) + (x20 * sensor_pt[1]);
	const FLT x25 = 2 * ((x24 * x23) + (-1 * x22 * x19));
	const FLT x26 = x25 + sensor_pt[2] + x2 + x0 + (*_x0).Pose.Pos[2];
	const FLT x27 = x26 * (*lh_p).Rot[2];
	const FLT x28 = dt * (*_x0).Velocity.Pos[0];
	const FLT x29 = x1 * (*_x0).Acc[0];
	const FLT x30 = (x20 * sensor_pt[2]) + (-1 * x19 * sensor_pt[0]) + (x23 * sensor_pt[1]);
	const FLT x31 = 2 * ((x30 * x19) + (-1 * x24 * x21));
	const FLT x32 = (*_x0).Pose.Pos[0] + sensor_pt[0] + x28 + x31 + x29;
	const FLT x33 = x32 * (*lh_p).Rot[0];
	const FLT x34 = x1 * (*_x0).Acc[1];
	const FLT x35 = dt * (*_x0).Velocity.Pos[1];
	const FLT x36 = 2 * ((x22 * x21) + (-1 * x30 * x23));
	const FLT x37 = x35 + sensor_pt[1] + x36 + (*_x0).Pose.Pos[1] + x34;
	const FLT x38 = x37 * (*lh_p).Rot[3];
	const FLT x39 = (-1 * x38) + x27 + x33;
	const FLT x40 = x37 * (*lh_p).Rot[0];
	const FLT x41 = x32 * (*lh_p).Rot[3];
	const FLT x42 = x26 * (*lh_p).Rot[1];
	const FLT x43 = (-1 * x42) + x40 + x41;
	const FLT x44 = x26 + (2 * ((x43 * (*lh_p).Rot[1]) + (-1 * x39 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x45 = x44 * x44;
	const FLT x46 = x26 * (*lh_p).Rot[0];
	const FLT x47 = x37 * (*lh_p).Rot[1];
	const FLT x48 = x32 * (*lh_p).Rot[2];
	const FLT x49 = (-1 * x48) + x46 + x47;
	const FLT x50 = x37 + (*lh_p).Pos[1] + (2 * ((x39 * (*lh_p).Rot[3]) + (-1 * x49 * (*lh_p).Rot[1])));
	const FLT x51 = (x50 * x50) + x45;
	const FLT x52 = 1. / x51;
	const FLT x53 = x32 + (2 * ((x49 * (*lh_p).Rot[2]) + (-1 * x43 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x54 = x53 * x53;
	const FLT x55 = 1. / sqrt(1 + (-1 * x54 * x52 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x56 = (1. / sqrt(x51)) * (*bsc0).tilt;
	const FLT x57 = x56 * x55;
	const FLT x58 = 2 * x44;
	const FLT x59 = -1 * x44;
	const FLT x60 = (1. / (x45 + x54)) * atan2(x53, x59) * (*bsc0).curve;
	const FLT x61 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x53 * x56)) + (-1 * atan2(-1 * x50, x59)));
	const FLT x62 = x53 * (1. / (x51 * sqrt(x51))) * (*bsc0).tilt;
	const FLT x63 = x62 * x55;
	const FLT x64 = (x63 * x50) + (-1 * x52 * x44);
	const FLT x65 = 2 * x60;
	const FLT x66 = (x63 * x44) + (x50 * x52);
	const FLT x67 = 2 * x38;
	const FLT x68 = (2 * x27) + (-1 * x67);
	const FLT x69 = 1. / x44;
	const FLT x70 = 2 * x48;
	const FLT x71 = (2 * x47) + (-1 * x70);
	const FLT x72 = 1. / x45;
	const FLT x73 = x72 * x53;
	const FLT x74 = x65 * x45;
	const FLT x75 = 2 * x42;
	const FLT x76 = (2 * x41) + (-1 * x75);
	const FLT x77 = x72 * x50;
	const FLT x78 = x52 * x45;
	const FLT x79 = 2 * x50;
	const FLT x80 = 1.0/2.0 * x62;
	const FLT x81 = (-1 * x55 * ((-1 * ((x71 * x58) + (x79 * x76)) * x80) + (x68 * x56))) + (-1 * ((-1 * x71 * x77) + (x76 * x69)) * x78);
	const FLT x82 = (-1 * sensor_pt[2]) + (-1 * x2) + (-1 * x25) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x0);
	const FLT x83 = 2 * (*lh_p).Rot[3];
	const FLT x84 = 2 * (*lh_p).Rot[2];
	const FLT x85 = (x84 * x37) + (-1 * x82 * x83);
	const FLT x86 = 2 * (*lh_p).Rot[1];
	const FLT x87 = 2 * x40;
	const FLT x88 = x76 + (x82 * x86) + x87;
	const FLT x89 = 2 * x46;
	const FLT x90 = (-4 * x47) + (-1 * x89) + x70;
	const FLT x91 = (-1 * x55 * ((-1 * ((x88 * x58) + (x79 * x90)) * x80) + (x85 * x56))) + (-1 * ((-1 * x88 * x77) + (x69 * x90)) * x78);
	const FLT x92 = (-1 * (*_x0).Pose.Pos[0]) + (-1 * x28) + (-1 * x31) + (-1 * x29) + (-1 * sensor_pt[0]);
	const FLT x93 = x71 + x89 + (x84 * x92);
	const FLT x94 = 2 * x33;
	const FLT x95 = (-1 * x94) + (-4 * x27) + x67;
	const FLT x96 = (x83 * x26) + (-1 * x86 * x92);
	const FLT x97 = (-1 * x55 * ((-1 * ((x58 * x95) + (x79 * x96)) * x80) + (x56 * x93))) + (-1 * ((-1 * x77 * x95) + (x69 * x96)) * x78);
	const FLT x98 = (-1 * x87) + x75 + (-4 * x41);
	const FLT x99 = (-1 * x36) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x34) + (-1 * x35) + (-1 * sensor_pt[1]);
	const FLT x100 = (x86 * x32) + (-1 * x84 * x99);
	const FLT x101 = x68 + (x83 * x99) + x94;
	const FLT x102 = (-1 * x55 * ((-1 * ((x58 * x100) + (x79 * x101)) * x80) + (x56 * x98))) + (-1 * ((-1 * x77 * x100) + (x69 * x101)) * x78);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), (-1 * x61 * x57) + (-1 * x57) + (-1 * x60 * x58));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), x64 + (x64 * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x66 + (x65 * x53) + (x61 * x66));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x81 + (((x71 * x73) + (-1 * x68 * x69)) * x74) + (x81 * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), (((x88 * x73) + (-1 * x85 * x69)) * x74) + x91 + (x61 * x91));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x97 + (((x73 * x95) + (-1 * x69 * x93)) * x74) + (x61 * x97));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), (x74 * ((x73 * x100) + (-1 * x69 * x98))) + x102 + (x61 * x102));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae857f0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae858b0>, <cnkalman.codegen.WrapMember object at 0x7f5abae85850>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae85970>, <cnkalman.codegen.WrapMember object at 0x7f5abae85910>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae855e0>, <cnkalman.codegen.WrapMember object at 0x7f5abae85790>]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x14 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x11 * x10;
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[3]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (x15 * (*_x0).Pose.Rot[1]) + (x16 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[2]) + (x14 * (*_x0).Pose.Rot[3]);
	const FLT x19 = (x13 * (*_x0).Pose.Rot[1]) + (-1 * x16 * (*_x0).Pose.Rot[3]) + (x14 * (*_x0).Pose.Rot[0]) + (x15 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (-1 * x19 * sensor_pt[0]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[2]) + (x15 * (*_x0).Pose.Rot[3]) + (x13 * (*_x0).Pose.Rot[0]) + (-1 * x14 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x17 * sensor_pt[0]);
	const FLT x23 = (dt * (*_x0).Velocity.Pos[1]) + (2 * ((x22 * x21) + (-1 * x20 * x18))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x24 = (-1 * x18 * sensor_pt[2]) + (x21 * sensor_pt[0]) + (x17 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = sensor_pt[2] + (2 * ((x24 * x18) + (-1 * x22 * x19))) + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[1]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]) + (x23 * (*lh_p).Rot[1]);
	const FLT x29 = (2 * ((x28 * (*lh_p).Rot[2]) + (-1 * x27 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[3]) + (x26 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x31 = x26 + (2 * ((x27 * (*lh_p).Rot[1]) + (-1 * x30 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = -1 * x31;
	const FLT x33 = x23 + (*lh_p).Pos[1] + (2 * ((x30 * (*lh_p).Rot[3]) + (-1 * x28 * (*lh_p).Rot[1])));
	const FLT x34 = (x33 * x33) + (x31 * x31);
	const FLT x35 = (1. / sqrt(x34)) * x29;
	const FLT x36 = 1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x35 * (*bsc0).tilt)) + (-1 * atan2(-1 * x33, x32));
	const FLT x37 = sin(x36) * (*bsc0).gibmag;
	const FLT x38 = x35 * (1. / sqrt(1 + (-1 * (1. / x34) * (x29 * x29) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), atan2(x29, x32) * atan2(x29, x32));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), -1 * cos(x36));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x37);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1 + (-1 * x37));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x38 * x37) + (-1 * x38));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae857f0>, <cnkalman.codegen.WrapMember object at 0x7f5abae858b0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae85850>, <cnkalman.codegen.WrapMember object at 0x7f5abae85970>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae85910>, <cnkalman.codegen.WrapMember object at 0x7f5abae855e0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae85790>]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanModel_LightMeas_x_gen2(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x28 = (-1 * x23 * (*lh_p).Rot[1]) + (x26 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x29 = x23 + (2 * ((x28 * (*lh_p).Rot[1]) + (-1 * x27 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x30 = (-1 * x25 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[1]);
	const FLT x31 = (2 * ((x30 * (*lh_p).Rot[2]) + (-1 * x28 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x32 = atan2(-1 * x29, x31);
	const FLT x33 = (*lh_p).Pos[1] + x26 + (2 * ((x27 * (*lh_p).Rot[3]) + (-1 * x30 * (*lh_p).Rot[1])));
	const FLT x34 = (x31 * x31) + (x29 * x29);
	const FLT x35 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x36 = cos(x35);
	const FLT x37 = asin(x33 * (1. / x36) * (1. / sqrt(x34 + (x33 * x33))));
	const FLT x38 = (1. / sqrt(x34)) * x33 * tan(x35);
	const FLT x39 = ((*bsc0).ogeemag * sin(x32 + (-1 * asin(x38)) + (*bsc0).ogeephase)) + (*bsc0).curve;
	const FLT x40 = 0.0028679863 + (x37 * (-8.0108022e-06 + (-8.0108022e-06 * x37)));
	const FLT x41 = 5.3685255e-06 + (x40 * x37);
	const FLT x42 = 0.0076069798 + (x41 * x37);
	const FLT x43 = (-1 * asin(x38 + (x42 * (x37 * x37) * x39 * (1. / (x36 + (-1 * x39 * sin(x35) * ((x37 * (x42 + (x37 * (x41 + (x37 * (x40 + (x37 * (-8.0108022e-06 + (-1.60216044e-05 * x37))))))))) + (x42 * x37)))))))) + x32;
	return -1.5707963267949 + x43 + (-1 * (*bsc0).phase) + (sin(x43 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae10df0>]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x2 = x0 * (*lh_p).Rot[3];
	const FLT x3 = x2 * (*lh_p).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = 1.0/2.0 * x0;
	const FLT x6 = dt * dt;
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x8 = x6 * x7;
	const FLT x9 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x10 = x6 * x9;
	const FLT x11 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x12 = x6 * x11;
	const FLT x13 = 1e-10 + x8 + x10 + x12;
	const FLT x14 = sqrt(x13);
	const FLT x15 = 0.5 * x14;
	const FLT x16 = sin(x15);
	const FLT x17 = x16 * x16;
	const FLT x18 = 1. / x13;
	const FLT x19 = x18 * x17;
	const FLT x20 = cos(x15);
	const FLT x21 = (x10 * x19) + (x8 * x19) + (x12 * x19) + (x20 * x20);
	const FLT x22 = 1. / sqrt(x21);
	const FLT x23 = x22 * x16;
	const FLT x24 = 1. / x14;
	const FLT x25 = dt * x24;
	const FLT x26 = x25 * x23;
	const FLT x27 = x26 * (*_x0).Pose.Rot[0];
	const FLT x28 = x22 * x20;
	const FLT x29 = x28 * (*_x0).Pose.Rot[2];
	const FLT x30 = x26 * (*_x0).Pose.Rot[1];
	const FLT x31 = x23 * (*_x0).Pose.Rot[3];
	const FLT x32 = x31 * x25;
	const FLT x33 = (-1 * x32 * (*_x0).Velocity.AxisAngleRot[0]) + (x30 * (*_x0).Velocity.AxisAngleRot[2]) + (x27 * (*_x0).Velocity.AxisAngleRot[1]) + x29;
	const FLT x34 = x26 * (*_x0).Pose.Rot[2];
	const FLT x35 = x28 * (*_x0).Pose.Rot[0];
	const FLT x36 = (-1 * x30 * (*_x0).Velocity.AxisAngleRot[0]) + x35 + (-1 * x32 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x37 = x28 * (*_x0).Pose.Rot[3];
	const FLT x38 = (x34 * (*_x0).Velocity.AxisAngleRot[0]) + x37 + (x27 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x39 = (-1 * x38 * sensor_pt[1]) + (x33 * sensor_pt[2]) + (x36 * sensor_pt[0]);
	const FLT x40 = x28 * (*_x0).Pose.Rot[1];
	const FLT x41 = (x27 * (*_x0).Velocity.AxisAngleRot[0]) + x40 + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[2]) + (x32 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x42 = (-1 * x41 * sensor_pt[2]) + (x38 * sensor_pt[0]) + (x36 * sensor_pt[1]);
	const FLT x43 = (2 * ((x41 * x42) + (-1 * x33 * x39))) + sensor_pt[2] + (x5 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x44 = (-1 * x33 * sensor_pt[0]) + (x36 * sensor_pt[2]) + (x41 * sensor_pt[1]);
	const FLT x45 = (dt * (*_x0).Velocity.Pos[1]) + (2 * ((x38 * x39) + (-1 * x41 * x44))) + (*_x0).Pose.Pos[1] + sensor_pt[1] + (x5 * (*_x0).Acc[1]);
	const FLT x46 = (2 * ((x44 * x33) + (-1 * x42 * x38))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x5 * (*_x0).Acc[0]);
	const FLT x47 = (-1 * x46 * (*lh_p).Rot[2]) + (x43 * (*lh_p).Rot[0]) + (x45 * (*lh_p).Rot[1]);
	const FLT x48 = (-1 * x45 * (*lh_p).Rot[3]) + (x43 * (*lh_p).Rot[2]) + (x46 * (*lh_p).Rot[0]);
	const FLT x49 = x45 + (*lh_p).Pos[1] + (2 * ((x48 * (*lh_p).Rot[3]) + (-1 * x47 * (*lh_p).Rot[1])));
	const FLT x50 = x49 * x49;
	const FLT x51 = (x45 * (*lh_p).Rot[0]) + (-1 * x43 * (*lh_p).Rot[1]) + (x46 * (*lh_p).Rot[3]);
	const FLT x52 = (2 * ((x51 * (*lh_p).Rot[1]) + (-1 * x48 * (*lh_p).Rot[2]))) + x43 + (*lh_p).Pos[2];
	const FLT x53 = x46 + (2 * ((x47 * (*lh_p).Rot[2]) + (-1 * x51 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x54 = x53 * x53;
	const FLT x55 = x54 + (x52 * x52);
	const FLT x56 = x55 + x50;
	const FLT x57 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x58 = cos(x57);
	const FLT x59 = 1. / x58;
	const FLT x60 = (1. / sqrt(x56)) * x59;
	const FLT x61 = 2 * x49;
	const FLT x62 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x63 = -1 * x0 * x62;
	const FLT x64 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x65 = x5 + (-1 * x0 * x64);
	const FLT x66 = x65 + x63;
	const FLT x67 = 2 * x53;
	const FLT x68 = x0 * (*lh_p).Rot[0];
	const FLT x69 = x68 * (*lh_p).Rot[2];
	const FLT x70 = x2 * (*lh_p).Rot[1];
	const FLT x71 = x70 + (-1 * x69);
	const FLT x72 = 2 * x52;
	const FLT x73 = (x71 * x72) + (x67 * x66);
	const FLT x74 = 1.0/2.0 * x49;
	const FLT x75 = x74 * (1. / (x56 * sqrt(x56))) * x59;
	const FLT x76 = (-1 * x75 * (x73 + (x4 * x61))) + (x4 * x60);
	const FLT x77 = 1. / sqrt(1 + (-1 * x50 * (1. / (x58 * x58)) * (1. / x56)));
	const FLT x78 = atan2(-1 * x52, x53);
	const FLT x79 = tan(x57);
	const FLT x80 = x79 * (1. / sqrt(x55));
	const FLT x81 = x80 * x49;
	const FLT x82 = (-1 * asin(x81)) + x78 + (*bsc0).ogeephase;
	const FLT x83 = (sin(x82) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x84 = asin(x60 * x49);
	const FLT x85 = 8.0108022e-06 * x84;
	const FLT x86 = -8.0108022e-06 + (-1 * x85);
	const FLT x87 = 0.0028679863 + (x84 * x86);
	const FLT x88 = 5.3685255e-06 + (x84 * x87);
	const FLT x89 = 0.0076069798 + (x88 * x84);
	const FLT x90 = x89 * x84;
	const FLT x91 = -8.0108022e-06 + (-1.60216044e-05 * x84);
	const FLT x92 = x87 + (x84 * x91);
	const FLT x93 = x88 + (x84 * x92);
	const FLT x94 = x89 + (x84 * x93);
	const FLT x95 = (x84 * x94) + x90;
	const FLT x96 = sin(x57);
	const FLT x97 = x83 * x96;
	const FLT x98 = x58 + (-1 * x97 * x95);
	const FLT x99 = 1. / x98;
	const FLT x100 = 2 * x83 * x90 * x99;
	const FLT x101 = x77 * x100;
	const FLT x102 = x87 * x77;
	const FLT x103 = x86 * x77;
	const FLT x104 = x76 * x103;
	const FLT x105 = x85 * x77;
	const FLT x106 = (x84 * ((-1 * x76 * x105) + x104)) + (x76 * x102);
	const FLT x107 = x88 * x77;
	const FLT x108 = (x76 * x107) + (x84 * x106);
	const FLT x109 = x84 * x84;
	const FLT x110 = x83 * x109;
	const FLT x111 = x99 * x110;
	const FLT x112 = 1. / x55;
	const FLT x113 = 1. / sqrt(1 + (-1 * (x79 * x79) * x50 * x112));
	const FLT x114 = x79 * x74 * (1. / (x55 * sqrt(x55)));
	const FLT x115 = (x4 * x80) + (-1 * x73 * x114);
	const FLT x116 = (1. / x54) * x52;
	const FLT x117 = 1. / x53;
	const FLT x118 = x54 * x112;
	const FLT x119 = ((-1 * x71 * x117) + (x66 * x116)) * x118;
	const FLT x120 = x119 + (-1 * x113 * x115);
	const FLT x121 = cos(x82) * (*bsc0).ogeemag;
	const FLT x122 = x96 * x95;
	const FLT x123 = x122 * x121;
	const FLT x124 = x77 * x94;
	const FLT x125 = 2.40324066e-05 * x84;
	const FLT x126 = x77 * x125;
	const FLT x127 = x77 * x91;
	const FLT x128 = x77 * x92;
	const FLT x129 = x77 * x93;
	const FLT x130 = x89 * x77;
	const FLT x131 = x89 * (1. / (x98 * x98)) * x110;
	const FLT x132 = x89 * x99 * x109;
	const FLT x133 = x121 * x132;
	const FLT x134 = x81 + (x89 * x111);
	const FLT x135 = 1. / sqrt(1 + (-1 * (x134 * x134)));
	const FLT x136 = x119 + (-1 * x135 * (x115 + (-1 * x131 * ((-1 * x97 * ((x76 * x130) + (x84 * x108) + (x76 * x124) + (x84 * (x108 + (x84 * (x106 + (x84 * ((x76 * x127) + x104 + (-1 * x76 * x126))) + (x76 * x128))) + (x76 * x129))))) + (-1 * x120 * x123))) + (x76 * x101) + (x120 * x133) + (x108 * x111)));
	const FLT x137 = cos((-1 * asin(x134)) + (*bsc0).gibpha + x78) * (*bsc0).gibmag;
	const FLT x138 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x139 = -1 * x0 * x138;
	const FLT x140 = x65 + x139;
	const FLT x141 = x1 + (-1 * x3);
	const FLT x142 = x2 * (*lh_p).Rot[2];
	const FLT x143 = x68 * (*lh_p).Rot[1];
	const FLT x144 = x143 + x142;
	const FLT x145 = (x72 * x144) + (x67 * x141);
	const FLT x146 = (-1 * x75 * (x145 + (x61 * x140))) + (x60 * x140);
	const FLT x147 = x103 * x146;
	const FLT x148 = (x84 * ((-1 * x105 * x146) + x147)) + (x102 * x146);
	const FLT x149 = (x107 * x146) + (x84 * x148);
	const FLT x150 = (x80 * x140) + (-1 * x114 * x145);
	const FLT x151 = ((-1 * x117 * x144) + (x116 * x141)) * x118;
	const FLT x152 = x121 * (x151 + (-1 * x113 * x150));
	const FLT x153 = x151 + (-1 * x135 * ((x132 * x152) + (x101 * x146) + x150 + (x111 * x149) + (-1 * x131 * ((-1 * x97 * ((x130 * x146) + (x84 * x149) + (x124 * x146) + (x84 * (x149 + (x84 * (x148 + (x84 * ((x127 * x146) + x147 + (-1 * x126 * x146))) + (x128 * x146))) + (x129 * x146))))) + (-1 * x122 * x152)))));
	const FLT x154 = x69 + x70;
	const FLT x155 = x63 + x5 + x139;
	const FLT x156 = (x72 * x155) + (x67 * x154);
	const FLT x157 = x142 + (-1 * x143);
	const FLT x158 = (x80 * x157) + (-1 * x114 * x156);
	const FLT x159 = ((-1 * x117 * x155) + (x116 * x154)) * x118;
	const FLT x160 = x159 + (-1 * x113 * x158);
	const FLT x161 = (-1 * x75 * (x156 + (x61 * x157))) + (x60 * x157);
	const FLT x162 = x103 * x161;
	const FLT x163 = (x84 * ((-1 * x105 * x161) + x162)) + (x102 * x161);
	const FLT x164 = (x107 * x161) + (x84 * x163);
	const FLT x165 = x159 + (-1 * x135 * ((x160 * x133) + (x101 * x161) + (-1 * x131 * ((-1 * x97 * ((x161 * x130) + (x124 * x161) + (x84 * (x164 + (x84 * (x163 + (x84 * ((x127 * x161) + x162 + (-1 * x126 * x161))) + (x128 * x161))) + (x129 * x161))) + (x84 * x164))) + (-1 * x123 * x160))) + x158 + (x111 * x164)));
	const FLT x166 = 2 * (*lh_p).Rot[1];
	const FLT x167 = x166 * (*lh_p).Rot[2];
	const FLT x168 = 2 * (*lh_p).Rot[3];
	const FLT x169 = x168 * (*lh_p).Rot[0];
	const FLT x170 = x169 + x167;
	const FLT x171 = 2 * x62;
	const FLT x172 = -1 * x171;
	const FLT x173 = 2 * x64;
	const FLT x174 = 1 + (-1 * x173);
	const FLT x175 = x174 + x172;
	const FLT x176 = 2 * (*lh_p).Rot[2];
	const FLT x177 = x176 * (*lh_p).Rot[0];
	const FLT x178 = x166 * (*lh_p).Rot[3];
	const FLT x179 = x178 + (-1 * x177);
	const FLT x180 = (x72 * x179) + (x67 * x175);
	const FLT x181 = (-1 * x75 * (x180 + (x61 * x170))) + (x60 * x170);
	const FLT x182 = x103 * x181;
	const FLT x183 = (x84 * ((-1 * x105 * x181) + x182)) + (x102 * x181);
	const FLT x184 = (x107 * x181) + (x84 * x183);
	const FLT x185 = (x80 * x170) + (-1 * x114 * x180);
	const FLT x186 = ((-1 * x117 * x179) + (x116 * x175)) * x118;
	const FLT x187 = x186 + (-1 * x113 * x185);
	const FLT x188 = x186 + (-1 * x135 * (x185 + (x187 * x133) + (-1 * x131 * ((-1 * x97 * ((x181 * x130) + (x84 * x184) + (x124 * x181) + (x84 * ((x84 * (x183 + (x84 * ((x127 * x181) + (-1 * x126 * x181) + x182)) + (x128 * x181))) + x184 + (x129 * x181))))) + (-1 * x123 * x187))) + (x101 * x181) + (x111 * x184)));
	const FLT x189 = 2 * x138;
	const FLT x190 = -1 * x189;
	const FLT x191 = x174 + x190;
	const FLT x192 = x167 + (-1 * x169);
	const FLT x193 = x176 * (*lh_p).Rot[3];
	const FLT x194 = x166 * (*lh_p).Rot[0];
	const FLT x195 = x194 + x193;
	const FLT x196 = (x72 * x195) + (x67 * x192);
	const FLT x197 = (-1 * x75 * (x196 + (x61 * x191))) + (x60 * x191);
	const FLT x198 = (x80 * x191) + (-1 * x114 * x196);
	const FLT x199 = ((-1 * x117 * x195) + (x116 * x192)) * x118;
	const FLT x200 = x199 + (-1 * x113 * x198);
	const FLT x201 = x103 * x197;
	const FLT x202 = (x84 * ((-1 * x105 * x197) + x201)) + (x102 * x197);
	const FLT x203 = (x107 * x197) + (x84 * x202);
	const FLT x204 = x199 + (-1 * x135 * (x198 + (x203 * x111) + (x200 * x133) + (x101 * x197) + (-1 * x131 * ((-1 * x97 * ((x197 * x130) + (x124 * x197) + (x84 * (x203 + (x84 * (x202 + (x84 * ((x127 * x197) + x201 + (-1 * x126 * x197))) + (x128 * x197))) + (x129 * x197))) + (x84 * x203))) + (-1 * x200 * x123)))));
	const FLT x205 = x193 + (-1 * x194);
	const FLT x206 = x177 + x178;
	const FLT x207 = 1 + x190 + x172;
	const FLT x208 = (x72 * x207) + (x67 * x206);
	const FLT x209 = (-1 * x75 * (x208 + (x61 * x205))) + (x60 * x205);
	const FLT x210 = x209 * x103;
	const FLT x211 = (x84 * ((-1 * x209 * x105) + x210)) + (x209 * x102);
	const FLT x212 = (x209 * x107) + (x84 * x211);
	const FLT x213 = (x80 * x205) + (-1 * x208 * x114);
	const FLT x214 = ((-1 * x207 * x117) + (x206 * x116)) * x118;
	const FLT x215 = x214 + (-1 * x213 * x113);
	const FLT x216 = x214 + (-1 * x135 * (x213 + (x215 * x133) + (x209 * x101) + (x212 * x111) + (-1 * x131 * ((-1 * x97 * ((x209 * x130) + (x209 * x124) + (x84 * (x212 + (x84 * (x211 + (x84 * ((x209 * x127) + x210 + (-1 * x209 * x126))) + (x209 * x128))) + (x209 * x129))) + (x84 * x212))) + (-1 * x215 * x123)))));
	const FLT x217 = x26 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x218 = x217 * sensor_pt[2];
	const FLT x219 = x28 * sensor_pt[0];
	const FLT x220 = x26 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x221 = -1 * x220 * sensor_pt[1];
	const FLT x222 = x221 + x219;
	const FLT x223 = x222 + x218;
	const FLT x224 = 2 * x33;
	const FLT x225 = 2 * x42;
	const FLT x226 = x26 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x227 = x225 * x226;
	const FLT x228 = 2 * x39;
	const FLT x229 = -1 * x217 * x228;
	const FLT x230 = -1 * x226 * sensor_pt[2];
	const FLT x231 = x220 * sensor_pt[0];
	const FLT x232 = x28 * sensor_pt[1];
	const FLT x233 = x232 + x230 + x231;
	const FLT x234 = 2 * x41;
	const FLT x235 = x229 + (x234 * x233) + (-1 * x223 * x224) + x227;
	const FLT x236 = x226 * sensor_pt[1];
	const FLT x237 = -1 * x217 * sensor_pt[0];
	const FLT x238 = x28 * sensor_pt[2];
	const FLT x239 = x238 + x237;
	const FLT x240 = x239 + x236;
	const FLT x241 = 2 * x38;
	const FLT x242 = x220 * x228;
	const FLT x243 = 2 * x44;
	const FLT x244 = -1 * x226 * x243;
	const FLT x245 = x244 + x242 + (-1 * x234 * x240) + (x223 * x241);
	const FLT x246 = -1 * x220 * x225;
	const FLT x247 = x217 * x243;
	const FLT x248 = x247 + (x224 * x240) + (-1 * x233 * x241) + x246;
	const FLT x249 = (x248 * (*lh_p).Rot[3]) + (-1 * x235 * (*lh_p).Rot[1]) + (x245 * (*lh_p).Rot[0]);
	const FLT x250 = (x245 * (*lh_p).Rot[1]) + (-1 * x248 * (*lh_p).Rot[2]) + (x235 * (*lh_p).Rot[0]);
	const FLT x251 = x248 + (-1 * x249 * x168) + (x250 * x176);
	const FLT x252 = (x248 * (*lh_p).Rot[0]) + (-1 * x245 * (*lh_p).Rot[3]) + (x235 * (*lh_p).Rot[2]);
	const FLT x253 = (-1 * x252 * x176) + x235 + (x249 * x166);
	const FLT x254 = (x72 * x253) + (x67 * x251);
	const FLT x255 = x245 + (-1 * x250 * x166) + (x252 * x168);
	const FLT x256 = (x80 * x255) + (-1 * x254 * x114);
	const FLT x257 = ((-1 * x253 * x117) + (x251 * x116)) * x118;
	const FLT x258 = x257 + (-1 * x256 * x113);
	const FLT x259 = (-1 * x75 * (x254 + (x61 * x255))) + (x60 * x255);
	const FLT x260 = x259 * x103;
	const FLT x261 = (x84 * ((-1 * x259 * x105) + x260)) + (x259 * x102);
	const FLT x262 = (x259 * x107) + (x84 * x261);
	const FLT x263 = x257 + (-1 * x135 * ((x258 * x133) + x256 + (x262 * x111) + (-1 * x131 * ((-1 * x97 * ((x259 * x130) + (x84 * x262) + (x259 * x124) + (x84 * (x262 + (x84 * ((x84 * ((x259 * x127) + (-1 * x259 * x126) + x260)) + x261 + (x259 * x128))) + (x259 * x129))))) + (-1 * x258 * x123))) + (x259 * x101)));
	const FLT x264 = x217 * sensor_pt[1];
	const FLT x265 = x220 * sensor_pt[2];
	const FLT x266 = x226 * sensor_pt[0];
	const FLT x267 = (-1 * x266) + x264 + x265;
	const FLT x268 = -1 * x236;
	const FLT x269 = x268 + (-1 * x238) + x237;
	const FLT x270 = x28 * x225;
	const FLT x271 = (-1 * x242) + x270 + (-1 * x267 * x224) + (x234 * x269);
	const FLT x272 = (-1 * x231) + x230;
	const FLT x273 = x272 + x232;
	const FLT x274 = x28 * x243;
	const FLT x275 = x229 + (-1 * x274) + (-1 * x234 * x273) + (x267 * x241);
	const FLT x276 = x220 * x243;
	const FLT x277 = x217 * x225;
	const FLT x278 = (x273 * x224) + x277 + x276 + (-1 * x269 * x241);
	const FLT x279 = (x278 * (*lh_p).Rot[3]) + (-1 * x271 * (*lh_p).Rot[1]) + (x275 * (*lh_p).Rot[0]);
	const FLT x280 = (-1 * x278 * (*lh_p).Rot[2]) + (x275 * (*lh_p).Rot[1]) + (x271 * (*lh_p).Rot[0]);
	const FLT x281 = x278 + (-1 * x279 * x168) + (x280 * x176);
	const FLT x282 = (-1 * x275 * (*lh_p).Rot[3]) + (x278 * (*lh_p).Rot[0]) + (x271 * (*lh_p).Rot[2]);
	const FLT x283 = x271 + (-1 * x282 * x176) + (x279 * x166);
	const FLT x284 = (x72 * x283) + (x67 * x281);
	const FLT x285 = x275 + (-1 * x280 * x166) + (x282 * x168);
	const FLT x286 = (x80 * x285) + (-1 * x284 * x114);
	const FLT x287 = ((-1 * x283 * x117) + (x281 * x116)) * x118;
	const FLT x288 = x287 + (-1 * x286 * x113);
	const FLT x289 = (-1 * x75 * (x284 + (x61 * x285))) + (x60 * x285);
	const FLT x290 = x289 * x103;
	const FLT x291 = (x84 * ((-1 * x289 * x105) + x290)) + (x289 * x102);
	const FLT x292 = (x289 * x107) + (x84 * x291);
	const FLT x293 = x77 * x289;
	const FLT x294 = x287 + (-1 * x135 * (x286 + (x288 * x133) + (x293 * x100) + (-1 * x131 * ((-1 * x97 * ((x289 * x130) + (x84 * (x292 + (x84 * (x291 + (x84 * (x290 + (x289 * x127) + (-1 * x293 * x125))) + (x289 * x128))) + (x289 * x129))) + (x289 * x124) + (x84 * x292))) + (-1 * x288 * x123))) + (x292 * x111)));
	const FLT x295 = x239 + x268;
	const FLT x296 = x28 * x228;
	const FLT x297 = (-1 * x264) + x265 + x266;
	const FLT x298 = x246 + (x234 * x297) + (-1 * x295 * x224) + (-1 * x296);
	const FLT x299 = -1 * x218;
	const FLT x300 = x221 + (-1 * x219) + x299;
	const FLT x301 = (x224 * x300) + x274 + (-1 * x227) + (-1 * x297 * x241);
	const FLT x302 = x228 * x226;
	const FLT x303 = x302 + (x295 * x241) + (-1 * x234 * x300) + x276;
	const FLT x304 = (x303 * (*lh_p).Rot[1]) + (x298 * (*lh_p).Rot[0]) + (-1 * x301 * (*lh_p).Rot[2]);
	const FLT x305 = (x301 * (*lh_p).Rot[0]) + (-1 * x303 * (*lh_p).Rot[3]) + (x298 * (*lh_p).Rot[2]);
	const FLT x306 = x303 + (-1 * x304 * x166) + (x305 * x168);
	const FLT x307 = (x301 * (*lh_p).Rot[3]) + (x303 * (*lh_p).Rot[0]) + (-1 * x298 * (*lh_p).Rot[1]);
	const FLT x308 = (-1 * x307 * x168) + x301 + (x304 * x176);
	const FLT x309 = x298 + (-1 * x305 * x176) + (x307 * x166);
	const FLT x310 = (x72 * x309) + (x67 * x308);
	const FLT x311 = x77 * ((-1 * x75 * (x310 + (x61 * x306))) + (x60 * x306));
	const FLT x312 = x86 * x311;
	const FLT x313 = (x84 * ((-1 * x85 * x311) + x312)) + (x87 * x311);
	const FLT x314 = (x88 * x311) + (x84 * x313);
	const FLT x315 = (x80 * x306) + (-1 * x310 * x114);
	const FLT x316 = ((-1 * x309 * x117) + (x308 * x116)) * x118;
	const FLT x317 = x316 + (-1 * x315 * x113);
	const FLT x318 = x316 + (-1 * x135 * (x315 + (-1 * x131 * ((-1 * x97 * ((x89 * x311) + (x84 * x314) + (x94 * x311) + (x84 * ((x84 * (x313 + (x84 * ((x91 * x311) + x312 + (-1 * x311 * x125))) + (x92 * x311))) + x314 + (x93 * x311))))) + (-1 * x317 * x123))) + (x314 * x111) + (x317 * x133) + (x311 * x100)));
	const FLT x319 = x272 + (-1 * x232);
	const FLT x320 = x222 + x299;
	const FLT x321 = (x234 * x320) + x277 + (-1 * x224 * x319) + x302;
	const FLT x322 = x264 + x266 + (-1 * x265);
	const FLT x323 = (-1 * x247) + x296 + (-1 * x234 * x322) + (x241 * x319);
	const FLT x324 = x244 + (-1 * x270) + (x224 * x322) + (-1 * x241 * x320);
	const FLT x325 = (x324 * (*lh_p).Rot[3]) + (-1 * x321 * (*lh_p).Rot[1]) + (x323 * (*lh_p).Rot[0]);
	const FLT x326 = (x323 * (*lh_p).Rot[1]) + (-1 * x324 * (*lh_p).Rot[2]) + (x321 * (*lh_p).Rot[0]);
	const FLT x327 = x324 + (-1 * x325 * x168) + (x326 * x176);
	const FLT x328 = (x324 * (*lh_p).Rot[0]) + (-1 * x323 * (*lh_p).Rot[3]) + (x321 * (*lh_p).Rot[2]);
	const FLT x329 = x321 + (-1 * x328 * x176) + (x325 * x166);
	const FLT x330 = (x72 * x329) + (x67 * x327);
	const FLT x331 = (x328 * x168) + x323 + (-1 * x326 * x166);
	const FLT x332 = (x80 * x331) + (-1 * x330 * x114);
	const FLT x333 = ((-1 * x329 * x117) + (x327 * x116)) * x118;
	const FLT x334 = x333 + (-1 * x332 * x113);
	const FLT x335 = (-1 * x75 * (x330 + (x61 * x331))) + (x60 * x331);
	const FLT x336 = x335 * x103;
	const FLT x337 = (x84 * ((-1 * x335 * x105) + x336)) + (x335 * x102);
	const FLT x338 = (x335 * x107) + (x84 * x337);
	const FLT x339 = x333 + (-1 * x135 * ((x334 * x133) + x332 + (x338 * x111) + (-1 * x131 * ((-1 * x97 * ((x84 * (x338 + (x84 * (x337 + (x84 * ((x335 * x127) + x336 + (-1 * x335 * x126))) + (x335 * x128))) + (x335 * x129))) + (x335 * x130) + (x84 * x338) + (x335 * x124))) + (-1 * x334 * x123))) + (x335 * x101)));
	const FLT x340 = -1 * x32;
	const FLT x341 = x23 * (*_x0).Pose.Rot[2];
	const FLT x342 = x6 * x24;
	const FLT x343 = x342 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x344 = 0.5 * x343;
	const FLT x345 = dt * dt * dt;
	const FLT x346 = 0.5 * x18 * x345;
	const FLT x347 = x11 * x346;
	const FLT x348 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x349 = dt * dt * dt * dt;
	const FLT x350 = 2 * (1. / (x13 * x13)) * x17;
	const FLT x351 = x350 * x349;
	const FLT x352 = x7 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x353 = 1. / (x13 * sqrt(x13));
	const FLT x354 = 1.0 * x20 * x16;
	const FLT x355 = x354 * x353;
	const FLT x356 = x355 * x349;
	const FLT x357 = 2 * x19;
	const FLT x358 = x6 * x357;
	const FLT x359 = x9 * x351;
	const FLT x360 = (-1 * x359 * (*_x0).Velocity.AxisAngleRot[0]) + (x9 * x356 * (*_x0).Velocity.AxisAngleRot[0]) + (x358 * (*_x0).Velocity.AxisAngleRot[0]) + (x352 * x356) + (-1 * x351 * x348) + (-1 * x354 * x343) + (-1 * x352 * x351) + (x356 * x348);
	const FLT x361 = 1.0/2.0 * (1. / (x21 * sqrt(x21)));
	const FLT x362 = x25 * x16 * x361;
	const FLT x363 = x362 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x364 = x363 * x360;
	const FLT x365 = x20 * x361;
	const FLT x366 = x365 * x360;
	const FLT x367 = x362 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x368 = x367 * x360;
	const FLT x369 = x23 * (*_x0).Pose.Rot[1];
	const FLT x370 = x353 * x345;
	const FLT x371 = x370 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x372 = x371 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x373 = x372 * x369;
	const FLT x374 = x346 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x375 = x374 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x376 = x40 * x375;
	const FLT x377 = x362 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x378 = x377 * x360;
	const FLT x379 = x11 * x370;
	const FLT x380 = x374 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x381 = x23 * (*_x0).Pose.Rot[0];
	const FLT x382 = x381 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x383 = x370 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x384 = (-1 * x383 * x382) + (x35 * x380);
	const FLT x385 = x384 + (x31 * x379) + x376 + (-1 * x373) + (-1 * x344 * x341) + (-1 * x37 * x347) + (-1 * x378 * (*_x0).Pose.Rot[1]) + (-1 * x368 * (*_x0).Pose.Rot[0]) + (x364 * (*_x0).Pose.Rot[3]) + x340 + (-1 * x366 * (*_x0).Pose.Rot[2]);
	const FLT x386 = x37 * x380;
	const FLT x387 = x31 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x388 = x383 * x387;
	const FLT x389 = x29 * x375;
	const FLT x390 = x372 * x341;
	const FLT x391 = x377 * (*_x0).Pose.Rot[2];
	const FLT x392 = (-1 * x364 * (*_x0).Pose.Rot[0]) + (-1 * x366 * (*_x0).Pose.Rot[1]) + (-1 * x379 * x381) + x27 + x386 + (x391 * x360) + (-1 * x389) + (-1 * x388) + x390 + (-1 * x369 * x344) + (-1 * x368 * (*_x0).Pose.Rot[3]) + (x35 * x347);
	const FLT x393 = x363 * (*_x0).Pose.Rot[2];
	const FLT x394 = x369 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x395 = (-1 * x40 * x380) + (x394 * x383);
	const FLT x396 = (-1 * x372 * x381) + (x35 * x375);
	const FLT x397 = x396 + (-1 * x393 * x360) + x395 + (-1 * x31 * x344) + x34 + (-1 * x378 * (*_x0).Pose.Rot[0]) + (-1 * x379 * x341) + (x29 * x347) + (x368 * (*_x0).Pose.Rot[1]) + (-1 * x366 * (*_x0).Pose.Rot[3]);
	const FLT x398 = x29 * x380;
	const FLT x399 = x341 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x400 = x399 * x383;
	const FLT x401 = -1 * x30;
	const FLT x402 = (-1 * x37 * x375) + (x31 * x372);
	const FLT x403 = (x379 * x369) + x401 + (-1 * x40 * x347) + (-1 * x366 * (*_x0).Pose.Rot[0]) + (-1 * x381 * x344) + (x368 * (*_x0).Pose.Rot[2]) + x402 + (x378 * (*_x0).Pose.Rot[3]) + (-1 * x398) + (x364 * (*_x0).Pose.Rot[1]) + x400;
	const FLT x404 = (-1 * x392 * sensor_pt[2]) + (x403 * sensor_pt[1]) + (x397 * sensor_pt[0]);
	const FLT x405 = (x392 * sensor_pt[1]) + (-1 * x385 * sensor_pt[0]) + (x403 * sensor_pt[2]);
	const FLT x406 = (x405 * x224) + (-1 * x225 * x397) + (x243 * x385) + (-1 * x404 * x241);
	const FLT x407 = 2 * ((x403 * sensor_pt[0]) + (-1 * x397 * sensor_pt[1]) + (x385 * sensor_pt[2]));
	const FLT x408 = (x404 * x234) + (-1 * x33 * x407) + (x225 * x392) + (-1 * x228 * x385);
	const FLT x409 = (x38 * x407) + (-1 * x243 * x392) + (-1 * x405 * x234) + (x228 * x397);
	const FLT x410 = (x409 * (*lh_p).Rot[1]) + (-1 * x406 * (*lh_p).Rot[2]) + (x408 * (*lh_p).Rot[0]);
	const FLT x411 = (x406 * (*lh_p).Rot[0]) + (x408 * (*lh_p).Rot[2]) + (-1 * x409 * (*lh_p).Rot[3]);
	const FLT x412 = x409 + (-1 * x410 * x166) + (x411 * x168);
	const FLT x413 = (x406 * (*lh_p).Rot[3]) + (-1 * x408 * (*lh_p).Rot[1]) + (x409 * (*lh_p).Rot[0]);
	const FLT x414 = x406 + (-1 * x413 * x168) + (x410 * x176);
	const FLT x415 = x408 + (-1 * x411 * x176) + (x413 * x166);
	const FLT x416 = (x72 * x415) + (x67 * x414);
	const FLT x417 = (-1 * x75 * (x416 + (x61 * x412))) + (x60 * x412);
	const FLT x418 = (x80 * x412) + (-1 * x416 * x114);
	const FLT x419 = ((-1 * x415 * x117) + (x414 * x116)) * x118;
	const FLT x420 = x419 + (-1 * x418 * x113);
	const FLT x421 = x417 * x103;
	const FLT x422 = (x84 * ((-1 * x417 * x105) + x421)) + (x417 * x102);
	const FLT x423 = (x417 * x107) + (x84 * x422);
	const FLT x424 = x419 + (-1 * x135 * (x418 + (x420 * x133) + (x423 * x111) + (x417 * x101) + (-1 * x131 * ((-1 * x97 * ((x84 * x423) + (x417 * x130) + (x417 * x124) + (x84 * (x423 + (x84 * (x422 + (x84 * ((x417 * x127) + x421 + (-1 * x417 * x126))) + (x417 * x128))) + (x417 * x129))))) + (-1 * x420 * x123)))));
	const FLT x425 = x11 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x426 = x354 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x427 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x428 = (x427 * x356) + (-1 * x359 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x426 * x342) + (x9 * x426 * x353 * x349) + (-1 * x425 * x351) + (-1 * x427 * x351) + (x425 * x356) + (x358 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x429 = x363 * (*_x0).Pose.Rot[0];
	const FLT x430 = x7 * x370;
	const FLT x431 = x428 * (*_x0).Pose.Rot[3];
	const FLT x432 = x7 * x346;
	const FLT x433 = x428 * x365;
	const FLT x434 = 0.5 * x342;
	const FLT x435 = x346 * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x436 = (-1 * x29 * x435) + (x371 * x399);
	const FLT x437 = x384 + x436 + (-1 * x433 * (*_x0).Pose.Rot[1]) + (-1 * x434 * x394) + x32 + (-1 * x429 * x428) + (x37 * x432) + (-1 * x31 * x430) + (-1 * x431 * x367) + (x428 * x391);
	const FLT x438 = x428 * x367;
	const FLT x439 = x23 * x430;
	const FLT x440 = x428 * x377;
	const FLT x441 = (x35 * x435) + (-1 * x371 * x382);
	const FLT x442 = (-1 * x434 * x387) + x441 + x398 + (-1 * x400) + (-1 * x440 * (*_x0).Pose.Rot[0]) + (-1 * x40 * x432) + x401 + (-1 * x428 * x393) + (x439 * (*_x0).Pose.Rot[1]) + (x438 * (*_x0).Pose.Rot[1]) + (-1 * x433 * (*_x0).Pose.Rot[3]);
	const FLT x443 = x37 * x435;
	const FLT x444 = x363 * (*_x0).Pose.Rot[1];
	const FLT x445 = x371 * x387;
	const FLT x446 = -1 * x34;
	const FLT x447 = x395 + (x439 * (*_x0).Pose.Rot[2]) + (-1 * x434 * x382) + (-1 * x433 * (*_x0).Pose.Rot[0]) + (-1 * x443) + (-1 * x29 * x432) + x445 + (x438 * (*_x0).Pose.Rot[2]) + x446 + (x428 * x444) + (x431 * x377);
	const FLT x448 = (x447 * sensor_pt[1]) + (-1 * x437 * sensor_pt[2]) + (x442 * sensor_pt[0]);
	const FLT x449 = x371 * x394;
	const FLT x450 = x40 * x435;
	const FLT x451 = x27 + (-1 * x438 * (*_x0).Pose.Rot[0]) + (x35 * x432) + (-1 * x430 * x381) + (x431 * x363) + (-1 * x440 * (*_x0).Pose.Rot[1]) + x388 + (-1 * x434 * x399) + (-1 * x386) + (-1 * x433 * (*_x0).Pose.Rot[2]) + (-1 * x449) + x450;
	const FLT x452 = (x437 * sensor_pt[1]) + (-1 * x451 * sensor_pt[0]) + (x447 * sensor_pt[2]);
	const FLT x453 = (-1 * x442 * x225) + (x451 * x243) + (-1 * x448 * x241) + (x452 * x224);
	const FLT x454 = 2 * ((-1 * x442 * sensor_pt[1]) + (x447 * sensor_pt[0]) + (x451 * sensor_pt[2]));
	const FLT x455 = (x448 * x234) + (-1 * x451 * x228) + (-1 * x33 * x454) + (x437 * x225);
	const FLT x456 = (x38 * x454) + (-1 * x452 * x234) + (x442 * x228) + (-1 * x437 * x243);
	const FLT x457 = (x456 * (*lh_p).Rot[1]) + (-1 * x453 * (*lh_p).Rot[2]) + (x455 * (*lh_p).Rot[0]);
	const FLT x458 = (x453 * (*lh_p).Rot[0]) + (-1 * x456 * (*lh_p).Rot[3]) + (x455 * (*lh_p).Rot[2]);
	const FLT x459 = x456 + (-1 * x457 * x166) + (x458 * x168);
	const FLT x460 = (x453 * (*lh_p).Rot[3]) + (-1 * x455 * (*lh_p).Rot[1]) + (x456 * (*lh_p).Rot[0]);
	const FLT x461 = x453 + (-1 * x460 * x168) + (x457 * x176);
	const FLT x462 = x455 + (-1 * x458 * x176) + (x460 * x166);
	const FLT x463 = (x72 * x462) + (x67 * x461);
	const FLT x464 = (-1 * x75 * (x463 + (x61 * x459))) + (x60 * x459);
	const FLT x465 = x464 * x103;
	const FLT x466 = (x84 * ((-1 * x464 * x105) + x465)) + (x464 * x102);
	const FLT x467 = (x464 * x107) + (x84 * x466);
	const FLT x468 = (x80 * x459) + (-1 * x463 * x114);
	const FLT x469 = ((-1 * x462 * x117) + (x461 * x116)) * x118;
	const FLT x470 = x469 + (-1 * x468 * x113);
	const FLT x471 = x469 + (-1 * x135 * (x468 + (x464 * x101) + (x467 * x111) + (x470 * x133) + (-1 * x131 * ((-1 * x97 * ((x84 * x467) + (x464 * x124) + (x464 * x130) + (x84 * (x467 + (x84 * (x466 + (x84 * ((x464 * x127) + x465 + (-1 * x464 * x126))) + (x464 * x128))) + (x464 * x129))))) + (-1 * x470 * x123)))));
	const FLT x472 = x351 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x473 = x356 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x474 = x349 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x475 = x6 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x476 = x24 * x475;
	const FLT x477 = (-1 * x7 * x472) + (x475 * x357) + (x7 * x473) + (-1 * x11 * x472) + (x11 * x473) + (x474 * x355) + (-1 * x474 * x350) + (-1 * x476 * x354);
	const FLT x478 = x9 * x370;
	const FLT x479 = x477 * (*_x0).Pose.Rot[3];
	const FLT x480 = x477 * x365;
	const FLT x481 = 0.5 * x476;
	const FLT x482 = x9 * x346;
	const FLT x483 = x396 + (-1 * x29 * x482) + (-1 * x477 * x429) + (-1 * x479 * x367) + x446 + (x477 * x391) + (-1 * x481 * x369) + x443 + (-1 * x480 * (*_x0).Pose.Rot[1]) + (-1 * x445) + (x478 * x341);
	const FLT x484 = x477 * x367;
	const FLT x485 = x477 * x377;
	const FLT x486 = (-1 * x390) + (-1 * x477 * x393) + (x35 * x482) + x449 + (x484 * (*_x0).Pose.Rot[1]) + x27 + (-1 * x480 * (*_x0).Pose.Rot[3]) + x389 + (-1 * x478 * x381) + (-1 * x450) + (-1 * x485 * (*_x0).Pose.Rot[0]) + (-1 * x31 * x481);
	const FLT x487 = x436 + (-1 * x480 * (*_x0).Pose.Rot[0]) + x340 + (-1 * x376) + (x485 * (*_x0).Pose.Rot[3]) + (-1 * x481 * x381) + (-1 * x37 * x482) + (x31 * x478) + x373 + (x477 * x444) + (x484 * (*_x0).Pose.Rot[2]);
	const FLT x488 = (x487 * sensor_pt[1]) + (-1 * x483 * sensor_pt[2]) + (x486 * sensor_pt[0]);
	const FLT x489 = x441 + x402 + (-1 * x485 * (*_x0).Pose.Rot[1]) + (-1 * x481 * x341) + (x479 * x363) + (-1 * x484 * (*_x0).Pose.Rot[0]) + (-1 * x480 * (*_x0).Pose.Rot[2]) + x30 + (-1 * x478 * x369) + (x40 * x482);
	const FLT x490 = (x483 * sensor_pt[1]) + (-1 * x489 * sensor_pt[0]) + (x487 * sensor_pt[2]);
	const FLT x491 = (-1 * x486 * x225) + (-1 * x488 * x241) + (x490 * x224) + (x489 * x243);
	const FLT x492 = (-1 * x486 * sensor_pt[1]) + (x487 * sensor_pt[0]) + (x489 * sensor_pt[2]);
	const FLT x493 = (x483 * x225) + (-1 * x489 * x228) + (-1 * x492 * x224) + (x488 * x234);
	const FLT x494 = (x492 * x241) + (-1 * x483 * x243) + (-1 * x490 * x234) + (x486 * x228);
	const FLT x495 = (x494 * (*lh_p).Rot[1]) + (-1 * x491 * (*lh_p).Rot[2]) + (x493 * (*lh_p).Rot[0]);
	const FLT x496 = (-1 * x494 * (*lh_p).Rot[3]) + (x491 * (*lh_p).Rot[0]) + (x493 * (*lh_p).Rot[2]);
	const FLT x497 = x494 + (-1 * x495 * x166) + (x496 * x168);
	const FLT x498 = (-1 * x493 * (*lh_p).Rot[1]) + (x491 * (*lh_p).Rot[3]) + (x494 * (*lh_p).Rot[0]);
	const FLT x499 = x491 + (-1 * x498 * x168) + (x495 * x176);
	const FLT x500 = (x498 * x166) + x493 + (-1 * x496 * x176);
	const FLT x501 = (x72 * x500) + (x67 * x499);
	const FLT x502 = (-1 * x75 * (x501 + (x61 * x497))) + (x60 * x497);
	const FLT x503 = x502 * x103;
	const FLT x504 = (x84 * ((-1 * x502 * x105) + x503)) + (x502 * x102);
	const FLT x505 = (x502 * x107) + (x84 * x504);
	const FLT x506 = (x80 * x497) + (-1 * x501 * x114);
	const FLT x507 = ((-1 * x500 * x117) + (x499 * x116)) * x118;
	const FLT x508 = x507 + (-1 * x506 * x113);
	const FLT x509 = x507 + (-1 * x135 * (x506 + (-1 * x131 * ((-1 * x97 * ((x502 * x130) + (x84 * x505) + (x502 * x124) + (x84 * (x505 + (x84 * ((x84 * ((x502 * x127) + x503 + (-1 * x502 * x126))) + x504 + (x502 * x128))) + (x502 * x129))))) + (-1 * x508 * x123))) + (x508 * x133) + (x502 * x101) + (x505 * x111)));
	const FLT x510 = dt * x167;
	const FLT x511 = dt * x169;
	const FLT x512 = x511 + x510;
	const FLT x513 = -1 * dt * x171;
	const FLT x514 = -1 * dt * x173;
	const FLT x515 = x514 + dt + x513;
	const FLT x516 = dt * x177;
	const FLT x517 = dt * x178;
	const FLT x518 = x517 + (-1 * x516);
	const FLT x519 = (x72 * x518) + (x67 * x515);
	const FLT x520 = x77 * ((-1 * x75 * (x519 + (x61 * x512))) + (x60 * x512));
	const FLT x521 = x86 * x520;
	const FLT x522 = (x84 * ((-1 * x85 * x520) + x521)) + (x87 * x520);
	const FLT x523 = (x88 * x520) + (x84 * x522);
	const FLT x524 = (x80 * x512) + (-1 * x519 * x114);
	const FLT x525 = ((-1 * x518 * x117) + (x515 * x116)) * x118;
	const FLT x526 = x525 + (-1 * x524 * x113);
	const FLT x527 = x525 + (-1 * x135 * (x524 + (-1 * x131 * ((-1 * x97 * ((x84 * (x523 + (x84 * (x522 + (x84 * ((x91 * x520) + x521 + (-1 * x520 * x125))) + (x92 * x520))) + (x93 * x520))) + (x89 * x520) + (x94 * x520) + (x84 * x523))) + (-1 * x526 * x123))) + (x526 * x133) + (x520 * x100) + (x523 * x111)));
	const FLT x528 = (-1 * dt * x189) + dt;
	const FLT x529 = x528 + x514;
	const FLT x530 = x510 + (-1 * x511);
	const FLT x531 = dt * x193;
	const FLT x532 = dt * x194;
	const FLT x533 = x532 + x531;
	const FLT x534 = (x72 * x533) + (x67 * x530);
	const FLT x535 = (-1 * x75 * (x534 + (x61 * x529))) + (x60 * x529);
	const FLT x536 = x77 * x535;
	const FLT x537 = x86 * x536;
	const FLT x538 = (x84 * ((-1 * x85 * x536) + x537)) + (x87 * x536);
	const FLT x539 = (x88 * x536) + (x84 * x538);
	const FLT x540 = (x80 * x529) + (-1 * x534 * x114);
	const FLT x541 = ((-1 * x533 * x117) + (x530 * x116)) * x118;
	const FLT x542 = x541 + (-1 * x540 * x113);
	const FLT x543 = x541 + (-1 * x135 * ((x542 * x133) + (x539 * x111) + x540 + (x536 * x100) + (-1 * x131 * ((-1 * x97 * ((x94 * x536) + (x535 * x130) + (x84 * x539) + (x84 * (x539 + (x84 * (x538 + (x84 * ((x535 * x127) + x537 + (-1 * x536 * x125))) + (x92 * x536))) + (x535 * x129))))) + (-1 * x542 * x123)))));
	const FLT x544 = x531 + (-1 * x532);
	const FLT x545 = x516 + x517;
	const FLT x546 = x528 + x513;
	const FLT x547 = (x72 * x546) + (x67 * x545);
	const FLT x548 = (-1 * x75 * (x547 + (x61 * x544))) + (x60 * x544);
	const FLT x549 = x548 * x103;
	const FLT x550 = (x84 * ((-1 * x548 * x105) + x549)) + (x548 * x102);
	const FLT x551 = (x548 * x107) + (x84 * x550);
	const FLT x552 = (x80 * x544) + (-1 * x547 * x114);
	const FLT x553 = ((-1 * x546 * x117) + (x545 * x116)) * x118;
	const FLT x554 = x553 + (-1 * x552 * x113);
	const FLT x555 = x553 + (-1 * x135 * ((x554 * x133) + (-1 * x131 * ((-1 * x97 * ((x84 * x551) + (x84 * (x551 + (x84 * ((x84 * ((x548 * x127) + x549 + (-1 * x548 * x126))) + x550 + (x548 * x128))) + (x548 * x129))) + (x548 * x130) + (x548 * x124))) + (-1 * x554 * x123))) + (x551 * x111) + x552 + (x548 * x101)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x136 + (x137 * x136));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x153 + (x137 * x153));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x165 + (x165 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x188 + (x188 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x204 + (x204 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x216 + (x216 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x263 + (x263 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x294 + (x294 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x318 + (x318 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x339 + (x339 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x424 + (x424 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x471 + (x471 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x509 + (x509 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x527 + (x527 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x543 + (x543 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), x555 + (x555 * x137));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae10df0>]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x13 * (*_x0).Pose.Rot[0];
	const FLT x15 = x11 * x10;
	const FLT x16 = x15 * (*_x0).Pose.Rot[2];
	const FLT x17 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x17 * (*_x0).Pose.Rot[1];
	const FLT x19 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x20 = x19 * (*_x0).Pose.Rot[3];
	const FLT x21 = x18 + x14 + (-1 * x20) + x16;
	const FLT x22 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x17 * (*_x0).Pose.Rot[0];
	const FLT x24 = x13 * (*_x0).Pose.Rot[1];
	const FLT x25 = x15 * (*_x0).Pose.Rot[3];
	const FLT x26 = x19 * (*_x0).Pose.Rot[2];
	const FLT x27 = x26 + x25 + x23 + (-1 * x24);
	const FLT x28 = (x21 * sensor_pt[2]) + (-1 * x27 * sensor_pt[1]) + (x22 * sensor_pt[0]);
	const FLT x29 = x17 * (*_x0).Pose.Rot[2];
	const FLT x30 = x13 * (*_x0).Pose.Rot[3];
	const FLT x31 = x15 * (*_x0).Pose.Rot[1];
	const FLT x32 = x19 * (*_x0).Pose.Rot[0];
	const FLT x33 = x32 + x31 + (-1 * x29) + x30;
	const FLT x34 = (-1 * x33 * sensor_pt[2]) + (x27 * sensor_pt[0]) + (x22 * sensor_pt[1]);
	const FLT x35 = sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (2 * ((x34 * x33) + (-1 * x21 * x28))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x36 = (-1 * x21 * sensor_pt[0]) + (x22 * sensor_pt[2]) + (x33 * sensor_pt[1]);
	const FLT x37 = (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (2 * ((x28 * x27) + (-1 * x33 * x36))) + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x38 = (2 * ((x36 * x21) + (-1 * x34 * x27))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x39 = (x35 * (*lh_p).Rot[0]) + (-1 * x38 * (*lh_p).Rot[2]) + (x37 * (*lh_p).Rot[1]);
	const FLT x40 = (-1 * x37 * (*lh_p).Rot[3]) + (x35 * (*lh_p).Rot[2]) + (x38 * (*lh_p).Rot[0]);
	const FLT x41 = x37 + (*lh_p).Pos[1] + (2 * ((x40 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1])));
	const FLT x42 = x41 * x41;
	const FLT x43 = (-1 * x35 * (*lh_p).Rot[1]) + (x37 * (*lh_p).Rot[0]) + (x38 * (*lh_p).Rot[3]);
	const FLT x44 = x35 + (2 * ((x43 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x45 = x38 + (2 * ((x39 * (*lh_p).Rot[2]) + (-1 * x43 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x46 = x45 * x45;
	const FLT x47 = x46 + (x44 * x44);
	const FLT x48 = x47 + x42;
	const FLT x49 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x50 = cos(x49);
	const FLT x51 = 1. / x50;
	const FLT x52 = x51 * (1. / sqrt(x48));
	const FLT x53 = asin(x52 * x41);
	const FLT x54 = 8.0108022e-06 * x53;
	const FLT x55 = -8.0108022e-06 + (-1 * x54);
	const FLT x56 = 0.0028679863 + (x53 * x55);
	const FLT x57 = 1. / sqrt(1 + (-1 * (1. / (x50 * x50)) * x42 * (1. / x48)));
	const FLT x58 = (-1 * x18) + x20 + (-1 * x16) + (-1 * x14);
	const FLT x59 = 2 * x33;
	const FLT x60 = 2 * x22;
	const FLT x61 = x60 * x27;
	const FLT x62 = x61 + (-1 * x58 * x59);
	const FLT x63 = x60 * x21;
	const FLT x64 = (x59 * x27) + (-1 * x63);
	const FLT x65 = 2 * x21;
	const FLT x66 = 1 + (x65 * x58) + (-2 * (x27 * x27));
	const FLT x67 = (x66 * (*lh_p).Rot[0]) + (-1 * x62 * (*lh_p).Rot[3]) + (x64 * (*lh_p).Rot[2]);
	const FLT x68 = 2 * (*lh_p).Rot[3];
	const FLT x69 = (-1 * x66 * (*lh_p).Rot[2]) + (x62 * (*lh_p).Rot[1]) + (x64 * (*lh_p).Rot[0]);
	const FLT x70 = 2 * (*lh_p).Rot[1];
	const FLT x71 = x62 + (x67 * x68) + (-1 * x70 * x69);
	const FLT x72 = 2 * x41;
	const FLT x73 = 2 * (*lh_p).Rot[2];
	const FLT x74 = (x66 * (*lh_p).Rot[3]) + (-1 * x64 * (*lh_p).Rot[1]) + (x62 * (*lh_p).Rot[0]);
	const FLT x75 = x66 + (x73 * x69) + (-1 * x74 * x68);
	const FLT x76 = 2 * x45;
	const FLT x77 = x64 + (x70 * x74) + (-1 * x73 * x67);
	const FLT x78 = 2 * x44;
	const FLT x79 = (x78 * x77) + (x75 * x76);
	const FLT x80 = 1.0/2.0 * x41;
	const FLT x81 = x80 * x51 * (1. / (x48 * sqrt(x48)));
	const FLT x82 = x57 * ((-1 * x81 * (x79 + (x71 * x72))) + (x71 * x52));
	const FLT x83 = x82 * x55;
	const FLT x84 = (x53 * ((-1 * x82 * x54) + x83)) + (x82 * x56);
	const FLT x85 = 5.3685255e-06 + (x53 * x56);
	const FLT x86 = (x82 * x85) + (x84 * x53);
	const FLT x87 = 0.0076069798 + (x85 * x53);
	const FLT x88 = x87 * x53;
	const FLT x89 = -8.0108022e-06 + (-1.60216044e-05 * x53);
	const FLT x90 = x56 + (x89 * x53);
	const FLT x91 = x85 + (x53 * x90);
	const FLT x92 = x87 + (x53 * x91);
	const FLT x93 = (x53 * x92) + x88;
	const FLT x94 = atan2(-1 * x44, x45);
	const FLT x95 = tan(x49);
	const FLT x96 = x95 * (1. / sqrt(x47));
	const FLT x97 = x96 * x41;
	const FLT x98 = (-1 * asin(x97)) + x94 + (*bsc0).ogeephase;
	const FLT x99 = (sin(x98) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x100 = sin(x49);
	const FLT x101 = x99 * x100;
	const FLT x102 = x50 + (-1 * x93 * x101);
	const FLT x103 = 1. / x102;
	const FLT x104 = x53 * x53;
	const FLT x105 = x99 * x104;
	const FLT x106 = x103 * x105;
	const FLT x107 = x80 * x95 * (1. / (x47 * sqrt(x47)));
	const FLT x108 = (x71 * x96) + (-1 * x79 * x107);
	const FLT x109 = 1. / x47;
	const FLT x110 = 1. / sqrt(1 + (-1 * (x95 * x95) * x42 * x109));
	const FLT x111 = x44 * (1. / x46);
	const FLT x112 = 1. / x45;
	const FLT x113 = x46 * x109;
	const FLT x114 = ((-1 * x77 * x112) + (x75 * x111)) * x113;
	const FLT x115 = cos(x98) * (*bsc0).ogeemag;
	const FLT x116 = x115 * (x114 + (-1 * x108 * x110));
	const FLT x117 = x93 * x100;
	const FLT x118 = 2.40324066e-05 * x53;
	const FLT x119 = x87 * (1. / (x102 * x102)) * x105;
	const FLT x120 = 2 * x88 * x99 * x103;
	const FLT x121 = x87 * x103 * x104;
	const FLT x122 = x97 + (x87 * x106);
	const FLT x123 = 1. / sqrt(1 + (-1 * (x122 * x122)));
	const FLT x124 = x114 + (-1 * x123 * (x108 + (x82 * x120) + (x86 * x106) + (x116 * x121) + (-1 * x119 * ((-1 * x101 * ((x82 * x87) + (x82 * x92) + (x86 * x53) + (x53 * (x86 + (x53 * (x84 + (x53 * ((x82 * x89) + x83 + (-1 * x82 * x118))) + (x82 * x90))) + (x82 * x91))))) + (-1 * x116 * x117)))));
	const FLT x125 = cos((*bsc0).gibpha + (-1 * asin(x122)) + x94) * (*bsc0).gibmag;
	const FLT x126 = 2 * ((-1 * x25) + (-1 * x26) + x24 + (-1 * x23));
	const FLT x127 = x60 * x33;
	const FLT x128 = x127 + (-1 * x21 * x126);
	const FLT x129 = 1 + (x27 * x126) + (-2 * (x33 * x33));
	const FLT x130 = (x65 * x33) + (-1 * x61);
	const FLT x131 = (x130 * (*lh_p).Rot[0]) + (x128 * (*lh_p).Rot[2]) + (-1 * x129 * (*lh_p).Rot[3]);
	const FLT x132 = (x129 * (*lh_p).Rot[1]) + (x128 * (*lh_p).Rot[0]) + (-1 * x130 * (*lh_p).Rot[2]);
	const FLT x133 = x129 + (x68 * x131) + (-1 * x70 * x132);
	const FLT x134 = 2 * ((x130 * (*lh_p).Rot[3]) + (-1 * x128 * (*lh_p).Rot[1]) + (x129 * (*lh_p).Rot[0]));
	const FLT x135 = x130 + (x73 * x132) + (-1 * x134 * (*lh_p).Rot[3]);
	const FLT x136 = x128 + (x134 * (*lh_p).Rot[1]) + (-1 * x73 * x131);
	const FLT x137 = (x78 * x136) + (x76 * x135);
	const FLT x138 = x57 * ((-1 * x81 * (x137 + (x72 * x133))) + (x52 * x133));
	const FLT x139 = x55 * x138;
	const FLT x140 = (x53 * ((-1 * x54 * x138) + x139)) + (x56 * x138);
	const FLT x141 = (x85 * x138) + (x53 * x140);
	const FLT x142 = (x96 * x133) + (-1 * x107 * x137);
	const FLT x143 = ((-1 * x112 * x136) + (x111 * x135)) * x113;
	const FLT x144 = x143 + (-1 * x110 * x142);
	const FLT x145 = x115 * x117;
	const FLT x146 = x115 * x121;
	const FLT x147 = x143 + (-1 * x123 * ((x120 * x138) + (x106 * x141) + x142 + (x144 * x146) + (-1 * x119 * ((-1 * x101 * ((x87 * x138) + (x53 * x141) + (x92 * x138) + (x53 * ((x53 * (x140 + (x53 * (x139 + (x89 * x138) + (-1 * x118 * x138))) + (x90 * x138))) + x141 + (x91 * x138))))) + (-1 * x144 * x145)))));
	const FLT x148 = (x65 * x27) + (-1 * x127);
	const FLT x149 = 2 * ((-1 * x32) + (-1 * x30) + x29 + (-1 * x31));
	const FLT x150 = 1 + (x33 * x149) + (-2 * (x21 * x21));
	const FLT x151 = x63 + (-1 * x27 * x149);
	const FLT x152 = (x151 * (*lh_p).Rot[0]) + (-1 * x148 * (*lh_p).Rot[3]) + (x150 * (*lh_p).Rot[2]);
	const FLT x153 = (x148 * (*lh_p).Rot[1]) + (-1 * x151 * (*lh_p).Rot[2]) + (x150 * (*lh_p).Rot[0]);
	const FLT x154 = x148 + (x68 * x152) + (-1 * x70 * x153);
	const FLT x155 = (x151 * (*lh_p).Rot[3]) + (-1 * x150 * (*lh_p).Rot[1]) + (x148 * (*lh_p).Rot[0]);
	const FLT x156 = x151 + (x73 * x153) + (-1 * x68 * x155);
	const FLT x157 = x150 + (x70 * x155) + (-1 * x73 * x152);
	const FLT x158 = (x78 * x157) + (x76 * x156);
	const FLT x159 = x57 * ((-1 * x81 * (x158 + (x72 * x154))) + (x52 * x154));
	const FLT x160 = x55 * x159;
	const FLT x161 = (x53 * ((-1 * x54 * x159) + x160)) + (x56 * x159);
	const FLT x162 = (x85 * x159) + (x53 * x161);
	const FLT x163 = (x96 * x154) + (-1 * x107 * x158);
	const FLT x164 = ((-1 * x112 * x157) + (x111 * x156)) * x113;
	const FLT x165 = x164 + (-1 * x110 * x163);
	const FLT x166 = x164 + (-1 * x123 * (x163 + (x165 * x146) + (-1 * x119 * ((-1 * x101 * ((x87 * x159) + (x53 * ((x53 * (x161 + (x53 * ((x89 * x159) + x160 + (-1 * x118 * x159))) + (x90 * x159))) + x162 + (x91 * x159))) + (x53 * x162) + (x92 * x159))) + (-1 * x165 * x145))) + (x106 * x162) + (x120 * x159)));
	cnMatrixOptionalSet(Hx, 0, 0, x124 + (x124 * x125));
	cnMatrixOptionalSet(Hx, 0, 1, x147 + (x125 * x147));
	cnMatrixOptionalSet(Hx, 0, 2, x166 + (x125 * x166));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = tan(x0);
	const FLT x2 = dt * (*_x0).Velocity.Pos[2];
	const FLT x3 = 1.0/2.0 * dt * fabs(dt);
	const FLT x4 = x3 * (*_x0).Acc[2];
	const FLT x5 = dt * dt;
	const FLT x6 = x5 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x7 = x5 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x8 = x5 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x9 = 1e-10 + x6 + x7 + x8;
	const FLT x10 = sqrt(x9);
	const FLT x11 = 0.5 * x10;
	const FLT x12 = sin(x11);
	const FLT x13 = (1. / x9) * (x12 * x12);
	const FLT x14 = cos(x11);
	const FLT x15 = 1. / sqrt((x7 * x13) + (x6 * x13) + (x8 * x13) + (x14 * x14));
	const FLT x16 = dt * x15 * x12 * (1. / x10);
	const FLT x17 = x16 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x18 = x15 * x14;
	const FLT x19 = x16 * (*_x0).Pose.Rot[1];
	const FLT x20 = x16 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x21 = (x19 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (x18 * (*_x0).Pose.Rot[2]);
	const FLT x22 = x16 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x23 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) + (-1 * x17 * (*_x0).Pose.Rot[2]);
	const FLT x24 = (x18 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[2]) + (x22 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x25 = (-1 * x24 * sensor_pt[1]) + (x21 * sensor_pt[2]) + (x23 * sensor_pt[0]);
	const FLT x26 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[2]) + (x18 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[3]);
	const FLT x27 = (-1 * x26 * sensor_pt[2]) + (x24 * sensor_pt[0]) + (x23 * sensor_pt[1]);
	const FLT x28 = 2 * ((x26 * x27) + (-1 * x25 * x21));
	const FLT x29 = x28 + x4 + sensor_pt[2] + x2 + (*_x0).Pose.Pos[2];
	const FLT x30 = x29 * (*lh_p).Rot[0];
	const FLT x31 = x3 * (*_x0).Acc[1];
	const FLT x32 = dt * (*_x0).Velocity.Pos[1];
	const FLT x33 = (-1 * x21 * sensor_pt[0]) + (x23 * sensor_pt[2]) + (x26 * sensor_pt[1]);
	const FLT x34 = 2 * ((x24 * x25) + (-1 * x33 * x26));
	const FLT x35 = x34 + x32 + (*_x0).Pose.Pos[1] + sensor_pt[1] + x31;
	const FLT x36 = x35 * (*lh_p).Rot[1];
	const FLT x37 = dt * (*_x0).Velocity.Pos[0];
	const FLT x38 = x3 * (*_x0).Acc[0];
	const FLT x39 = 2 * ((x33 * x21) + (-1 * x24 * x27));
	const FLT x40 = x39 + sensor_pt[0] + x37 + (*_x0).Pose.Pos[0] + x38;
	const FLT x41 = x40 * (*lh_p).Rot[2];
	const FLT x42 = (-1 * x41) + x30 + x36;
	const FLT x43 = x29 * (*lh_p).Rot[2];
	const FLT x44 = x40 * (*lh_p).Rot[0];
	const FLT x45 = x35 * (*lh_p).Rot[3];
	const FLT x46 = (-1 * x45) + x43 + x44;
	const FLT x47 = x35 + (*lh_p).Pos[1] + (2 * ((x46 * (*lh_p).Rot[3]) + (-1 * x42 * (*lh_p).Rot[1])));
	const FLT x48 = x47 * x47;
	const FLT x49 = x35 * (*lh_p).Rot[0];
	const FLT x50 = x40 * (*lh_p).Rot[3];
	const FLT x51 = x29 * (*lh_p).Rot[1];
	const FLT x52 = (-1 * x51) + x49 + x50;
	const FLT x53 = x29 + (2 * ((x52 * (*lh_p).Rot[1]) + (-1 * x46 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x54 = x40 + (2 * ((x42 * (*lh_p).Rot[2]) + (-1 * x52 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x55 = x54 * x54;
	const FLT x56 = x55 + (x53 * x53);
	const FLT x57 = 1. / x56;
	const FLT x58 = 1. / sqrt(1 + (-1 * (x1 * x1) * x57 * x48));
	const FLT x59 = x54 * x47;
	const FLT x60 = x1 * (1. / (x56 * sqrt(x56)));
	const FLT x61 = x60 * x59;
	const FLT x62 = x53 * x57;
	const FLT x63 = x62 + (x61 * x58);
	const FLT x64 = atan2(-1 * x53, x54);
	const FLT x65 = x1 * (1. / sqrt(x56));
	const FLT x66 = x65 * x47;
	const FLT x67 = (-1 * asin(x66)) + x64 + (*bsc0).ogeephase;
	const FLT x68 = cos(x67) * (*bsc0).ogeemag;
	const FLT x69 = x56 + x48;
	const FLT x70 = cos(x0);
	const FLT x71 = 1. / x70;
	const FLT x72 = x71 * (1. / sqrt(x69));
	const FLT x73 = asin(x72 * x47);
	const FLT x74 = 8.0108022e-06 * x73;
	const FLT x75 = -8.0108022e-06 + (-1 * x74);
	const FLT x76 = 0.0028679863 + (x73 * x75);
	const FLT x77 = 5.3685255e-06 + (x73 * x76);
	const FLT x78 = 0.0076069798 + (x73 * x77);
	const FLT x79 = x73 * x78;
	const FLT x80 = -8.0108022e-06 + (-1.60216044e-05 * x73);
	const FLT x81 = x76 + (x80 * x73);
	const FLT x82 = x77 + (x81 * x73);
	const FLT x83 = x78 + (x82 * x73);
	const FLT x84 = (x83 * x73) + x79;
	const FLT x85 = (sin(x67) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x86 = sin(x0);
	const FLT x87 = x85 * x86;
	const FLT x88 = x70 + (-1 * x84 * x87);
	const FLT x89 = 1. / x88;
	const FLT x90 = x73 * x73;
	const FLT x91 = x78 * x90;
	const FLT x92 = x89 * x91;
	const FLT x93 = x68 * x92;
	const FLT x94 = 2 * x54;
	const FLT x95 = 1. / sqrt(1 + (-1 * (1. / (x70 * x70)) * (1. / x69) * x48));
	const FLT x96 = x71 * (1. / (x69 * sqrt(x69)));
	const FLT x97 = x96 * x47;
	const FLT x98 = x89 * x85;
	const FLT x99 = x79 * x98;
	const FLT x100 = x99 * x97 * x95;
	const FLT x101 = x84 * x86;
	const FLT x102 = x68 * x101;
	const FLT x103 = x83 * x95;
	const FLT x104 = x59 * x96;
	const FLT x105 = x75 * x95;
	const FLT x106 = -1 * x105 * x104;
	const FLT x107 = 2.40324066e-05 * x73;
	const FLT x108 = x95 * x107;
	const FLT x109 = x80 * x95;
	const FLT x110 = x81 * x95;
	const FLT x111 = x76 * x95;
	const FLT x112 = x74 * x95;
	const FLT x113 = (x73 * ((x104 * x112) + x106)) + (-1 * x104 * x111);
	const FLT x114 = x82 * x95;
	const FLT x115 = x77 * x95;
	const FLT x116 = (-1 * x104 * x115) + (x73 * x113);
	const FLT x117 = x78 * x95;
	const FLT x118 = (1. / (x88 * x88)) * x85 * x91;
	const FLT x119 = x90 * x98;
	const FLT x120 = x66 + (x78 * x119);
	const FLT x121 = 1. / sqrt(1 + (-1 * (x120 * x120)));
	const FLT x122 = x62 + (-1 * x121 * ((-1 * x61) + (-1 * x118 * ((-1 * x87 * ((x73 * x116) + (-1 * x103 * x104) + (-1 * x104 * x117) + (x73 * (x116 + (x73 * (x113 + (x73 * (x106 + (-1 * x109 * x104) + (x108 * x104))) + (-1 * x104 * x110))) + (-1 * x104 * x114))))) + (-1 * x63 * x102))) + (x63 * x93) + (x119 * x116) + (-1 * x94 * x100)));
	const FLT x123 = cos((-1 * asin(x120)) + (*bsc0).gibpha + x64) * (*bsc0).gibmag;
	const FLT x124 = x65 * x58;
	const FLT x125 = (-1 * x96 * x48) + x72;
	const FLT x126 = x105 * x125;
	const FLT x127 = x95 * x125;
	const FLT x128 = (x73 * ((-1 * x74 * x127) + x126)) + (x111 * x125);
	const FLT x129 = (x115 * x125) + (x73 * x128);
	const FLT x130 = 2 * x99;
	const FLT x131 = x121 * ((x119 * x129) + (x127 * x130) + (-1 * x118 * ((-1 * x87 * ((x117 * x125) + (x73 * x129) + (x103 * x125) + (x73 * ((x73 * (x128 + (x73 * (x126 + (x109 * x125) + (-1 * x107 * x127))) + (x110 * x125))) + x129 + (x114 * x125))))) + (x102 * x124))) + (-1 * x93 * x124) + x65);
	const FLT x132 = x60 * x47;
	const FLT x133 = x53 * x132;
	const FLT x134 = -1 * x54 * x57;
	const FLT x135 = x68 * (x134 + (x58 * x133));
	const FLT x136 = 2 * x53;
	const FLT x137 = x53 * x97;
	const FLT x138 = -1 * x105 * x137;
	const FLT x139 = (x73 * ((x112 * x137) + x138)) + (-1 * x111 * x137);
	const FLT x140 = (-1 * x115 * x137) + (x73 * x139);
	const FLT x141 = x134 + (-1 * x121 * ((x119 * x140) + (-1 * x118 * ((-1 * x87 * ((-1 * x103 * x137) + (x73 * (x140 + (x73 * (x139 + (x73 * ((-1 * x109 * x137) + (x108 * x137) + x138)) + (-1 * x110 * x137))) + (-1 * x114 * x137))) + (-1 * x117 * x137) + (x73 * x140))) + (-1 * x101 * x135))) + (-1 * x133) + (x92 * x135) + (-1 * x100 * x136)));
	const FLT x142 = 2 * x45;
	const FLT x143 = (2 * x43) + (-1 * x142);
	const FLT x144 = 2 * x41;
	const FLT x145 = (2 * x36) + (-1 * x144);
	const FLT x146 = (x136 * x145) + (x94 * x143);
	const FLT x147 = 1.0/2.0 * x132;
	const FLT x148 = 2 * x51;
	const FLT x149 = (2 * x50) + (-1 * x148);
	const FLT x150 = (x65 * x149) + (-1 * x146 * x147);
	const FLT x151 = x53 * (1. / x55);
	const FLT x152 = 1. / x54;
	const FLT x153 = x57 * x55;
	const FLT x154 = ((-1 * x145 * x152) + (x143 * x151)) * x153;
	const FLT x155 = x154 + (-1 * x58 * x150);
	const FLT x156 = 2 * x47;
	const FLT x157 = 1.0/2.0 * x97;
	const FLT x158 = (-1 * x157 * (x146 + (x149 * x156))) + (x72 * x149);
	const FLT x159 = x95 * x158;
	const FLT x160 = x75 * x159;
	const FLT x161 = (x73 * ((-1 * x74 * x159) + x160)) + (x76 * x159);
	const FLT x162 = (x77 * x159) + (x73 * x161);
	const FLT x163 = x154 + (-1 * x121 * (x150 + (x93 * x155) + (x119 * x162) + (-1 * x118 * ((-1 * x87 * ((x78 * x159) + (x73 * x162) + (x73 * (x162 + (x73 * ((x73 * ((x109 * x158) + x160 + (-1 * x107 * x159))) + x161 + (x81 * x159))) + (x82 * x159))) + (x103 * x158))) + (-1 * x102 * x155))) + (x130 * x159)));
	const FLT x164 = (-1 * x4) + (-1 * x28) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * sensor_pt[2]) + (-1 * x2);
	const FLT x165 = 2 * (*lh_p).Rot[3];
	const FLT x166 = 2 * (*lh_p).Rot[2];
	const FLT x167 = (x35 * x166) + (-1 * x165 * x164);
	const FLT x168 = 2 * (*lh_p).Rot[1];
	const FLT x169 = 2 * x49;
	const FLT x170 = x149 + (x168 * x164) + x169;
	const FLT x171 = (x170 * x136) + (x94 * x167);
	const FLT x172 = 2 * x30;
	const FLT x173 = (-4 * x36) + (-1 * x172) + x144;
	const FLT x174 = (x65 * x173) + (-1 * x171 * x147);
	const FLT x175 = ((-1 * x170 * x152) + (x167 * x151)) * x153;
	const FLT x176 = x175 + (-1 * x58 * x174);
	const FLT x177 = (-1 * x157 * (x171 + (x173 * x156))) + (x72 * x173);
	const FLT x178 = x105 * x177;
	const FLT x179 = x95 * x177;
	const FLT x180 = (x73 * ((-1 * x74 * x179) + x178)) + (x111 * x177);
	const FLT x181 = (x115 * x177) + (x73 * x180);
	const FLT x182 = x175 + (-1 * x121 * (x174 + (x93 * x176) + (x119 * x181) + (-1 * x118 * ((-1 * x87 * ((x73 * x181) + (x103 * x177) + (x117 * x177) + (x73 * (x181 + (x73 * (x180 + (x73 * (x178 + (x109 * x177) + (-1 * x107 * x179))) + (x110 * x177))) + (x114 * x177))))) + (-1 * x102 * x176))) + (x179 * x130)));
	const FLT x183 = (-1 * x39) + (-1 * (*_x0).Pose.Pos[0]) + (-1 * x38) + (-1 * x37) + (-1 * sensor_pt[0]);
	const FLT x184 = x145 + x172 + (x166 * x183);
	const FLT x185 = 2 * x44;
	const FLT x186 = (-1 * x185) + (-4 * x43) + x142;
	const FLT x187 = (x186 * x136) + (x94 * x184);
	const FLT x188 = (x29 * x165) + (-1 * x168 * x183);
	const FLT x189 = (x65 * x188) + (-1 * x187 * x147);
	const FLT x190 = ((-1 * x186 * x152) + (x184 * x151)) * x153;
	const FLT x191 = x190 + (-1 * x58 * x189);
	const FLT x192 = (-1 * x157 * (x187 + (x188 * x156))) + (x72 * x188);
	const FLT x193 = x105 * x192;
	const FLT x194 = (x73 * ((-1 * x112 * x192) + x193)) + (x111 * x192);
	const FLT x195 = (x115 * x192) + (x73 * x194);
	const FLT x196 = x95 * x130;
	const FLT x197 = x190 + (-1 * x121 * ((x196 * x192) + (x93 * x191) + (-1 * x118 * ((-1 * x87 * ((x117 * x192) + (x73 * x195) + (x103 * x192) + (x73 * (x195 + (x73 * (x194 + (x73 * ((x109 * x192) + x193 + (-1 * x108 * x192))) + (x110 * x192))) + (x114 * x192))))) + (-1 * x102 * x191))) + x189 + (x119 * x195)));
	const FLT x198 = x148 + (-1 * x169) + (-4 * x50);
	const FLT x199 = (-1 * x34) + (-1 * x32) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x31) + (-1 * sensor_pt[1]);
	const FLT x200 = (x40 * x168) + (-1 * x166 * x199);
	const FLT x201 = (x200 * x136) + (x94 * x198);
	const FLT x202 = x143 + (x165 * x199) + x185;
	const FLT x203 = (x65 * x202) + (-1 * x201 * x147);
	const FLT x204 = ((-1 * x200 * x152) + (x198 * x151)) * x153;
	const FLT x205 = x204 + (-1 * x58 * x203);
	const FLT x206 = (-1 * x157 * (x201 + (x202 * x156))) + (x72 * x202);
	const FLT x207 = x206 * x105;
	const FLT x208 = (x73 * ((-1 * x206 * x112) + x207)) + (x206 * x111);
	const FLT x209 = (x206 * x115) + (x73 * x208);
	const FLT x210 = x204 + (-1 * x121 * (x203 + (x93 * x205) + (x209 * x119) + (-1 * x118 * ((-1 * x87 * ((x206 * x117) + (x73 * (x209 + (x73 * (x208 + (x73 * ((x206 * x109) + x207 + (-1 * x206 * x108))) + (x206 * x110))) + (x206 * x114))) + (x206 * x103) + (x73 * x209))) + (-1 * x205 * x102))) + (x206 * x196)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), x122 + (x123 * x122));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), (-1 * x123 * x131) + (-1 * x131));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x141 + (x123 * x141));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x163 + (x123 * x163));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), x182 + (x123 * x182));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x197 + (x123 * x197));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), x210 + (x210 * x123));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae7f460>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae7f520>, <cnkalman.codegen.WrapMember object at 0x7f5abae7f4c0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae7f1c0>, <cnkalman.codegen.WrapMember object at 0x7f5abae7f580>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae7f3a0>, <cnkalman.codegen.WrapMember object at 0x7f5abae7f3d0>]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = cos(x0);
	const FLT x2 = 1.0/2.0 * dt * fabs(dt);
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x15 * (*_x0).Pose.Rot[2]);
	const FLT x21 = (x18 * (*_x0).Pose.Rot[2]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x20 * sensor_pt[0]);
	const FLT x23 = (-1 * x17 * (*_x0).Pose.Rot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x24 = (x21 * sensor_pt[0]) + (-1 * x23 * sensor_pt[2]) + (x20 * sensor_pt[1]);
	const FLT x25 = sensor_pt[2] + (x2 * (*_x0).Acc[2]) + (2 * ((x24 * x23) + (-1 * x22 * x19))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x26 = (x20 * sensor_pt[2]) + (-1 * x19 * sensor_pt[0]) + (x23 * sensor_pt[1]);
	const FLT x27 = (2 * ((x22 * x21) + (-1 * x23 * x26))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x2 * (*_x0).Acc[1]);
	const FLT x28 = (*_x0).Pose.Pos[0] + sensor_pt[0] + (2 * ((x26 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[0]) + (x2 * (*_x0).Acc[0]);
	const FLT x29 = (-1 * x28 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]) + (x27 * (*lh_p).Rot[1]);
	const FLT x30 = (-1 * x27 * (*lh_p).Rot[3]) + (x25 * (*lh_p).Rot[2]) + (x28 * (*lh_p).Rot[0]);
	const FLT x31 = x27 + (*lh_p).Pos[1] + (2 * ((x30 * (*lh_p).Rot[3]) + (-1 * x29 * (*lh_p).Rot[1])));
	const FLT x32 = x31 * x31;
	const FLT x33 = (-1 * x25 * (*lh_p).Rot[1]) + (x27 * (*lh_p).Rot[0]) + (x28 * (*lh_p).Rot[3]);
	const FLT x34 = x25 + (2 * ((x33 * (*lh_p).Rot[1]) + (-1 * x30 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x35 = x28 + (2 * ((x29 * (*lh_p).Rot[2]) + (-1 * x33 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x36 = (x35 * x35) + (x34 * x34);
	const FLT x37 = x36 + x32;
	const FLT x38 = x31 * (1. / sqrt(x37));
	const FLT x39 = asin((1. / x1) * x38);
	const FLT x40 = 8.0108022e-06 * x39;
	const FLT x41 = -8.0108022e-06 + (-1 * x40);
	const FLT x42 = 0.0028679863 + (x41 * x39);
	const FLT x43 = 5.3685255e-06 + (x42 * x39);
	const FLT x44 = 0.0076069798 + (x43 * x39);
	const FLT x45 = x39 * x39;
	const FLT x46 = x44 * x39;
	const FLT x47 = -8.0108022e-06 + (-1.60216044e-05 * x39);
	const FLT x48 = x42 + (x47 * x39);
	const FLT x49 = x43 + (x48 * x39);
	const FLT x50 = x44 + (x49 * x39);
	const FLT x51 = (x50 * x39) + x46;
	const FLT x52 = atan2(-1 * x34, x35);
	const FLT x53 = tan(x0);
	const FLT x54 = x31 * (1. / sqrt(x36));
	const FLT x55 = x54 * x53;
	const FLT x56 = (-1 * asin(x55)) + x52 + (*bsc0).ogeephase;
	const FLT x57 = sin(x56);
	const FLT x58 = (x57 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x59 = sin(x0);
	const FLT x60 = x58 * x59;
	const FLT x61 = x60 * x51;
	const FLT x62 = x1 + (-1 * x61);
	const FLT x63 = 1. / x62;
	const FLT x64 = x63 * x45;
	const FLT x65 = x64 * x44;
	const FLT x66 = (1. / (x62 * x62)) * x44 * x45;
	const FLT x67 = x61 * x66;
	const FLT x68 = x55 + (x65 * x58);
	const FLT x69 = 1. / sqrt(1 + (-1 * (x68 * x68)));
	const FLT x70 = (x67 + x65) * x69;
	const FLT x71 = (-1 * asin(x68)) + (*bsc0).gibpha + x52;
	const FLT x72 = cos(x71) * (*bsc0).gibmag;
	const FLT x73 = ((x67 * x57) + (x65 * x57)) * x69;
	const FLT x74 = cos(x56) * (*bsc0).ogeemag;
	const FLT x75 = x74 * x65;
	const FLT x76 = x69 * ((x74 * x67) + x75);
	const FLT x77 = x53 * x53;
	const FLT x78 = x54 * (1 + x77);
	const FLT x79 = x78 * (1. / sqrt(1 + (-1 * x77 * x32 * (1. / x36))));
	const FLT x80 = 1. / (x1 * x1);
	const FLT x81 = x80 * x38 * (1. / sqrt(1 + (-1 * x80 * x32 * (1. / x37))));
	const FLT x82 = x81 * x59;
	const FLT x83 = x82 * x41;
	const FLT x84 = (x39 * ((-1 * x82 * x40) + x83)) + (x82 * x42);
	const FLT x85 = (x82 * x43) + (x84 * x39);
	const FLT x86 = x69 * ((-1 * x66 * x58 * ((x79 * x74 * x51 * x59) + (-1 * x1 * x51 * x58) + (-1 * x60 * ((x82 * x44) + (x85 * x39) + (x39 * (x85 + (x39 * (x84 + (x39 * (x83 + (x82 * x47) + (-2.40324066e-05 * x82 * x39))) + (x82 * x48))) + (x82 * x49))) + (x82 * x50))) + (-1 * x59))) + (x85 * x64 * x58) + x78 + (2 * x81 * x60 * x63 * x46) + (-1 * x79 * x75));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), (-1 * x70 * x72) + (-1 * x70));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), sin(x71));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x72);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag)/sizeof(FLT), (-1 * x73 * x72) + (-1 * x73));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase)/sizeof(FLT), (-1 * x72 * x76) + (-1 * x76));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x86 * x72) + (-1 * x86));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae7f460>, <cnkalman.codegen.WrapMember object at 0x7f5abae7f520>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae7f4c0>, <cnkalman.codegen.WrapMember object at 0x7f5abae7f1c0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae7f580>, <cnkalman.codegen.WrapMember object at 0x7f5abae7f3a0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae7f3d0>]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanModel_LightMeas_y_gen2(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x28 = (-1 * x23 * (*lh_p).Rot[1]) + (x26 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x29 = x23 + (2 * ((x28 * (*lh_p).Rot[1]) + (-1 * x27 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x30 = (-1 * x25 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[1]);
	const FLT x31 = (2 * ((x30 * (*lh_p).Rot[2]) + (-1 * x28 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x32 = atan2(-1 * x29, x31);
	const FLT x33 = (*lh_p).Pos[1] + x26 + (2 * ((x27 * (*lh_p).Rot[3]) + (-1 * x30 * (*lh_p).Rot[1])));
	const FLT x34 = (x31 * x31) + (x29 * x29);
	const FLT x35 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x36 = cos(x35);
	const FLT x37 = asin(x33 * (1. / x36) * (1. / sqrt(x34 + (x33 * x33))));
	const FLT x38 = -1 * (1. / sqrt(x34)) * x33 * tan(x35);
	const FLT x39 = ((*bsc0).ogeemag * sin((-1 * asin(x38)) + (*bsc0).ogeephase + x32)) + (*bsc0).curve;
	const FLT x40 = 0.0028679863 + (x37 * (-8.0108022e-06 + (-8.0108022e-06 * x37)));
	const FLT x41 = 5.3685255e-06 + (x40 * x37);
	const FLT x42 = 0.0076069798 + (x41 * x37);
	const FLT x43 = asin(x38 + (x42 * (x37 * x37) * x39 * (1. / (x36 + (x39 * sin(x35) * ((x37 * (x42 + (x37 * (x41 + (x37 * (x40 + (x37 * (-8.0108022e-06 + (-1.60216044e-05 * x37))))))))) + (x42 * x37)))))));
	return -1.5707963267949 + x32 + (-1 * (*bsc0).phase) + (-1 * x43) + (-1 * sin(x43 + (-1 * (*bsc0).gibpha) + (-1 * x32)) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae550a0>]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = 1.0/2.0 * x0;
	const FLT x2 = dt * dt;
	const FLT x3 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x4 = x2 * x3;
	const FLT x5 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x6 = x2 * x5;
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x8 = x2 * x7;
	const FLT x9 = 1e-10 + x4 + x6 + x8;
	const FLT x10 = sqrt(x9);
	const FLT x11 = 0.5 * x10;
	const FLT x12 = sin(x11);
	const FLT x13 = x12 * x12;
	const FLT x14 = 1. / x9;
	const FLT x15 = x14 * x13;
	const FLT x16 = cos(x11);
	const FLT x17 = (x8 * x15) + (x6 * x15) + (x4 * x15) + (x16 * x16);
	const FLT x18 = 1. / sqrt(x17);
	const FLT x19 = x12 * x18;
	const FLT x20 = 1. / x10;
	const FLT x21 = dt * x20;
	const FLT x22 = x21 * x19;
	const FLT x23 = x22 * (*_x0).Pose.Rot[0];
	const FLT x24 = x18 * x16;
	const FLT x25 = x24 * (*_x0).Pose.Rot[2];
	const FLT x26 = x19 * (*_x0).Pose.Rot[1];
	const FLT x27 = x21 * x26;
	const FLT x28 = x22 * (*_x0).Pose.Rot[3];
	const FLT x29 = (-1 * x28 * (*_x0).Velocity.AxisAngleRot[0]) + (x27 * (*_x0).Velocity.AxisAngleRot[2]) + (x23 * (*_x0).Velocity.AxisAngleRot[1]) + x25;
	const FLT x30 = x22 * (*_x0).Pose.Rot[2];
	const FLT x31 = x24 * (*_x0).Pose.Rot[0];
	const FLT x32 = (-1 * x27 * (*_x0).Velocity.AxisAngleRot[0]) + x31 + (-1 * x28 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x33 = x24 * (*_x0).Pose.Rot[3];
	const FLT x34 = x33 + (x23 * (*_x0).Velocity.AxisAngleRot[2]) + (x30 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x27 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x35 = (-1 * x34 * sensor_pt[1]) + (x29 * sensor_pt[2]) + (x32 * sensor_pt[0]);
	const FLT x36 = x24 * (*_x0).Pose.Rot[1];
	const FLT x37 = (x23 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[2]) + x36 + (x28 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x38 = (x34 * sensor_pt[0]) + (-1 * x37 * sensor_pt[2]) + (x32 * sensor_pt[1]);
	const FLT x39 = sensor_pt[2] + (x1 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (2 * ((x38 * x37) + (-1 * x35 * x29))) + (*_x0).Pose.Pos[2];
	const FLT x40 = (-1 * x29 * sensor_pt[0]) + (x32 * sensor_pt[2]) + (x37 * sensor_pt[1]);
	const FLT x41 = (2 * ((x34 * x35) + (-1 * x40 * x37))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x1 * (*_x0).Acc[1]);
	const FLT x42 = (2 * ((x40 * x29) + (-1 * x34 * x38))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x1 * (*_x0).Acc[0]);
	const FLT x43 = (-1 * x42 * (*lh_p).Rot[2]) + (x39 * (*lh_p).Rot[0]) + (x41 * (*lh_p).Rot[1]);
	const FLT x44 = (x39 * (*lh_p).Rot[2]) + (-1 * x41 * (*lh_p).Rot[3]) + (x42 * (*lh_p).Rot[0]);
	const FLT x45 = x41 + (*lh_p).Pos[1] + (2 * ((x44 * (*lh_p).Rot[3]) + (-1 * x43 * (*lh_p).Rot[1])));
	const FLT x46 = x45 * x45;
	const FLT x47 = (-1 * x39 * (*lh_p).Rot[1]) + (x41 * (*lh_p).Rot[0]) + (x42 * (*lh_p).Rot[3]);
	const FLT x48 = x39 + (2 * ((x47 * (*lh_p).Rot[1]) + (-1 * x44 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x49 = x42 + (2 * ((x43 * (*lh_p).Rot[2]) + (-1 * x47 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x50 = x49 * x49;
	const FLT x51 = x50 + (x48 * x48);
	const FLT x52 = x51 + x46;
	const FLT x53 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x54 = cos(x53);
	const FLT x55 = 1. / x54;
	const FLT x56 = (1. / sqrt(x52)) * x55;
	const FLT x57 = asin(x56 * x45);
	const FLT x58 = 8.0108022e-06 * x57;
	const FLT x59 = -8.0108022e-06 + (-1 * x58);
	const FLT x60 = 0.0028679863 + (x57 * x59);
	const FLT x61 = 5.3685255e-06 + (x60 * x57);
	const FLT x62 = 0.0076069798 + (x61 * x57);
	const FLT x63 = x62 * x57;
	const FLT x64 = -8.0108022e-06 + (-1.60216044e-05 * x57);
	const FLT x65 = x60 + (x64 * x57);
	const FLT x66 = x61 + (x65 * x57);
	const FLT x67 = x62 + (x66 * x57);
	const FLT x68 = (x67 * x57) + x63;
	const FLT x69 = sin(x53);
	const FLT x70 = atan2(-1 * x48, x49);
	const FLT x71 = tan(x53);
	const FLT x72 = x71 * (1. / sqrt(x51));
	const FLT x73 = -1 * x72 * x45;
	const FLT x74 = (-1 * asin(x73)) + (*bsc0).ogeephase + x70;
	const FLT x75 = (sin(x74) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x76 = x75 * x69;
	const FLT x77 = x54 + (x76 * x68);
	const FLT x78 = 1. / x77;
	const FLT x79 = x57 * x57;
	const FLT x80 = x79 * x75;
	const FLT x81 = x80 * x78;
	const FLT x82 = x73 + (x81 * x62);
	const FLT x83 = 1. / sqrt(1 + (-1 * (x82 * x82)));
	const FLT x84 = 1. / x51;
	const FLT x85 = 1. / sqrt(1 + (-1 * x84 * (x71 * x71) * x46));
	const FLT x86 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x87 = -1 * x0 * x86;
	const FLT x88 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x89 = x1 + (-1 * x0 * x88);
	const FLT x90 = x89 + x87;
	const FLT x91 = 2 * x49;
	const FLT x92 = x0 * (*lh_p).Rot[2] * (*lh_p).Rot[0];
	const FLT x93 = x0 * (*lh_p).Rot[3];
	const FLT x94 = x93 * (*lh_p).Rot[1];
	const FLT x95 = x94 + (-1 * x92);
	const FLT x96 = 2 * x48;
	const FLT x97 = (x96 * x95) + (x91 * x90);
	const FLT x98 = 1.0/2.0 * x45;
	const FLT x99 = x71 * (1. / (x51 * sqrt(x51))) * x98;
	const FLT x100 = x0 * (*lh_p).Rot[1];
	const FLT x101 = x100 * (*lh_p).Rot[2];
	const FLT x102 = x93 * (*lh_p).Rot[0];
	const FLT x103 = x102 + x101;
	const FLT x104 = (-1 * x72 * x103) + (x99 * x97);
	const FLT x105 = (1. / x50) * x48;
	const FLT x106 = 1. / x49;
	const FLT x107 = x84 * x50;
	const FLT x108 = ((-1 * x95 * x106) + (x90 * x105)) * x107;
	const FLT x109 = x108 + (-1 * x85 * x104);
	const FLT x110 = cos(x74) * (*bsc0).ogeemag;
	const FLT x111 = x68 * x69;
	const FLT x112 = x110 * x111;
	const FLT x113 = 1. / sqrt(1 + (-1 * (1. / (x54 * x54)) * (1. / x52) * x46));
	const FLT x114 = 2 * x45;
	const FLT x115 = (1. / (x52 * sqrt(x52))) * x55 * x98;
	const FLT x116 = (-1 * x115 * (x97 + (x103 * x114))) + (x56 * x103);
	const FLT x117 = x113 * x116;
	const FLT x118 = x59 * x117;
	const FLT x119 = 2.40324066e-05 * x57;
	const FLT x120 = x64 * x113;
	const FLT x121 = x60 * x113;
	const FLT x122 = (x57 * ((-1 * x58 * x117) + x118)) + (x116 * x121);
	const FLT x123 = x66 * x113;
	const FLT x124 = (x57 * x122) + (x61 * x117);
	const FLT x125 = x67 * x113;
	const FLT x126 = x62 * x113;
	const FLT x127 = x80 * (1. / (x77 * x77)) * x62;
	const FLT x128 = 2 * x78 * x75 * x63;
	const FLT x129 = x79 * x78 * x62;
	const FLT x130 = x110 * x129;
	const FLT x131 = x83 * ((x109 * x130) + (-1 * x127 * ((x76 * ((x116 * x126) + (x57 * (x124 + (x57 * (x122 + (x57 * ((x116 * x120) + x118 + (-1 * x119 * x117))) + (x65 * x117))) + (x116 * x123))) + (x57 * x124) + (x116 * x125))) + (x109 * x112))) + x104 + (x117 * x128) + (x81 * x124));
	const FLT x132 = cos((-1 * asin(x82)) + (*bsc0).gibpha + x70) * (*bsc0).gibmag;
	const FLT x133 = x101 + (-1 * x102);
	const FLT x134 = x93 * (*lh_p).Rot[2];
	const FLT x135 = x100 * (*lh_p).Rot[0];
	const FLT x136 = x135 + x134;
	const FLT x137 = (x96 * x136) + (x91 * x133);
	const FLT x138 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x139 = -1 * x0 * x138;
	const FLT x140 = x89 + x139;
	const FLT x141 = (-1 * x72 * x140) + (x99 * x137);
	const FLT x142 = ((-1 * x106 * x136) + (x105 * x133)) * x107;
	const FLT x143 = x142 + (-1 * x85 * x141);
	const FLT x144 = x113 * ((-1 * x115 * (x137 + (x114 * x140))) + (x56 * x140));
	const FLT x145 = x59 * x144;
	const FLT x146 = (x57 * ((-1 * x58 * x144) + x145)) + (x60 * x144);
	const FLT x147 = (x57 * x146) + (x61 * x144);
	const FLT x148 = x83 * ((-1 * x127 * ((x76 * ((x62 * x144) + (x57 * (x147 + (x57 * (x146 + (x57 * ((x64 * x144) + x145 + (-1 * x119 * x144))) + (x65 * x144))) + (x66 * x144))) + (x57 * x147) + (x67 * x144))) + (x112 * x143))) + x141 + (x130 * x143) + (x81 * x147) + (x128 * x144));
	const FLT x149 = x134 + (-1 * x135);
	const FLT x150 = x92 + x94;
	const FLT x151 = x87 + x1 + x139;
	const FLT x152 = (x96 * x151) + (x91 * x150);
	const FLT x153 = (-1 * x115 * (x152 + (x114 * x149))) + (x56 * x149);
	const FLT x154 = x61 * x113;
	const FLT x155 = x59 * x113;
	const FLT x156 = x153 * x155;
	const FLT x157 = x58 * x113;
	const FLT x158 = (x57 * ((-1 * x153 * x157) + x156)) + (x121 * x153);
	const FLT x159 = (x57 * x158) + (x153 * x154);
	const FLT x160 = x113 * x128;
	const FLT x161 = (-1 * x72 * x149) + (x99 * x152);
	const FLT x162 = ((-1 * x106 * x151) + (x105 * x150)) * x107;
	const FLT x163 = x110 * (x162 + (-1 * x85 * x161));
	const FLT x164 = x113 * x119;
	const FLT x165 = x65 * x113;
	const FLT x166 = x83 * ((x129 * x163) + (-1 * x127 * ((x76 * ((x126 * x153) + (x57 * x159) + (x57 * (x159 + (x57 * (x158 + (x57 * (x156 + (x120 * x153) + (-1 * x164 * x153))) + (x165 * x153))) + (x123 * x153))) + (x125 * x153))) + (x111 * x163))) + x161 + (x81 * x159) + (x160 * x153));
	const FLT x167 = 2 * x86;
	const FLT x168 = -1 * x167;
	const FLT x169 = 2 * x88;
	const FLT x170 = 1 + (-1 * x169);
	const FLT x171 = x170 + x168;
	const FLT x172 = 2 * (*lh_p).Rot[2];
	const FLT x173 = x172 * (*lh_p).Rot[0];
	const FLT x174 = 2 * (*lh_p).Rot[1];
	const FLT x175 = x174 * (*lh_p).Rot[3];
	const FLT x176 = x175 + (-1 * x173);
	const FLT x177 = (x96 * x176) + (x91 * x171);
	const FLT x178 = x172 * (*lh_p).Rot[1];
	const FLT x179 = 2 * (*lh_p).Rot[3];
	const FLT x180 = x179 * (*lh_p).Rot[0];
	const FLT x181 = x180 + x178;
	const FLT x182 = (-1 * x72 * x181) + (x99 * x177);
	const FLT x183 = ((-1 * x106 * x176) + (x105 * x171)) * x107;
	const FLT x184 = x183 + (-1 * x85 * x182);
	const FLT x185 = (-1 * x115 * (x177 + (x114 * x181))) + (x56 * x181);
	const FLT x186 = x113 * x185;
	const FLT x187 = x59 * x186;
	const FLT x188 = (x57 * ((-1 * x58 * x186) + x187)) + (x121 * x185);
	const FLT x189 = (x57 * x188) + (x61 * x186);
	const FLT x190 = x83 * (x182 + (x184 * x130) + (x81 * x189) + (-1 * x127 * ((x76 * ((x126 * x185) + (x57 * x189) + (x57 * (x189 + (x57 * (x188 + (x57 * (x187 + (x120 * x185) + (-1 * x119 * x186))) + (x65 * x186))) + (x123 * x185))) + (x67 * x186))) + (x112 * x184))) + (x128 * x186));
	const FLT x191 = x178 + (-1 * x180);
	const FLT x192 = x172 * (*lh_p).Rot[3];
	const FLT x193 = x174 * (*lh_p).Rot[0];
	const FLT x194 = x193 + x192;
	const FLT x195 = (x96 * x194) + (x91 * x191);
	const FLT x196 = 2 * x138;
	const FLT x197 = -1 * x196;
	const FLT x198 = x170 + x197;
	const FLT x199 = (-1 * x72 * x198) + (x99 * x195);
	const FLT x200 = ((-1 * x106 * x194) + (x105 * x191)) * x107;
	const FLT x201 = x200 + (-1 * x85 * x199);
	const FLT x202 = (-1 * x115 * (x195 + (x114 * x198))) + (x56 * x198);
	const FLT x203 = x202 * x155;
	const FLT x204 = (x57 * ((-1 * x202 * x157) + x203)) + (x202 * x121);
	const FLT x205 = (x57 * x204) + (x202 * x154);
	const FLT x206 = x83 * (x199 + (x201 * x130) + (x81 * x205) + (-1 * x127 * ((x76 * ((x57 * x205) + (x57 * (x205 + (x57 * (x204 + (x57 * ((x202 * x120) + x203 + (-1 * x202 * x164))) + (x202 * x165))) + (x202 * x123))) + (x202 * x126) + (x202 * x125))) + (x201 * x112))) + (x202 * x160));
	const FLT x207 = x192 + (-1 * x193);
	const FLT x208 = x173 + x175;
	const FLT x209 = 1 + x197 + x168;
	const FLT x210 = (x96 * x209) + (x91 * x208);
	const FLT x211 = (-1 * x115 * (x210 + (x207 * x114))) + (x56 * x207);
	const FLT x212 = x211 * x155;
	const FLT x213 = (x57 * ((-1 * x211 * x157) + x212)) + (x211 * x121);
	const FLT x214 = (x57 * x213) + (x211 * x154);
	const FLT x215 = (-1 * x72 * x207) + (x99 * x210);
	const FLT x216 = ((-1 * x209 * x106) + (x208 * x105)) * x107;
	const FLT x217 = x216 + (-1 * x85 * x215);
	const FLT x218 = x83 * ((x211 * x160) + x215 + (x81 * x214) + (x217 * x130) + (-1 * x127 * ((x76 * ((x211 * x126) + (x57 * x214) + (x57 * (x214 + (x57 * ((x57 * ((x211 * x120) + x212 + (-1 * x211 * x164))) + x213 + (x211 * x165))) + (x211 * x123))) + (x211 * x125))) + (x217 * x112))));
	const FLT x219 = x22 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x220 = -1 * x219 * sensor_pt[2];
	const FLT x221 = x22 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x222 = x221 * sensor_pt[0];
	const FLT x223 = x24 * sensor_pt[1];
	const FLT x224 = x223 + x220 + x222;
	const FLT x225 = 2 * x34;
	const FLT x226 = 2 * x38;
	const FLT x227 = -1 * x221 * x226;
	const FLT x228 = x22 * sensor_pt[1];
	const FLT x229 = x228 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x230 = x22 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x231 = -1 * x230 * sensor_pt[0];
	const FLT x232 = x24 * sensor_pt[2];
	const FLT x233 = x232 + x231;
	const FLT x234 = x233 + x229;
	const FLT x235 = 2 * x29;
	const FLT x236 = 2 * x40;
	const FLT x237 = x230 * x236;
	const FLT x238 = (x234 * x235) + x237 + (-1 * x224 * x225) + x227;
	const FLT x239 = x230 * sensor_pt[2];
	const FLT x240 = -1 * x228 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x241 = x24 * sensor_pt[0];
	const FLT x242 = x241 + x240;
	const FLT x243 = x242 + x239;
	const FLT x244 = x219 * x226;
	const FLT x245 = 2 * x35;
	const FLT x246 = -1 * x230 * x245;
	const FLT x247 = 2 * x37;
	const FLT x248 = (x224 * x247) + x246 + (-1 * x235 * x243) + x244;
	const FLT x249 = x221 * x245;
	const FLT x250 = -1 * x219 * x236;
	const FLT x251 = x250 + x249 + (-1 * x234 * x247) + (x225 * x243);
	const FLT x252 = (x251 * (*lh_p).Rot[1]) + (-1 * x238 * (*lh_p).Rot[2]) + (x248 * (*lh_p).Rot[0]);
	const FLT x253 = (x238 * (*lh_p).Rot[0]) + (-1 * x251 * (*lh_p).Rot[3]) + (x248 * (*lh_p).Rot[2]);
	const FLT x254 = x251 + (-1 * x252 * x174) + (x253 * x179);
	const FLT x255 = (x238 * (*lh_p).Rot[3]) + (-1 * x248 * (*lh_p).Rot[1]) + (x251 * (*lh_p).Rot[0]);
	const FLT x256 = x238 + (-1 * x255 * x179) + (x252 * x172);
	const FLT x257 = x248 + (-1 * x253 * x172) + (x255 * x174);
	const FLT x258 = (x96 * x257) + (x91 * x256);
	const FLT x259 = (-1 * x115 * (x258 + (x254 * x114))) + (x56 * x254);
	const FLT x260 = x259 * x113;
	const FLT x261 = x59 * x260;
	const FLT x262 = (x57 * ((-1 * x58 * x260) + x261)) + (x259 * x121);
	const FLT x263 = (x57 * x262) + (x61 * x260);
	const FLT x264 = (-1 * x72 * x254) + (x99 * x258);
	const FLT x265 = ((-1 * x257 * x106) + (x256 * x105)) * x107;
	const FLT x266 = x265 + (-1 * x85 * x264);
	const FLT x267 = x83 * (x264 + (x266 * x130) + (-1 * x127 * ((x76 * ((x259 * x126) + (x57 * x263) + (x57 * (x263 + (x57 * (x262 + (x57 * ((x259 * x120) + x261 + (-1 * x260 * x119))) + (x259 * x165))) + (x259 * x123))) + (x259 * x125))) + (x266 * x112))) + (x260 * x128) + (x81 * x263));
	const FLT x268 = x230 * sensor_pt[1];
	const FLT x269 = x221 * sensor_pt[2];
	const FLT x270 = x219 * sensor_pt[0];
	const FLT x271 = (-1 * x270) + x268 + x269;
	const FLT x272 = -1 * x229;
	const FLT x273 = x272 + (-1 * x232) + x231;
	const FLT x274 = x24 * x226;
	const FLT x275 = (-1 * x249) + (-1 * x235 * x271) + x274 + (x273 * x247);
	const FLT x276 = (-1 * x222) + x220;
	const FLT x277 = x276 + x223;
	const FLT x278 = x24 * x236;
	const FLT x279 = x246 + (-1 * x277 * x247) + (-1 * x278) + (x271 * x225);
	const FLT x280 = x236 * x221;
	const FLT x281 = x230 * x226;
	const FLT x282 = (x235 * x277) + x280 + x281 + (-1 * x273 * x225);
	const FLT x283 = (x282 * (*lh_p).Rot[3]) + (-1 * x275 * (*lh_p).Rot[1]) + (x279 * (*lh_p).Rot[0]);
	const FLT x284 = (x279 * (*lh_p).Rot[1]) + (-1 * x282 * (*lh_p).Rot[2]) + (x275 * (*lh_p).Rot[0]);
	const FLT x285 = x282 + (-1 * x283 * x179) + (x284 * x172);
	const FLT x286 = (x282 * (*lh_p).Rot[0]) + (-1 * x279 * (*lh_p).Rot[3]) + (x275 * (*lh_p).Rot[2]);
	const FLT x287 = x275 + (-1 * x286 * x172) + (x283 * x174);
	const FLT x288 = (x96 * x287) + (x91 * x285);
	const FLT x289 = x279 + (-1 * x284 * x174) + (x286 * x179);
	const FLT x290 = (-1 * x72 * x289) + (x99 * x288);
	const FLT x291 = ((-1 * x287 * x106) + (x285 * x105)) * x107;
	const FLT x292 = x291 + (-1 * x85 * x290);
	const FLT x293 = (-1 * x115 * (x288 + (x289 * x114))) + (x56 * x289);
	const FLT x294 = x293 * x155;
	const FLT x295 = (x57 * ((-1 * x293 * x157) + x294)) + (x293 * x121);
	const FLT x296 = (x57 * x295) + (x293 * x154);
	const FLT x297 = x83 * ((x292 * x130) + (x81 * x296) + x290 + (-1 * x127 * ((x76 * ((x293 * x126) + (x57 * x296) + (x57 * (x296 + (x57 * ((x57 * ((x293 * x120) + x294 + (-1 * x293 * x164))) + x295 + (x293 * x165))) + (x293 * x123))) + (x293 * x125))) + (x292 * x112))) + (x293 * x160));
	const FLT x298 = -1 * x239;
	const FLT x299 = (-1 * x241) + x240 + x298;
	const FLT x300 = x233 + x272;
	const FLT x301 = x219 * x245;
	const FLT x302 = x301 + (x225 * x300) + (-1 * x299 * x247) + x280;
	const FLT x303 = x24 * x245;
	const FLT x304 = (-1 * x268) + x269 + x270;
	const FLT x305 = (x247 * x304) + (-1 * x235 * x300) + x227 + (-1 * x303);
	const FLT x306 = (x235 * x299) + x278 + (-1 * x244) + (-1 * x225 * x304);
	const FLT x307 = (x306 * (*lh_p).Rot[3]) + (x302 * (*lh_p).Rot[0]) + (-1 * x305 * (*lh_p).Rot[1]);
	const FLT x308 = (x302 * (*lh_p).Rot[1]) + (x305 * (*lh_p).Rot[0]) + (-1 * x306 * (*lh_p).Rot[2]);
	const FLT x309 = x306 + (-1 * x307 * x179) + (x308 * x172);
	const FLT x310 = (x306 * (*lh_p).Rot[0]) + (-1 * x302 * (*lh_p).Rot[3]) + (x305 * (*lh_p).Rot[2]);
	const FLT x311 = x305 + (-1 * x310 * x172) + (x307 * x174);
	const FLT x312 = (x96 * x311) + (x91 * x309);
	const FLT x313 = x302 + (-1 * x308 * x174) + (x310 * x179);
	const FLT x314 = (-1 * x72 * x313) + (x99 * x312);
	const FLT x315 = ((-1 * x311 * x106) + (x309 * x105)) * x107;
	const FLT x316 = x315 + (-1 * x85 * x314);
	const FLT x317 = (-1 * x115 * (x312 + (x313 * x114))) + (x56 * x313);
	const FLT x318 = x317 * x155;
	const FLT x319 = (x57 * ((-1 * x317 * x157) + x318)) + (x317 * x121);
	const FLT x320 = (x57 * x319) + (x317 * x154);
	const FLT x321 = x83 * ((x316 * x130) + (x81 * x320) + x314 + (-1 * x127 * ((x76 * ((x57 * x320) + (x57 * (x320 + (x57 * (x319 + (x57 * ((x317 * x120) + x318 + (-1 * x317 * x164))) + (x317 * x165))) + (x317 * x123))) + (x317 * x126) + (x317 * x125))) + (x316 * x112))) + (x317 * x160));
	const FLT x322 = 2 * (x268 + x270 + (-1 * x269));
	const FLT x323 = x276 + (-1 * x223);
	const FLT x324 = (-1 * x237) + x303 + (-1 * x37 * x322) + (x225 * x323);
	const FLT x325 = x242 + x298;
	const FLT x326 = (x247 * x325) + x281 + (-1 * x235 * x323) + x301;
	const FLT x327 = x250 + (-1 * x274) + (x29 * x322) + (-1 * x225 * x325);
	const FLT x328 = (x327 * (*lh_p).Rot[0]) + (-1 * x324 * (*lh_p).Rot[3]) + (x326 * (*lh_p).Rot[2]);
	const FLT x329 = (x324 * (*lh_p).Rot[1]) + (-1 * x327 * (*lh_p).Rot[2]) + (x326 * (*lh_p).Rot[0]);
	const FLT x330 = x324 + (x328 * x179) + (-1 * x329 * x174);
	const FLT x331 = (x327 * (*lh_p).Rot[3]) + (-1 * x326 * (*lh_p).Rot[1]) + (x324 * (*lh_p).Rot[0]);
	const FLT x332 = x327 + (-1 * x331 * x179) + (x329 * x172);
	const FLT x333 = x326 + (-1 * x328 * x172) + (x331 * x174);
	const FLT x334 = (x96 * x333) + (x91 * x332);
	const FLT x335 = (-1 * x115 * (x334 + (x330 * x114))) + (x56 * x330);
	const FLT x336 = x335 * x155;
	const FLT x337 = (x57 * ((-1 * x335 * x157) + x336)) + (x335 * x121);
	const FLT x338 = (x57 * x337) + (x335 * x154);
	const FLT x339 = (-1 * x72 * x330) + (x99 * x334);
	const FLT x340 = ((-1 * x333 * x106) + (x332 * x105)) * x107;
	const FLT x341 = x340 + (-1 * x85 * x339);
	const FLT x342 = x83 * (x339 + (-1 * x127 * ((x76 * ((x57 * x338) + (x335 * x126) + (x57 * (x338 + (x57 * (x337 + (x57 * (x336 + (x335 * x120) + (-1 * x335 * x164))) + (x335 * x165))) + (x335 * x123))) + (x335 * x125))) + (x341 * x112))) + (x341 * x130) + (x335 * x160) + (x81 * x338));
	const FLT x343 = x19 * (*_x0).Pose.Rot[2];
	const FLT x344 = 0.5 * x20;
	const FLT x345 = x2 * x344;
	const FLT x346 = x345 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x347 = -1 * x28;
	const FLT x348 = dt * dt * dt;
	const FLT x349 = 0.5 * x14 * x348;
	const FLT x350 = x33 * x349;
	const FLT x351 = 1.0/2.0 * (1. / (x17 * sqrt(x17)));
	const FLT x352 = x21 * x12 * x351;
	const FLT x353 = x352 * (*_x0).Pose.Rot[3];
	const FLT x354 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x355 = dt * dt * dt * dt;
	const FLT x356 = 2 * (1. / (x9 * x9)) * x13;
	const FLT x357 = x356 * x355;
	const FLT x358 = 1. / (x9 * sqrt(x9));
	const FLT x359 = 1.0 * x12 * x16;
	const FLT x360 = x359 * x358;
	const FLT x361 = x360 * x355;
	const FLT x362 = x3 * x361;
	const FLT x363 = x3 * x357;
	const FLT x364 = x20 * x359;
	const FLT x365 = x2 * x364;
	const FLT x366 = 2 * x15;
	const FLT x367 = x2 * x366;
	const FLT x368 = x5 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x369 = (-1 * x368 * x357) + (x361 * x368) + (x367 * (*_x0).Velocity.AxisAngleRot[0]) + (x362 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x354 * x357) + (-1 * x363 * (*_x0).Velocity.AxisAngleRot[0]) + (x361 * x354) + (-1 * x365 * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x370 = x369 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x371 = x16 * x351;
	const FLT x372 = x371 * x369;
	const FLT x373 = x352 * (*_x0).Pose.Rot[0];
	const FLT x374 = x369 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x375 = x358 * x348;
	const FLT x376 = x375 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x377 = x376 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x378 = x26 * x377;
	const FLT x379 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x380 = x379 * x349;
	const FLT x381 = x36 * x380;
	const FLT x382 = x352 * (*_x0).Pose.Rot[1];
	const FLT x383 = x369 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x384 = x19 * (*_x0).Pose.Rot[3];
	const FLT x385 = x7 * x375;
	const FLT x386 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x387 = x31 * x349;
	const FLT x388 = x19 * (*_x0).Pose.Rot[0];
	const FLT x389 = x388 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x390 = x375 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x391 = (-1 * x390 * x389) + (x387 * x386);
	const FLT x392 = x381 + (-1 * x378) + (-1 * x374 * x373) + x391 + (x384 * x385) + x347 + (-1 * x383 * x382) + (-1 * x346 * x343) + (-1 * x7 * x350) + (x370 * x353) + (-1 * x372 * (*_x0).Pose.Rot[2]);
	const FLT x393 = x350 * x386;
	const FLT x394 = x390 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x395 = x394 * x384;
	const FLT x396 = x25 * x380;
	const FLT x397 = x377 * x343;
	const FLT x398 = x352 * (*_x0).Pose.Rot[2];
	const FLT x399 = x7 * x349;
	const FLT x400 = x19 * x385;
	const FLT x401 = (-1 * x373 * x370) + x23 + (-1 * x26 * x346) + x393 + (x31 * x399) + (-1 * x372 * (*_x0).Pose.Rot[1]) + (-1 * x395) + x397 + (x398 * x383) + (-1 * x396) + (-1 * x400 * (*_x0).Pose.Rot[0]) + (-1 * x374 * x353);
	const FLT x402 = (x31 * x380) + (-1 * x376 * x389);
	const FLT x403 = x36 * x349;
	const FLT x404 = (-1 * x403 * x386) + (x26 * x394);
	const FLT x405 = (-1 * x398 * x370) + (-1 * x384 * x346) + x404 + x30 + (-1 * x373 * x383) + (-1 * x372 * (*_x0).Pose.Rot[3]) + (x25 * x399) + (-1 * x400 * (*_x0).Pose.Rot[2]) + x402 + (x374 * x382);
	const FLT x406 = x25 * x349;
	const FLT x407 = x406 * x386;
	const FLT x408 = x343 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x409 = x408 * x375 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x410 = -1 * x27;
	const FLT x411 = (-1 * x379 * x350) + (x377 * x384);
	const FLT x412 = (x26 * x385) + x410 + (-1 * x389 * x345) + (x382 * x370) + x411 + (-1 * x36 * x399) + (-1 * x372 * (*_x0).Pose.Rot[0]) + (-1 * x407) + x409 + (x374 * x398) + (x383 * x353);
	const FLT x413 = (x412 * sensor_pt[1]) + (-1 * x401 * sensor_pt[2]) + (x405 * sensor_pt[0]);
	const FLT x414 = (x401 * sensor_pt[1]) + (-1 * x392 * sensor_pt[0]) + (x412 * sensor_pt[2]);
	const FLT x415 = (x414 * x235) + (-1 * x405 * x226) + (x236 * x392) + (-1 * x413 * x225);
	const FLT x416 = (x412 * sensor_pt[0]) + (-1 * x405 * sensor_pt[1]) + (x392 * sensor_pt[2]);
	const FLT x417 = (-1 * x416 * x235) + (x401 * x226) + (x413 * x247) + (-1 * x245 * x392);
	const FLT x418 = (-1 * x401 * x236) + (x416 * x225) + (-1 * x414 * x247) + (x405 * x245);
	const FLT x419 = (-1 * x415 * (*lh_p).Rot[2]) + (x418 * (*lh_p).Rot[1]) + (x417 * (*lh_p).Rot[0]);
	const FLT x420 = (x415 * (*lh_p).Rot[0]) + (x417 * (*lh_p).Rot[2]) + (-1 * x418 * (*lh_p).Rot[3]);
	const FLT x421 = x418 + (-1 * x419 * x174) + (x420 * x179);
	const FLT x422 = (-1 * x417 * (*lh_p).Rot[1]) + (x415 * (*lh_p).Rot[3]) + (x418 * (*lh_p).Rot[0]);
	const FLT x423 = x415 + (-1 * x422 * x179) + (x419 * x172);
	const FLT x424 = x417 + (-1 * x420 * x172) + (x422 * x174);
	const FLT x425 = (x96 * x424) + (x91 * x423);
	const FLT x426 = x113 * ((-1 * x115 * (x425 + (x421 * x114))) + (x56 * x421));
	const FLT x427 = x59 * x426;
	const FLT x428 = (x57 * ((-1 * x58 * x426) + x427)) + (x60 * x426);
	const FLT x429 = (x57 * x428) + (x61 * x426);
	const FLT x430 = (-1 * x72 * x421) + (x99 * x425);
	const FLT x431 = ((-1 * x424 * x106) + (x423 * x105)) * x107;
	const FLT x432 = x431 + (-1 * x85 * x430);
	const FLT x433 = x83 * (x430 + (x432 * x130) + (x426 * x128) + (x81 * x429) + (-1 * x127 * ((x76 * ((x57 * x429) + (x62 * x426) + (x57 * (x429 + (x57 * (x428 + (x57 * ((x64 * x426) + (-1 * x426 * x119) + x427)) + (x65 * x426))) + (x66 * x426))) + (x67 * x426))) + (x432 * x112))));
	const FLT x434 = x357 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x435 = x361 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x436 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x437 = (x436 * x361) + (-1 * x5 * x434) + (-1 * x365 * (*_x0).Velocity.AxisAngleRot[1]) + (x5 * x435) + (-1 * x7 * x434) + (-1 * x436 * x357) + (x7 * x435) + (x367 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x438 = x437 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x439 = x3 * x375;
	const FLT x440 = x437 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x441 = x437 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x442 = x3 * x349;
	const FLT x443 = x437 * x371;
	const FLT x444 = x345 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x445 = x376 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x446 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x447 = (-1 * x406 * x446) + (x445 * x343);
	const FLT x448 = x447 + x391 + (-1 * x443 * (*_x0).Pose.Rot[1]) + (-1 * x26 * x444) + (x33 * x442) + x28 + (-1 * x438 * x373) + (-1 * x439 * x384) + (x440 * x398) + (-1 * x441 * x353);
	const FLT x449 = (x446 * x387) + (-1 * x445 * x388);
	const FLT x450 = (-1 * x444 * x384) + (-1 * x409) + (-1 * x36 * x442) + (-1 * x438 * x398) + x407 + (x26 * x439) + (-1 * x443 * (*_x0).Pose.Rot[3]) + x449 + x410 + (-1 * x440 * x373) + (x441 * x382);
	const FLT x451 = -1 * x30;
	const FLT x452 = x446 * x350;
	const FLT x453 = x445 * x384;
	const FLT x454 = x404 + (-1 * x444 * x388) + x453 + (-1 * x443 * (*_x0).Pose.Rot[0]) + (x440 * x353) + (-1 * x452) + (x439 * x343) + (x441 * x398) + x451 + (x438 * x382) + (-1 * x25 * x442);
	const FLT x455 = (x454 * sensor_pt[1]) + (-1 * x448 * sensor_pt[2]) + (x450 * sensor_pt[0]);
	const FLT x456 = x26 * x445;
	const FLT x457 = x403 * x446;
	const FLT x458 = (-1 * x393) + (-1 * x441 * x373) + (-1 * x439 * x388) + x457 + (x438 * x353) + x395 + (-1 * x456) + (-1 * x443 * (*_x0).Pose.Rot[2]) + (-1 * x440 * x382) + x23 + (-1 * x408 * x345) + (x31 * x442);
	const FLT x459 = (x448 * sensor_pt[1]) + (-1 * x458 * sensor_pt[0]) + (x454 * sensor_pt[2]);
	const FLT x460 = (-1 * x450 * x226) + (x458 * x236) + (-1 * x455 * x225) + (x459 * x235);
	const FLT x461 = 2 * ((-1 * x450 * sensor_pt[1]) + (x454 * sensor_pt[0]) + (x458 * sensor_pt[2]));
	const FLT x462 = (x455 * x247) + (-1 * x29 * x461) + (-1 * x458 * x245) + (x448 * x226);
	const FLT x463 = (x450 * x245) + (x34 * x461) + (-1 * x459 * x247) + (-1 * x448 * x236);
	const FLT x464 = (-1 * x460 * (*lh_p).Rot[2]) + (x463 * (*lh_p).Rot[1]) + (x462 * (*lh_p).Rot[0]);
	const FLT x465 = (x460 * (*lh_p).Rot[0]) + (-1 * x463 * (*lh_p).Rot[3]) + (x462 * (*lh_p).Rot[2]);
	const FLT x466 = x463 + (-1 * x464 * x174) + (x465 * x179);
	const FLT x467 = (x460 * (*lh_p).Rot[3]) + (-1 * x462 * (*lh_p).Rot[1]) + (x463 * (*lh_p).Rot[0]);
	const FLT x468 = x460 + (-1 * x467 * x179) + (x464 * x172);
	const FLT x469 = x462 + (-1 * x465 * x172) + (x467 * x174);
	const FLT x470 = (x96 * x469) + (x91 * x468);
	const FLT x471 = x113 * ((-1 * x115 * (x470 + (x466 * x114))) + (x56 * x466));
	const FLT x472 = x59 * x471;
	const FLT x473 = (x57 * ((-1 * x58 * x471) + x472)) + (x60 * x471);
	const FLT x474 = (x57 * x473) + (x61 * x471);
	const FLT x475 = (-1 * x72 * x466) + (x99 * x470);
	const FLT x476 = ((-1 * x469 * x106) + (x468 * x105)) * x107;
	const FLT x477 = x476 + (-1 * x85 * x475);
	const FLT x478 = x83 * (x475 + (x471 * x128) + (x477 * x130) + (x81 * x474) + (-1 * x127 * ((x76 * ((x62 * x471) + (x57 * x474) + (x57 * (x474 + (x57 * ((x57 * ((x64 * x471) + x472 + (-1 * x471 * x119))) + x473 + (x65 * x471))) + (x66 * x471))) + (x67 * x471))) + (x477 * x112))));
	const FLT x479 = x7 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x480 = x355 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x481 = x2 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x482 = (-1 * x480 * x356) + (-1 * x363 * (*_x0).Velocity.AxisAngleRot[2]) + (x481 * x366) + (-1 * x479 * x357) + (-1 * x481 * x364) + (x479 * x361) + (x480 * x360) + (x362 * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x483 = x482 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x484 = x5 * x375;
	const FLT x485 = x482 * x353;
	const FLT x486 = x482 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x487 = x482 * x371;
	const FLT x488 = x481 * x344;
	const FLT x489 = x5 * x349;
	const FLT x490 = (-1 * x25 * x489) + (-1 * x26 * x488) + (-1 * x487 * (*_x0).Pose.Rot[1]) + (-1 * x485 * (*_x0).Velocity.AxisAngleRot[1]) + (x484 * x343) + (x483 * x398) + (-1 * x453) + x452 + x402 + (-1 * x486 * x373) + x451;
	const FLT x491 = x482 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x492 = x491 * x352;
	const FLT x493 = (-1 * x397) + x23 + (-1 * x486 * x398) + x396 + (x492 * (*_x0).Pose.Rot[1]) + (-1 * x484 * x388) + x456 + (-1 * x483 * x373) + (x31 * x489) + (-1 * x488 * x384) + (-1 * x487 * (*_x0).Pose.Rot[3]) + (-1 * x457);
	const FLT x494 = (-1 * x488 * x388) + (x486 * x382) + (-1 * x487 * (*_x0).Pose.Rot[0]) + x347 + x447 + (-1 * x5 * x350) + (-1 * x381) + (x485 * (*_x0).Velocity.AxisAngleRot[2]) + (x484 * x384) + x378 + (x491 * x398);
	const FLT x495 = (x494 * sensor_pt[1]) + (-1 * x490 * sensor_pt[2]) + (x493 * sensor_pt[0]);
	const FLT x496 = x411 + (-1 * x483 * x382) + (-1 * x26 * x484) + x27 + (-1 * x488 * x343) + x449 + (x36 * x489) + (x485 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x492 * (*_x0).Pose.Rot[0]) + (-1 * x487 * (*_x0).Pose.Rot[2]);
	const FLT x497 = 2 * x496;
	const FLT x498 = 2 * ((x490 * sensor_pt[1]) + (-1 * x496 * sensor_pt[0]) + (x494 * sensor_pt[2]));
	const FLT x499 = (x29 * x498) + (-1 * x493 * x226) + (-1 * x495 * x225) + (x40 * x497);
	const FLT x500 = (x494 * sensor_pt[0]) + (-1 * x493 * sensor_pt[1]) + (x496 * sensor_pt[2]);
	const FLT x501 = (x490 * x226) + (-1 * x35 * x497) + (-1 * x500 * x235) + (x495 * x247);
	const FLT x502 = (-1 * x490 * x236) + (x500 * x225) + (-1 * x37 * x498) + (x493 * x245);
	const FLT x503 = (-1 * x499 * (*lh_p).Rot[2]) + (x502 * (*lh_p).Rot[1]) + (x501 * (*lh_p).Rot[0]);
	const FLT x504 = 2 * ((x499 * (*lh_p).Rot[0]) + (-1 * x502 * (*lh_p).Rot[3]) + (x501 * (*lh_p).Rot[2]));
	const FLT x505 = (-1 * x503 * x174) + x502 + (x504 * (*lh_p).Rot[3]);
	const FLT x506 = 2 * ((x499 * (*lh_p).Rot[3]) + (-1 * x501 * (*lh_p).Rot[1]) + (x502 * (*lh_p).Rot[0]));
	const FLT x507 = x499 + (-1 * x506 * (*lh_p).Rot[3]) + (x503 * x172);
	const FLT x508 = x501 + (x506 * (*lh_p).Rot[1]) + (-1 * x504 * (*lh_p).Rot[2]);
	const FLT x509 = (x96 * x508) + (x91 * x507);
	const FLT x510 = (-1 * x115 * (x509 + (x505 * x114))) + (x56 * x505);
	const FLT x511 = x510 * x155;
	const FLT x512 = (x57 * ((-1 * x510 * x157) + x511)) + (x510 * x121);
	const FLT x513 = (x57 * x512) + (x510 * x154);
	const FLT x514 = (-1 * x72 * x505) + (x99 * x509);
	const FLT x515 = ((-1 * x508 * x106) + (x507 * x105)) * x107;
	const FLT x516 = x515 + (-1 * x85 * x514);
	const FLT x517 = x83 * ((x516 * x130) + (-1 * x127 * ((x76 * ((x510 * x126) + (x57 * (x513 + (x57 * (x512 + (x57 * ((x510 * x120) + x511 + (-1 * x510 * x164))) + (x510 * x165))) + (x510 * x123))) + (x57 * x513) + (x510 * x125))) + (x516 * x112))) + x514 + (x81 * x513) + (x510 * x160));
	const FLT x518 = dt * x178;
	const FLT x519 = dt * x180;
	const FLT x520 = x519 + x518;
	const FLT x521 = -1 * dt * x169;
	const FLT x522 = (-1 * dt * x167) + dt;
	const FLT x523 = x522 + x521;
	const FLT x524 = dt * x173;
	const FLT x525 = dt * x175;
	const FLT x526 = x525 + (-1 * x524);
	const FLT x527 = (x96 * x526) + (x91 * x523);
	const FLT x528 = (-1 * x115 * (x527 + (x520 * x114))) + (x56 * x520);
	const FLT x529 = x528 * x155;
	const FLT x530 = (x57 * ((-1 * x528 * x157) + x529)) + (x528 * x121);
	const FLT x531 = (x57 * x530) + (x528 * x154);
	const FLT x532 = (-1 * x72 * x520) + (x99 * x527);
	const FLT x533 = ((-1 * x526 * x106) + (x523 * x105)) * x107;
	const FLT x534 = x533 + (-1 * x85 * x532);
	const FLT x535 = x83 * (x532 + (x534 * x130) + (-1 * x127 * ((x76 * ((x57 * (x531 + (x57 * (x530 + (x57 * ((x528 * x120) + x529 + (-1 * x528 * x164))) + (x528 * x165))) + (x528 * x123))) + (x528 * x126) + (x57 * x531) + (x528 * x125))) + (x534 * x112))) + (x528 * x160) + (x81 * x531));
	const FLT x536 = -1 * dt * x196;
	const FLT x537 = x536 + x521 + dt;
	const FLT x538 = x518 + (-1 * x519);
	const FLT x539 = dt * x192;
	const FLT x540 = dt * x193;
	const FLT x541 = x540 + x539;
	const FLT x542 = (x96 * x541) + (x91 * x538);
	const FLT x543 = x113 * ((-1 * x115 * (x542 + (x537 * x114))) + (x56 * x537));
	const FLT x544 = x59 * x543;
	const FLT x545 = (x57 * ((-1 * x58 * x543) + x544)) + (x60 * x543);
	const FLT x546 = (x57 * x545) + (x61 * x543);
	const FLT x547 = (-1 * x72 * x537) + (x99 * x542);
	const FLT x548 = ((-1 * x541 * x106) + (x538 * x105)) * x107;
	const FLT x549 = x548 + (-1 * x85 * x547);
	const FLT x550 = x83 * (x547 + (x543 * x128) + (x549 * x130) + (-1 * x127 * ((x76 * ((x62 * x543) + (x57 * x546) + (x57 * ((x57 * (x545 + (x57 * ((x64 * x543) + x544 + (-1 * x543 * x119))) + (x65 * x543))) + x546 + (x66 * x543))) + (x67 * x543))) + (x549 * x112))) + (x81 * x546));
	const FLT x551 = x524 + x525;
	const FLT x552 = x522 + x536;
	const FLT x553 = (x96 * x552) + (x91 * x551);
	const FLT x554 = x539 + (-1 * x540);
	const FLT x555 = (-1 * x72 * x554) + (x99 * x553);
	const FLT x556 = ((-1 * x552 * x106) + (x551 * x105)) * x107;
	const FLT x557 = x556 + (-1 * x85 * x555);
	const FLT x558 = (-1 * x115 * (x553 + (x554 * x114))) + (x56 * x554);
	const FLT x559 = x558 * x155;
	const FLT x560 = x558 * x113;
	const FLT x561 = (x57 * ((-1 * x58 * x560) + x559)) + (x558 * x121);
	const FLT x562 = (x57 * x561) + (x558 * x154);
	const FLT x563 = x83 * ((x557 * x130) + (x560 * x128) + x555 + (-1 * x127 * ((x76 * ((x558 * x125) + (x57 * (x562 + (x57 * (x561 + (x57 * (x559 + (x558 * x120) + (-1 * x560 * x119))) + (x558 * x165))) + (x558 * x123))) + (x558 * x126) + (x57 * x562))) + (x557 * x112))) + (x81 * x562));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x108 + (-1 * x131) + (-1 * ((-1 * x108) + x131) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x142 + (-1 * x148) + (-1 * ((-1 * x142) + x148) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x162 + (-1 * x166) + (-1 * ((-1 * x162) + x166) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x183 + (-1 * x190) + (-1 * ((-1 * x183) + x190) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x200 + (-1 * x206) + (-1 * ((-1 * x200) + x206) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x216 + (-1 * ((-1 * x216) + x218) * x132) + (-1 * x218));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x265 + (-1 * x267) + (-1 * ((-1 * x265) + x267) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (-1 * x297) + x291 + (-1 * ((-1 * x291) + x297) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x315 + (-1 * x321) + (-1 * ((-1 * x315) + x321) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (-1 * x342) + x340 + (-1 * ((-1 * x340) + x342) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), (-1 * x433) + x431 + (-1 * ((-1 * x431) + x433) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x476 + (-1 * x478) + (-1 * ((-1 * x476) + x478) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x515 + (-1 * ((-1 * x515) + x517) * x132) + (-1 * x517));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x533 + (-1 * x535) + (-1 * ((-1 * x533) + x535) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x548 + (-1 * x550) + (-1 * ((-1 * x548) + x550) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), x556 + (-1 * x563) + (-1 * ((-1 * x556) + x563) * x132));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae550a0>]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x13 * (*_x0).Pose.Rot[0];
	const FLT x15 = x11 * x10;
	const FLT x16 = x15 * (*_x0).Pose.Rot[2];
	const FLT x17 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x17 * (*_x0).Pose.Rot[1];
	const FLT x19 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x20 = x19 * (*_x0).Pose.Rot[3];
	const FLT x21 = x18 + x14 + (-1 * x20) + x16;
	const FLT x22 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x17 * (*_x0).Pose.Rot[0];
	const FLT x24 = x13 * (*_x0).Pose.Rot[1];
	const FLT x25 = x15 * (*_x0).Pose.Rot[3];
	const FLT x26 = x19 * (*_x0).Pose.Rot[2];
	const FLT x27 = x26 + x25 + x23 + (-1 * x24);
	const FLT x28 = (x21 * sensor_pt[2]) + (-1 * x27 * sensor_pt[1]) + (x22 * sensor_pt[0]);
	const FLT x29 = x17 * (*_x0).Pose.Rot[2];
	const FLT x30 = x13 * (*_x0).Pose.Rot[3];
	const FLT x31 = x15 * (*_x0).Pose.Rot[1];
	const FLT x32 = x19 * (*_x0).Pose.Rot[0];
	const FLT x33 = x32 + x31 + (-1 * x29) + x30;
	const FLT x34 = (-1 * x33 * sensor_pt[2]) + (x27 * sensor_pt[0]) + (x22 * sensor_pt[1]);
	const FLT x35 = sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (2 * ((x34 * x33) + (-1 * x21 * x28))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x36 = (-1 * x21 * sensor_pt[0]) + (x22 * sensor_pt[2]) + (x33 * sensor_pt[1]);
	const FLT x37 = (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (2 * ((x28 * x27) + (-1 * x33 * x36))) + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x38 = (2 * ((x36 * x21) + (-1 * x34 * x27))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x39 = (x35 * (*lh_p).Rot[0]) + (-1 * x38 * (*lh_p).Rot[2]) + (x37 * (*lh_p).Rot[1]);
	const FLT x40 = (-1 * x37 * (*lh_p).Rot[3]) + (x35 * (*lh_p).Rot[2]) + (x38 * (*lh_p).Rot[0]);
	const FLT x41 = x37 + (*lh_p).Pos[1] + (2 * ((x40 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1])));
	const FLT x42 = x41 * x41;
	const FLT x43 = (-1 * x35 * (*lh_p).Rot[1]) + (x37 * (*lh_p).Rot[0]) + (x38 * (*lh_p).Rot[3]);
	const FLT x44 = x35 + (2 * ((x43 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x45 = x38 + (2 * ((x39 * (*lh_p).Rot[2]) + (-1 * x43 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x46 = x45 * x45;
	const FLT x47 = x46 + (x44 * x44);
	const FLT x48 = x47 + x42;
	const FLT x49 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x50 = cos(x49);
	const FLT x51 = 1. / x50;
	const FLT x52 = x51 * (1. / sqrt(x48));
	const FLT x53 = asin(x52 * x41);
	const FLT x54 = 8.0108022e-06 * x53;
	const FLT x55 = -8.0108022e-06 + (-1 * x54);
	const FLT x56 = 0.0028679863 + (x53 * x55);
	const FLT x57 = 5.3685255e-06 + (x53 * x56);
	const FLT x58 = 0.0076069798 + (x53 * x57);
	const FLT x59 = x53 * x58;
	const FLT x60 = -8.0108022e-06 + (-1.60216044e-05 * x53);
	const FLT x61 = x56 + (x60 * x53);
	const FLT x62 = x57 + (x61 * x53);
	const FLT x63 = x58 + (x62 * x53);
	const FLT x64 = (x63 * x53) + x59;
	const FLT x65 = sin(x49);
	const FLT x66 = atan2(-1 * x44, x45);
	const FLT x67 = tan(x49);
	const FLT x68 = x67 * (1. / sqrt(x47));
	const FLT x69 = -1 * x68 * x41;
	const FLT x70 = (-1 * asin(x69)) + (*bsc0).ogeephase + x66;
	const FLT x71 = (sin(x70) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x72 = x71 * x65;
	const FLT x73 = x50 + (x72 * x64);
	const FLT x74 = 1. / x73;
	const FLT x75 = x53 * x53;
	const FLT x76 = x71 * x75;
	const FLT x77 = x74 * x76;
	const FLT x78 = x69 + (x77 * x58);
	const FLT x79 = 1. / sqrt(1 + (-1 * (x78 * x78)));
	const FLT x80 = (-1 * x18) + x20 + (-1 * x16) + (-1 * x14);
	const FLT x81 = 2 * x21;
	const FLT x82 = 1 + (x80 * x81) + (-2 * (x27 * x27));
	const FLT x83 = 2 * x22;
	const FLT x84 = x83 * x21;
	const FLT x85 = 2 * x33;
	const FLT x86 = (x85 * x27) + (-1 * x84);
	const FLT x87 = x83 * x27;
	const FLT x88 = x87 + (-1 * x80 * x85);
	const FLT x89 = (x88 * (*lh_p).Rot[1]) + (-1 * x82 * (*lh_p).Rot[2]) + (x86 * (*lh_p).Rot[0]);
	const FLT x90 = 2 * (*lh_p).Rot[2];
	const FLT x91 = (x82 * (*lh_p).Rot[3]) + (-1 * x86 * (*lh_p).Rot[1]) + (x88 * (*lh_p).Rot[0]);
	const FLT x92 = 2 * (*lh_p).Rot[3];
	const FLT x93 = x82 + (x89 * x90) + (-1 * x92 * x91);
	const FLT x94 = 2 * x45;
	const FLT x95 = 2 * (*lh_p).Rot[1];
	const FLT x96 = (x82 * (*lh_p).Rot[0]) + (-1 * x88 * (*lh_p).Rot[3]) + (x86 * (*lh_p).Rot[2]);
	const FLT x97 = x86 + (x91 * x95) + (-1 * x90 * x96);
	const FLT x98 = 2 * x44;
	const FLT x99 = (x98 * x97) + (x93 * x94);
	const FLT x100 = 1.0/2.0 * x41;
	const FLT x101 = x67 * (1. / (x47 * sqrt(x47))) * x100;
	const FLT x102 = x88 + (x92 * x96) + (-1 * x89 * x95);
	const FLT x103 = (-1 * x68 * x102) + (x99 * x101);
	const FLT x104 = 1. / x47;
	const FLT x105 = 1. / sqrt(1 + (-1 * (x67 * x67) * x42 * x104));
	const FLT x106 = x44 * (1. / x46);
	const FLT x107 = 1. / x45;
	const FLT x108 = x46 * x104;
	const FLT x109 = ((-1 * x97 * x107) + (x93 * x106)) * x108;
	const FLT x110 = cos(x70) * (*bsc0).ogeemag;
	const FLT x111 = x110 * (x109 + (-1 * x103 * x105));
	const FLT x112 = x64 * x65;
	const FLT x113 = 1. / sqrt(1 + (-1 * (1. / (x50 * x50)) * x42 * (1. / x48)));
	const FLT x114 = 2 * x41;
	const FLT x115 = x51 * (1. / (x48 * sqrt(x48))) * x100;
	const FLT x116 = x113 * ((-1 * x115 * (x99 + (x102 * x114))) + (x52 * x102));
	const FLT x117 = x55 * x116;
	const FLT x118 = 2.40324066e-05 * x53;
	const FLT x119 = (x53 * ((-1 * x54 * x116) + x117)) + (x56 * x116);
	const FLT x120 = (x53 * x119) + (x57 * x116);
	const FLT x121 = (1. / (x73 * x73)) * x76 * x58;
	const FLT x122 = x75 * x74 * x58;
	const FLT x123 = 2 * x71 * x74 * x59;
	const FLT x124 = x79 * (x103 + (x111 * x122) + (x116 * x123) + (-1 * x121 * ((x72 * ((x53 * x120) + (x53 * (x120 + (x53 * (x119 + (x53 * ((x60 * x116) + x117 + (-1 * x118 * x116))) + (x61 * x116))) + (x62 * x116))) + (x58 * x116) + (x63 * x116))) + (x111 * x112))) + (x77 * x120));
	const FLT x125 = cos((-1 * asin(x78)) + (*bsc0).gibpha + x66) * (*bsc0).gibmag;
	const FLT x126 = 2 * ((-1 * x25) + (-1 * x26) + x24 + (-1 * x23));
	const FLT x127 = x83 * x33;
	const FLT x128 = x127 + (-1 * x21 * x126);
	const FLT x129 = 1 + (x27 * x126) + (-2 * (x33 * x33));
	const FLT x130 = (x85 * x21) + (-1 * x87);
	const FLT x131 = (x130 * (*lh_p).Rot[0]) + (x128 * (*lh_p).Rot[2]) + (-1 * x129 * (*lh_p).Rot[3]);
	const FLT x132 = (x129 * (*lh_p).Rot[1]) + (x128 * (*lh_p).Rot[0]) + (-1 * x130 * (*lh_p).Rot[2]);
	const FLT x133 = x129 + (x92 * x131) + (-1 * x95 * x132);
	const FLT x134 = 2 * ((x130 * (*lh_p).Rot[3]) + (-1 * x128 * (*lh_p).Rot[1]) + (x129 * (*lh_p).Rot[0]));
	const FLT x135 = x130 + (x90 * x132) + (-1 * x134 * (*lh_p).Rot[3]);
	const FLT x136 = (x134 * (*lh_p).Rot[1]) + x128 + (-1 * x90 * x131);
	const FLT x137 = (x98 * x136) + (x94 * x135);
	const FLT x138 = (-1 * x115 * (x137 + (x114 * x133))) + (x52 * x133);
	const FLT x139 = x113 * x138;
	const FLT x140 = x57 * x113;
	const FLT x141 = x55 * x139;
	const FLT x142 = (x53 * ((-1 * x54 * x139) + x141)) + (x56 * x139);
	const FLT x143 = (x53 * x142) + (x138 * x140);
	const FLT x144 = (-1 * x68 * x133) + (x101 * x137);
	const FLT x145 = ((-1 * x107 * x136) + (x106 * x135)) * x108;
	const FLT x146 = x145 + (-1 * x105 * x144);
	const FLT x147 = x110 * x122;
	const FLT x148 = x110 * x112;
	const FLT x149 = x79 * (x144 + (-1 * x121 * ((x72 * ((x58 * x139) + (x63 * x139) + (x53 * (x143 + (x53 * ((x53 * (x141 + (x60 * x139) + (-1 * x118 * x139))) + x142 + (x61 * x139))) + (x62 * x139))) + (x53 * x143))) + (x146 * x148))) + (x146 * x147) + (x123 * x139) + (x77 * x143));
	const FLT x150 = (x81 * x27) + (-1 * x127);
	const FLT x151 = (-1 * x32) + (-1 * x30) + x29 + (-1 * x31);
	const FLT x152 = 1 + (x85 * x151) + (-2 * (x21 * x21));
	const FLT x153 = x84 + (-2 * x27 * x151);
	const FLT x154 = (x153 * (*lh_p).Rot[0]) + (-1 * x150 * (*lh_p).Rot[3]) + (x152 * (*lh_p).Rot[2]);
	const FLT x155 = (x150 * (*lh_p).Rot[1]) + (-1 * x153 * (*lh_p).Rot[2]) + (x152 * (*lh_p).Rot[0]);
	const FLT x156 = x150 + (x92 * x154) + (-1 * x95 * x155);
	const FLT x157 = (x153 * (*lh_p).Rot[3]) + (-1 * x152 * (*lh_p).Rot[1]) + (x150 * (*lh_p).Rot[0]);
	const FLT x158 = x153 + (x90 * x155) + (-1 * x92 * x157);
	const FLT x159 = x152 + (x95 * x157) + (-1 * x90 * x154);
	const FLT x160 = (x98 * x159) + (x94 * x158);
	const FLT x161 = (-1 * x115 * (x160 + (x114 * x156))) + (x52 * x156);
	const FLT x162 = x113 * x161;
	const FLT x163 = x55 * x162;
	const FLT x164 = (x53 * ((-1 * x54 * x162) + x163)) + (x56 * x162);
	const FLT x165 = (x53 * x164) + (x161 * x140);
	const FLT x166 = (-1 * x68 * x156) + (x101 * x160);
	const FLT x167 = ((-1 * x107 * x159) + (x106 * x158)) * x108;
	const FLT x168 = x167 + (-1 * x105 * x166);
	const FLT x169 = x79 * ((-1 * x121 * ((x72 * ((x58 * x162) + (x53 * x165) + (x53 * (x165 + (x53 * (x164 + (x53 * ((x60 * x162) + x163 + (-1 * x118 * x162))) + (x61 * x162))) + (x62 * x162))) + (x63 * x162))) + (x168 * x148))) + (x168 * x147) + (x77 * x165) + x166 + (x123 * x162));
	cnMatrixOptionalSet(Hx, 0, 0, x109 + (-1 * x124) + (-1 * ((-1 * x109) + x124) * x125));
	cnMatrixOptionalSet(Hx, 0, 1, x145 + (-1 * x149) + (-1 * ((-1 * x145) + x149) * x125));
	cnMatrixOptionalSet(Hx, 0, 2, x167 + (-1 * x169) + (-1 * ((-1 * x167) + x169) * x125));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = x0 * (*_x0).Acc[1];
	const FLT x2 = dt * (*_x0).Velocity.Pos[1];
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x17 = x13 * x12;
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = x14 * (*_x0).Pose.Rot[0];
	const FLT x21 = (x20 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x17 * (*_x0).Pose.Rot[1]) + (x16 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x20 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x18 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (-1 * x22 * sensor_pt[0]) + (x19 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x24 = (x18 * (*_x0).Pose.Rot[2]) + (x17 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x16 * (*_x0).Pose.Rot[1]);
	const FLT x25 = (-1 * x24 * sensor_pt[1]) + (x22 * sensor_pt[2]) + (x19 * sensor_pt[0]);
	const FLT x26 = 2 * ((x24 * x25) + (-1 * x23 * x21));
	const FLT x27 = x26 + x2 + sensor_pt[1] + (*_x0).Pose.Pos[1] + x1;
	const FLT x28 = x27 * (*lh_p).Rot[0];
	const FLT x29 = dt * (*_x0).Velocity.Pos[0];
	const FLT x30 = x0 * (*_x0).Acc[0];
	const FLT x31 = (-1 * x21 * sensor_pt[2]) + (x24 * sensor_pt[0]) + (x19 * sensor_pt[1]);
	const FLT x32 = 2 * ((x22 * x23) + (-1 * x31 * x24));
	const FLT x33 = x32 + (*_x0).Pose.Pos[0] + x29 + sensor_pt[0] + x30;
	const FLT x34 = x33 * (*lh_p).Rot[3];
	const FLT x35 = dt * (*_x0).Velocity.Pos[2];
	const FLT x36 = x0 * (*_x0).Acc[2];
	const FLT x37 = 2 * ((x31 * x21) + (-1 * x25 * x22));
	const FLT x38 = x37 + sensor_pt[2] + x36 + x35 + (*_x0).Pose.Pos[2];
	const FLT x39 = x38 * (*lh_p).Rot[1];
	const FLT x40 = (-1 * x39) + x28 + x34;
	const FLT x41 = x38 * (*lh_p).Rot[0];
	const FLT x42 = x27 * (*lh_p).Rot[1];
	const FLT x43 = x33 * (*lh_p).Rot[2];
	const FLT x44 = (-1 * x43) + x41 + x42;
	const FLT x45 = x33 + (2 * ((x44 * (*lh_p).Rot[2]) + (-1 * x40 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x46 = x38 * (*lh_p).Rot[2];
	const FLT x47 = x33 * (*lh_p).Rot[0];
	const FLT x48 = x27 * (*lh_p).Rot[3];
	const FLT x49 = (-1 * x48) + x46 + x47;
	const FLT x50 = x27 + (*lh_p).Pos[1] + (2 * ((x49 * (*lh_p).Rot[3]) + (-1 * x44 * (*lh_p).Rot[1])));
	const FLT x51 = x50 * x45;
	const FLT x52 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x53 = tan(x52);
	const FLT x54 = x38 + (2 * ((x40 * (*lh_p).Rot[1]) + (-1 * x49 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x55 = x45 * x45;
	const FLT x56 = x55 + (x54 * x54);
	const FLT x57 = x53 * (1. / (x56 * sqrt(x56)));
	const FLT x58 = x51 * x57;
	const FLT x59 = x50 * x50;
	const FLT x60 = 1. / x56;
	const FLT x61 = 1. / sqrt(1 + (-1 * x60 * (x53 * x53) * x59));
	const FLT x62 = x60 * x54;
	const FLT x63 = atan2(-1 * x54, x45);
	const FLT x64 = x53 * (1. / sqrt(x56));
	const FLT x65 = -1 * x64 * x50;
	const FLT x66 = (-1 * asin(x65)) + (*bsc0).ogeephase + x63;
	const FLT x67 = cos(x66) * (*bsc0).ogeemag;
	const FLT x68 = x67 * (x62 + (-1 * x61 * x58));
	const FLT x69 = x56 + x59;
	const FLT x70 = cos(x52);
	const FLT x71 = 1. / x70;
	const FLT x72 = x71 * (1. / sqrt(x69));
	const FLT x73 = asin(x72 * x50);
	const FLT x74 = 8.0108022e-06 * x73;
	const FLT x75 = -8.0108022e-06 + (-1 * x74);
	const FLT x76 = 0.0028679863 + (x73 * x75);
	const FLT x77 = 5.3685255e-06 + (x73 * x76);
	const FLT x78 = 0.0076069798 + (x73 * x77);
	const FLT x79 = x73 * x73;
	const FLT x80 = x73 * x78;
	const FLT x81 = -8.0108022e-06 + (-1.60216044e-05 * x73);
	const FLT x82 = x76 + (x81 * x73);
	const FLT x83 = x77 + (x82 * x73);
	const FLT x84 = x78 + (x83 * x73);
	const FLT x85 = (x84 * x73) + x80;
	const FLT x86 = sin(x52);
	const FLT x87 = (sin(x66) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x88 = x86 * x87;
	const FLT x89 = x70 + (x88 * x85);
	const FLT x90 = 1. / x89;
	const FLT x91 = x79 * x78 * x90;
	const FLT x92 = 2 * x45;
	const FLT x93 = 1. / sqrt(1 + (-1 * (1. / (x70 * x70)) * (1. / x69) * x59));
	const FLT x94 = x71 * (1. / (x69 * sqrt(x69)));
	const FLT x95 = x50 * x94;
	const FLT x96 = x80 * x87 * x90;
	const FLT x97 = x93 * x96 * x95;
	const FLT x98 = x77 * x93;
	const FLT x99 = x51 * x94;
	const FLT x100 = x93 * x99;
	const FLT x101 = -1 * x75 * x100;
	const FLT x102 = (x73 * ((x74 * x100) + x101)) + (-1 * x76 * x100);
	const FLT x103 = (x73 * x102) + (-1 * x99 * x98);
	const FLT x104 = x87 * x79;
	const FLT x105 = x90 * x104;
	const FLT x106 = x85 * x86;
	const FLT x107 = 2.40324066e-05 * x73;
	const FLT x108 = x81 * x93;
	const FLT x109 = x84 * x93;
	const FLT x110 = (1. / (x89 * x89)) * x78 * x104;
	const FLT x111 = x65 + (x78 * x105);
	const FLT x112 = 1. / sqrt(1 + (-1 * (x111 * x111)));
	const FLT x113 = x112 * ((-1 * x110 * ((x88 * ((-1 * x78 * x100) + (x73 * x103) + (x73 * ((x73 * (x102 + (x73 * ((-1 * x99 * x108) + x101 + (x100 * x107))) + (-1 * x82 * x100))) + x103 + (-1 * x83 * x100))) + (-1 * x99 * x109))) + (x68 * x106))) + (x103 * x105) + (-1 * x92 * x97) + x58 + (x68 * x91));
	const FLT x114 = cos((-1 * asin(x111)) + (*bsc0).gibpha + x63) * (*bsc0).gibmag;
	const FLT x115 = x67 * x91;
	const FLT x116 = x64 * x61;
	const FLT x117 = (-1 * x59 * x94) + x72;
	const FLT x118 = x93 * x117;
	const FLT x119 = x75 * x118;
	const FLT x120 = (x73 * ((-1 * x74 * x118) + x119)) + (x76 * x118);
	const FLT x121 = (x73 * x120) + (x77 * x118);
	const FLT x122 = x67 * x106;
	const FLT x123 = 2 * x96;
	const FLT x124 = x112 * ((x118 * x123) + (-1 * x110 * ((x88 * ((x78 * x118) + (x73 * x121) + (x73 * (x121 + (x73 * (x120 + (x73 * ((x108 * x117) + x119 + (-1 * x107 * x118))) + (x82 * x118))) + (x83 * x118))) + (x84 * x118))) + (x116 * x122))) + (x105 * x121) + (-1 * x64) + (x115 * x116));
	const FLT x125 = x50 * x57;
	const FLT x126 = x54 * x125;
	const FLT x127 = x60 * x45;
	const FLT x128 = -1 * x127;
	const FLT x129 = x128 + (-1 * x61 * x126);
	const FLT x130 = x54 * x95;
	const FLT x131 = x93 * x130;
	const FLT x132 = -1 * x75 * x131;
	const FLT x133 = (x73 * ((x74 * x131) + x132)) + (-1 * x76 * x131);
	const FLT x134 = (x73 * x133) + (-1 * x98 * x130);
	const FLT x135 = 2 * x54;
	const FLT x136 = x112 * ((-1 * x97 * x135) + (x105 * x134) + (-1 * x110 * ((x88 * ((-1 * x109 * x130) + (x73 * (x134 + (x73 * (x133 + (x73 * ((-1 * x108 * x130) + x132 + (x107 * x131))) + (-1 * x82 * x131))) + (-1 * x83 * x131))) + (-1 * x78 * x131) + (x73 * x134))) + (x122 * x129))) + x126 + (x115 * x129));
	const FLT x137 = 2 * x48;
	const FLT x138 = (2 * x46) + (-1 * x137);
	const FLT x139 = 2 * x43;
	const FLT x140 = (2 * x42) + (-1 * x139);
	const FLT x141 = (x135 * x140) + (x92 * x138);
	const FLT x142 = 1.0/2.0 * x125;
	const FLT x143 = 2 * x39;
	const FLT x144 = (2 * x34) + (-1 * x143);
	const FLT x145 = (-1 * x64 * x144) + (x142 * x141);
	const FLT x146 = x54 * (1. / x55);
	const FLT x147 = 1. / x45;
	const FLT x148 = x60 * x55;
	const FLT x149 = ((-1 * x140 * x147) + (x138 * x146)) * x148;
	const FLT x150 = x149 + (-1 * x61 * x145);
	const FLT x151 = 2 * x50;
	const FLT x152 = 1.0/2.0 * x95;
	const FLT x153 = (-1 * x152 * (x141 + (x144 * x151))) + (x72 * x144);
	const FLT x154 = x93 * x153;
	const FLT x155 = x75 * x154;
	const FLT x156 = (x73 * ((-1 * x74 * x154) + x155)) + (x76 * x154);
	const FLT x157 = (x73 * x156) + (x77 * x154);
	const FLT x158 = x112 * (x145 + (x115 * x150) + (x105 * x157) + (-1 * x110 * ((x88 * ((x78 * x154) + (x73 * (x157 + (x73 * (x156 + (x73 * ((x108 * x153) + x155 + (-1 * x107 * x154))) + (x82 * x154))) + (x83 * x154))) + (x84 * x154) + (x73 * x157))) + (x122 * x150))) + (x123 * x154));
	const FLT x159 = 2 * x41;
	const FLT x160 = (-4 * x42) + (-1 * x159) + x139;
	const FLT x161 = (-1 * x36) + (-1 * sensor_pt[2]) + (-1 * x37) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x35);
	const FLT x162 = 2 * (*lh_p).Rot[3];
	const FLT x163 = 2 * (*lh_p).Rot[2];
	const FLT x164 = (x27 * x163) + (-1 * x161 * x162);
	const FLT x165 = 2 * (*lh_p).Rot[1];
	const FLT x166 = 2 * x28;
	const FLT x167 = x144 + (x161 * x165) + x166;
	const FLT x168 = (x167 * x135) + (x92 * x164);
	const FLT x169 = (-1 * x152 * (x168 + (x160 * x151))) + (x72 * x160);
	const FLT x170 = x93 * x169;
	const FLT x171 = (-1 * x64 * x160) + (x168 * x142);
	const FLT x172 = ((-1 * x167 * x147) + (x164 * x146)) * x148;
	const FLT x173 = x172 + (-1 * x61 * x171);
	const FLT x174 = x75 * x170;
	const FLT x175 = (x73 * ((-1 * x74 * x170) + x174)) + (x76 * x170);
	const FLT x176 = (x73 * x175) + (x77 * x170);
	const FLT x177 = x112 * ((x115 * x173) + x171 + (x105 * x176) + (x123 * x170) + (-1 * x110 * ((x88 * ((x78 * x170) + (x73 * (x176 + (x73 * (x175 + (x73 * ((x108 * x169) + x174 + (-1 * x107 * x170))) + (x82 * x170))) + (x83 * x170))) + (x73 * x176) + (x84 * x170))) + (x122 * x173))));
	const FLT x178 = (-1 * (*_x0).Pose.Pos[0]) + (-1 * x32) + (-1 * x29) + (-1 * x30) + (-1 * sensor_pt[0]);
	const FLT x179 = x140 + x159 + (x163 * x178);
	const FLT x180 = 2 * x47;
	const FLT x181 = (-1 * x180) + (-4 * x46) + x137;
	const FLT x182 = (x181 * x135) + (x92 * x179);
	const FLT x183 = (x38 * x162) + (-1 * x165 * x178);
	const FLT x184 = (-1 * x64 * x183) + (x182 * x142);
	const FLT x185 = ((-1 * x181 * x147) + (x179 * x146)) * x148;
	const FLT x186 = x185 + (-1 * x61 * x184);
	const FLT x187 = (-1 * x152 * (x182 + (x183 * x151))) + (x72 * x183);
	const FLT x188 = x93 * x187;
	const FLT x189 = x75 * x188;
	const FLT x190 = (x73 * ((-1 * x74 * x188) + x189)) + (x76 * x188);
	const FLT x191 = (x73 * x190) + (x77 * x188);
	const FLT x192 = x112 * (x184 + (x115 * x186) + (x123 * x188) + (-1 * x110 * ((x88 * ((x73 * x191) + (x78 * x188) + (x73 * (x191 + (x73 * (x190 + (x73 * ((x108 * x187) + x189 + (-1 * x107 * x188))) + (x82 * x188))) + (x83 * x188))) + (x84 * x188))) + (x122 * x186))) + (x105 * x191));
	const FLT x193 = (-1 * x2) + (-1 * x26) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x1) + (-1 * sensor_pt[1]);
	const FLT x194 = x138 + (x162 * x193) + x180;
	const FLT x195 = x143 + (-1 * x166) + (-4 * x34);
	const FLT x196 = (x33 * x165) + (-1 * x163 * x193);
	const FLT x197 = (x196 * x135) + (x92 * x195);
	const FLT x198 = (-1 * x152 * (x197 + (x194 * x151))) + (x72 * x194);
	const FLT x199 = x93 * x198;
	const FLT x200 = x75 * x199;
	const FLT x201 = (x73 * ((-1 * x74 * x199) + x200)) + (x76 * x199);
	const FLT x202 = (x73 * x201) + (x77 * x199);
	const FLT x203 = (-1 * x64 * x194) + (x197 * x142);
	const FLT x204 = ((-1 * x196 * x147) + (x195 * x146)) * x148;
	const FLT x205 = x204 + (-1 * x61 * x203);
	const FLT x206 = x112 * ((x205 * x115) + (-1 * x110 * ((x88 * ((x73 * (x202 + (x73 * (x201 + (x73 * ((x108 * x198) + (-1 * x107 * x199) + x200)) + (x82 * x199))) + (x83 * x199))) + (x84 * x199) + (x78 * x199) + (x73 * x202))) + (x205 * x122))) + (x202 * x105) + x203 + (x123 * x199));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), x62 + (-1 * x113) + (-1 * x114 * ((-1 * x62) + x113)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), (-1 * x114 * x124) + (-1 * x124));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x128 + (-1 * x136) + (-1 * (x127 + x136) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x149 + (-1 * x158) + (-1 * ((-1 * x149) + x158) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), x172 + (-1 * x177) + (-1 * ((-1 * x172) + x177) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x185 + (-1 * x192) + (-1 * ((-1 * x185) + x192) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), x204 + (-1 * x206) + (-1 * ((-1 * x204) + x206) * x114));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae71760>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae71460>, <cnkalman.codegen.WrapMember object at 0x7f5abae717c0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae71550>, <cnkalman.codegen.WrapMember object at 0x7f5abae714f0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae71820>, <cnkalman.codegen.WrapMember object at 0x7f5abae71700>]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x1 = cos(x0);
	const FLT x2 = 1.0/2.0 * dt * fabs(dt);
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = x14 * (*_x0).Pose.Rot[2];
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x20 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x22 = (x20 * (*_x0).Velocity.AxisAngleRot[0]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x23 = (x19 * sensor_pt[2]) + (-1 * x22 * sensor_pt[1]) + (x21 * sensor_pt[0]);
	const FLT x24 = (-1 * x20 * (*_x0).Velocity.AxisAngleRot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x25 = (x22 * sensor_pt[0]) + (-1 * x24 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x26 = sensor_pt[2] + (x2 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (2 * ((x24 * x25) + (-1 * x23 * x19))) + (*_x0).Pose.Pos[2];
	const FLT x27 = (-1 * x19 * sensor_pt[0]) + (x21 * sensor_pt[2]) + (x24 * sensor_pt[1]);
	const FLT x28 = (2 * ((x22 * x23) + (-1 * x24 * x27))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x2 * (*_x0).Acc[1]);
	const FLT x29 = (2 * ((x27 * x19) + (-1 * x25 * x22))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x2 * (*_x0).Acc[0]);
	const FLT x30 = (-1 * x29 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]) + (x28 * (*lh_p).Rot[1]);
	const FLT x31 = (-1 * x28 * (*lh_p).Rot[3]) + (x26 * (*lh_p).Rot[2]) + (x29 * (*lh_p).Rot[0]);
	const FLT x32 = x28 + (*lh_p).Pos[1] + (2 * ((x31 * (*lh_p).Rot[3]) + (-1 * x30 * (*lh_p).Rot[1])));
	const FLT x33 = x32 * x32;
	const FLT x34 = (-1 * x26 * (*lh_p).Rot[1]) + (x28 * (*lh_p).Rot[0]) + (x29 * (*lh_p).Rot[3]);
	const FLT x35 = x26 + (2 * ((x34 * (*lh_p).Rot[1]) + (-1 * x31 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x36 = x29 + (2 * ((x30 * (*lh_p).Rot[2]) + (-1 * x34 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x37 = (x36 * x36) + (x35 * x35);
	const FLT x38 = x37 + x33;
	const FLT x39 = x32 * (1. / sqrt(x38));
	const FLT x40 = asin((1. / x1) * x39);
	const FLT x41 = 8.0108022e-06 * x40;
	const FLT x42 = -8.0108022e-06 + (-1 * x41);
	const FLT x43 = 0.0028679863 + (x40 * x42);
	const FLT x44 = 5.3685255e-06 + (x40 * x43);
	const FLT x45 = 0.0076069798 + (x40 * x44);
	const FLT x46 = x40 * x40;
	const FLT x47 = sin(x0);
	const FLT x48 = atan2(-1 * x35, x36);
	const FLT x49 = tan(x0);
	const FLT x50 = x32 * (1. / sqrt(x37));
	const FLT x51 = -1 * x50 * x49;
	const FLT x52 = (-1 * asin(x51)) + (*bsc0).ogeephase + x48;
	const FLT x53 = sin(x52);
	const FLT x54 = (x53 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x55 = x40 * x45;
	const FLT x56 = -8.0108022e-06 + (-1.60216044e-05 * x40);
	const FLT x57 = x43 + (x56 * x40);
	const FLT x58 = x44 + (x57 * x40);
	const FLT x59 = x45 + (x58 * x40);
	const FLT x60 = (x59 * x40) + x55;
	const FLT x61 = x60 * x54;
	const FLT x62 = x61 * x47;
	const FLT x63 = x1 + x62;
	const FLT x64 = 1. / x63;
	const FLT x65 = x64 * x46;
	const FLT x66 = x65 * x45;
	const FLT x67 = (1. / (x63 * x63)) * x45 * x46;
	const FLT x68 = x62 * x67;
	const FLT x69 = x51 + (x66 * x54);
	const FLT x70 = 1. / sqrt(1 + (-1 * (x69 * x69)));
	const FLT x71 = ((-1 * x68) + x66) * x70;
	const FLT x72 = asin(x69) + (-1 * (*bsc0).gibpha) + (-1 * x48);
	const FLT x73 = cos(x72) * (*bsc0).gibmag;
	const FLT x74 = ((-1 * x68 * x53) + (x66 * x53)) * x70;
	const FLT x75 = cos(x52) * (*bsc0).ogeemag;
	const FLT x76 = x75 * x66;
	const FLT x77 = x70 * ((-1 * x75 * x68) + x76);
	const FLT x78 = x49 * x49;
	const FLT x79 = x50 * (1 + x78);
	const FLT x80 = x79 * (1. / sqrt(1 + (-1 * x78 * x33 * (1. / x37))));
	const FLT x81 = x54 * x47;
	const FLT x82 = 1. / (x1 * x1);
	const FLT x83 = x82 * x39 * (1. / sqrt(1 + (-1 * x82 * x33 * (1. / x38))));
	const FLT x84 = x83 * x47;
	const FLT x85 = -1 * x84 * x42;
	const FLT x86 = (x40 * ((x84 * x41) + x85)) + (-1 * x84 * x43);
	const FLT x87 = (x86 * x40) + (-1 * x84 * x44);
	const FLT x88 = x70 * ((-1 * x67 * x54 * ((x81 * ((-1 * x84 * x45) + (-1 * x84 * x59) + (x40 * ((x40 * (x86 + (x40 * ((-1 * x84 * x56) + x85 + (2.40324066e-05 * x84 * x40))) + (-1 * x84 * x57))) + x87 + (-1 * x84 * x58))) + (x87 * x40))) + (-1 * x80 * x75 * x60 * x47) + x47 + (-1 * x1 * x61))) + (x87 * x65 * x54) + x79 + (-1 * x80 * x76) + (-2 * x81 * x83 * x64 * x55));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), (-1 * x71 * x73) + (-1 * x71));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), -1 * sin(x72));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x73);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag)/sizeof(FLT), (-1 * x73 * x74) + (-1 * x74));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase)/sizeof(FLT), (-1 * x73 * x77) + (-1 * x77));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x88 * x73) + (-1 * x88));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae71760>, <cnkalman.codegen.WrapMember object at 0x7f5abae71460>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae717c0>, <cnkalman.codegen.WrapMember object at 0x7f5abae71550>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae714f0>, <cnkalman.codegen.WrapMember object at 0x7f5abae71820>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae71700>]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_x_gen1(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x4);
	const FLT x8 = cos(x0);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x1 * x7;
	const FLT x13 = (x5 * x10) + (x3 * x12);
	const FLT x14 = (x1 * x5 * x9) + (x3 * x8 * x7);
	const FLT x15 = (x6 * x8) + (-1 * x9 * x12);
	const FLT x16 = 1. / sqrt((x15 * x15) + (x14 * x14) + (x11 * x11) + (x13 * x13));
	const FLT x17 = x11 * x16;
	const FLT x18 = x14 * x16;
	const FLT x19 = x13 * x16;
	const FLT x20 = x15 * x16;
	const FLT x21 = (x19 * (*_x0).Pose.Rot[0]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x20 * (*_x0).Pose.Rot[1]) +
					(-1 * x18 * (*_x0).Pose.Rot[2]);
	const FLT x22 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x23 = dt * dt;
	const FLT x24 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x25 = (x24 * x24) * x23;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x23 * (x26 * x26);
	const FLT x28 = (x22 * x22) * x23;
	const FLT x29 = 1e-10 + x28 + x25 + x27;
	const FLT x30 = sqrt(x29);
	const FLT x31 = 0.5 * x30;
	const FLT x32 = sin(x31);
	const FLT x33 = (x20 * (*_x0).Pose.Rot[3]) + (-1 * x17 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) +
					(x18 * (*_x0).Pose.Rot[0]);
	const FLT x34 = (x17 * (*_x0).Pose.Rot[0]) + (x19 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x35 = (x19 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[2]) + (-1 * x18 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x36 = (x32 * x32) * (1. / x29);
	const FLT x37 = cos(x31);
	const FLT x38 = (1. / sqrt((x35 * x35) + (x34 * x34) + (x33 * x33) + (x21 * x21))) *
					(1. / sqrt((x36 * x27) + (x37 * x37) + (x36 * x25) + (x36 * x28)));
	const FLT x39 = dt * (1. / x30) * x32 * x38;
	const FLT x40 = x39 * x22;
	const FLT x41 = x39 * x24;
	const FLT x42 = x38 * x37;
	const FLT x43 = x39 * x26;
	const FLT x44 = (-1 * x43 * x34) + (x42 * x33) + (x40 * x21) + (x41 * x35);
	const FLT x45 = (x42 * x21) + (-1 * x41 * x34) + (-1 * x43 * x35) + (-1 * x40 * x33);
	const FLT x46 = (x43 * x33) + (x41 * x21) + (x42 * x34) + (-1 * x40 * x35);
	const FLT x47 = (-1 * x46 * sensor_pt[1]) + (x44 * sensor_pt[2]) + (x45 * sensor_pt[0]);
	const FLT x48 = (x42 * x35) + (-1 * x41 * x33) + (x43 * x21) + (x40 * x34);
	const FLT x49 = (-1 * x48 * sensor_pt[2]) + (x46 * sensor_pt[0]) + (x45 * sensor_pt[1]);
	const FLT x50 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x51 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x50 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x44 * x47))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x52 = (-1 * x44 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x53 = (2 * ((x46 * x47) + (-1 * x52 * x48))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x50 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x54 = (2 * ((x52 * x44) + (-1 * x46 * x49))) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(x50 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x55 = (-1 * x54 * (*lh_p).Rot[2]) + (x51 * (*lh_p).Rot[0]) + (x53 * (*lh_p).Rot[1]);
	const FLT x56 = (-1 * x53 * (*lh_p).Rot[3]) + (x54 * (*lh_p).Rot[0]) + (x51 * (*lh_p).Rot[2]);
	const FLT x57 = x53 + (*lh_p).Pos[1] + (2 * ((x56 * (*lh_p).Rot[3]) + (-1 * x55 * (*lh_p).Rot[1])));
	const FLT x58 = (x53 * (*lh_p).Rot[0]) + (-1 * x51 * (*lh_p).Rot[1]) + (x54 * (*lh_p).Rot[3]);
	const FLT x59 = (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x56 * (*lh_p).Rot[2]))) + x51 + (*lh_p).Pos[2];
	const FLT x60 = -1 * x59;
	const FLT x61 = x54 + (*lh_p).Pos[0] + (2 * ((x55 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = (-1 * atan2(x61, x60)) + (-1 * (*bsc0).phase) +
					(-1 * asin((1. / sqrt((x61 * x61) + (x59 * x59))) * x57 * (*bsc0).tilt));
	return x62 + ((atan2(x57, x60) * atan2(x57, x60)) * (*bsc0).curve) +
		   (-1 * cos(1.5707963267949 + x62 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae639d0>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[3];
	const FLT x4 = x3 * (*lh_p).Rot[0];
	const FLT x5 = x4 + x2;
	const FLT x6 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x7 = cos(x6);
	const FLT x8 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x9 = sin(x8);
	const FLT x10 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x11 = sin(x10);
	const FLT x12 = x9 * x11;
	const FLT x13 = sin(x6);
	const FLT x14 = cos(x8);
	const FLT x15 = cos(x10);
	const FLT x16 = x15 * x14;
	const FLT x17 = (x13 * x16) + (-1 * x7 * x12);
	const FLT x18 = (x7 * x16) + (x13 * x12);
	const FLT x19 = x9 * x15;
	const FLT x20 = x14 * x11;
	const FLT x21 = (x7 * x20) + (x13 * x19);
	const FLT x22 = (x7 * x19) + (-1 * x20 * x13);
	const FLT x23 = 1. / sqrt((x22 * x22) + (x21 * x21) + (x17 * x17) + (x18 * x18));
	const FLT x24 = x23 * x17;
	const FLT x25 = x23 * x21;
	const FLT x26 = x23 * x18;
	const FLT x27 = x22 * x23;
	const FLT x28 = (x26 * (*_x0).Pose.Rot[0]) + (-1 * x27 * (*_x0).Pose.Rot[1]) + (-1 * x24 * (*_x0).Pose.Rot[3]) +
					(-1 * x25 * (*_x0).Pose.Rot[2]);
	const FLT x29 = x23 * (*_x0).Pose.Rot[2];
	const FLT x30 =
		(-1 * x24 * (*_x0).Pose.Rot[1]) + (x29 * x18) + (x27 * (*_x0).Pose.Rot[3]) + (x25 * (*_x0).Pose.Rot[0]);
	const FLT x31 = (x25 * (*_x0).Pose.Rot[1]) + (x24 * (*_x0).Pose.Rot[0]) + (x26 * (*_x0).Pose.Rot[3]) +
					(-1 * x27 * (*_x0).Pose.Rot[2]);
	const FLT x32 =
		(x26 * (*_x0).Pose.Rot[1]) + (-1 * x25 * (*_x0).Pose.Rot[3]) + (x29 * x17) + (x27 * (*_x0).Pose.Rot[0]);
	const FLT x33 = (x32 * x32) + (x30 * x30) + (x31 * x31) + (x28 * x28);
	const FLT x34 = 1. / sqrt(x33);
	const FLT x35 = dt * dt;
	const FLT x36 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x37 = x36 * x36;
	const FLT x38 = x35 * x37;
	const FLT x39 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x40 = x39 * x39;
	const FLT x41 = x40 * x35;
	const FLT x42 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x43 = x42 * x42;
	const FLT x44 = x43 * x35;
	const FLT x45 = 1e-10 + x44 + x38 + x41;
	const FLT x46 = sqrt(x45);
	const FLT x47 = 0.5 * x46;
	const FLT x48 = sin(x47);
	const FLT x49 = x48 * x48;
	const FLT x50 = 1. / x45;
	const FLT x51 = x50 * x49;
	const FLT x52 = cos(x47);
	const FLT x53 = (x52 * x52) + (x51 * x38) + (x51 * x41) + (x51 * x44);
	const FLT x54 = 1. / sqrt(x53);
	const FLT x55 = x54 * x34;
	const FLT x56 = x55 * x28;
	const FLT x57 = (1. / x46) * x48;
	const FLT x58 = x57 * x36;
	const FLT x59 = dt * x58;
	const FLT x60 = x57 * x42;
	const FLT x61 = x55 * x32;
	const FLT x62 = dt * x61;
	const FLT x63 = x54 * x52;
	const FLT x64 = x31 * x34;
	const FLT x65 = x63 * x64;
	const FLT x66 = x57 * x39;
	const FLT x67 = x55 * x30;
	const FLT x68 = dt * x67;
	const FLT x69 = (x68 * x66) + (x56 * x59) + x65 + (-1 * x60 * x62);
	const FLT x70 = x64 * x54;
	const FLT x71 = dt * x70;
	const FLT x72 = x63 * x34;
	const FLT x73 = x72 * x28;
	const FLT x74 = (-1 * x62 * x66) + x73 + (-1 * x71 * x58) + (-1 * x60 * x68);
	const FLT x75 = x72 * x32;
	const FLT x76 = dt * x56;
	const FLT x77 = (x76 * x66) + x75 + (-1 * x68 * x58) + (x71 * x60);
	const FLT x78 = (-1 * x77 * sensor_pt[2]) + (x69 * sensor_pt[0]) + (x74 * sensor_pt[1]);
	const FLT x79 = x72 * x30;
	const FLT x80 = (-1 * x71 * x66) + x79 + (x76 * x60) + (x62 * x58);
	const FLT x81 = (x74 * sensor_pt[2]) + (-1 * x80 * sensor_pt[0]) + (x77 * sensor_pt[1]);
	const FLT x82 = 1.0 / 2.0 * x0;
	const FLT x83 = (2 * ((x80 * x81) + (-1 * x78 * x69))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) +
					(x82 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*error_model).Pose.Pos[0] + (*_x0).Pose.Pos[0];
	const FLT x84 = (-1 * x69 * sensor_pt[1]) + (x80 * sensor_pt[2]) + (x74 * sensor_pt[0]);
	const FLT x85 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x78 * x77) + (-1 * x80 * x84))) +
					(x82 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x86 = (*error_model).Pose.Pos[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(2 * ((x84 * x69) + (-1 * x81 * x77))) + sensor_pt[1] +
					(x82 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x87 = (-1 * x86 * (*lh_p).Rot[3]) + (x83 * (*lh_p).Rot[0]) + (x85 * (*lh_p).Rot[2]);
	const FLT x88 = (-1 * x85 * (*lh_p).Rot[1]) + (x86 * (*lh_p).Rot[0]) + (x83 * (*lh_p).Rot[3]);
	const FLT x89 = (2 * ((x88 * (*lh_p).Rot[1]) + (-1 * x87 * (*lh_p).Rot[2]))) + x85 + (*lh_p).Pos[2];
	const FLT x90 = x89 * x89;
	const FLT x91 = (-1 * x83 * (*lh_p).Rot[2]) + (x85 * (*lh_p).Rot[0]) + (x86 * (*lh_p).Rot[1]);
	const FLT x92 = x83 + (*lh_p).Pos[0] + (2 * ((x91 * (*lh_p).Rot[2]) + (-1 * x88 * (*lh_p).Rot[3])));
	const FLT x93 = (x92 * x92) + x90;
	const FLT x94 = (1. / sqrt(x93)) * (*bsc0).tilt;
	const FLT x95 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x96 = -1 * x0 * x95;
	const FLT x97 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x98 = -1 * x0 * x97;
	const FLT x99 = x98 + x82 + x96;
	const FLT x100 = 2 * x92;
	const FLT x101 = x0 * (*lh_p).Rot[2] * (*lh_p).Rot[0];
	const FLT x102 = x1 * (*lh_p).Rot[3];
	const FLT x103 = x102 + (-1 * x101);
	const FLT x104 = 2 * x89;
	const FLT x105 = x86 + (*lh_p).Pos[1] + (2 * ((x87 * (*lh_p).Rot[3]) + (-1 * x91 * (*lh_p).Rot[1])));
	const FLT x106 = 1.0 / 2.0 * (1. / (x93 * sqrt(x93))) * x105 * (*bsc0).tilt;
	const FLT x107 = 1. / x93;
	const FLT x108 = x105 * x105;
	const FLT x109 = 1. / sqrt(1 + (-1 * x108 * x107 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x110 = 1. / x89;
	const FLT x111 = 1. / x90;
	const FLT x112 = x92 * x111;
	const FLT x113 = x90 * x107;
	const FLT x114 = (-1 * x113 * ((x103 * x112) + (-1 * x99 * x110))) +
					 (-1 * x109 * ((-1 * x106 * ((x103 * x104) + (x99 * x100))) + (x5 * x94)));
	const FLT x115 = -1 * x89;
	const FLT x116 = sin(1.5707963267949 + (-1 * asin(x94 * x105)) + (-1 * atan2(x92, x115)) + (-1 * (*bsc0).phase) +
						 (*bsc0).gibpha) *
					 (*bsc0).gibmag;
	const FLT x117 = x105 * x111;
	const FLT x118 = 2 * x90 * (1. / (x90 + x108)) * atan2(x105, x115) * (*bsc0).curve;
	const FLT x119 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x120 = (-1 * x0 * x119) + x82;
	const FLT x121 = x120 + x98;
	const FLT x122 = x2 + (-1 * x4);
	const FLT x123 = x3 * (*lh_p).Rot[2];
	const FLT x124 = x1 * (*lh_p).Rot[0];
	const FLT x125 = x124 + x123;
	const FLT x126 = (-1 * ((x112 * x125) + (-1 * x110 * x122)) * x113) +
					 (-1 * x109 * ((-1 * ((x104 * x125) + (x100 * x122)) * x106) + (x94 * x121)));
	const FLT x127 = x123 + (-1 * x124);
	const FLT x128 = x101 + x102;
	const FLT x129 = x120 + x96;
	const FLT x130 = (-1 * ((x112 * x129) + (-1 * x110 * x128)) * x113) +
					 (-1 * x109 * ((-1 * ((x104 * x129) + (x100 * x128)) * x106) + (x94 * x127)));
	const FLT x131 = 2 * (*lh_p).Rot[1];
	const FLT x132 = x131 * (*lh_p).Rot[2];
	const FLT x133 = 2 * (*lh_p).Rot[3];
	const FLT x134 = x133 * (*lh_p).Rot[0];
	const FLT x135 = x134 + x132;
	const FLT x136 = 2 * x97;
	const FLT x137 = -1 * x136;
	const FLT x138 = 2 * x95;
	const FLT x139 = 1 + (-1 * x138);
	const FLT x140 = x139 + x137;
	const FLT x141 = 2 * (*lh_p).Rot[2];
	const FLT x142 = x141 * (*lh_p).Rot[0];
	const FLT x143 = x133 * (*lh_p).Rot[1];
	const FLT x144 = x143 + (-1 * x142);
	const FLT x145 = (-1 * ((x112 * x144) + (-1 * x110 * x140)) * x113) +
					 (-1 * x109 * ((-1 * ((x104 * x144) + (x100 * x140)) * x106) + (x94 * x135)));
	const FLT x146 = 2 * x119;
	const FLT x147 = -1 * x146;
	const FLT x148 = 1 + x137 + x147;
	const FLT x149 = x132 + (-1 * x134);
	const FLT x150 = x133 * (*lh_p).Rot[2];
	const FLT x151 = x131 * (*lh_p).Rot[0];
	const FLT x152 = x151 + x150;
	const FLT x153 = (-1 * ((x112 * x152) + (-1 * x110 * x149)) * x113) +
					 (-1 * x109 * ((-1 * ((x104 * x152) + (x100 * x149)) * x106) + (x94 * x148)));
	const FLT x154 = x150 + (-1 * x151);
	const FLT x155 = x142 + x143;
	const FLT x156 = x139 + x147;
	const FLT x157 = (-1 * ((x112 * x156) + (-1 * x110 * x155)) * x113) +
					 (-1 * x109 * ((-1 * ((x104 * x156) + (x100 * x155)) * x106) + (x94 * x154)));
	const FLT x158 = x55 * x27;
	const FLT x159 = x59 * x158;
	const FLT x160 = dt * x60;
	const FLT x161 = x55 * x26;
	const FLT x162 = x161 * x160;
	const FLT x163 = 2 * x32;
	const FLT x164 = 2 * x24;
	const FLT x165 = 2 * x30;
	const FLT x166 = 2 * x28;
	const FLT x167 = (x26 * x166) + (x27 * x163) + (x25 * x165) + (x31 * x164);
	const FLT x168 = dt * x66;
	const FLT x169 = 1.0 / 2.0 * x31;
	const FLT x170 = 1. / (x33 * sqrt(x33));
	const FLT x171 = x54 * x170;
	const FLT x172 = x169 * x171;
	const FLT x173 = x168 * x172;
	const FLT x174 = 1.0 / 2.0 * x30;
	const FLT x175 = x63 * x170;
	const FLT x176 = x167 * x175;
	const FLT x177 = 1.0 / 2.0 * x28;
	const FLT x178 = x171 * x177;
	const FLT x179 = x167 * x178;
	const FLT x180 = 1.0 / 2.0 * x32;
	const FLT x181 = x171 * x180;
	const FLT x182 = x59 * x181;
	const FLT x183 = x55 * x24;
	const FLT x184 = -1 * x168 * x183;
	const FLT x185 = x72 * x25;
	const FLT x186 = x185 + x184;
	const FLT x187 = x186 + (-1 * x167 * x182) + x162 + x159 + (-1 * x160 * x179) + (x167 * x173) + (-1 * x176 * x174);
	const FLT x188 = x168 * x158;
	const FLT x189 = -1 * x188;
	const FLT x190 = x55 * x25;
	const FLT x191 = x160 * x190;
	const FLT x192 = -1 * x191;
	const FLT x193 = x167 * x172;
	const FLT x194 = x168 * x181;
	const FLT x195 = x171 * x174;
	const FLT x196 = x167 * x195;
	const FLT x197 = x72 * x26;
	const FLT x198 = x59 * x183;
	const FLT x199 = (-1 * x198) + x197;
	const FLT x200 = x199 + x192 + x189 + (-1 * x176 * x177) + (x59 * x193) + (x160 * x196) + (x167 * x194);
	const FLT x201 = x160 * x183;
	const FLT x202 = x72 * x27;
	const FLT x203 = -1 * x59 * x190;
	const FLT x204 = x161 * x168;
	const FLT x205 = x204 + x203;
	const FLT x206 = x205 + (-1 * x160 * x193) + x202 + x201 + (-1 * x168 * x179) + (x59 * x196) + (-1 * x176 * x180);
	const FLT x207 = (x206 * sensor_pt[1]) + (-1 * x187 * sensor_pt[0]) + (x200 * sensor_pt[2]);
	const FLT x208 = 2 * x80;
	const FLT x209 = x168 * x195;
	const FLT x210 = x168 * x190;
	const FLT x211 = x59 * x161;
	const FLT x212 = x160 * x181;
	const FLT x213 = -1 * x160 * x158;
	const FLT x214 = x72 * x24;
	const FLT x215 = x214 + x213;
	const FLT x216 = x215 + (x212 * x167) + (-1 * x169 * x176) + (-1 * x209 * x167) + x211 + x210 + (-1 * x59 * x179);
	const FLT x217 = (x200 * sensor_pt[1]) + (-1 * x206 * sensor_pt[2]) + (x216 * sensor_pt[0]);
	const FLT x218 = 2 * x69;
	const FLT x219 = 2 * x78;
	const FLT x220 = 2 * x81;
	const FLT x221 = (x220 * x187) + (-1 * x219 * x216) + (x208 * x207) + (-1 * x218 * x217);
	const FLT x222 = (-1 * x216 * sensor_pt[1]) + (x200 * sensor_pt[0]) + (x187 * sensor_pt[2]);
	const FLT x223 = 2 * x84;
	const FLT x224 = 2 * x77;
	const FLT x225 = (-1 * x208 * x222) + (x219 * x206) + (x217 * x224) + (-1 * x223 * x187);
	const FLT x226 = (x216 * x223) + (x218 * x222) + (-1 * x207 * x224) + (-1 * x206 * x220);
	const FLT x227 = 2 * ((x226 * (*lh_p).Rot[1]) + (-1 * x221 * (*lh_p).Rot[2]) + (x225 * (*lh_p).Rot[0]));
	const FLT x228 = (x225 * (*lh_p).Rot[2]) + (-1 * x226 * (*lh_p).Rot[3]) + (x221 * (*lh_p).Rot[0]);
	const FLT x229 = x226 + (-1 * x227 * (*lh_p).Rot[1]) + (x228 * x133);
	const FLT x230 = (x226 * (*lh_p).Rot[0]) + (x221 * (*lh_p).Rot[3]) + (-1 * x225 * (*lh_p).Rot[1]);
	const FLT x231 = (x227 * (*lh_p).Rot[2]) + x221 + (-1 * x230 * x133);
	const FLT x232 = x225 + (-1 * x228 * x141) + (x230 * x131);
	const FLT x233 = (-1 * ((x232 * x112) + (-1 * x231 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x232 * x104) + (x231 * x100)) * x106) + (x94 * x229)));
	const FLT x234 = -1 * x162;
	const FLT x235 = -1 * x159;
	const FLT x236 = 2 * x31;
	const FLT x237 = (-1 * x30 * x164) + (x26 * x163) + (-1 * x27 * x166) + (x25 * x236);
	const FLT x238 = x237 * x175;
	const FLT x239 = x237 * x178;
	const FLT x240 = x186 + (x212 * x237) + x235 + x234 + (-1 * x237 * x209) + (-1 * x238 * x169) + (-1 * x59 * x239);
	const FLT x241 = -1 * x210;
	const FLT x242 = (-1 * x214) + x213;
	const FLT x243 = x242 + (-1 * x237 * x182) + x241 + x211 + (x237 * x173) + (-1 * x239 * x160) + (-1 * x238 * x174);
	const FLT x244 = x237 * x172;
	const FLT x245 = x237 * x195;
	const FLT x246 = -1 * x202;
	const FLT x247 = x203 + (-1 * x204);
	const FLT x248 = x247 + x246 + (x237 * x194) + (-1 * x238 * x177) + (x59 * x244) + x201 + (x245 * x160);
	const FLT x249 = (x248 * sensor_pt[0]) + (-1 * x240 * sensor_pt[1]) + (x243 * sensor_pt[2]);
	const FLT x250 = x197 + x198;
	const FLT x251 = (-1 * x244 * x160) + x189 + (-1 * x239 * x168) + x191 + x250 + (-1 * x238 * x180) + (x59 * x245);
	const FLT x252 = (x248 * sensor_pt[1]) + (x240 * sensor_pt[0]) + (-1 * x251 * sensor_pt[2]);
	const FLT x253 = (x219 * x251) + (x252 * x224) + (-1 * x208 * x249) + (-1 * x223 * x243);
	const FLT x254 = (x251 * sensor_pt[1]) + (-1 * x243 * sensor_pt[0]) + (x248 * sensor_pt[2]);
	const FLT x255 = (x220 * x243) + (x208 * x254) + (-1 * x218 * x252) + (-1 * x219 * x240);
	const FLT x256 = (x218 * x249) + (-1 * x251 * x220) + (x223 * x240) + (-1 * x254 * x224);
	const FLT x257 = (x256 * (*lh_p).Rot[1]) + (x253 * (*lh_p).Rot[0]) + (-1 * x255 * (*lh_p).Rot[2]);
	const FLT x258 = (x253 * (*lh_p).Rot[2]) + (-1 * x256 * (*lh_p).Rot[3]) + (x255 * (*lh_p).Rot[0]);
	const FLT x259 = x256 + (-1 * x257 * x131) + (x258 * x133);
	const FLT x260 = (x255 * (*lh_p).Rot[3]) + (x256 * (*lh_p).Rot[0]) + (-1 * x253 * (*lh_p).Rot[1]);
	const FLT x261 = x255 + (-1 * x260 * x133) + (x257 * x141);
	const FLT x262 = x253 + (-1 * x258 * x141) + (x260 * x131);
	const FLT x263 = (-1 * ((x262 * x112) + (-1 * x261 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x262 * x104) + (x261 * x100)) * x106) + (x94 * x259)));
	const FLT x264 = -1 * x201;
	const FLT x265 = (-1 * x25 * x166) + (x26 * x165) + (-1 * x27 * x236) + (x32 * x164);
	const FLT x266 = x265 * x175;
	const FLT x267 = x265 * x178;
	const FLT x268 = (x212 * x265) + x264 + (-1 * x209 * x265) + x205 + x246 + (-1 * x266 * x169) + (-1 * x59 * x267);
	const FLT x269 = x250 + (-1 * x265 * x182) + x188 + (x265 * x173) + x192 + (-1 * x266 * x174) + (-1 * x267 * x160);
	const FLT x270 = x265 * x172;
	const FLT x271 = x265 * x195;
	const FLT x272 = (-1 * x185) + x184;
	const FLT x273 = x272 + x234 + (-1 * x266 * x177) + (x59 * x270) + x159 + (x265 * x194) + (x271 * x160);
	const FLT x274 = (x273 * sensor_pt[0]) + (-1 * x268 * sensor_pt[1]) + (x269 * sensor_pt[2]);
	const FLT x275 = -1 * x211;
	const FLT x276 = x215 + x241 + (-1 * x270 * x160) + (x59 * x271) + (-1 * x267 * x168) + (-1 * x266 * x180) + x275;
	const FLT x277 = (x273 * sensor_pt[1]) + (-1 * x276 * sensor_pt[2]) + (x268 * sensor_pt[0]);
	const FLT x278 = (x219 * x276) + (x277 * x224) + (-1 * x208 * x274) + (-1 * x269 * x223);
	const FLT x279 = (x276 * sensor_pt[1]) + (-1 * x269 * sensor_pt[0]) + (x273 * sensor_pt[2]);
	const FLT x280 = (-1 * x219 * x268) + (x269 * x220) + (-1 * x218 * x277) + (x208 * x279);
	const FLT x281 = (-1 * x276 * x220) + (x218 * x274) + (-1 * x279 * x224) + (x268 * x223);
	const FLT x282 = (x281 * (*lh_p).Rot[1]) + (x278 * (*lh_p).Rot[0]) + (-1 * x280 * (*lh_p).Rot[2]);
	const FLT x283 = (x278 * (*lh_p).Rot[2]) + (x280 * (*lh_p).Rot[0]) + (-1 * x281 * (*lh_p).Rot[3]);
	const FLT x284 = x281 + (-1 * x282 * x131) + (x283 * x133);
	const FLT x285 = (x280 * (*lh_p).Rot[3]) + (-1 * x278 * (*lh_p).Rot[1]) + (x281 * (*lh_p).Rot[0]);
	const FLT x286 = x280 + (-1 * x285 * x133) + (x282 * x141);
	const FLT x287 = x278 + (-1 * x283 * x141) + (x285 * x131);
	const FLT x288 = (-1 * ((x287 * x112) + (-1 * x286 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x287 * x104) + (x286 * x100)) * x106) + (x94 * x284)));
	const FLT x289 = (-1 * x28 * x164) + (x27 * x165) + (x26 * x236) + (-1 * x25 * x163);
	const FLT x290 = x289 * x178;
	const FLT x291 = x289 * x175;
	const FLT x292 = x289 * x172;
	const FLT x293 =
		x272 + (-1 * x292 * x160) + (-1 * x291 * x180) + (-1 * x290 * x168) + (x59 * x289 * x195) + x235 + x162;
	const FLT x294 = x289 * x160;
	const FLT x295 = (x294 * x181) + x191 + x188 + (-1 * x59 * x290) + x199 + (-1 * x209 * x289) + (-1 * x291 * x169);
	const FLT x296 = x242 + x275 + (x294 * x195) + (-1 * x291 * x177) + (x289 * x194) + x210 + (x59 * x292);
	const FLT x297 = (x296 * sensor_pt[1]) + (-1 * x293 * sensor_pt[2]) + (x295 * sensor_pt[0]);
	const FLT x298 = x247 + (x289 * x173) + (-1 * x291 * x174) + x202 + (-1 * x290 * x160) + x264 + (-1 * x289 * x182);
	const FLT x299 = (x293 * sensor_pt[1]) + (-1 * x298 * sensor_pt[0]) + (x296 * sensor_pt[2]);
	const FLT x300 = (x208 * x299) + (x298 * x220) + (-1 * x218 * x297) + (-1 * x219 * x295);
	const FLT x301 = (x296 * sensor_pt[0]) + (-1 * x295 * sensor_pt[1]) + (x298 * sensor_pt[2]);
	const FLT x302 = (-1 * x298 * x223) + (x297 * x224) + (-1 * x208 * x301) + (x219 * x293);
	const FLT x303 = (x295 * x223) + (x218 * x301) + (-1 * x299 * x224) + (-1 * x293 * x220);
	const FLT x304 = (x303 * (*lh_p).Rot[1]) + (-1 * x300 * (*lh_p).Rot[2]) + (x302 * (*lh_p).Rot[0]);
	const FLT x305 = (-1 * x303 * (*lh_p).Rot[3]) + (x302 * (*lh_p).Rot[2]) + (x300 * (*lh_p).Rot[0]);
	const FLT x306 = x303 + (-1 * x304 * x131) + (x305 * x133);
	const FLT x307 = (x300 * (*lh_p).Rot[3]) + (-1 * x302 * (*lh_p).Rot[1]) + (x303 * (*lh_p).Rot[0]);
	const FLT x308 = (-1 * x307 * x133) + x300 + (x304 * x141);
	const FLT x309 = x302 + (-1 * x305 * x141) + (x307 * x131);
	const FLT x310 = (-1 * ((x309 * x112) + (-1 * x308 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x309 * x104) + (x308 * x100)) * x106) + (x94 * x306)));
	const FLT x311 = dt * dt * dt;
	const FLT x312 = 0.5 * x50 * x311;
	const FLT x313 = x75 * x312;
	const FLT x314 = dt * dt * dt * dt;
	const FLT x315 = (x39 * x39 * x39) * x314;
	const FLT x316 = 1.0 * x52;
	const FLT x317 = (1. / (x45 * sqrt(x45))) * x48;
	const FLT x318 = x317 * x316;
	const FLT x319 = 2 * x39;
	const FLT x320 = x51 * x35;
	const FLT x321 = (1. / (x45 * x45)) * x49;
	const FLT x322 = 2 * x321;
	const FLT x323 = x37 * x314;
	const FLT x324 = x321 * x319;
	const FLT x325 = x323 * x318;
	const FLT x326 = x43 * x314;
	const FLT x327 = x326 * x318;
	const FLT x328 = x66 * x35;
	const FLT x329 = (-1 * x326 * x324) + (-1 * x328 * x316) + (x39 * x327) + (x320 * x319) + (x315 * x318) +
					 (-1 * x315 * x322) + (x39 * x325) + (-1 * x323 * x324);
	const FLT x330 = 1. / (x53 * sqrt(x53));
	const FLT x331 = x34 * x174;
	const FLT x332 = x331 * x330;
	const FLT x333 = x329 * x332;
	const FLT x334 = 1.0 / 2.0 * x64;
	const FLT x335 = x334 * x330;
	const FLT x336 = x329 * x335;
	const FLT x337 = x79 * x312;
	const FLT x338 = x39 * x337;
	const FLT x339 = x42 * x338;
	const FLT x340 = x52 * x330;
	const FLT x341 = x329 * x340;
	const FLT x342 = x34 * x177;
	const FLT x343 = x311 * x317;
	const FLT x344 = x61 * x343;
	const FLT x345 = x34 * x180;
	const FLT x346 = x330 * x345;
	const FLT x347 = x329 * x346;
	const FLT x348 = 0.5 * x328;
	const FLT x349 = x39 * x343;
	const FLT x350 = x67 * x42;
	const FLT x351 = x350 * x349;
	const FLT x352 = dt * x57;
	const FLT x353 = x55 * x352;
	const FLT x354 = x32 * x353;
	const FLT x355 = -1 * x354;
	const FLT x356 = x36 * x343;
	const FLT x357 = x39 * x356;
	const FLT x358 = x65 * x312;
	const FLT x359 = x39 * x358;
	const FLT x360 = (-1 * x36 * x359) + (x70 * x357);
	const FLT x361 = (-1 * x56 * x348) + x351 + (x347 * x168) + x355 + (x40 * x344) + (x333 * x160) +
					 (-1 * x342 * x341) + (-1 * x40 * x313) + x360 + (x59 * x336) + (-1 * x339);
	const FLT x362 = x70 * x352;
	const FLT x363 = -1 * x362;
	const FLT x364 = x39 * x313;
	const FLT x365 = x36 * x364;
	const FLT x366 = x39 * x344;
	const FLT x367 = x36 * x366;
	const FLT x368 = x330 * x342;
	const FLT x369 = x368 * x329;
	const FLT x370 = 0.5 * x67;
	const FLT x371 = x40 * x343;
	const FLT x372 = x56 * x42;
	const FLT x373 = x73 * x312;
	const FLT x374 = x39 * x373;
	const FLT x375 = (x42 * x374) + (-1 * x372 * x349);
	const FLT x376 = x375 + (-1 * x331 * x341) + (x336 * x168) + (x70 * x371) + (-1 * x369 * x160) + x363 +
					 (-1 * x370 * x328) + (-1 * x40 * x358) + x365 + (-1 * x59 * x347) + (-1 * x367);
	const FLT x377 = x42 * x359;
	const FLT x378 = x67 * x357;
	const FLT x379 = x36 * x338;
	const FLT x380 = x70 * x42;
	const FLT x381 = x380 * x349;
	const FLT x382 = 0.5 * x61;
	const FLT x383 = x28 * x353;
	const FLT x384 = x383 + (-1 * x369 * x168) + x377 + (x40 * x373) + (x59 * x333) + x378 + (-1 * x379) +
					 (-1 * x56 * x371) + (-1 * x336 * x160) + (-1 * x381) + (-1 * x345 * x341) + (-1 * x382 * x328);
	const FLT x385 = (x384 * sensor_pt[1]) + (x361 * sensor_pt[2]) + (-1 * x376 * sensor_pt[0]);
	const FLT x386 = x346 * x160;
	const FLT x387 = x67 * x352;
	const FLT x388 = x332 * x168;
	const FLT x389 = (-1 * x42 * x364) + (x42 * x366);
	const FLT x390 = (-1 * x56 * x357) + (x36 * x374);
	const FLT x391 = x389 + x390 + (-1 * x388 * x329) + (-1 * x59 * x369) + x387 + (-1 * x67 * x371) +
					 (-1 * x70 * x348) + (x386 * x329) + (x40 * x337) + (-1 * x334 * x341);
	const FLT x392 = (x361 * sensor_pt[0]) + (-1 * x391 * sensor_pt[1]) + (x376 * sensor_pt[2]);
	const FLT x393 = (x223 * x391) + (x218 * x392) + (-1 * x224 * x385) + (-1 * x220 * x384);
	const FLT x394 = (x361 * sensor_pt[1]) + (-1 * x384 * sensor_pt[2]) + (x391 * sensor_pt[0]);
	const FLT x395 = (x208 * x385) + (x220 * x376) + (-1 * x218 * x394) + (-1 * x219 * x391);
	const FLT x396 = (x224 * x394) + (-1 * x208 * x392) + (-1 * x223 * x376) + (x219 * x384);
	const FLT x397 = (-1 * x393 * (*lh_p).Rot[3]) + (x396 * (*lh_p).Rot[2]) + (x395 * (*lh_p).Rot[0]);
	const FLT x398 = (x393 * (*lh_p).Rot[1]) + (-1 * x395 * (*lh_p).Rot[2]) + (x396 * (*lh_p).Rot[0]);
	const FLT x399 = x393 + (x397 * x133) + (-1 * x398 * x131);
	const FLT x400 = (x395 * (*lh_p).Rot[3]) + (-1 * x396 * (*lh_p).Rot[1]) + (x393 * (*lh_p).Rot[0]);
	const FLT x401 = x395 + (-1 * x400 * x133) + (x398 * x141);
	const FLT x402 = x396 + (x400 * x131) + (-1 * x397 * x141);
	const FLT x403 = (-1 * ((x402 * x112) + (-1 * x401 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x402 * x104) + (x401 * x100)) * x106) + (x94 * x399)));
	const FLT x404 = x314 * x318;
	const FLT x405 = x40 * x404;
	const FLT x406 = x314 * x322;
	const FLT x407 = x42 * x406;
	const FLT x408 = x35 * x316;
	const FLT x409 = x42 * x42 * x42;
	const FLT x410 = 2 * x320;
	const FLT x411 = (x404 * x409) + (-1 * x40 * x407) + (-1 * x60 * x408) + (x42 * x405) + (x42 * x410) +
					 (-1 * x37 * x407) + (-1 * x406 * x409) + (x42 * x325);
	const FLT x412 = x59 * x411;
	const FLT x413 = 0.5 * x35;
	const FLT x414 = x60 * x413;
	const FLT x415 = x411 * x340;
	const FLT x416 = x411 * x168;
	const FLT x417 = x416 * x330;
	const FLT x418 = x42 * x36;
	const FLT x419 = (-1 * x372 * x356) + (x418 * x373);
	const FLT x420 = (-1 * x417 * x331) + (-1 * x351) + x339 + x419 + (-1 * x412 * x368) + (-1 * x43 * x313) + x355 +
					 (x43 * x344) + (-1 * x415 * x334) + (-1 * x70 * x414) + (x411 * x386);
	const FLT x421 = x411 * x160;
	const FLT x422 = x418 * x344;
	const FLT x423 = x43 * x343;
	const FLT x424 = x418 * x313;
	const FLT x425 = x35 * x370;
	const FLT x426 = (-1 * x415 * x331) + (-1 * x377) + (-1 * x422) + (-1 * x421 * x368) + (x43 * x373) + x383 +
					 (-1 * x412 * x346) + (-1 * x56 * x423) + x381 + x424 + (-1 * x60 * x425) + (x416 * x335);
	const FLT x427 = x418 * x358;
	const FLT x428 = -1 * x387;
	const FLT x429 = x356 * x380;
	const FLT x430 = (-1 * x43 * x337) + (-1 * x56 * x414) + (x412 * x335) + (-1 * x427) + (x67 * x423) + x428 +
					 (-1 * x415 * x342) + (x421 * x332) + x389 + (x416 * x346) + x429;
	const FLT x431 = (-1 * x420 * sensor_pt[1]) + (x430 * sensor_pt[0]) + (x426 * sensor_pt[2]);
	const FLT x432 = x35 * x382;
	const FLT x433 = (-1 * x418 * x337) + (x350 * x356);
	const FLT x434 = x433 + (-1 * x417 * x342) + (x43 * x358) + (-1 * x421 * x335) + (-1 * x70 * x423) +
					 (-1 * x60 * x432) + (-1 * x415 * x345) + (x412 * x332) + x375 + x362;
	const FLT x435 = (x430 * sensor_pt[1]) + (x420 * sensor_pt[0]) + (-1 * x434 * sensor_pt[2]);
	const FLT x436 = (-1 * x426 * x223) + (-1 * x431 * x208) + (x434 * x219) + (x435 * x224);
	const FLT x437 = (x434 * sensor_pt[1]) + (-1 * x426 * sensor_pt[0]) + (x430 * sensor_pt[2]);
	const FLT x438 = (-1 * x435 * x218) + (x426 * x220) + (-1 * x420 * x219) + (x437 * x208);
	const FLT x439 = (x420 * x223) + (-1 * x434 * x220) + (-1 * x437 * x224) + (x431 * x218);
	const FLT x440 = (x439 * (*lh_p).Rot[1]) + (x436 * (*lh_p).Rot[0]) + (-1 * x438 * (*lh_p).Rot[2]);
	const FLT x441 = (-1 * x439 * (*lh_p).Rot[3]) + (x436 * (*lh_p).Rot[2]) + (x438 * (*lh_p).Rot[0]);
	const FLT x442 = x439 + (-1 * x440 * x131) + (x441 * x133);
	const FLT x443 = (x438 * (*lh_p).Rot[3]) + (x439 * (*lh_p).Rot[0]) + (-1 * x436 * (*lh_p).Rot[1]);
	const FLT x444 = x438 + (-1 * x443 * x133) + (x440 * x141);
	const FLT x445 = x436 + (-1 * x441 * x141) + (x443 * x131);
	const FLT x446 = (-1 * ((x445 * x112) + (-1 * x444 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x445 * x104) + (x444 * x100)) * x106) + (x94 * x442)));
	const FLT x447 = x36 * x36 * x36;
	const FLT x448 = x36 * x406;
	const FLT x449 = (x36 * x327) + (-1 * x406 * x447) + (-1 * x40 * x448) + (x36 * x405) + (-1 * x58 * x408) +
					 (x404 * x447) + (-1 * x43 * x448) + (x36 * x410);
	const FLT x450 = x449 * x346;
	const FLT x451 = x449 * x368;
	const FLT x452 = x37 * x343;
	const FLT x453 = x58 * x413;
	const FLT x454 = x449 * x340;
	const FLT x455 = (-1 * x449 * x388) + (-1 * x59 * x451) + (x37 * x373) + (-1 * x378) + (x450 * x160) + x383 +
					 (-1 * x454 * x334) + (-1 * x56 * x452) + x379 + (-1 * x424) + x422 + (-1 * x70 * x453);
	const FLT x456 = x34 * x454;
	const FLT x457 = x449 * x335;
	const FLT x458 = (-1 * x456 * x174) + (-1 * x58 * x425) + (x457 * x168) + (-1 * x451 * x160) + x419 +
					 (-1 * x61 * x452) + x360 + (-1 * x59 * x450) + (x37 * x313) + x354;
	const FLT x459 = x449 * x332;
	const FLT x460 = (x450 * x168) + x367 + x363 + (x459 * x160) + (x59 * x457) + (-1 * x365) + x433 +
					 (-1 * x37 * x358) + (x70 * x452) + (-1 * x56 * x453) + (-1 * x456 * x177);
	const FLT x461 = (x460 * sensor_pt[0]) + (-1 * x455 * sensor_pt[1]) + (x458 * sensor_pt[2]);
	const FLT x462 = x390 + (-1 * x457 * x160) + (-1 * x58 * x432) + (x59 * x459) + x428 + (-1 * x37 * x337) + x427 +
					 (-1 * x451 * x168) + (-1 * x456 * x180) + (-1 * x429) + (x67 * x452);
	const FLT x463 = (-1 * x462 * sensor_pt[2]) + (x460 * sensor_pt[1]) + (x455 * sensor_pt[0]);
	const FLT x464 = (x462 * x219) + (-1 * x461 * x208) + (x463 * x224) + (-1 * x458 * x223);
	const FLT x465 = (x462 * sensor_pt[1]) + (-1 * x458 * sensor_pt[0]) + (x460 * sensor_pt[2]);
	const FLT x466 = (x458 * x220) + (x465 * x208) + (-1 * x455 * x219) + (-1 * x463 * x218);
	const FLT x467 = (x455 * x223) + (-1 * x462 * x220) + (x461 * x218) + (-1 * x465 * x224);
	const FLT x468 = (x467 * (*lh_p).Rot[1]) + (x464 * (*lh_p).Rot[0]) + (-1 * x466 * (*lh_p).Rot[2]);
	const FLT x469 = (x464 * (*lh_p).Rot[2]) + (-1 * x467 * (*lh_p).Rot[3]) + (x466 * (*lh_p).Rot[0]);
	const FLT x470 = (-1 * x468 * x131) + x467 + (x469 * x133);
	const FLT x471 = (x466 * (*lh_p).Rot[3]) + (x467 * (*lh_p).Rot[0]) + (-1 * x464 * (*lh_p).Rot[1]);
	const FLT x472 = x466 + (-1 * x471 * x133) + (x468 * x141);
	const FLT x473 = (-1 * x469 * x141) + x464 + (x471 * x131);
	const FLT x474 = (-1 * ((x473 * x112) + (-1 * x472 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x473 * x104) + (x472 * x100)) * x106) + (x94 * x470)));
	const FLT x475 = dt * x132;
	const FLT x476 = dt * x134;
	const FLT x477 = x476 + x475;
	const FLT x478 = -1 * dt * x138;
	const FLT x479 = (-1 * dt * x136) + dt;
	const FLT x480 = x479 + x478;
	const FLT x481 = dt * x142;
	const FLT x482 = dt * x143;
	const FLT x483 = x482 + (-1 * x481);
	const FLT x484 = (-1 * ((x483 * x112) + (-1 * x480 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x483 * x104) + (x480 * x100)) * x106) + (x94 * x477)));
	const FLT x485 = -1 * dt * x146;
	const FLT x486 = x479 + x485;
	const FLT x487 = x475 + (-1 * x476);
	const FLT x488 = dt * x150;
	const FLT x489 = dt * x151;
	const FLT x490 = x489 + x488;
	const FLT x491 = (-1 * ((x490 * x112) + (-1 * x487 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x490 * x104) + (x487 * x100)) * x106) + (x94 * x486)));
	const FLT x492 = x488 + (-1 * x489);
	const FLT x493 = x481 + x482;
	const FLT x494 = x478 + dt + x485;
	const FLT x495 = (-1 * ((x494 * x112) + (-1 * x493 * x110)) * x113) +
					 (-1 * x109 * ((-1 * ((x494 * x104) + (x493 * x100)) * x106) + (x94 * x492)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						(x114 * x116) + x114 + (x118 * ((x103 * x117) + (-1 * x5 * x110))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						x126 + (x116 * x126) + (((x117 * x125) + (-1 * x110 * x121)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						x130 + (x116 * x130) + (((x117 * x129) + (-1 * x110 * x127)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT),
						x145 + (x116 * x145) + (((x117 * x144) + (-1 * x110 * x135)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT),
						x153 + (x116 * x153) + (((x117 * x152) + (-1 * x110 * x148)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT),
						x157 + (x116 * x157) + (((x117 * x156) + (-1 * x110 * x154)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x233 * x116) + x233 + (((x232 * x117) + (-1 * x229 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x263 + (x263 * x116) + (((x262 * x117) + (-1 * x259 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x288 * x116) + x288 + (((x287 * x117) + (-1 * x284 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x310 + (x310 * x116) + (((x309 * x117) + (-1 * x306 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x403 + (x403 * x116) + (((x402 * x117) + (-1 * x399 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x446 + (x446 * x116) + (((x445 * x117) + (-1 * x442 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						(x474 * x116) + x474 + (((x473 * x117) + (-1 * x470 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT),
						x484 + (x484 * x116) + (((x483 * x117) + (-1 * x477 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT),
						x491 + (x491 * x116) + (((x490 * x117) + (-1 * x486 * x110)) * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT),
						(x495 * x116) + x495 + (((x494 * x117) + (-1 * x492 * x110)) * x118));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae639d0>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*error_model).AccBias[0], (*error_model).AccBias[1],
// (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2],
// (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2], (*error_model).IMUCorrection[0],
// (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2], (*error_model).IMUCorrection[3],
// (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2],
// (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2],
// (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae57760>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[0];
	const FLT x4 = x3 * (*lh_p).Rot[3];
	const FLT x5 = x4 + x2;
	const FLT x6 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x8 = cos(x7);
	const FLT x9 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x10 = sin(x9);
	const FLT x11 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x12 = sin(x11);
	const FLT x13 = x12 * x10;
	const FLT x14 = x8 * x13;
	const FLT x15 = sin(x7);
	const FLT x16 = cos(x9);
	const FLT x17 = cos(x11);
	const FLT x18 = x17 * x16;
	const FLT x19 = x15 * x18;
	const FLT x20 = x19 + (-1 * x14);
	const FLT x21 = x15 * x13;
	const FLT x22 = x8 * x18;
	const FLT x23 = x22 + x21;
	const FLT x24 = x10 * x17;
	const FLT x25 = x24 * x15;
	const FLT x26 = x12 * x16;
	const FLT x27 = x8 * x26;
	const FLT x28 = x27 + x25;
	const FLT x29 = x26 * x15;
	const FLT x30 = x8 * x24;
	const FLT x31 = x30 + (-1 * x29);
	const FLT x32 = (x20 * x20) + (x31 * x31) + (x28 * x28) + (x23 * x23);
	const FLT x33 = 1. / sqrt(x32);
	const FLT x34 = x33 * (*_x0).Pose.Rot[3];
	const FLT x35 = x33 * (*_x0).Pose.Rot[2];
	const FLT x36 = x33 * (*_x0).Pose.Rot[0];
	const FLT x37 = x33 * (*_x0).Pose.Rot[1];
	const FLT x38 = (-1 * x31 * x37) + (x36 * x23) + (-1 * x34 * x20) + (-1 * x35 * x28);
	const FLT x39 = (-1 * x37 * x20) + (x31 * x34) + (x35 * x23) + (x36 * x28);
	const FLT x40 = (x36 * x20) + (x34 * x23) + (x37 * x28) + (-1 * x31 * x35);
	const FLT x41 = (x37 * x23) + (x35 * x20) + (-1 * x34 * x28) + (x31 * x36);
	const FLT x42 = (x40 * x40) + (x39 * x39) + (x41 * x41) + (x38 * x38);
	const FLT x43 = 1. / sqrt(x42);
	const FLT x44 = dt * dt;
	const FLT x45 = x6 * x6;
	const FLT x46 = x44 * x45;
	const FLT x47 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x48 = x47 * x47;
	const FLT x49 = x44 * x48;
	const FLT x50 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x51 = x50 * x50;
	const FLT x52 = x51 * x44;
	const FLT x53 = 1e-10 + x52 + x46 + x49;
	const FLT x54 = sqrt(x53);
	const FLT x55 = 0.5 * x54;
	const FLT x56 = sin(x55);
	const FLT x57 = x56 * x56;
	const FLT x58 = 1. / x53;
	const FLT x59 = x58 * x57;
	const FLT x60 = cos(x55);
	const FLT x61 = (x59 * x49) + (x60 * x60) + (x59 * x46) + (x52 * x59);
	const FLT x62 = 1. / sqrt(x61);
	const FLT x63 = x62 * x43;
	const FLT x64 = (1. / x54) * x56;
	const FLT x65 = dt * x64;
	const FLT x66 = x63 * x65;
	const FLT x67 = x66 * x38;
	const FLT x68 = x66 * x41;
	const FLT x69 = x60 * x63;
	const FLT x70 = x69 * x40;
	const FLT x71 = x63 * x39;
	const FLT x72 = x71 * x65;
	const FLT x73 = (x72 * x47) + x70 + (x6 * x67) + (-1 * x68 * x50);
	const FLT x74 = x66 * x40;
	const FLT x75 = x69 * x38;
	const FLT x76 = x75 + (-1 * x6 * x74) + (-1 * x68 * x47) + (-1 * x72 * x50);
	const FLT x77 = x69 * x41;
	const FLT x78 = x77 + (x67 * x47) + (-1 * x6 * x72) + (x74 * x50);
	const FLT x79 = (-1 * x78 * sensor_pt[2]) + (x73 * sensor_pt[0]) + (x76 * sensor_pt[1]);
	const FLT x80 = x69 * x39;
	const FLT x81 = (-1 * x74 * x47) + x80 + (x67 * x50) + (x6 * x68);
	const FLT x82 = (-1 * x81 * sensor_pt[0]) + (x76 * sensor_pt[2]) + (x78 * sensor_pt[1]);
	const FLT x83 = 1.0 / 2.0 * x0;
	const FLT x84 = (x83 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (2 * ((x81 * x82) + (-1 * x73 * x79))) +
					(*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x85 = (-1 * x73 * sensor_pt[1]) + (x81 * sensor_pt[2]) + (x76 * sensor_pt[0]);
	const FLT x86 = (*error_model).Pose.Pos[2] + (*_x0).Pose.Pos[2] + (2 * ((x79 * x78) + (-1 * x81 * x85))) +
					(x83 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x87 = (2 * ((x85 * x73) + (-1 * x82 * x78))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x83 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x88 = (-1 * x87 * (*lh_p).Rot[3]) + (x84 * (*lh_p).Rot[0]) + (x86 * (*lh_p).Rot[2]);
	const FLT x89 = (-1 * x86 * (*lh_p).Rot[1]) + (x87 * (*lh_p).Rot[0]) + (x84 * (*lh_p).Rot[3]);
	const FLT x90 = x86 + (2 * ((x89 * (*lh_p).Rot[1]) + (-1 * x88 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x91 = x90 * x90;
	const FLT x92 = (-1 * x84 * (*lh_p).Rot[2]) + (x86 * (*lh_p).Rot[0]) + (x87 * (*lh_p).Rot[1]);
	const FLT x93 = x84 + (*lh_p).Pos[0] + (2 * ((x92 * (*lh_p).Rot[2]) + (-1 * x89 * (*lh_p).Rot[3])));
	const FLT x94 = (x93 * x93) + x91;
	const FLT x95 = (1. / sqrt(x94)) * (*bsc0).tilt;
	const FLT x96 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x97 = -1 * x0 * x96;
	const FLT x98 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x99 = (-1 * x0 * x98) + x83;
	const FLT x100 = x99 + x97;
	const FLT x101 = 2 * x93;
	const FLT x102 = x3 * (*lh_p).Rot[2];
	const FLT x103 = x1 * (*lh_p).Rot[3];
	const FLT x104 = x103 + (-1 * x102);
	const FLT x105 = 2 * x90;
	const FLT x106 = (*lh_p).Pos[1] + x87 + (2 * ((x88 * (*lh_p).Rot[3]) + (-1 * x92 * (*lh_p).Rot[1])));
	const FLT x107 = 1.0 / 2.0 * (1. / (x94 * sqrt(x94))) * x106 * (*bsc0).tilt;
	const FLT x108 = 1. / x94;
	const FLT x109 = x106 * x106;
	const FLT x110 = 1. / sqrt(1 + (-1 * x109 * x108 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x111 = 1. / x90;
	const FLT x112 = 1. / x91;
	const FLT x113 = x93 * x112;
	const FLT x114 = x91 * x108;
	const FLT x115 = (-1 * ((x104 * x113) + (-1 * x100 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x105 * x104) + (x101 * x100)) * x107) + (x5 * x95)));
	const FLT x116 = -1 * x90;
	const FLT x117 = sin(1.5707963267949 + (-1 * atan2(x93, x116)) + (-1 * (*bsc0).phase) + (-1 * asin(x95 * x106)) +
						 (*bsc0).gibpha) *
					 (*bsc0).gibmag;
	const FLT x118 = x106 * x112;
	const FLT x119 = 2 * x91 * (1. / (x91 + x109)) * atan2(x106, x116) * (*bsc0).curve;
	const FLT x120 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x121 = -1 * x0 * x120;
	const FLT x122 = x121 + x97 + x83;
	const FLT x123 = x2 + (-1 * x4);
	const FLT x124 = x0 * (*lh_p).Rot[3] * (*lh_p).Rot[2];
	const FLT x125 = x1 * (*lh_p).Rot[0];
	const FLT x126 = x125 + x124;
	const FLT x127 = (-1 * ((x113 * x126) + (-1 * x111 * x123)) * x114) +
					 (-1 * x110 * ((-1 * ((x105 * x126) + (x101 * x123)) * x107) + (x95 * x122)));
	const FLT x128 = x124 + (-1 * x125);
	const FLT x129 = x102 + x103;
	const FLT x130 = x99 + x121;
	const FLT x131 = (-1 * ((x113 * x130) + (-1 * x111 * x129)) * x114) +
					 (-1 * x110 * ((-1 * ((x105 * x130) + (x101 * x129)) * x107) + (x95 * x128)));
	const FLT x132 = 0.5 * x22;
	const FLT x133 = 0.5 * x21;
	const FLT x134 = x133 + x132;
	const FLT x135 = 2 * x31;
	const FLT x136 = 0.5 * x14;
	const FLT x137 = -1 * x136;
	const FLT x138 = 0.5 * x19;
	const FLT x139 = x138 + x137;
	const FLT x140 = 2 * x28;
	const FLT x141 = 0.5 * x25;
	const FLT x142 = -0.5 * x27;
	const FLT x143 = x142 + (-1 * x141);
	const FLT x144 = 2 * x20;
	const FLT x145 = 0.5 * x30;
	const FLT x146 = -1 * x145;
	const FLT x147 = 0.5 * x29;
	const FLT x148 = x147 + x146;
	const FLT x149 = 2 * x23;
	const FLT x150 = (x148 * x149) + (x134 * x135) + (x144 * x143) + (x139 * x140);
	const FLT x151 = x23 * x150;
	const FLT x152 = 1.0 / 2.0 * (1. / (x32 * sqrt(x32)));
	const FLT x153 = x152 * (*_x0).Pose.Rot[1];
	const FLT x154 = x20 * x150;
	const FLT x155 = x152 * (*_x0).Pose.Rot[2];
	const FLT x156 = x35 * x143;
	const FLT x157 = x152 * (*_x0).Pose.Rot[3];
	const FLT x158 = x28 * x150;
	const FLT x159 = x36 * x134;
	const FLT x160 = x152 * (*_x0).Pose.Rot[0];
	const FLT x161 = x31 * x160;
	const FLT x162 = (-1 * x34 * x139) + (-1 * x154 * x155) + (-1 * x161 * x150) + (-1 * x151 * x153) + x156 +
					 (x37 * x148) + x159 + (x157 * x158);
	const FLT x163 = 2 * x41;
	const FLT x164 = x152 * x154;
	const FLT x165 = x31 * x150;
	const FLT x166 = -1 * x37 * x143;
	const FLT x167 = x34 * x134;
	const FLT x168 = x167 + (x36 * x139) + (-1 * x160 * x158) + (-1 * x165 * x157) + (x164 * (*_x0).Pose.Rot[1]) +
					 (-1 * x151 * x155) + x166 + (x35 * x148);
	const FLT x169 = 2 * x39;
	const FLT x170 = x35 * x134;
	const FLT x171 = x36 * x143;
	const FLT x172 = x171 + (-1 * x151 * x157) + (x165 * x155) + (-1 * x170) + (x37 * x139) + (x34 * x148) +
					 (-1 * x153 * x158) + (-1 * x164 * (*_x0).Pose.Rot[0]);
	const FLT x173 = 2 * x40;
	const FLT x174 = -1 * x37 * x134;
	const FLT x175 = x34 * x143;
	const FLT x176 = (-1 * x35 * x139) + x174 + (x36 * x148) + (x165 * x153) + (x154 * x157) + (-1 * x160 * x151) +
					 (-1 * x175) + (x155 * x158);
	const FLT x177 = 2 * x38;
	const FLT x178 = x62 * (1. / (x42 * sqrt(x42)));
	const FLT x179 = ((x176 * x177) + (x172 * x173) + (x163 * x162) + (x169 * x168)) * x178;
	const FLT x180 = 1.0 / 2.0 * x60;
	const FLT x181 = x41 * x180;
	const FLT x182 = x39 * x179;
	const FLT x183 = 1.0 / 2.0 * x65;
	const FLT x184 = x6 * x183;
	const FLT x185 = x50 * x183;
	const FLT x186 = x40 * x185;
	const FLT x187 = x6 * x66;
	const FLT x188 = x66 * x50;
	const FLT x189 = x47 * x183;
	const FLT x190 = x38 * x189;
	const FLT x191 = x66 * x47;
	const FLT x192 = (x69 * x162) + (-1 * x179 * x190) + (x182 * x184) + (-1 * x179 * x181) + (-1 * x179 * x186) +
					 (-1 * x168 * x187) + (x176 * x191) + (x172 * x188);
	const FLT x193 = x40 * x180;
	const FLT x194 = x179 * x184;
	const FLT x195 = x41 * x179;
	const FLT x196 = (x185 * x195) + (-1 * x162 * x188) + (x69 * x172) + (-1 * x189 * x182) + (x176 * x187) +
					 (x168 * x191) + (-1 * x179 * x193) + (-1 * x38 * x194);
	const FLT x197 = x38 * x180;
	const FLT x198 = (-1 * x162 * x191) + (x182 * x185) + (x189 * x195) + (x69 * x176) + (-1 * x179 * x197) +
					 (-1 * x168 * x188) + (-1 * x172 * x187) + (x40 * x194);
	const FLT x199 = (-1 * x192 * sensor_pt[2]) + (x198 * sensor_pt[1]) + (x196 * sensor_pt[0]);
	const FLT x200 = 2 * x73;
	const FLT x201 = x39 * x180;
	const FLT x202 = x38 * x185;
	const FLT x203 = (x176 * x188) + (x69 * x168) + (-1 * x201 * x179) + (x162 * x187) + (-1 * x41 * x194) +
					 (-1 * x202 * x179) + (x40 * x179 * x189) + (-1 * x172 * x191);
	const FLT x204 = 2 * x82;
	const FLT x205 = (x192 * sensor_pt[1]) + (x198 * sensor_pt[2]) + (-1 * x203 * sensor_pt[0]);
	const FLT x206 = 2 * x81;
	const FLT x207 = 2 * x79;
	const FLT x208 = (x205 * x206) + (-1 * x207 * x196) + (-1 * x200 * x199) + (x203 * x204);
	const FLT x209 = (x198 * sensor_pt[0]) + (x203 * sensor_pt[2]) + (-1 * x196 * sensor_pt[1]);
	const FLT x210 = 2 * x85;
	const FLT x211 = 2 * x78;
	const FLT x212 = (x207 * x192) + (x211 * x199) + (-1 * x209 * x206) + (-1 * x210 * x203);
	const FLT x213 = (x200 * x209) + (-1 * x211 * x205) + (x210 * x196) + (-1 * x204 * x192);
	const FLT x214 = (x213 * (*lh_p).Rot[1]) + (-1 * x208 * (*lh_p).Rot[2]) + (x212 * (*lh_p).Rot[0]);
	const FLT x215 = 2 * (*lh_p).Rot[1];
	const FLT x216 = 2 * ((-1 * x213 * (*lh_p).Rot[3]) + (x212 * (*lh_p).Rot[2]) + (x208 * (*lh_p).Rot[0]));
	const FLT x217 = x213 + (-1 * x215 * x214) + (x216 * (*lh_p).Rot[3]);
	const FLT x218 = 2 * ((x208 * (*lh_p).Rot[3]) + (-1 * x212 * (*lh_p).Rot[1]) + (x213 * (*lh_p).Rot[0]));
	const FLT x219 = 2 * (*lh_p).Rot[2];
	const FLT x220 = x208 + (-1 * x218 * (*lh_p).Rot[3]) + (x219 * x214);
	const FLT x221 = x212 + (x218 * (*lh_p).Rot[1]) + (-1 * x216 * (*lh_p).Rot[2]);
	const FLT x222 = (-1 * ((x221 * x113) + (-1 * x220 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x221 * x105) + (x220 * x101)) * x107) + (x95 * x217)));
	const FLT x223 = -1 * x138;
	const FLT x224 = x223 + x137;
	const FLT x225 = (-1 * x133) + x132;
	const FLT x226 = -1 * x147;
	const FLT x227 = x146 + x226;
	const FLT x228 = x141 + x142;
	const FLT x229 = (x228 * x149) + (x227 * x144) + (x224 * x135) + (x225 * x140);
	const FLT x230 = x20 * x229;
	const FLT x231 = x230 * x152;
	const FLT x232 = x33 * x228;
	const FLT x233 = x28 * x229;
	const FLT x234 = x31 * x229;
	const FLT x235 = x23 * x229;
	const FLT x236 = x235 * x152;
	const FLT x237 = (-1 * x236 * (*_x0).Pose.Rot[2]) + (-1 * x234 * x157) + (x232 * (*_x0).Pose.Rot[2]) +
					 (x231 * (*_x0).Pose.Rot[1]) + (x36 * x225) + (x34 * x224) + (-1 * x37 * x227) + (-1 * x233 * x160);
	const FLT x238 = (-1 * x234 * x160) + (-1 * x230 * x155) + (x232 * (*_x0).Pose.Rot[1]) + (x35 * x227) +
					 (-1 * x236 * (*_x0).Pose.Rot[1]) + (x233 * x157) + (x36 * x224) + (-1 * x34 * x225);
	const FLT x239 = x229 * x155;
	const FLT x240 = (x31 * x239) + (x37 * x225) + (x36 * x227) + (-1 * x233 * x153) + (x232 * (*_x0).Pose.Rot[3]) +
					 (-1 * x231 * (*_x0).Pose.Rot[0]) + (-1 * x235 * x157) + (-1 * x35 * x224);
	const FLT x241 = (x28 * x239) + (x230 * x157) + (x234 * x153) + (x232 * (*_x0).Pose.Rot[0]) +
					 (-1 * x236 * (*_x0).Pose.Rot[0]) + (-1 * x34 * x227) + (-1 * x37 * x224) + (-1 * x35 * x225);
	const FLT x242 = ((x241 * x177) + (x237 * x169) + (x240 * x173) + (x238 * x163)) * x178;
	const FLT x243 = x242 * x189;
	const FLT x244 = x242 * x184;
	const FLT x245 = x242 * x185;
	const FLT x246 = (x69 * x240) + (x41 * x245) + (-1 * x238 * x188) + (-1 * x38 * x244) + (-1 * x242 * x193) +
					 (-1 * x39 * x243) + (x241 * x187) + (x237 * x191);
	const FLT x247 = (x69 * x238) + (-1 * x40 * x245) + (-1 * x242 * x190) + (x39 * x244) + (x241 * x191) +
					 (-1 * x242 * x181) + (x240 * x188) + (-1 * x237 * x187);
	const FLT x248 = x40 * x242;
	const FLT x249 = (-1 * x240 * x187) + (x39 * x245) + (x248 * x184) + (-1 * x237 * x188) + (x69 * x241) +
					 (-1 * x242 * x197) + (x41 * x243) + (-1 * x238 * x191);
	const FLT x250 = (x249 * sensor_pt[1]) + (x246 * sensor_pt[0]) + (-1 * x247 * sensor_pt[2]);
	const FLT x251 = (-1 * x41 * x244) + (x241 * x188) + (-1 * x38 * x245) + (x238 * x187) + (x248 * x189) +
					 (x69 * x237) + (-1 * x240 * x191) + (-1 * x201 * x242);
	const FLT x252 = (-1 * x251 * sensor_pt[0]) + (x247 * sensor_pt[1]) + (x249 * sensor_pt[2]);
	const FLT x253 = (x204 * x251) + (x206 * x252) + (-1 * x200 * x250) + (-1 * x207 * x246);
	const FLT x254 = (x249 * sensor_pt[0]) + (x251 * sensor_pt[2]) + (-1 * x246 * sensor_pt[1]);
	const FLT x255 = (x211 * x250) + (-1 * x206 * x254) + (-1 * x210 * x251) + (x207 * x247);
	const FLT x256 = (x200 * x254) + (-1 * x211 * x252) + (-1 * x204 * x247) + (x210 * x246);
	const FLT x257 = 2 * ((x256 * (*lh_p).Rot[1]) + (-1 * x253 * (*lh_p).Rot[2]) + (x255 * (*lh_p).Rot[0]));
	const FLT x258 = 2 * ((-1 * x256 * (*lh_p).Rot[3]) + (x255 * (*lh_p).Rot[2]) + (x253 * (*lh_p).Rot[0]));
	const FLT x259 = (-1 * x257 * (*lh_p).Rot[1]) + x256 + (x258 * (*lh_p).Rot[3]);
	const FLT x260 = 2 * ((x253 * (*lh_p).Rot[3]) + (-1 * x255 * (*lh_p).Rot[1]) + (x256 * (*lh_p).Rot[0]));
	const FLT x261 = x253 + (x257 * (*lh_p).Rot[2]) + (-1 * x260 * (*lh_p).Rot[3]);
	const FLT x262 = x255 + (x260 * (*lh_p).Rot[1]) + (-1 * x258 * (*lh_p).Rot[2]);
	const FLT x263 = (-1 * ((x262 * x113) + (-1 * x261 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x262 * x105) + (x261 * x101)) * x107) + (x95 * x259)));
	const FLT x264 = x145 + x226;
	const FLT x265 = x136 + x223;
	const FLT x266 = (x265 * x149) + (x264 * x140) + (x135 * x143) + (x134 * x144);
	const FLT x267 = x266 * x160;
	const FLT x268 = x266 * x157;
	const FLT x269 = x266 * x153;
	const FLT x270 = x266 * x155;
	const FLT x271 = (x36 * x265) + (x28 * x270) + (-1 * x167) + (-1 * x23 * x267) + x166 + (x20 * x268) +
					 (-1 * x35 * x264) + (x31 * x269);
	const FLT x272 = x170 + (x37 * x265) + (-1 * x266 * x161) + (-1 * x20 * x270) + (-1 * x23 * x269) + (x28 * x268) +
					 (-1 * x34 * x264) + x171;
	const FLT x273 = x20 * x266;
	const FLT x274 = (x31 * x270) + (-1 * x156) + x159 + (-1 * x28 * x269) + (-1 * x23 * x268) + (-1 * x273 * x160) +
					 (x34 * x265) + (x37 * x264);
	const FLT x275 = (-1 * x28 * x267) + (x273 * x153) + (-1 * x31 * x268) + x175 + (x36 * x264) + (x35 * x265) + x174 +
					 (-1 * x23 * x270);
	const FLT x276 = ((x271 * x177) + (x275 * x169) + (x272 * x163) + (x274 * x173)) * x178;
	const FLT x277 = x39 * x276;
	const FLT x278 = (-1 * x276 * x190) + (-1 * x276 * x186) + (-1 * x276 * x181) + (x271 * x191) + (x277 * x184) +
					 (x69 * x272) + (x274 * x188) + (-1 * x275 * x187);
	const FLT x279 = x38 * x184;
	const FLT x280 = x41 * x276;
	const FLT x281 = (x69 * x274) + (x280 * x185) + (x275 * x191) + (-1 * x279 * x276) + (-1 * x272 * x188) +
					 (x271 * x187) + (-1 * x277 * x189) + (-1 * x276 * x193);
	const FLT x282 = x40 * x276;
	const FLT x283 = (x69 * x271) + (x277 * x185) + (-1 * x275 * x188) + (-1 * x272 * x191) + (x280 * x189) +
					 (x282 * x184) + (-1 * x274 * x187) + (-1 * x276 * x197);
	const FLT x284 = (x283 * sensor_pt[1]) + (-1 * x278 * sensor_pt[2]) + (x281 * sensor_pt[0]);
	const FLT x285 = (x69 * x275) + (x271 * x188) + (x282 * x189) + (-1 * x280 * x184) + (-1 * x202 * x276) +
					 (-1 * x274 * x191) + (-1 * x201 * x276) + (x272 * x187);
	const FLT x286 = (x278 * sensor_pt[1]) + (-1 * x285 * sensor_pt[0]) + (x283 * sensor_pt[2]);
	const FLT x287 = (x204 * x285) + (x206 * x286) + (-1 * x200 * x284) + (-1 * x207 * x281);
	const FLT x288 = (-1 * x281 * sensor_pt[1]) + (x283 * sensor_pt[0]) + (x285 * sensor_pt[2]);
	const FLT x289 = (x211 * x284) + (-1 * x210 * x285) + (x207 * x278) + (-1 * x206 * x288);
	const FLT x290 = (x210 * x281) + (x200 * x288) + (-1 * x211 * x286) + (-1 * x204 * x278);
	const FLT x291 = (x290 * (*lh_p).Rot[1]) + (-1 * x287 * (*lh_p).Rot[2]) + (x289 * (*lh_p).Rot[0]);
	const FLT x292 = (x287 * (*lh_p).Rot[0]) + (x289 * (*lh_p).Rot[2]) + (-1 * x290 * (*lh_p).Rot[3]);
	const FLT x293 = 2 * (*lh_p).Rot[3];
	const FLT x294 = (-1 * x215 * x291) + x290 + (x293 * x292);
	const FLT x295 = 2 * ((x287 * (*lh_p).Rot[3]) + (-1 * x289 * (*lh_p).Rot[1]) + (x290 * (*lh_p).Rot[0]));
	const FLT x296 = (-1 * x295 * (*lh_p).Rot[3]) + x287 + (x219 * x291);
	const FLT x297 = x289 + (-1 * x219 * x292) + (x295 * (*lh_p).Rot[1]);
	const FLT x298 = (-1 * ((x297 * x113) + (-1 * x296 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x297 * x105) + (x296 * x101)) * x107) + (x95 * x294)));
	const FLT x299 = x219 * (*lh_p).Rot[1];
	const FLT x300 = 2 * (*lh_p).Rot[0];
	const FLT x301 = x300 * (*lh_p).Rot[3];
	const FLT x302 = x301 + x299;
	const FLT x303 = 2 * x98;
	const FLT x304 = -1 * x303;
	const FLT x305 = 2 * x96;
	const FLT x306 = 1 + (-1 * x305);
	const FLT x307 = x306 + x304;
	const FLT x308 = x300 * (*lh_p).Rot[2];
	const FLT x309 = x293 * (*lh_p).Rot[1];
	const FLT x310 = x309 + (-1 * x308);
	const FLT x311 = (-1 * ((x310 * x113) + (-1 * x307 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x310 * x105) + (x307 * x101)) * x107) + (x95 * x302)));
	const FLT x312 = 2 * x120;
	const FLT x313 = -1 * x312;
	const FLT x314 = x306 + x313;
	const FLT x315 = x299 + (-1 * x301);
	const FLT x316 = x293 * (*lh_p).Rot[2];
	const FLT x317 = x300 * (*lh_p).Rot[1];
	const FLT x318 = x317 + x316;
	const FLT x319 = (-1 * ((x318 * x113) + (-1 * x315 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x318 * x105) + (x315 * x101)) * x107) + (x95 * x314)));
	const FLT x320 = x316 + (-1 * x317);
	const FLT x321 = x308 + x309;
	const FLT x322 = 1 + x313 + x304;
	const FLT x323 = (-1 * ((x322 * x113) + (-1 * x321 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x322 * x105) + (x321 * x101)) * x107) + (x95 * x320)));
	const FLT x324 = dt * dt * dt;
	const FLT x325 = 0.5 * x58 * x324;
	const FLT x326 = x77 * x325;
	const FLT x327 = (1. / (x61 * sqrt(x61))) * x43;
	const FLT x328 = x327 * x185;
	const FLT x329 = dt * dt * dt * dt;
	const FLT x330 = (x47 * x47 * x47) * x329;
	const FLT x331 = 1.0 * x60;
	const FLT x332 = (1. / (x53 * sqrt(x53))) * x56;
	const FLT x333 = x332 * x331;
	const FLT x334 = 2 * x59;
	const FLT x335 = x44 * x334;
	const FLT x336 = 2 * (1. / (x53 * x53)) * x57;
	const FLT x337 = x336 * x329;
	const FLT x338 = x47 * x331;
	const FLT x339 = x45 * x332;
	const FLT x340 = x51 * x332;
	const FLT x341 = x329 * x340;
	const FLT x342 = x64 * x44;
	const FLT x343 = x51 * x337;
	const FLT x344 = (-1 * x338 * x342) + (x338 * x341) + (x47 * x335) + (-1 * x336 * x330) + (-1 * x45 * x47 * x337) +
					 (x333 * x330) + (-1 * x47 * x343) + (x339 * x338 * x329);
	const FLT x345 = x39 * x344;
	const FLT x346 = x327 * x184;
	const FLT x347 = x40 * x346;
	const FLT x348 = x80 * x325;
	const FLT x349 = x47 * x348;
	const FLT x350 = x50 * x349;
	const FLT x351 = x327 * x197;
	const FLT x352 = x48 * x332;
	const FLT x353 = x352 * x324;
	const FLT x354 = x63 * x41;
	const FLT x355 = x327 * x189;
	const FLT x356 = x41 * x344;
	const FLT x357 = x63 * x38;
	const FLT x358 = 0.5 * x342;
	const FLT x359 = x47 * x358;
	const FLT x360 = x324 * x332;
	const FLT x361 = x47 * x360;
	const FLT x362 = x50 * x361;
	const FLT x363 = x71 * x362;
	const FLT x364 = -1 * x68;
	const FLT x365 = x70 * x325;
	const FLT x366 = x47 * x365;
	const FLT x367 = x63 * x40;
	const FLT x368 = x6 * x367;
	const FLT x369 = (x361 * x368) + (-1 * x6 * x366);
	const FLT x370 = x363 + (-1 * x359 * x357) + (x356 * x355) + (x328 * x345) + (-1 * x48 * x326) + x369 + x364 +
					 (x354 * x353) + (-1 * x350) + (x347 * x344) + (-1 * x351 * x344);
	const FLT x371 = -1 * x74;
	const FLT x372 = x47 * x326;
	const FLT x373 = x6 * x372;
	const FLT x374 = x6 * x354;
	const FLT x375 = x374 * x361;
	const FLT x376 = x38 * x344;
	const FLT x377 = x40 * x344;
	const FLT x378 = x201 * x327;
	const FLT x379 = x75 * x325;
	const FLT x380 = x47 * x379;
	const FLT x381 = (-1 * x362 * x357) + (x50 * x380);
	const FLT x382 = x381 + (x367 * x353) + (-1 * x71 * x359) + (-1 * x356 * x346) + (-1 * x375) + x371 +
					 (x377 * x355) + (-1 * x376 * x328) + (-1 * x48 * x365) + (-1 * x378 * x344) + x373;
	const FLT x383 = x50 * x366;
	const FLT x384 = x6 * x71;
	const FLT x385 = x360 * x384;
	const FLT x386 = x47 * x385;
	const FLT x387 = x6 * x349;
	const FLT x388 = x327 * x181;
	const FLT x389 = x362 * x367;
	const FLT x390 = x67 + x383 + (-1 * x359 * x354) + (-1 * x389) + (x48 * x379) + (-1 * x353 * x357) +
					 (-1 * x376 * x355) + x386 + (x346 * x345) + (-1 * x377 * x328) + (-1 * x387) + (-1 * x388 * x344);
	const FLT x391 = (x390 * sensor_pt[1]) + (x370 * sensor_pt[2]) + (-1 * x382 * sensor_pt[0]);
	const FLT x392 = x327 * x193;
	const FLT x393 = (x362 * x354) + (-1 * x50 * x372);
	const FLT x394 = x6 * x357;
	const FLT x395 = (-1 * x394 * x361) + (x6 * x380);
	const FLT x396 = x393 + x395 + (-1 * x355 * x345) + (-1 * x71 * x353) + (-1 * x376 * x346) + (-1 * x392 * x344) +
					 x72 + (x356 * x328) + (x48 * x348) + (-1 * x367 * x359);
	const FLT x397 = 2 * ((x370 * sensor_pt[0]) + (-1 * x396 * sensor_pt[1]) + (x382 * sensor_pt[2]));
	const FLT x398 = (x210 * x396) + (x73 * x397) + (-1 * x211 * x391) + (-1 * x204 * x390);
	const FLT x399 = (x370 * sensor_pt[1]) + (-1 * x390 * sensor_pt[2]) + (x396 * sensor_pt[0]);
	const FLT x400 = (x204 * x382) + (x206 * x391) + (-1 * x200 * x399) + (-1 * x207 * x396);
	const FLT x401 = (-1 * x210 * x382) + (x211 * x399) + (-1 * x81 * x397) + (x207 * x390);
	const FLT x402 = 2 * ((x401 * (*lh_p).Rot[2]) + (-1 * x398 * (*lh_p).Rot[3]) + (x400 * (*lh_p).Rot[0]));
	const FLT x403 = 2 * ((x398 * (*lh_p).Rot[1]) + (-1 * x400 * (*lh_p).Rot[2]) + (x401 * (*lh_p).Rot[0]));
	const FLT x404 = x398 + (x402 * (*lh_p).Rot[3]) + (-1 * x403 * (*lh_p).Rot[1]);
	const FLT x405 = 2 * ((x400 * (*lh_p).Rot[3]) + (-1 * x401 * (*lh_p).Rot[1]) + (x398 * (*lh_p).Rot[0]));
	const FLT x406 = (-1 * x405 * (*lh_p).Rot[3]) + x400 + (x403 * (*lh_p).Rot[2]);
	const FLT x407 = (x405 * (*lh_p).Rot[1]) + x401 + (-1 * x402 * (*lh_p).Rot[2]);
	const FLT x408 = (-1 * ((x407 * x113) + (-1 * x406 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x407 * x105) + (x406 * x101)) * x107) + (x95 * x404)));
	const FLT x409 = x324 * x340;
	const FLT x410 = x329 * x333;
	const FLT x411 = x50 * x410;
	const FLT x412 = x50 * x337;
	const FLT x413 = x50 * x44;
	const FLT x414 = x64 * x413;
	const FLT x415 = x50 * x50 * x50;
	const FLT x416 = (-1 * x415 * x337) + (x413 * x334) + (-1 * x48 * x412) + (-1 * x45 * x412) + (x48 * x411) +
					 (-1 * x414 * x331) + (x415 * x410) + (x45 * x411);
	const FLT x417 = x38 * x416;
	const FLT x418 = x416 * x328;
	const FLT x419 = 0.5 * x414;
	const FLT x420 = x39 * x416;
	const FLT x421 = x50 * x360;
	const FLT x422 = x6 * x50;
	const FLT x423 = (x422 * x379) + (-1 * x421 * x394);
	const FLT x424 = (-1 * x419 * x367) + (-1 * x51 * x326) + (-1 * x363) + (-1 * x417 * x346) + (-1 * x420 * x355) +
					 x350 + x364 + x423 + (x409 * x354) + (-1 * x416 * x392) + (x41 * x418);
	const FLT x425 = x41 * x416;
	const FLT x426 = x421 * x374;
	const FLT x427 = x422 * x326;
	const FLT x428 = (-1 * x416 * x378) + (-1 * x38 * x418) + (-1 * x426) + (x51 * x379) + x67 + (-1 * x425 * x346) +
					 (x40 * x416 * x355) + (-1 * x383) + (-1 * x409 * x357) + x389 + x427 + (-1 * x71 * x419);
	const FLT x429 = x422 * x365;
	const FLT x430 = -1 * x72;
	const FLT x431 = x421 * x368;
	const FLT x432 = x393 + (x425 * x355) + (-1 * x416 * x351) + (x416 * x347) + (x71 * x409) + (x39 * x418) +
					 (-1 * x51 * x348) + (-1 * x419 * x357) + (-1 * x429) + x431 + x430;
	const FLT x433 = (x432 * sensor_pt[0]) + (-1 * x424 * sensor_pt[1]) + (x428 * sensor_pt[2]);
	const FLT x434 = (x50 * x385) + (-1 * x422 * x348);
	const FLT x435 = (-1 * x40 * x418) + (-1 * x417 * x355) + x381 + x74 + (x51 * x365) + (-1 * x416 * x388) + x434 +
					 (-1 * x409 * x367) + (-1 * x419 * x354) + (x420 * x346);
	const FLT x436 = (x432 * sensor_pt[1]) + (x424 * sensor_pt[0]) + (-1 * x435 * sensor_pt[2]);
	const FLT x437 = (-1 * x428 * x210) + (-1 * x433 * x206) + (x435 * x207) + (x436 * x211);
	const FLT x438 = (x435 * sensor_pt[1]) + (-1 * x428 * sensor_pt[0]) + (x432 * sensor_pt[2]);
	const FLT x439 = (x428 * x204) + (-1 * x424 * x207) + (-1 * x436 * x200) + (x438 * x206);
	const FLT x440 = (-1 * x435 * x204) + (x424 * x210) + (-1 * x438 * x211) + (x433 * x200);
	const FLT x441 = 2 * ((x440 * (*lh_p).Rot[1]) + (x437 * (*lh_p).Rot[0]) + (-1 * x439 * (*lh_p).Rot[2]));
	const FLT x442 = (-1 * x440 * (*lh_p).Rot[3]) + (x437 * (*lh_p).Rot[2]) + (x439 * (*lh_p).Rot[0]);
	const FLT x443 = x440 + (-1 * x441 * (*lh_p).Rot[1]) + (x442 * x293);
	const FLT x444 = (x439 * (*lh_p).Rot[3]) + (x440 * (*lh_p).Rot[0]) + (-1 * x437 * (*lh_p).Rot[1]);
	const FLT x445 = x439 + (-1 * x444 * x293) + (x441 * (*lh_p).Rot[2]);
	const FLT x446 = x437 + (-1 * x442 * x219) + (x444 * x215);
	const FLT x447 = (-1 * ((x446 * x113) + (-1 * x445 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x446 * x105) + (x445 * x101)) * x107) + (x95 * x443)));
	const FLT x448 = x6 * x331;
	const FLT x449 = x6 * x6 * x6;
	const FLT x450 = (x448 * x341) + (-1 * x449 * x337) + (-1 * x448 * x342) + (x410 * x449) + (-1 * x6 * x343) +
					 (x448 * x352 * x329) + (x6 * x335) + (-1 * x6 * x48 * x337);
	const FLT x451 = x450 * x327;
	const FLT x452 = x41 * x451;
	const FLT x453 = x339 * x324;
	const FLT x454 = x39 * x451;
	const FLT x455 = (-1 * x454 * x189) + (-1 * x386) + (-1 * x451 * x279) + x387 + x426 + (x45 * x379) +
					 (-1 * x451 * x193) + (x452 * x185) + x67 + (-1 * x368 * x358) + (-1 * x453 * x357) + (-1 * x427);
	const FLT x456 = x40 * x451;
	const FLT x457 = (x456 * x189) + (-1 * x450 * x378) + (-1 * x451 * x202) + (x45 * x326) + x423 +
					 (-1 * x453 * x354) + (-1 * x452 * x184) + x369 + (-1 * x384 * x358) + x68;
	const FLT x458 = (x454 * x185) + x371 + x375 + (x456 * x184) + x434 + (-1 * x45 * x365) + (x453 * x367) +
					 (-1 * x373) + (-1 * x451 * x197) + (x452 * x189) + (-1 * x394 * x358);
	const FLT x459 = 2 * ((x458 * sensor_pt[0]) + (-1 * x455 * sensor_pt[1]) + (x457 * sensor_pt[2]));
	const FLT x460 = (-1 * x374 * x358) + (x454 * x184) + x430 + x395 + (-1 * x451 * x181) + x429 + (-1 * x431) +
					 (-1 * x45 * x348) + (-1 * x451 * x190) + (-1 * x451 * x186) + (x71 * x453);
	const FLT x461 = (-1 * x460 * sensor_pt[2]) + (x458 * sensor_pt[1]) + (x455 * sensor_pt[0]);
	const FLT x462 = (x461 * x211) + (-1 * x81 * x459) + (x460 * x207) + (-1 * x457 * x210);
	const FLT x463 = (x460 * sensor_pt[1]) + (-1 * x457 * sensor_pt[0]) + (x458 * sensor_pt[2]);
	const FLT x464 = (x463 * x206) + (x457 * x204) + (-1 * x455 * x207) + (-1 * x461 * x200);
	const FLT x465 = (x455 * x210) + (-1 * x460 * x204) + (x73 * x459) + (-1 * x463 * x211);
	const FLT x466 = (x462 * (*lh_p).Rot[0]) + (x465 * (*lh_p).Rot[1]) + (-1 * x464 * (*lh_p).Rot[2]);
	const FLT x467 = (-1 * x465 * (*lh_p).Rot[3]) + (x462 * (*lh_p).Rot[2]) + (x464 * (*lh_p).Rot[0]);
	const FLT x468 = x465 + (-1 * x466 * x215) + (x467 * x293);
	const FLT x469 = (x464 * (*lh_p).Rot[3]) + (x465 * (*lh_p).Rot[0]) + (-1 * x462 * (*lh_p).Rot[1]);
	const FLT x470 = x464 + (-1 * x469 * x293) + (x466 * x219);
	const FLT x471 = x462 + (-1 * x467 * x219) + (x469 * x215);
	const FLT x472 = (-1 * ((x471 * x113) + (-1 * x470 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x471 * x105) + (x470 * x101)) * x107) + (x95 * x468)));
	const FLT x473 = dt * x299;
	const FLT x474 = dt * x301;
	const FLT x475 = x474 + x473;
	const FLT x476 = -1 * dt * x303;
	const FLT x477 = (-1 * dt * x305) + dt;
	const FLT x478 = x477 + x476;
	const FLT x479 = dt * x308;
	const FLT x480 = dt * x309;
	const FLT x481 = x480 + (-1 * x479);
	const FLT x482 = (-1 * ((x481 * x113) + (-1 * x478 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x481 * x105) + (x478 * x101)) * x107) + (x95 * x475)));
	const FLT x483 = -1 * dt * x312;
	const FLT x484 = x477 + x483;
	const FLT x485 = x473 + (-1 * x474);
	const FLT x486 = dt * x316;
	const FLT x487 = dt * x317;
	const FLT x488 = x487 + x486;
	const FLT x489 = (-1 * ((x488 * x113) + (-1 * x485 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x488 * x105) + (x485 * x101)) * x107) + (x95 * x484)));
	const FLT x490 = x486 + (-1 * x487);
	const FLT x491 = x479 + x480;
	const FLT x492 = x476 + dt + x483;
	const FLT x493 = (-1 * ((x492 * x113) + (-1 * x491 * x111)) * x114) +
					 (-1 * x110 * ((-1 * ((x492 * x105) + (x491 * x101)) * x107) + (x95 * x490)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x115 + (x115 * x117) + (x119 * ((x104 * x118) + (-1 * x5 * x111))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						(x117 * x127) + x127 + (((x118 * x126) + (-1 * x111 * x122)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x131 + (x117 * x131) + (((x118 * x130) + (-1 * x111 * x128)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x222 + (x222 * x117) + (((x221 * x118) + (-1 * x217 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x263 + (x263 * x117) + (((x262 * x118) + (-1 * x259 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x298 + (x298 * x117) + (((x297 * x118) + (-1 * x294 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT),
						x311 + (x311 * x117) + (((x310 * x118) + (-1 * x302 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT),
						(x319 * x117) + x319 + (((x318 * x118) + (-1 * x314 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT),
						x323 + (x323 * x117) + (((x322 * x118) + (-1 * x320 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x408 + (x408 * x117) + (((x407 * x118) + (-1 * x404 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						(x447 * x117) + x447 + (((x446 * x118) + (-1 * x443 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x472 + (x472 * x117) + (((x471 * x118) + (-1 * x468 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT),
						x482 + (x482 * x117) + (((x481 * x118) + (-1 * x475 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT),
						x489 + (x489 * x117) + (((x488 * x118) + (-1 * x484 * x111)) * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT),
						x493 + (x493 * x117) + (((x492 * x118) + (-1 * x490 * x111)) * x119));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*error_model).AccBias[0],
// (*error_model).AccBias[1], (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2],
// (*error_model).IMUCorrection[0], (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2],
// (*error_model).IMUCorrection[3], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae57760>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x5 * x9;
	const FLT x14 = x3 * x8;
	const FLT x15 = (x1 * x14) + (x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * (*_x0).Pose.Rot[0];
	const FLT x21 = x17 * x16;
	const FLT x22 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (-1 * x11 * x18) + (x20 * x12) + (-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x24 = dt * dt;
	const FLT x25 = x24 * (x23 * x23);
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = x12 * x17;
	const FLT x35 = x11 * x17;
	const FLT x36 = (x18 * x16) + (-1 * x35 * (*_x0).Pose.Rot[1]) + (x34 * (*_x0).Pose.Rot[2]) + (x20 * x15);
	const FLT x37 = (x19 * (*_x0).Pose.Rot[1]) + (x20 * x11) + (x12 * x18) + (-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x38 = (x34 * (*_x0).Pose.Rot[1]) + (x35 * (*_x0).Pose.Rot[2]) + (-1 * x15 * x18) + (x20 * x16);
	const FLT x39 = (1. / x30) * (x33 * x33);
	const FLT x40 = cos(x32);
	const FLT x41 = (1. / sqrt((x38 * x38) + (x37 * x37) + (x36 * x36) + (x22 * x22))) *
					(1. / sqrt((x40 * x40) + (x39 * x25) + (x39 * x27) + (x39 * x29)));
	const FLT x42 = dt * x41 * (1. / x31) * x33;
	const FLT x43 = x42 * x23;
	const FLT x44 = x43 * x22;
	const FLT x45 = x42 * x38;
	const FLT x46 = x45 * x28;
	const FLT x47 = x40 * x41;
	const FLT x48 = x47 * x37;
	const FLT x49 = x42 * x26;
	const FLT x50 = x49 * x36;
	const FLT x51 = x50 + x48 + x44 + (-1 * x46);
	const FLT x52 = x42 * x37;
	const FLT x53 = x42 * x28;
	const FLT x54 = (-1 * x49 * x38) + (x47 * x22) + (-1 * x52 * x23) + (-1 * x53 * x36);
	const FLT x55 = x43 * x36;
	const FLT x56 = x52 * x28;
	const FLT x57 = x47 * x38;
	const FLT x58 = x49 * x22;
	const FLT x59 = x58 + x57 + (-1 * x55) + x56;
	const FLT x60 = (-1 * x59 * sensor_pt[2]) + (x51 * sensor_pt[0]) + (x54 * sensor_pt[1]);
	const FLT x61 = x53 * x22;
	const FLT x62 = x45 * x23;
	const FLT x63 = x47 * x36;
	const FLT x64 = x49 * x37;
	const FLT x65 = (-1 * x64) + x63 + x61 + x62;
	const FLT x66 = (-1 * x65 * sensor_pt[0]) + (x54 * sensor_pt[2]) + (x59 * sensor_pt[1]);
	const FLT x67 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x68 = (*error_model).Pose.Pos[0] + (x67 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(2 * ((x65 * x66) + (-1 * x60 * x51))) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x69 = (-1 * x51 * sensor_pt[1]) + (x65 * sensor_pt[2]) + (x54 * sensor_pt[0]);
	const FLT x70 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + sensor_pt[2] +
					(2 * ((x60 * x59) + (-1 * x65 * x69))) + (x67 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x71 = (*error_model).Pose.Pos[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(2 * ((x69 * x51) + (-1 * x66 * x59))) + sensor_pt[1] +
					(x67 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x72 = (-1 * x71 * (*lh_p).Rot[3]) + (x68 * (*lh_p).Rot[0]) + (x70 * (*lh_p).Rot[2]);
	const FLT x73 = (-1 * x70 * (*lh_p).Rot[1]) + (x71 * (*lh_p).Rot[0]) + (x68 * (*lh_p).Rot[3]);
	const FLT x74 = x70 + (2 * ((x73 * (*lh_p).Rot[1]) + (-1 * x72 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x75 = x74 * x74;
	const FLT x76 = (-1 * x68 * (*lh_p).Rot[2]) + (x70 * (*lh_p).Rot[0]) + (x71 * (*lh_p).Rot[1]);
	const FLT x77 = x68 + (*lh_p).Pos[0] + (2 * ((x76 * (*lh_p).Rot[2]) + (-1 * x73 * (*lh_p).Rot[3])));
	const FLT x78 = (x77 * x77) + x75;
	const FLT x79 = 1. / x78;
	const FLT x80 = (*lh_p).Pos[1] + x71 + (2 * ((x72 * (*lh_p).Rot[3]) + (-1 * x76 * (*lh_p).Rot[1])));
	const FLT x81 = x80 * x80;
	const FLT x82 = 1. / sqrt(1 + (-1 * x81 * x79 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x83 = 2 * ((-1 * x61) + x64 + (-1 * x62) + (-1 * x63));
	const FLT x84 = 2 * x54;
	const FLT x85 = x84 * x51;
	const FLT x86 = x85 + (-1 * x83 * x59);
	const FLT x87 = 1 + (x83 * x65) + (-2 * (x51 * x51));
	const FLT x88 = x84 * x65;
	const FLT x89 = 2 * x51;
	const FLT x90 = (x89 * x59) + (-1 * x88);
	const FLT x91 = 2 * ((x90 * (*lh_p).Rot[2]) + (-1 * x86 * (*lh_p).Rot[3]) + (x87 * (*lh_p).Rot[0]));
	const FLT x92 = (x86 * (*lh_p).Rot[1]) + (-1 * x87 * (*lh_p).Rot[2]) + (x90 * (*lh_p).Rot[0]);
	const FLT x93 = 2 * (*lh_p).Rot[1];
	const FLT x94 = x86 + (x91 * (*lh_p).Rot[3]) + (-1 * x93 * x92);
	const FLT x95 = (1. / sqrt(x78)) * (*bsc0).tilt;
	const FLT x96 = 2 * (*lh_p).Rot[2];
	const FLT x97 = 2 * ((x87 * (*lh_p).Rot[3]) + (-1 * x90 * (*lh_p).Rot[1]) + (x86 * (*lh_p).Rot[0]));
	const FLT x98 = x87 + (x92 * x96) + (-1 * x97 * (*lh_p).Rot[3]);
	const FLT x99 = 2 * x77;
	const FLT x100 = x90 + (x97 * (*lh_p).Rot[1]) + (-1 * x91 * (*lh_p).Rot[2]);
	const FLT x101 = 2 * x74;
	const FLT x102 = 1.0 / 2.0 * x80 * (1. / (x78 * sqrt(x78))) * (*bsc0).tilt;
	const FLT x103 = 1. / x74;
	const FLT x104 = 1. / x75;
	const FLT x105 = x77 * x104;
	const FLT x106 = x79 * x75;
	const FLT x107 = (-1 * x106 * ((x100 * x105) + (-1 * x98 * x103))) +
					 (-1 * x82 * ((-1 * x102 * ((x101 * x100) + (x99 * x98))) + (x95 * x94)));
	const FLT x108 = -1 * x74;
	const FLT x109 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * asin(x80 * x95)) + (-1 * atan2(x77, x108)) +
										  (-1 * (*bsc0).phase) + (*bsc0).gibpha);
	const FLT x110 = x80 * x104;
	const FLT x111 = 2 * (1. / (x75 + x81)) * x75 * atan2(x80, x108) * (*bsc0).curve;
	const FLT x112 = (-1 * x50) + x46 + (-1 * x44) + (-1 * x48);
	const FLT x113 = 1 + (x89 * x112) + (-2 * (x59 * x59));
	const FLT x114 = 2 * x65;
	const FLT x115 = (x59 * x114) + (-1 * x85);
	const FLT x116 = x84 * x59;
	const FLT x117 = x116 + (-1 * x112 * x114);
	const FLT x118 = (-1 * x113 * (*lh_p).Rot[3]) + (x117 * (*lh_p).Rot[2]) + (x115 * (*lh_p).Rot[0]);
	const FLT x119 = 2 * (*lh_p).Rot[3];
	const FLT x120 = (x113 * (*lh_p).Rot[1]) + (-1 * x115 * (*lh_p).Rot[2]) + (x117 * (*lh_p).Rot[0]);
	const FLT x121 = x113 + (x118 * x119) + (-1 * x93 * x120);
	const FLT x122 = (x115 * (*lh_p).Rot[3]) + (-1 * x117 * (*lh_p).Rot[1]) + (x113 * (*lh_p).Rot[0]);
	const FLT x123 = x115 + (x96 * x120) + (-1 * x119 * x122);
	const FLT x124 = x117 + (x93 * x122) + (-1 * x96 * x118);
	const FLT x125 = (-1 * ((x105 * x124) + (-1 * x103 * x123)) * x106) +
					 (-1 * x82 * ((-1 * x102 * ((x101 * x124) + (x99 * x123))) + (x95 * x121)));
	const FLT x126 = (x89 * x65) + (-1 * x116);
	const FLT x127 = (-1 * x57) + (-1 * x58) + (-1 * x56) + x55;
	const FLT x128 = x88 + (-1 * x89 * x127);
	const FLT x129 = 1 + (2 * x59 * x127) + (-2 * (x65 * x65));
	const FLT x130 = 2 * ((x129 * (*lh_p).Rot[2]) + (-1 * x126 * (*lh_p).Rot[3]) + (x128 * (*lh_p).Rot[0]));
	const FLT x131 = (x126 * (*lh_p).Rot[1]) + (-1 * x128 * (*lh_p).Rot[2]) + (x129 * (*lh_p).Rot[0]);
	const FLT x132 = x126 + (x130 * (*lh_p).Rot[3]) + (-1 * x93 * x131);
	const FLT x133 = (-1 * x129 * (*lh_p).Rot[1]) + (x128 * (*lh_p).Rot[3]) + (x126 * (*lh_p).Rot[0]);
	const FLT x134 = x128 + (x96 * x131) + (-1 * x119 * x133);
	const FLT x135 = x129 + (x93 * x133) + (-1 * x130 * (*lh_p).Rot[2]);
	const FLT x136 = (-1 * ((x105 * x135) + (-1 * x103 * x134)) * x106) +
					 (-1 * x82 * ((-1 * x102 * ((x101 * x135) + (x99 * x134))) + (x95 * x132)));
	cnMatrixOptionalSet(Hx, 0, 0, (x109 * x107) + x107 + (x111 * ((x100 * x110) + (-1 * x94 * x103))));
	cnMatrixOptionalSet(Hx, 0, 1, (x109 * x125) + x125 + (((x110 * x124) + (-1 * x103 * x121)) * x111));
	cnMatrixOptionalSet(Hx, 0, 2, x136 + (x109 * x136) + (((x110 * x135) + (-1 * x103 * x132)) * x111));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x2 * x11) + (x8 * x7);
	const FLT x14 = x4 * x9;
	const FLT x15 = x6 * x10;
	const FLT x16 = (x2 * x15) + (x8 * x14);
	const FLT x17 = (x2 * x14) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x13 * x18;
	const FLT x20 = x18 * x17;
	const FLT x21 = x12 * x18;
	const FLT x22 = x18 * x16;
	const FLT x23 = (x21 * (*_x0).Pose.Rot[0]) + (x19 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x24 = dt * dt;
	const FLT x25 = (x0 * x0) * x24;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[3]) + (x19 * (*_x0).Pose.Rot[2]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x19 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[2]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x23 * x23) + (x34 * x34) + (x36 * x36) + (x35 * x35))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x34;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x36;
	const FLT x45 = (x43 * x35) + (-1 * x44 * x26) + (-1 * x0 * x41) + (-1 * x42 * x28);
	const FLT x46 = x40 * x35;
	const FLT x47 = (x46 * x26) + (x43 * x36) + (-1 * x0 * x42) + (x41 * x28);
	const FLT x48 = (-1 * x41 * x26) + (x43 * x34) + (x46 * x28) + (x0 * x44);
	const FLT x49 = (-1 * x48 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x47 * sensor_pt[1]);
	const FLT x50 = (x42 * x26) + (x43 * x23) + (x0 * x46) + (-1 * x44 * x28);
	const FLT x51 = (-1 * x50 * sensor_pt[1]) + (x48 * sensor_pt[2]) + (x45 * sensor_pt[0]);
	const FLT x52 = 2 * ((x50 * x51) + (-1 * x47 * x49));
	const FLT x53 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x54 = x53 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x55 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x56 = x52 + (*error_model).Pose.Pos[1] + sensor_pt[1] + x54 + x55 + (*_x0).Pose.Pos[1];
	const FLT x57 = x56 * (*lh_p).Rot[0];
	const FLT x58 = (-1 * x47 * sensor_pt[2]) + (x50 * sensor_pt[0]) + (x45 * sensor_pt[1]);
	const FLT x59 = 2 * ((x48 * x49) + (-1 * x50 * x58));
	const FLT x60 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x61 = x53 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x62 = x61 + x59 + (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + sensor_pt[0] + x60;
	const FLT x63 = x62 * (*lh_p).Rot[3];
	const FLT x64 = 2 * ((x58 * x47) + (-1 * x51 * x48));
	const FLT x65 = x53 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x66 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x67 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + x65 + sensor_pt[2] + x64 + x66;
	const FLT x68 = x67 * (*lh_p).Rot[1];
	const FLT x69 = (-1 * x68) + x57 + x63;
	const FLT x70 = x67 * (*lh_p).Rot[0];
	const FLT x71 = x56 * (*lh_p).Rot[1];
	const FLT x72 = x62 * (*lh_p).Rot[2];
	const FLT x73 = (-1 * x72) + x70 + x71;
	const FLT x74 = x62 + (*lh_p).Pos[0] + (2 * ((x73 * (*lh_p).Rot[2]) + (-1 * x69 * (*lh_p).Rot[3])));
	const FLT x75 = x62 * (*lh_p).Rot[0];
	const FLT x76 = x67 * (*lh_p).Rot[2];
	const FLT x77 = x56 * (*lh_p).Rot[3];
	const FLT x78 = (-1 * x77) + x75 + x76;
	const FLT x79 = x67 + (2 * ((x69 * (*lh_p).Rot[1]) + (-1 * x78 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x80 = x79 * x79;
	const FLT x81 = x80 + (x74 * x74);
	const FLT x82 = 1. / x81;
	const FLT x83 = x56 + (*lh_p).Pos[1] + (2 * ((x78 * (*lh_p).Rot[3]) + (-1 * x73 * (*lh_p).Rot[1])));
	const FLT x84 = x83 * x83;
	const FLT x85 = 1. / sqrt(1 + (-1 * x82 * x84 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x86 = (1. / (x81 * sqrt(x81))) * x83 * (*bsc0).tilt;
	const FLT x87 = x85 * x86;
	const FLT x88 = (x82 * x79) + (x87 * x74);
	const FLT x89 = -1 * x79;
	const FLT x90 = (1. / sqrt(x81)) * (*bsc0).tilt;
	const FLT x91 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * atan2(x74, x89)) + (-1 * (*bsc0).phase) +
										 (-1 * asin(x83 * x90)) + (*bsc0).gibpha);
	const FLT x92 = x85 * x90;
	const FLT x93 = 2 * x79;
	const FLT x94 = (1. / (x80 + x84)) * atan2(x83, x89) * (*bsc0).curve;
	const FLT x95 = (-1 * x82 * x74) + (x87 * x79);
	const FLT x96 = 2 * x94;
	const FLT x97 = 2 * x68;
	const FLT x98 = (2 * x63) + (-1 * x97);
	const FLT x99 = 2 * x77;
	const FLT x100 = (2 * x76) + (-1 * x99);
	const FLT x101 = 2 * x74;
	const FLT x102 = 2 * x72;
	const FLT x103 = (2 * x71) + (-1 * x102);
	const FLT x104 = 1.0 / 2.0 * x86;
	const FLT x105 = 1. / x79;
	const FLT x106 = 1. / x80;
	const FLT x107 = x74 * x106;
	const FLT x108 = x80 * x82;
	const FLT x109 = (-1 * ((x103 * x107) + (-1 * x100 * x105)) * x108) +
					 (-1 * x85 * ((-1 * x104 * ((x93 * x103) + (x101 * x100))) + (x90 * x98)));
	const FLT x110 = x83 * x106;
	const FLT x111 = x80 * x96;
	const FLT x112 = 2 * x70;
	const FLT x113 = x102 + (-4 * x71) + (-1 * x112);
	const FLT x114 = (-1 * (*_x0).Pose.Pos[2]) + (-1 * x64) + (-1 * x66) + (-1 * sensor_pt[2]) + (-1 * x65) +
					 (-1 * (*error_model).Pose.Pos[2]);
	const FLT x115 = 2 * (*lh_p).Rot[3];
	const FLT x116 = 2 * (*lh_p).Rot[2];
	const FLT x117 = (x56 * x116) + (-1 * x114 * x115);
	const FLT x118 = 2 * x57;
	const FLT x119 = 2 * (*lh_p).Rot[1];
	const FLT x120 = x98 + x118 + (x119 * x114);
	const FLT x121 = (-1 * ((x107 * x120) + (-1 * x105 * x117)) * x108) +
					 (-1 * x85 * ((-1 * x104 * ((x93 * x120) + (x101 * x117))) + (x90 * x113)));
	const FLT x122 = (-1 * (*error_model).Pose.Pos[0]) + (-1 * x59) + (-1 * (*_x0).Pose.Pos[0]) + (-1 * sensor_pt[0]) +
					 (-1 * x60) + (-1 * x61);
	const FLT x123 = (x67 * x115) + (-1 * x119 * x122);
	const FLT x124 = x103 + (x116 * x122) + x112;
	const FLT x125 = 2 * x75;
	const FLT x126 = (-4 * x76) + x99 + (-1 * x125);
	const FLT x127 = (-1 * ((x107 * x126) + (-1 * x105 * x124)) * x108) +
					 (-1 * x85 * ((-1 * x104 * ((x93 * x126) + (x101 * x124))) + (x90 * x123)));
	const FLT x128 = (-1 * x52) + (-1 * x54) + (-1 * x55) + (-1 * (*_x0).Pose.Pos[1]) +
					 (-1 * (*error_model).Pose.Pos[1]) + (-1 * sensor_pt[1]);
	const FLT x129 = x100 + (x115 * x128) + x125;
	const FLT x130 = x97 + (-1 * x118) + (-4 * x63);
	const FLT x131 = (x62 * x119) + (-1 * x116 * x128);
	const FLT x132 = (-1 * ((x107 * x131) + (-1 * x105 * x130)) * x108) +
					 (-1 * x85 * ((-1 * x104 * ((x93 * x131) + (x101 * x130))) + (x90 * x129)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), x88 + (x88 * x91));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						(-1 * x92 * x91) + (-1 * x92) + (-1 * x93 * x94));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x95 + (x91 * x95) + (x83 * x96));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x109 + (x91 * x109) + (x111 * ((x103 * x110) + (-1 * x98 * x105))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						(x91 * x121) + x121 + (((x110 * x120) + (-1 * x105 * x113)) * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x127 + (x91 * x127) + (((x110 * x126) + (-1 * x105 * x123)) * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x132 + (x91 * x132) + (((x110 * x131) + (-1 * x105 * x129)) * x111));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abaebf310>,
// <cnkalman.codegen.WrapMember object at 0x7f5abaebfe20>, <cnkalman.codegen.WrapMember object at 0x7f5abaebf280>,
// <cnkalman.codegen.WrapMember object at 0x7f5abaebfc70>, <cnkalman.codegen.WrapMember object at 0x7f5abaebf6a0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abaebf730>, <cnkalman.codegen.WrapMember object at 0x7f5abaebf3a0>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x2 * x11) + (x8 * x7);
	const FLT x14 = x4 * x9;
	const FLT x15 = x6 * x10;
	const FLT x16 = (x2 * x15) + (x8 * x14);
	const FLT x17 = (x2 * x14) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x12 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x13 * x18;
	const FLT x22 = x18 * x17;
	const FLT x23 = (x21 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x22 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[2]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x36 * x36) + (x35 * x35) + (x34 * x34) + (x23 * x23))) *
					(1. / sqrt((x37 * x28) + (x38 * x38) + (x37 * x26) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x25;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x35;
	const FLT x45 = (-1 * x44 * x27) + (x43 * x34) + (x0 * x41) + (x42 * x36);
	const FLT x46 = x40 * x34;
	const FLT x47 = x40 * x36;
	const FLT x48 = (-1 * x47 * x27) + (x43 * x23) + (-1 * x42 * x35) + (-1 * x0 * x46);
	const FLT x49 = (x46 * x27) + (x43 * x35) + (x42 * x23) + (-1 * x0 * x47);
	const FLT x50 = (-1 * x49 * sensor_pt[1]) + (x45 * sensor_pt[2]) + (x48 * sensor_pt[0]);
	const FLT x51 = (x41 * x27) + (x43 * x36) + (-1 * x42 * x34) + (x0 * x44);
	const FLT x52 = (-1 * x51 * sensor_pt[2]) + (x49 * sensor_pt[0]) + (x48 * sensor_pt[1]);
	const FLT x53 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x54 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x53 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x52 * x51) + (-1 * x50 * x45))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x55 = (-1 * x45 * sensor_pt[0]) + (x48 * sensor_pt[2]) + (x51 * sensor_pt[1]);
	const FLT x56 = (2 * ((x50 * x49) + (-1 * x51 * x55))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x53 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x57 = (x53 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*_x0).Pose.Pos[0] +
					(2 * ((x55 * x45) + (-1 * x52 * x49))) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x58 = (-1 * x57 * (*lh_p).Rot[2]) + (x54 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x59 = (x57 * (*lh_p).Rot[0]) + (-1 * x56 * (*lh_p).Rot[3]) + (x54 * (*lh_p).Rot[2]);
	const FLT x60 = x56 + (*lh_p).Pos[1] + (2 * ((x59 * (*lh_p).Rot[3]) + (-1 * x58 * (*lh_p).Rot[1])));
	const FLT x61 = (-1 * x54 * (*lh_p).Rot[1]) + (x56 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[3]);
	const FLT x62 = x54 + (2 * ((x61 * (*lh_p).Rot[1]) + (-1 * x59 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x63 = -1 * x62;
	const FLT x64 = x57 + (*lh_p).Pos[0] + (2 * ((x58 * (*lh_p).Rot[2]) + (-1 * x61 * (*lh_p).Rot[3])));
	const FLT x65 = (x64 * x64) + (x62 * x62);
	const FLT x66 = x60 * (1. / sqrt(x65));
	const FLT x67 = 1.5707963267949 + (-1 * asin(x66 * (*bsc0).tilt)) + (-1 * atan2(x64, x63)) + (-1 * (*bsc0).phase) +
					(*bsc0).gibpha;
	const FLT x68 = sin(x67) * (*bsc0).gibmag;
	const FLT x69 = x66 * (1. / sqrt(1 + (-1 * (x60 * x60) * (1. / x65) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), atan2(x60, x63) * atan2(x60, x63));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), -1 * cos(x67));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x68);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase) / sizeof(FLT), -1 + (-1 * x68));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x68 * x69) + (-1 * x69));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abaebf310>, <cnkalman.codegen.WrapMember object at 0x7f5abaebfe20>, <cnkalman.codegen.WrapMember object at
// 0x7f5abaebf280>, <cnkalman.codegen.WrapMember object at 0x7f5abaebfc70>, <cnkalman.codegen.WrapMember object at
// 0x7f5abaebf6a0>, <cnkalman.codegen.WrapMember object at 0x7f5abaebf730>, <cnkalman.codegen.WrapMember object at
// 0x7f5abaebf3a0>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_y_gen1(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x3 * x8;
	const FLT x13 = x5 * x9;
	const FLT x14 = (x7 * x13) + (x1 * x12);
	const FLT x15 = (x1 * x13) + (x7 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x14 * x17;
	const FLT x19 = x17 * x16;
	const FLT x20 = x11 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 = (x20 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[3]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x24 = dt * dt;
	const FLT x25 = x24 * (x23 * x23);
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x18 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[2]) + (-1 * x21 * (*_x0).Pose.Rot[3]) +
					(x19 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x22 * x22) + (x34 * x34) + (x36 * x36) + (x35 * x35))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x34;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x36;
	const FLT x45 = (-1 * x44 * x26) + (x43 * x35) + (-1 * x41 * x22) + (-1 * x42 * x28);
	const FLT x46 = x40 * x22;
	const FLT x47 = x40 * x35;
	const FLT x48 = (x47 * x26) + (x43 * x36) + (-1 * x42 * x23) + (x46 * x28);
	const FLT x49 = (-1 * x46 * x26) + (x43 * x34) + (x47 * x28) + (x41 * x36);
	const FLT x50 = (x45 * sensor_pt[2]) + (-1 * x49 * sensor_pt[0]) + (x48 * sensor_pt[1]);
	const FLT x51 = (x42 * x26) + (x43 * x22) + (x41 * x35) + (-1 * x44 * x28);
	const FLT x52 = (-1 * x51 * sensor_pt[1]) + (x49 * sensor_pt[2]) + (x45 * sensor_pt[0]);
	const FLT x53 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x54 = (2 * ((x52 * x51) + (-1 * x50 * x48))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x53 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + sensor_pt[1] + (*_x0).Pose.Pos[1];
	const FLT x55 = (-1 * x48 * sensor_pt[2]) + (x51 * sensor_pt[0]) + (x45 * sensor_pt[1]);
	const FLT x56 = (x53 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (2 * ((x50 * x49) + (-1 * x51 * x55))) +
					(*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x57 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x53 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					sensor_pt[2] + (2 * ((x55 * x48) + (-1 * x52 * x49))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x58 = (x54 * (*lh_p).Rot[0]) + (-1 * x57 * (*lh_p).Rot[1]) + (x56 * (*lh_p).Rot[3]);
	const FLT x59 = (-1 * x56 * (*lh_p).Rot[2]) + (x57 * (*lh_p).Rot[0]) + (x54 * (*lh_p).Rot[1]);
	const FLT x60 = x56 + (*lh_p).Pos[0] + (2 * ((x59 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x61 = (-1 * x54 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[2]);
	const FLT x62 = x57 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x61 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x63 = -1 * x62;
	const FLT x64 = x54 + (*lh_p).Pos[1] + (2 * ((x61 * (*lh_p).Rot[3]) + (-1 * x59 * (*lh_p).Rot[1])));
	const FLT x65 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x64 * x64) + (x62 * x62))) * x60 * (*bsc0).tilt)) +
					(-1 * atan2(-1 * x64, x63));
	return x65 + ((atan2(x60, x63) * atan2(x60, x63)) * (*bsc0).curve) +
		   (-1 * cos(1.5707963267949 + x65 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae85f40>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x1 = dt * fabs(dt);
	const FLT x2 = -1 * x0 * x1;
	const FLT x3 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x4 = 1.0 / 2.0 * x1;
	const FLT x5 = x4 + (-1 * x1 * x3);
	const FLT x6 = x5 + x2;
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x8 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x9 = cos(x8);
	const FLT x10 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x11 = sin(x10);
	const FLT x12 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * x11;
	const FLT x15 = sin(x8);
	const FLT x16 = cos(x12);
	const FLT x17 = cos(x10);
	const FLT x18 = x17 * x16;
	const FLT x19 = (x15 * x18) + (-1 * x9 * x14);
	const FLT x20 = (x9 * x18) + (x15 * x14);
	const FLT x21 = x11 * x16;
	const FLT x22 = x13 * x17;
	const FLT x23 = (x9 * x22) + (x21 * x15);
	const FLT x24 = (x9 * x21) + (-1 * x22 * x15);
	const FLT x25 = 1. / sqrt((x24 * x24) + (x23 * x23) + (x19 * x19) + (x20 * x20));
	const FLT x26 = x25 * x19;
	const FLT x27 = x25 * x23;
	const FLT x28 = x25 * x20;
	const FLT x29 = x25 * (*_x0).Pose.Rot[1];
	const FLT x30 = (x28 * (*_x0).Pose.Rot[0]) + (-1 * x26 * (*_x0).Pose.Rot[3]) + (-1 * x24 * x29) +
					(-1 * x27 * (*_x0).Pose.Rot[2]);
	const FLT x31 = x24 * x25;
	const FLT x32 =
		(-1 * x29 * x19) + (x31 * (*_x0).Pose.Rot[3]) + (x28 * (*_x0).Pose.Rot[2]) + (x27 * (*_x0).Pose.Rot[0]);
	const FLT x33 = (x27 * (*_x0).Pose.Rot[1]) + (x26 * (*_x0).Pose.Rot[0]) + (x28 * (*_x0).Pose.Rot[3]) +
					(-1 * x31 * (*_x0).Pose.Rot[2]);
	const FLT x34 =
		(x20 * x29) + (-1 * x27 * (*_x0).Pose.Rot[3]) + (x26 * (*_x0).Pose.Rot[2]) + (x31 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x34 * x34) + (x33 * x33) + (x32 * x32) + (x30 * x30);
	const FLT x36 = 1. / sqrt(x35);
	const FLT x37 = dt * dt;
	const FLT x38 = x7 * x7;
	const FLT x39 = x38 * x37;
	const FLT x40 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x41 = x40 * x40;
	const FLT x42 = x41 * x37;
	const FLT x43 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x44 = x43 * x43;
	const FLT x45 = x44 * x37;
	const FLT x46 = 1e-10 + x45 + x39 + x42;
	const FLT x47 = sqrt(x46);
	const FLT x48 = 0.5 * x47;
	const FLT x49 = sin(x48);
	const FLT x50 = x49 * x49;
	const FLT x51 = 1. / x46;
	const FLT x52 = x50 * x51;
	const FLT x53 = cos(x48);
	const FLT x54 = (x52 * x42) + (x53 * x53) + (x52 * x39) + (x52 * x45);
	const FLT x55 = 1. / sqrt(x54);
	const FLT x56 = x55 * x36;
	const FLT x57 = (1. / x47) * x49;
	const FLT x58 = dt * x57;
	const FLT x59 = x58 * x56;
	const FLT x60 = x59 * x30;
	const FLT x61 = x59 * x34;
	const FLT x62 = x53 * x56;
	const FLT x63 = x62 * x33;
	const FLT x64 = x56 * x32;
	const FLT x65 = x64 * x58;
	const FLT x66 = x63 + (x65 * x40) + (x7 * x60) + (-1 * x61 * x43);
	const FLT x67 = x59 * x33;
	const FLT x68 = x62 * x30;
	const FLT x69 = x68 + (-1 * x7 * x67) + (-1 * x61 * x40) + (-1 * x65 * x43);
	const FLT x70 = x62 * x34;
	const FLT x71 = (x60 * x40) + x70 + (-1 * x7 * x65) + (x67 * x43);
	const FLT x72 = (-1 * x71 * sensor_pt[2]) + (x66 * sensor_pt[0]) + (x69 * sensor_pt[1]);
	const FLT x73 = x62 * x32;
	const FLT x74 = x73 + (-1 * x67 * x40) + (x60 * x43) + (x7 * x61);
	const FLT x75 = (-1 * x74 * sensor_pt[0]) + (x69 * sensor_pt[2]) + (x71 * sensor_pt[1]);
	const FLT x76 = (x4 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] +
					(2 * ((x75 * x74) + (-1 * x72 * x66))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x77 = (-1 * x66 * sensor_pt[1]) + (x74 * sensor_pt[2]) + (x69 * sensor_pt[0]);
	const FLT x78 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x4 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) +
					(2 * ((x71 * x72) + (-1 * x74 * x77))) + sensor_pt[2];
	const FLT x79 = (*error_model).Pose.Pos[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(2 * ((x77 * x66) + (-1 * x71 * x75))) + sensor_pt[1] +
					(x4 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x80 = (-1 * x79 * (*lh_p).Rot[3]) + (x76 * (*lh_p).Rot[0]) + (x78 * (*lh_p).Rot[2]);
	const FLT x81 = (-1 * x78 * (*lh_p).Rot[1]) + (x79 * (*lh_p).Rot[0]) + (x76 * (*lh_p).Rot[3]);
	const FLT x82 = x78 + (2 * ((x81 * (*lh_p).Rot[1]) + (-1 * x80 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x83 = 1. / x82;
	const FLT x84 = x1 * (*lh_p).Rot[0];
	const FLT x85 = x84 * (*lh_p).Rot[2];
	const FLT x86 = x1 * (*lh_p).Rot[3];
	const FLT x87 = x86 * (*lh_p).Rot[1];
	const FLT x88 = x87 + (-1 * x85);
	const FLT x89 = x82 * x82;
	const FLT x90 = 1. / x89;
	const FLT x91 = (-1 * x76 * (*lh_p).Rot[2]) + (x78 * (*lh_p).Rot[0]) + (x79 * (*lh_p).Rot[1]);
	const FLT x92 = x76 + (*lh_p).Pos[0] + (2 * ((x91 * (*lh_p).Rot[2]) + (-1 * x81 * (*lh_p).Rot[3])));
	const FLT x93 = x92 * x90;
	const FLT x94 = -1 * x82;
	const FLT x95 = x92 * x92;
	const FLT x96 = 2 * (1. / (x89 + x95)) * x89 * atan2(x92, x94) * (*bsc0).curve;
	const FLT x97 = x1 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x98 = x84 * (*lh_p).Rot[3];
	const FLT x99 = x98 + x97;
	const FLT x100 = x79 + (*lh_p).Pos[1] + (2 * ((x80 * (*lh_p).Rot[3]) + (-1 * x91 * (*lh_p).Rot[1])));
	const FLT x101 = x90 * x100;
	const FLT x102 = x89 + (x100 * x100);
	const FLT x103 = 1. / x102;
	const FLT x104 = x89 * x103;
	const FLT x105 = (1. / sqrt(x102)) * (*bsc0).tilt;
	const FLT x106 = 2 * x100;
	const FLT x107 = 2 * x82;
	const FLT x108 = 1.0 / 2.0 * x92 * (1. / (x102 * sqrt(x102))) * (*bsc0).tilt;
	const FLT x109 = 1. / sqrt(1 + (-1 * x95 * x103 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x110 = (-1 * x109 * ((-1 * ((x88 * x107) + (x99 * x106)) * x108) + (x6 * x105))) +
					 (-1 * x104 * ((-1 * x88 * x101) + (x83 * x99)));
	const FLT x111 = sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x92 * x105)) +
						 (-1 * atan2(-1 * x100, x94))) *
					 (*bsc0).gibmag;
	const FLT x112 = x97 + (-1 * x98);
	const FLT x113 = x86 * (*lh_p).Rot[2];
	const FLT x114 = x84 * (*lh_p).Rot[1];
	const FLT x115 = x114 + x113;
	const FLT x116 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x117 = -1 * x1 * x116;
	const FLT x118 = x5 + x117;
	const FLT x119 = (-1 * x109 * ((-1 * ((x107 * x115) + (x106 * x118)) * x108) + (x105 * x112))) +
					 (-1 * x104 * ((-1 * x101 * x115) + (x83 * x118)));
	const FLT x120 = x85 + x87;
	const FLT x121 = x4 + x2 + x117;
	const FLT x122 = x113 + (-1 * x114);
	const FLT x123 = (-1 * x109 * ((-1 * ((x107 * x121) + (x106 * x122)) * x108) + (x105 * x120))) +
					 (-1 * x104 * ((-1 * x101 * x121) + (x83 * x122)));
	const FLT x124 = 2 * x0;
	const FLT x125 = -1 * x124;
	const FLT x126 = 2 * x3;
	const FLT x127 = 1 + (-1 * x126);
	const FLT x128 = x127 + x125;
	const FLT x129 = 2 * (*lh_p).Rot[2];
	const FLT x130 = x129 * (*lh_p).Rot[0];
	const FLT x131 = 2 * (*lh_p).Rot[3];
	const FLT x132 = x131 * (*lh_p).Rot[1];
	const FLT x133 = x132 + (-1 * x130);
	const FLT x134 = 2 * (*lh_p).Rot[1];
	const FLT x135 = x134 * (*lh_p).Rot[2];
	const FLT x136 = x131 * (*lh_p).Rot[0];
	const FLT x137 = x136 + x135;
	const FLT x138 = (-1 * x109 * ((-1 * ((x107 * x133) + (x106 * x137)) * x108) + (x105 * x128))) +
					 (-1 * x104 * ((-1 * x101 * x133) + (x83 * x137)));
	const FLT x139 = x135 + (-1 * x136);
	const FLT x140 = x131 * (*lh_p).Rot[2];
	const FLT x141 = x134 * (*lh_p).Rot[0];
	const FLT x142 = x141 + x140;
	const FLT x143 = 2 * x116;
	const FLT x144 = -1 * x143;
	const FLT x145 = x127 + x144;
	const FLT x146 = (-1 * x109 * ((-1 * ((x107 * x142) + (x106 * x145)) * x108) + (x105 * x139))) +
					 (-1 * x104 * ((-1 * x101 * x142) + (x83 * x145)));
	const FLT x147 = x130 + x132;
	const FLT x148 = 1 + x144 + x125;
	const FLT x149 = x140 + (-1 * x141);
	const FLT x150 = (-1 * x109 * ((-1 * ((x107 * x148) + (x106 * x149)) * x108) + (x105 * x147))) +
					 (-1 * x104 * ((-1 * x101 * x148) + (x83 * x149)));
	const FLT x151 = 2 * x34;
	const FLT x152 = 2 * x33;
	const FLT x153 = 2 * x32;
	const FLT x154 = 2 * x30;
	const FLT x155 = x55 * (1. / (x35 * sqrt(x35)));
	const FLT x156 = ((x28 * x154) + (x27 * x153) + (x31 * x151) + (x26 * x152)) * x155;
	const FLT x157 = 1.0 / 2.0 * x58;
	const FLT x158 = x40 * x157;
	const FLT x159 = x33 * x158;
	const FLT x160 = 1.0 / 2.0 * x53;
	const FLT x161 = x32 * x160;
	const FLT x162 = x43 * x157;
	const FLT x163 = x30 * x162;
	const FLT x164 = x62 * x27;
	const FLT x165 = x59 * x28;
	const FLT x166 = x43 * x165;
	const FLT x167 = x7 * x157;
	const FLT x168 = x34 * x167;
	const FLT x169 = x59 * x26;
	const FLT x170 = -1 * x40 * x169;
	const FLT x171 = x59 * x31;
	const FLT x172 = x7 * x171;
	const FLT x173 = x172 + x170;
	const FLT x174 = (-1 * x168 * x156) + (-1 * x161 * x156) + (x156 * x159) + (-1 * x163 * x156) + x166 + x173 + x164;
	const FLT x175 = x40 * x171;
	const FLT x176 = -1 * x175;
	const FLT x177 = x7 * x169;
	const FLT x178 = -1 * x177;
	const FLT x179 = x30 * x160;
	const FLT x180 = x33 * x167;
	const FLT x181 = x34 * x156;
	const FLT x182 = x32 * x162;
	const FLT x183 = x62 * x28;
	const FLT x184 = x59 * x27;
	const FLT x185 = x43 * x184;
	const FLT x186 = (-1 * x185) + x183;
	const FLT x187 = x186 + (x182 * x156) + x178 + (x181 * x158) + x176 + (-1 * x179 * x156) + (x180 * x156);
	const FLT x188 = x43 * x169;
	const FLT x189 = x40 * x165;
	const FLT x190 = x30 * x156;
	const FLT x191 = x34 * x160;
	const FLT x192 = x32 * x167;
	const FLT x193 = x33 * x162;
	const FLT x194 = -1 * x7 * x184;
	const FLT x195 = x62 * x31;
	const FLT x196 = x195 + x194;
	const FLT x197 = x196 + (-1 * x193 * x156) + x189 + (-1 * x191 * x156) + x188 + (-1 * x190 * x158) + (x192 * x156);
	const FLT x198 = (x197 * sensor_pt[1]) + (-1 * x174 * sensor_pt[0]) + (x187 * sensor_pt[2]);
	const FLT x199 = 2 * x74;
	const FLT x200 = x62 * x26;
	const FLT x201 = x7 * x165;
	const FLT x202 = x32 * x158;
	const FLT x203 = x33 * x160;
	const FLT x204 = -1 * x43 * x171;
	const FLT x205 = x40 * x184;
	const FLT x206 = x205 + x204;
	const FLT x207 = x206 + x201 + (-1 * x202 * x156) + (-1 * x167 * x190) + (x162 * x181) + x200 + (-1 * x203 * x156);
	const FLT x208 = (x187 * sensor_pt[1]) + (-1 * x197 * sensor_pt[2]) + (x207 * sensor_pt[0]);
	const FLT x209 = 2 * x66;
	const FLT x210 = 2 * x72;
	const FLT x211 = 2 * x75;
	const FLT x212 = (x211 * x174) + (-1 * x210 * x207) + (x198 * x199) + (-1 * x208 * x209);
	const FLT x213 = (x187 * sensor_pt[0]) + (-1 * x207 * sensor_pt[1]) + (x174 * sensor_pt[2]);
	const FLT x214 = 2 * x77;
	const FLT x215 = 2 * x71;
	const FLT x216 = (x215 * x208) + (x210 * x197) + (-1 * x213 * x199) + (-1 * x214 * x174);
	const FLT x217 = (x213 * x209) + (x214 * x207) + (-1 * x215 * x198) + (-1 * x211 * x197);
	const FLT x218 = 2 * ((x217 * (*lh_p).Rot[1]) + (-1 * x212 * (*lh_p).Rot[2]) + (x216 * (*lh_p).Rot[0]));
	const FLT x219 = (x212 * (*lh_p).Rot[3]) + (x217 * (*lh_p).Rot[0]) + (-1 * x216 * (*lh_p).Rot[1]);
	const FLT x220 = x212 + (x218 * (*lh_p).Rot[2]) + (-1 * x219 * x131);
	const FLT x221 = (x216 * (*lh_p).Rot[2]) + (-1 * x217 * (*lh_p).Rot[3]) + (x212 * (*lh_p).Rot[0]);
	const FLT x222 = x216 + (-1 * x221 * x129) + (x219 * x134);
	const FLT x223 = x217 + (-1 * x218 * (*lh_p).Rot[1]) + (x221 * x131);
	const FLT x224 = (-1 * x109 * ((-1 * ((x222 * x107) + (x223 * x106)) * x108) + (x220 * x105))) +
					 (-1 * x104 * ((-1 * x222 * x101) + (x83 * x223)));
	const FLT x225 = -1 * x166;
	const FLT x226 = ((-1 * x31 * x154) + (x28 * x151) + (-1 * x26 * x153) + (x27 * x152)) * x155;
	const FLT x227 = x32 * x226;
	const FLT x228 = x30 * x167;
	const FLT x229 = x34 * x226;
	const FLT x230 = (-1 * x172) + x170;
	const FLT x231 = x225 + (-1 * x227 * x158) + x230 + x164 + (-1 * x203 * x226) + (x229 * x162) + (-1 * x228 * x226);
	const FLT x232 = -1 * x200;
	const FLT x233 = x204 + (-1 * x205);
	const FLT x234 = x233 + x201 + (-1 * x226 * x163) + (x226 * x159) + (-1 * x226 * x168) + x232 + (-1 * x226 * x161);
	const FLT x235 = -1 * x189;
	const FLT x236 = (-1 * x195) + x194;
	const FLT x237 = x236 + (x226 * x180) + (x229 * x158) + (-1 * x226 * x179) + (x227 * x162) + x235 + x188;
	const FLT x238 = x30 * x158;
	const FLT x239 = x183 + x185;
	const FLT x240 = x239 + (-1 * x226 * x193) + x176 + (-1 * x238 * x226) + (-1 * x226 * x191) + x177 + (x227 * x167);
	const FLT x241 = (x240 * sensor_pt[1]) + (-1 * x234 * sensor_pt[0]) + (x237 * sensor_pt[2]);
	const FLT x242 = (x237 * sensor_pt[0]) + (-1 * x231 * sensor_pt[1]) + (x234 * sensor_pt[2]);
	const FLT x243 = (-1 * x211 * x240) + (x209 * x242) + (x214 * x231) + (-1 * x215 * x241);
	const FLT x244 = (x237 * sensor_pt[1]) + (x231 * sensor_pt[0]) + (-1 * x240 * sensor_pt[2]);
	const FLT x245 = (x215 * x244) + (-1 * x242 * x199) + (x210 * x240) + (-1 * x214 * x234);
	const FLT x246 = (x211 * x234) + (x241 * x199) + (-1 * x209 * x244) + (-1 * x210 * x231);
	const FLT x247 = (x243 * (*lh_p).Rot[0]) + (x246 * (*lh_p).Rot[3]) + (-1 * x245 * (*lh_p).Rot[1]);
	const FLT x248 = (x243 * (*lh_p).Rot[1]) + (x245 * (*lh_p).Rot[0]) + (-1 * x246 * (*lh_p).Rot[2]);
	const FLT x249 = (-1 * x247 * x131) + x246 + (x248 * x129);
	const FLT x250 = (x245 * (*lh_p).Rot[2]) + (-1 * x243 * (*lh_p).Rot[3]) + (x246 * (*lh_p).Rot[0]);
	const FLT x251 = x245 + (-1 * x250 * x129) + (x247 * x134);
	const FLT x252 = x243 + (-1 * x248 * x134) + (x250 * x131);
	const FLT x253 = (-1 * x109 * ((-1 * ((x251 * x107) + (x252 * x106)) * x108) + (x249 * x105))) +
					 (-1 * x104 * ((-1 * x251 * x101) + (x83 * x252)));
	const FLT x254 = ((-1 * x27 * x154) + (x28 * x153) + (-1 * x31 * x152) + (x26 * x151)) * x155;
	const FLT x255 = x30 * x254;
	const FLT x256 = -1 * x188;
	const FLT x257 = x34 * x254;
	const FLT x258 = (x257 * x162) + (-1 * x203 * x254) + (-1 * x202 * x254) + x236 + x189 + (-1 * x255 * x167) + x256;
	const FLT x259 = x33 * x254;
	const FLT x260 = x186 + (-1 * x254 * x168) + x175 + (-1 * x254 * x161) + (x259 * x158) + x177 + (-1 * x255 * x162);
	const FLT x261 = -1 * x164;
	const FLT x262 = x173 + x261 + (-1 * x254 * x179) + (x259 * x167) + (x254 * x182) + x225 + (x257 * x158);
	const FLT x263 = (x262 * sensor_pt[0]) + (-1 * x258 * sensor_pt[1]) + (x260 * sensor_pt[2]);
	const FLT x264 = -1 * x201;
	const FLT x265 = x233 + (-1 * x254 * x193) + (-1 * x254 * x191) + (-1 * x255 * x158) + (x254 * x192) + x200 + x264;
	const FLT x266 = (x262 * sensor_pt[1]) + (-1 * x265 * sensor_pt[2]) + (x258 * sensor_pt[0]);
	const FLT x267 = (x215 * x266) + (x210 * x265) + (-1 * x263 * x199) + (-1 * x214 * x260);
	const FLT x268 = (-1 * x260 * sensor_pt[0]) + (x265 * sensor_pt[1]) + (x262 * sensor_pt[2]);
	const FLT x269 = (-1 * x211 * x265) + (x209 * x263) + (-1 * x215 * x268) + (x214 * x258);
	const FLT x270 = (-1 * x210 * x258) + (x211 * x260) + (-1 * x209 * x266) + (x268 * x199);
	const FLT x271 = (x270 * (*lh_p).Rot[3]) + (-1 * x267 * (*lh_p).Rot[1]) + (x269 * (*lh_p).Rot[0]);
	const FLT x272 = (x267 * (*lh_p).Rot[0]) + (x269 * (*lh_p).Rot[1]) + (-1 * x270 * (*lh_p).Rot[2]);
	const FLT x273 = x270 + (-1 * x271 * x131) + (x272 * x129);
	const FLT x274 = (x267 * (*lh_p).Rot[2]) + (x270 * (*lh_p).Rot[0]) + (-1 * x269 * (*lh_p).Rot[3]);
	const FLT x275 = x267 + (-1 * x274 * x129) + (x271 * x134);
	const FLT x276 = x269 + (-1 * x272 * x134) + (x274 * x131);
	const FLT x277 = (-1 * x109 * ((-1 * ((x275 * x107) + (x276 * x106)) * x108) + (x273 * x105))) +
					 (-1 * x104 * ((-1 * x275 * x101) + (x83 * x276)));
	const FLT x278 = ((-1 * x26 * x154) + (x31 * x153) + (x28 * x152) + (-1 * x27 * x151)) * x155;
	const FLT x279 = x30 * x278;
	const FLT x280 = x34 * x278;
	const FLT x281 = (-1 * x279 * x167) + (-1 * x202 * x278) + x178 + x239 + x175 + (x280 * x162) + (-1 * x203 * x278);
	const FLT x282 = x33 * x278;
	const FLT x283 = x196 + (-1 * x278 * x168) + x256 + (-1 * x278 * x161) + (x282 * x158) + x235 + (-1 * x278 * x163);
	const FLT x284 = x32 * x278;
	const FLT x285 = (x284 * x162) + x206 + x232 + (x280 * x158) + (-1 * x278 * x179) + x264 + (x282 * x167);
	const FLT x286 = (x285 * sensor_pt[0]) + (-1 * x281 * sensor_pt[1]) + (x283 * sensor_pt[2]);
	const FLT x287 = (-1 * x278 * x193) + x230 + x261 + x166 + (-1 * x279 * x158) + (-1 * x278 * x191) + (x284 * x167);
	const FLT x288 = (-1 * x287 * sensor_pt[2]) + (x285 * sensor_pt[1]) + (x281 * sensor_pt[0]);
	const FLT x289 = (-1 * x214 * x283) + (x215 * x288) + (-1 * x286 * x199) + (x210 * x287);
	const FLT x290 = (x287 * sensor_pt[1]) + (-1 * x283 * sensor_pt[0]) + (x285 * sensor_pt[2]);
	const FLT x291 = (x214 * x281) + (x209 * x286) + (-1 * x215 * x290) + (-1 * x211 * x287);
	const FLT x292 = (x211 * x283) + (x290 * x199) + (-1 * x209 * x288) + (-1 * x210 * x281);
	const FLT x293 = (x292 * (*lh_p).Rot[3]) + (-1 * x289 * (*lh_p).Rot[1]) + (x291 * (*lh_p).Rot[0]);
	const FLT x294 = (x291 * (*lh_p).Rot[1]) + (-1 * x292 * (*lh_p).Rot[2]) + (x289 * (*lh_p).Rot[0]);
	const FLT x295 = x292 + (-1 * x293 * x131) + (x294 * x129);
	const FLT x296 = (x289 * (*lh_p).Rot[2]) + (-1 * x291 * (*lh_p).Rot[3]) + (x292 * (*lh_p).Rot[0]);
	const FLT x297 = x289 + (-1 * x296 * x129) + (x293 * x134);
	const FLT x298 = x291 + (-1 * x294 * x134) + (x296 * x131);
	const FLT x299 = (-1 * x109 * ((-1 * ((x297 * x107) + (x298 * x106)) * x108) + (x295 * x105))) +
					 (-1 * x104 * ((-1 * x297 * x101) + (x83 * x298)));
	const FLT x300 = dt * dt * dt * dt;
	const FLT x301 = (x40 * x40 * x40) * x300;
	const FLT x302 = 1.0 * x53;
	const FLT x303 = (1. / (x46 * sqrt(x46))) * x49;
	const FLT x304 = x302 * x303;
	const FLT x305 = x40 * x37;
	const FLT x306 = 2 * x52;
	const FLT x307 = 2 * x50 * (1. / (x46 * x46));
	const FLT x308 = x307 * x300;
	const FLT x309 = x40 * x308;
	const FLT x310 = x300 * x304;
	const FLT x311 = x40 * x310;
	const FLT x312 = x57 * x302;
	const FLT x313 = (1. / (x54 * sqrt(x54))) * x36;
	const FLT x314 = ((x44 * x311) + (-1 * x38 * x309) + (-1 * x305 * x312) + (x301 * x304) + (-1 * x44 * x309) +
					  (x305 * x306) + (-1 * x307 * x301) + (x38 * x311)) *
					 x313;
	const FLT x315 = x34 * x314;
	const FLT x316 = x56 * x33;
	const FLT x317 = 0.5 * x57;
	const FLT x318 = x317 * x316;
	const FLT x319 = dt * dt * dt;
	const FLT x320 = 0.5 * x51 * x319;
	const FLT x321 = x73 * x320;
	const FLT x322 = x303 * x319;
	const FLT x323 = x64 * x322;
	const FLT x324 = x40 * x43;
	const FLT x325 = x70 * x320;
	const FLT x326 = x56 * x34;
	const FLT x327 = x326 * x322;
	const FLT x328 = (x327 * x324) + (-1 * x324 * x325);
	const FLT x329 = x68 * x320;
	const FLT x330 = x7 * x329;
	const FLT x331 = x56 * x30;
	const FLT x332 = x322 * x331;
	const FLT x333 = x7 * x332;
	const FLT x334 = (-1 * x40 * x333) + (x40 * x330);
	const FLT x335 = x334 + x328 + (-1 * x202 * x314) + (-1 * x41 * x323) + (-1 * x228 * x314) + x65 +
					 (-1 * x305 * x318) + (-1 * x203 * x314) + (x315 * x162) + (x41 * x321);
	const FLT x336 = -1 * x67;
	const FLT x337 = x63 * x320;
	const FLT x338 = x7 * x325;
	const FLT x339 = x40 * x338;
	const FLT x340 = x7 * x327;
	const FLT x341 = x40 * x340;
	const FLT x342 = x64 * x317;
	const FLT x343 = x322 * x316;
	const FLT x344 = (x329 * x324) + (-1 * x324 * x332);
	const FLT x345 = x344 + (-1 * x314 * x161) + (-1 * x305 * x342) + (x41 * x343) + (-1 * x314 * x163) + x336 +
					 (x314 * x159) + (-1 * x41 * x337) + (-1 * x314 * x168) + (-1 * x341) + x339;
	const FLT x346 = -1 * x61;
	const FLT x347 = x324 * x321;
	const FLT x348 = x331 * x317;
	const FLT x349 = x323 * x324;
	const FLT x350 = x7 * x343;
	const FLT x351 = x7 * x337;
	const FLT x352 = (-1 * x40 * x351) + (x40 * x350);
	const FLT x353 = (x315 * x158) + x349 + (-1 * x305 * x348) + (x41 * x327) + (-1 * x314 * x179) + (-1 * x41 * x325) +
					 x346 + (x314 * x180) + (x314 * x182) + x352 + (-1 * x347);
	const FLT x354 = (x353 * sensor_pt[0]) + (-1 * x335 * sensor_pt[1]) + (x345 * sensor_pt[2]);
	const FLT x355 = x337 * x324;
	const FLT x356 = x7 * x323;
	const FLT x357 = x40 * x356;
	const FLT x358 = x7 * x321;
	const FLT x359 = x40 * x358;
	const FLT x360 = x324 * x343;
	const FLT x361 = x326 * x317;
	const FLT x362 = x60 + x355 + (-1 * x238 * x314) + (-1 * x359) + (x41 * x329) + (-1 * x314 * x193) + (-1 * x360) +
					 x357 + (x314 * x192) + (-1 * x361 * x305) + (-1 * x314 * x191) + (-1 * x41 * x332);
	const FLT x363 = (x353 * sensor_pt[1]) + (-1 * x362 * sensor_pt[2]) + (x335 * sensor_pt[0]);
	const FLT x364 = (x215 * x363) + (-1 * x354 * x199) + (-1 * x214 * x345) + (x210 * x362);
	const FLT x365 = (x362 * sensor_pt[1]) + (x353 * sensor_pt[2]) + (-1 * x345 * sensor_pt[0]);
	const FLT x366 = (x214 * x335) + (-1 * x215 * x365) + (x209 * x354) + (-1 * x211 * x362);
	const FLT x367 = (x211 * x345) + (-1 * x209 * x363) + (x365 * x199) + (-1 * x210 * x335);
	const FLT x368 = (x367 * (*lh_p).Rot[3]) + (-1 * x364 * (*lh_p).Rot[1]) + (x366 * (*lh_p).Rot[0]);
	const FLT x369 = (x366 * (*lh_p).Rot[1]) + (-1 * x367 * (*lh_p).Rot[2]) + (x364 * (*lh_p).Rot[0]);
	const FLT x370 = x367 + (-1 * x368 * x131) + (x369 * x129);
	const FLT x371 = (x364 * (*lh_p).Rot[2]) + (-1 * x366 * (*lh_p).Rot[3]) + (x367 * (*lh_p).Rot[0]);
	const FLT x372 = x364 + (x368 * x134) + (-1 * x371 * x129);
	const FLT x373 = x366 + (x371 * x131) + (-1 * x369 * x134);
	const FLT x374 = (-1 * x109 * ((-1 * ((x372 * x107) + (x373 * x106)) * x108) + (x370 * x105))) +
					 (-1 * x104 * ((-1 * x372 * x101) + (x83 * x373)));
	const FLT x375 = x43 * x310;
	const FLT x376 = x43 * x308;
	const FLT x377 = x37 * x312;
	const FLT x378 = x43 * x43 * x43;
	const FLT x379 = x37 * x306;
	const FLT x380 = (x43 * x379) + (x378 * x310) + (x41 * x375) + (x38 * x375) + (-1 * x378 * x308) +
					 (-1 * x41 * x376) + (-1 * x38 * x376) + (-1 * x43 * x377);
	const FLT x381 = x380 * x313;
	const FLT x382 = x44 * x320;
	const FLT x383 = x43 * x340;
	const FLT x384 = x44 * x322;
	const FLT x385 = x43 * x338;
	const FLT x386 = x37 * x342;
	const FLT x387 = x313 * x161;
	const FLT x388 = (x68 * x382) + x60 + (-1 * x384 * x331) + (-1 * x381 * x168) + (-1 * x355) + (-1 * x383) +
					 (-1 * x387 * x380) + x360 + (-1 * x381 * x163) + x385 + (-1 * x43 * x386) + (x381 * x159);
	const FLT x389 = x43 * x351;
	const FLT x390 = -1 * x65;
	const FLT x391 = x32 * x381;
	const FLT x392 = x43 * x350;
	const FLT x393 = x37 * x348;
	const FLT x394 = x34 * x381;
	const FLT x395 = (x394 * x158) + (-1 * x44 * x321) + (-1 * x381 * x179) + (x381 * x180) + (-1 * x43 * x393) +
					 (x64 * x384) + (-1 * x389) + x390 + (x391 * x162) + x328 + x392;
	const FLT x396 = x37 * x361;
	const FLT x397 = (-1 * x43 * x358) + (x43 * x356);
	const FLT x398 = (x63 * x382) + (-1 * x384 * x316) + x397 + (x391 * x167) + (-1 * x381 * x191) + x344 +
					 (-1 * x43 * x396) + (-1 * x381 * x193) + (-1 * x238 * x381) + x67;
	const FLT x399 = (x398 * sensor_pt[1]) + (-1 * x388 * sensor_pt[0]) + (x395 * sensor_pt[2]);
	const FLT x400 = x37 * x318;
	const FLT x401 = (-1 * x43 * x333) + (x43 * x330);
	const FLT x402 = (-1 * x202 * x381) + x401 + (-1 * x70 * x382) + (-1 * x43 * x400) + (-1 * x349) +
					 (-1 * x228 * x381) + (x384 * x326) + x347 + (-1 * x203 * x381) + (x394 * x162) + x346;
	const FLT x403 = (-1 * x402 * sensor_pt[1]) + (x395 * sensor_pt[0]) + (x388 * sensor_pt[2]);
	const FLT x404 = (x402 * x214) + (-1 * x211 * x398) + (-1 * x215 * x399) + (x403 * x209);
	const FLT x405 = (x395 * sensor_pt[1]) + (x402 * sensor_pt[0]) + (-1 * x398 * sensor_pt[2]);
	const FLT x406 = (x210 * x398) + (-1 * x403 * x199) + (-1 * x214 * x388) + (x405 * x215);
	const FLT x407 = (x211 * x388) + (-1 * x402 * x210) + (-1 * x405 * x209) + (x399 * x199);
	const FLT x408 = (x407 * (*lh_p).Rot[3]) + (x404 * (*lh_p).Rot[0]) + (-1 * x406 * (*lh_p).Rot[1]);
	const FLT x409 = (x404 * (*lh_p).Rot[1]) + (x406 * (*lh_p).Rot[0]) + (-1 * x407 * (*lh_p).Rot[2]);
	const FLT x410 = x407 + (-1 * x408 * x131) + (x409 * x129);
	const FLT x411 = (x406 * (*lh_p).Rot[2]) + (-1 * x404 * (*lh_p).Rot[3]) + (x407 * (*lh_p).Rot[0]);
	const FLT x412 = x406 + (-1 * x411 * x129) + (x408 * x134);
	const FLT x413 = (-1 * x409 * x134) + x404 + (x411 * x131);
	const FLT x414 = (-1 * x109 * ((-1 * ((x412 * x107) + (x413 * x106)) * x108) + (x410 * x105))) +
					 (-1 * x104 * ((-1 * x412 * x101) + (x83 * x413)));
	const FLT x415 = x7 * x310;
	const FLT x416 = x7 * x7 * x7;
	const FLT x417 = x7 * x308;
	const FLT x418 = (x44 * x415) + (-1 * x7 * x377) + (-1 * x416 * x308) + (x416 * x310) + (x41 * x415) + (x7 * x379) +
					 (-1 * x44 * x417) + (-1 * x41 * x417);
	const FLT x419 = x418 * x313;
	const FLT x420 = x34 * x419;
	const FLT x421 = (-1 * x419 * x202) + (-1 * x419 * x228) + (-1 * x357) + (-1 * x38 * x332) + x60 + (x38 * x329) +
					 x359 + (x420 * x162) + (-1 * x385) + (-1 * x7 * x400) + x383 + (-1 * x419 * x203);
	const FLT x422 = x352 + (x419 * x159) + (-1 * x418 * x387) + (-1 * x419 * x163) + (-1 * x7 * x386) + x61 +
					 (-1 * x419 * x168) + x401 + (-1 * x38 * x327) + (x38 * x325);
	const FLT x423 = (x419 * x182) + x397 + (x420 * x158) + (-1 * x419 * x179) + (-1 * x339) + x341 + (x38 * x343) +
					 x336 + (-1 * x38 * x337) + (x419 * x180) + (-1 * x7 * x393);
	const FLT x424 = (x423 * sensor_pt[0]) + (-1 * x421 * sensor_pt[1]) + (x422 * sensor_pt[2]);
	const FLT x425 = x334 + (-1 * x7 * x396) + x389 + (x419 * x192) + (-1 * x392) + x390 + (-1 * x419 * x238) +
					 (-1 * x419 * x191) + (-1 * x419 * x193) + (-1 * x38 * x321) + (x38 * x323);
	const FLT x426 = (-1 * x422 * sensor_pt[0]) + (x425 * sensor_pt[1]) + (x423 * sensor_pt[2]);
	const FLT x427 = (-1 * x425 * x211) + (x424 * x209) + (x421 * x214) + (-1 * x426 * x215);
	const FLT x428 = (x423 * sensor_pt[1]) + (-1 * x425 * sensor_pt[2]) + (x421 * sensor_pt[0]);
	const FLT x429 = (x425 * x210) + (x428 * x215) + (-1 * x424 * x199) + (-1 * x422 * x214);
	const FLT x430 = (x426 * x199) + (x422 * x211) + (-1 * x421 * x210) + (-1 * x428 * x209);
	const FLT x431 = (x427 * (*lh_p).Rot[0]) + (x430 * (*lh_p).Rot[3]) + (-1 * x429 * (*lh_p).Rot[1]);
	const FLT x432 = (x427 * (*lh_p).Rot[1]) + (x429 * (*lh_p).Rot[0]) + (-1 * x430 * (*lh_p).Rot[2]);
	const FLT x433 = x430 + (-1 * x431 * x131) + (x432 * x129);
	const FLT x434 = (x429 * (*lh_p).Rot[2]) + (-1 * x427 * (*lh_p).Rot[3]) + (x430 * (*lh_p).Rot[0]);
	const FLT x435 = x429 + (-1 * x434 * x129) + (x431 * x134);
	const FLT x436 = x427 + (-1 * x432 * x134) + (x434 * x131);
	const FLT x437 = (-1 * x109 * ((-1 * ((x435 * x107) + (x436 * x106)) * x108) + (x433 * x105))) +
					 (-1 * x104 * ((-1 * x435 * x101) + (x83 * x436)));
	const FLT x438 = -1 * dt * x124;
	const FLT x439 = (-1 * dt * x126) + dt;
	const FLT x440 = x439 + x438;
	const FLT x441 = dt * x130;
	const FLT x442 = dt * x132;
	const FLT x443 = x442 + (-1 * x441);
	const FLT x444 = dt * x135;
	const FLT x445 = dt * x136;
	const FLT x446 = x445 + x444;
	const FLT x447 = (-1 * x109 * ((-1 * ((x443 * x107) + (x446 * x106)) * x108) + (x440 * x105))) +
					 (-1 * x104 * ((-1 * x443 * x101) + (x83 * x446)));
	const FLT x448 = x444 + (-1 * x445);
	const FLT x449 = dt * x140;
	const FLT x450 = dt * x141;
	const FLT x451 = x450 + x449;
	const FLT x452 = -1 * dt * x143;
	const FLT x453 = x439 + x452;
	const FLT x454 = (-1 * x109 * ((-1 * ((x451 * x107) + (x453 * x106)) * x108) + (x448 * x105))) +
					 (-1 * x104 * ((-1 * x451 * x101) + (x83 * x453)));
	const FLT x455 = x441 + x442;
	const FLT x456 = x438 + dt + x452;
	const FLT x457 = x449 + (-1 * x450);
	const FLT x458 = (-1 * x109 * ((-1 * ((x456 * x107) + (x457 * x106)) * x108) + (x455 * x105))) +
					 (-1 * x104 * ((-1 * x456 * x101) + (x83 * x457)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						(x96 * ((x88 * x93) + (-1 * x6 * x83))) + x110 + (x110 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						x119 + (((x93 * x115) + (-1 * x83 * x112)) * x96) + (x111 * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						x123 + (((x93 * x121) + (-1 * x83 * x120)) * x96) + (x111 * x123));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT),
						x138 + (((x93 * x133) + (-1 * x83 * x128)) * x96) + (x111 * x138));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT),
						x146 + (((x93 * x142) + (-1 * x83 * x139)) * x96) + (x111 * x146));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT),
						x150 + (((x93 * x148) + (-1 * x83 * x147)) * x96) + (x111 * x150));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x224 + (((x93 * x222) + (-1 * x83 * x220)) * x96) + (x224 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x253 + (((x93 * x251) + (-1 * x83 * x249)) * x96) + (x253 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x277 + (((x93 * x275) + (-1 * x83 * x273)) * x96) + (x277 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x299 + (((x93 * x297) + (-1 * x83 * x295)) * x96) + (x299 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x374 + (((x93 * x372) + (-1 * x83 * x370)) * x96) + (x374 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x414 + (((x93 * x412) + (-1 * x83 * x410)) * x96) + (x414 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x437 + (((x93 * x435) + (-1 * x83 * x433)) * x96) + (x437 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT),
						x447 + (((x93 * x443) + (-1 * x83 * x440)) * x96) + (x447 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT),
						x454 + (((x93 * x451) + (-1 * x83 * x448)) * x96) + (x454 * x111));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT),
						x458 + (((x93 * x456) + (-1 * x83 * x455)) * x96) + (x458 * x111));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae85f40>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*error_model).AccBias[0], (*error_model).AccBias[1],
// (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2],
// (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2], (*error_model).IMUCorrection[0],
// (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2], (*error_model).IMUCorrection[3],
// (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2],
// (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2],
// (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae7ccd0>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x1 = dt * fabs(dt);
	const FLT x2 = -1 * x0 * x1;
	const FLT x3 = 1.0 / 2.0 * x1;
	const FLT x4 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x5 = (-1 * x1 * x4) + x3;
	const FLT x6 = x5 + x2;
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x8 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x9 = cos(x8);
	const FLT x10 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x11 = sin(x10);
	const FLT x12 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * x11;
	const FLT x15 = x9 * x14;
	const FLT x16 = sin(x8);
	const FLT x17 = cos(x12);
	const FLT x18 = cos(x10);
	const FLT x19 = x18 * x17;
	const FLT x20 = x19 * x16;
	const FLT x21 = x20 + (-1 * x15);
	const FLT x22 = x14 * x16;
	const FLT x23 = x9 * x19;
	const FLT x24 = x23 + x22;
	const FLT x25 = x13 * x18;
	const FLT x26 = x25 * x16;
	const FLT x27 = x11 * x17;
	const FLT x28 = x9 * x27;
	const FLT x29 = x28 + x26;
	const FLT x30 = x27 * x16;
	const FLT x31 = x9 * x25;
	const FLT x32 = x31 + (-1 * x30);
	const FLT x33 = (x32 * x32) + (x21 * x21) + (x29 * x29) + (x24 * x24);
	const FLT x34 = 1. / sqrt(x33);
	const FLT x35 = x34 * (*_x0).Pose.Rot[3];
	const FLT x36 = x34 * (*_x0).Pose.Rot[2];
	const FLT x37 = x34 * (*_x0).Pose.Rot[0];
	const FLT x38 = x34 * (*_x0).Pose.Rot[1];
	const FLT x39 = (-1 * x32 * x38) + (x37 * x24) + (-1 * x35 * x21) + (-1 * x36 * x29);
	const FLT x40 = (-1 * x38 * x21) + (x32 * x35) + (x36 * x24) + (x37 * x29);
	const FLT x41 = (x38 * x29) + (x35 * x24) + (x37 * x21) + (-1 * x32 * x36);
	const FLT x42 = (x38 * x24) + (x36 * x21) + (-1 * x35 * x29) + (x32 * x37);
	const FLT x43 = (x42 * x42) + (x41 * x41) + (x40 * x40) + (x39 * x39);
	const FLT x44 = 1. / sqrt(x43);
	const FLT x45 = dt * dt;
	const FLT x46 = x7 * x7;
	const FLT x47 = x45 * x46;
	const FLT x48 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x49 = x48 * x48;
	const FLT x50 = x45 * x49;
	const FLT x51 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x52 = x51 * x51;
	const FLT x53 = x52 * x45;
	const FLT x54 = 1e-10 + x47 + x53 + x50;
	const FLT x55 = sqrt(x54);
	const FLT x56 = 0.5 * x55;
	const FLT x57 = sin(x56);
	const FLT x58 = x57 * x57;
	const FLT x59 = 1. / x54;
	const FLT x60 = x58 * x59;
	const FLT x61 = cos(x56);
	const FLT x62 = (x60 * x50) + (x61 * x61) + (x60 * x47) + (x60 * x53);
	const FLT x63 = 1. / sqrt(x62);
	const FLT x64 = x63 * x44;
	const FLT x65 = x57 * (1. / x55);
	const FLT x66 = dt * x65;
	const FLT x67 = x64 * x66;
	const FLT x68 = x67 * x39;
	const FLT x69 = x67 * x42;
	const FLT x70 = x61 * x44;
	const FLT x71 = x70 * x63;
	const FLT x72 = x71 * x41;
	const FLT x73 = x64 * x40;
	const FLT x74 = x73 * x66;
	const FLT x75 = (x74 * x48) + x72 + (x7 * x68) + (-1 * x69 * x51);
	const FLT x76 = x67 * x41;
	const FLT x77 = x71 * x39;
	const FLT x78 = x77 + (-1 * x69 * x48) + (-1 * x7 * x76) + (-1 * x74 * x51);
	const FLT x79 = x71 * x42;
	const FLT x80 = (x68 * x48) + x79 + (-1 * x7 * x74) + (x76 * x51);
	const FLT x81 = (-1 * x80 * sensor_pt[2]) + (x75 * sensor_pt[0]) + (x78 * sensor_pt[1]);
	const FLT x82 = x71 * x40;
	const FLT x83 = x82 + (-1 * x76 * x48) + (x68 * x51) + (x7 * x69);
	const FLT x84 = (-1 * x83 * sensor_pt[0]) + (x78 * sensor_pt[2]) + (x80 * sensor_pt[1]);
	const FLT x85 = (x3 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (2 * ((x83 * x84) + (-1 * x81 * x75))) +
					(*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x86 = (-1 * x75 * sensor_pt[1]) + (x83 * sensor_pt[2]) + (x78 * sensor_pt[0]);
	const FLT x87 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x80 * x81) + (-1 * x83 * x86))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) +
					(x3 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2];
	const FLT x88 = (2 * ((x86 * x75) + (-1 * x80 * x84))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x3 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x89 = (-1 * x88 * (*lh_p).Rot[3]) + (x85 * (*lh_p).Rot[0]) + (x87 * (*lh_p).Rot[2]);
	const FLT x90 = (-1 * x87 * (*lh_p).Rot[1]) + (x88 * (*lh_p).Rot[0]) + (x85 * (*lh_p).Rot[3]);
	const FLT x91 = x87 + (2 * ((x90 * (*lh_p).Rot[1]) + (-1 * x89 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x92 = 1. / x91;
	const FLT x93 = x1 * (*lh_p).Rot[2];
	const FLT x94 = x93 * (*lh_p).Rot[0];
	const FLT x95 = x1 * (*lh_p).Rot[1];
	const FLT x96 = x95 * (*lh_p).Rot[3];
	const FLT x97 = x96 + (-1 * x94);
	const FLT x98 = x91 * x91;
	const FLT x99 = 1. / x98;
	const FLT x100 = (x87 * (*lh_p).Rot[0]) + (-1 * x85 * (*lh_p).Rot[2]) + (x88 * (*lh_p).Rot[1]);
	const FLT x101 = x85 + (*lh_p).Pos[0] + (2 * ((x100 * (*lh_p).Rot[2]) + (-1 * x90 * (*lh_p).Rot[3])));
	const FLT x102 = x99 * x101;
	const FLT x103 = -1 * x91;
	const FLT x104 = x101 * x101;
	const FLT x105 = 2 * x98 * (1. / (x98 + x104)) * atan2(x101, x103) * (*bsc0).curve;
	const FLT x106 = x95 * (*lh_p).Rot[2];
	const FLT x107 = x1 * (*lh_p).Rot[3] * (*lh_p).Rot[0];
	const FLT x108 = x107 + x106;
	const FLT x109 = x88 + (*lh_p).Pos[1] + (2 * ((x89 * (*lh_p).Rot[3]) + (-1 * x100 * (*lh_p).Rot[1])));
	const FLT x110 = x99 * x109;
	const FLT x111 = x98 + (x109 * x109);
	const FLT x112 = 1. / x111;
	const FLT x113 = x98 * x112;
	const FLT x114 = (1. / sqrt(x111)) * (*bsc0).tilt;
	const FLT x115 = 2 * x109;
	const FLT x116 = 2 * x91;
	const FLT x117 = 1.0 / 2.0 * x101 * (1. / (x111 * sqrt(x111))) * (*bsc0).tilt;
	const FLT x118 = 1. / sqrt(1 + (-1 * x104 * x112 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x119 = (-1 * x118 * ((-1 * x117 * ((x97 * x116) + (x108 * x115))) + (x6 * x114))) +
					 (-1 * ((-1 * x97 * x110) + (x92 * x108)) * x113);
	const FLT x120 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
										  (-1 * asin(x101 * x114)) + (-1 * atan2(-1 * x109, x103)));
	const FLT x121 = x106 + (-1 * x107);
	const FLT x122 = x93 * (*lh_p).Rot[3];
	const FLT x123 = x95 * (*lh_p).Rot[0];
	const FLT x124 = x123 + x122;
	const FLT x125 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x126 = -1 * x1 * x125;
	const FLT x127 = x126 + x2 + x3;
	const FLT x128 = (-1 * x118 * ((-1 * ((x116 * x124) + (x115 * x127)) * x117) + (x114 * x121))) +
					 (-1 * x113 * ((-1 * x110 * x124) + (x92 * x127)));
	const FLT x129 = x94 + x96;
	const FLT x130 = x5 + x126;
	const FLT x131 = x122 + (-1 * x123);
	const FLT x132 = (-1 * x118 * ((-1 * ((x116 * x130) + (x115 * x131)) * x117) + (x114 * x129))) +
					 (-1 * x113 * ((-1 * x110 * x130) + (x92 * x131)));
	const FLT x133 = x63 * (1. / (x43 * sqrt(x43)));
	const FLT x134 = x66 * x133;
	const FLT x135 = x48 * x134;
	const FLT x136 = 1.0 / 2.0 * (1. / (x33 * sqrt(x33)));
	const FLT x137 = x136 * (*_x0).Pose.Rot[1];
	const FLT x138 = 0.5 * x23;
	const FLT x139 = 0.5 * x22;
	const FLT x140 = x139 + x138;
	const FLT x141 = 2 * x32;
	const FLT x142 = 0.5 * x15;
	const FLT x143 = -1 * x142;
	const FLT x144 = 0.5 * x20;
	const FLT x145 = x144 + x143;
	const FLT x146 = 2 * x29;
	const FLT x147 = 0.5 * x26;
	const FLT x148 = -0.5 * x28;
	const FLT x149 = x148 + (-1 * x147);
	const FLT x150 = 2 * x21;
	const FLT x151 = 0.5 * x31;
	const FLT x152 = -1 * x151;
	const FLT x153 = 0.5 * x30;
	const FLT x154 = x153 + x152;
	const FLT x155 = 2 * x24;
	const FLT x156 = (x154 * x155) + (x149 * x150) + (x140 * x141) + (x146 * x145);
	const FLT x157 = x24 * x156;
	const FLT x158 = x136 * (*_x0).Pose.Rot[2];
	const FLT x159 = x21 * x156;
	const FLT x160 = x36 * x149;
	const FLT x161 = x136 * (*_x0).Pose.Rot[3];
	const FLT x162 = x29 * x156;
	const FLT x163 = x37 * x140;
	const FLT x164 = x136 * (*_x0).Pose.Rot[0];
	const FLT x165 = x32 * x156;
	const FLT x166 = (-1 * x165 * x164) + x163 + (-1 * x35 * x145) + (-1 * x158 * x159) + (x38 * x154) + x160 +
					 (-1 * x137 * x157) + (x161 * x162);
	const FLT x167 = 2 * x42;
	const FLT x168 = -1 * x38 * x149;
	const FLT x169 = x24 * x158;
	const FLT x170 = x35 * x140;
	const FLT x171 = (x37 * x145) + (-1 * x161 * x165) + x170 + (x137 * x159) + (-1 * x164 * x162) +
					 (-1 * x169 * x156) + x168 + (x36 * x154);
	const FLT x172 = 2 * x40;
	const FLT x173 = x24 * x136;
	const FLT x174 = x173 * (*_x0).Pose.Rot[3];
	const FLT x175 = x36 * x140;
	const FLT x176 = x37 * x149;
	const FLT x177 = x176 + (-1 * x175) + (x38 * x145) + (-1 * x174 * x156) + (-1 * x162 * x137) + (x165 * x158) +
					 (x35 * x154) + (-1 * x164 * x159);
	const FLT x178 = 2 * x41;
	const FLT x179 = -1 * x38 * x140;
	const FLT x180 = x35 * x149;
	const FLT x181 = x29 * x158;
	const FLT x182 = (x37 * x154) + (-1 * x36 * x145) + (x165 * x137) + (x161 * x159) + x179 + (-1 * x164 * x157) +
					 (-1 * x180) + (x181 * x156);
	const FLT x183 = 2 * x39;
	const FLT x184 = (x178 * x177) + (x167 * x166) + (x183 * x182) + (x171 * x172);
	const FLT x185 = 1.0 / 2.0 * x41;
	const FLT x186 = x185 * x184;
	const FLT x187 = 1.0 / 2.0 * x40;
	const FLT x188 = x61 * x133;
	const FLT x189 = x188 * x184;
	const FLT x190 = 1.0 / 2.0 * x39;
	const FLT x191 = x51 * x134;
	const FLT x192 = x7 * x67;
	const FLT x193 = x67 * x48;
	const FLT x194 = x67 * x51;
	const FLT x195 = 1.0 / 2.0 * x42;
	const FLT x196 = x184 * x195;
	const FLT x197 = x7 * x134;
	const FLT x198 = (x182 * x194) + (x71 * x171) + (x186 * x135) + (-1 * x184 * x190 * x191) + (-1 * x196 * x197) +
					 (-1 * x187 * x189) + (-1 * x177 * x193) + (x166 * x192);
	const FLT x199 = x187 * x184;
	const FLT x200 = x184 * x197;
	const FLT x201 = (x191 * x196) + (-1 * x166 * x194) + (x71 * x177) + (x171 * x193) + (-1 * x199 * x135) +
					 (-1 * x189 * x185) + (x182 * x192) + (-1 * x200 * x190);
	const FLT x202 = x195 * x135;
	const FLT x203 = (x71 * x182) + (-1 * x171 * x194) + (x191 * x199) + (-1 * x189 * x190) + (-1 * x166 * x193) +
					 (x200 * x185) + (x202 * x184) + (-1 * x177 * x192);
	const FLT x204 = (x203 * sensor_pt[0]) + (x198 * sensor_pt[2]) + (-1 * x201 * sensor_pt[1]);
	const FLT x205 = 2 * x83;
	const FLT x206 = 2 * x86;
	const FLT x207 = x190 * x135;
	const FLT x208 = (x182 * x193) + (-1 * x207 * x184) + (x197 * x199) + (-1 * x171 * x192) + (x71 * x166) +
					 (-1 * x189 * x195) + (-1 * x186 * x191) + (x177 * x194);
	const FLT x209 = (-1 * x208 * sensor_pt[2]) + (x203 * sensor_pt[1]) + (x201 * sensor_pt[0]);
	const FLT x210 = 2 * x80;
	const FLT x211 = 2 * x81;
	const FLT x212 = (x211 * x208) + (x210 * x209) + (-1 * x204 * x205) + (-1 * x206 * x198);
	const FLT x213 = (x208 * sensor_pt[1]) + (x203 * sensor_pt[2]) + (-1 * x198 * sensor_pt[0]);
	const FLT x214 = 2 * x84;
	const FLT x215 = 2 * x75;
	const FLT x216 = (x201 * x206) + (x215 * x204) + (-1 * x210 * x213) + (-1 * x214 * x208);
	const FLT x217 = (-1 * x211 * x201) + (x213 * x205) + (-1 * x215 * x209) + (x214 * x198);
	const FLT x218 = (x217 * (*lh_p).Rot[3]) + (-1 * x212 * (*lh_p).Rot[1]) + (x216 * (*lh_p).Rot[0]);
	const FLT x219 = 2 * (*lh_p).Rot[3];
	const FLT x220 = (-1 * x217 * (*lh_p).Rot[2]) + (x216 * (*lh_p).Rot[1]) + (x212 * (*lh_p).Rot[0]);
	const FLT x221 = 2 * (*lh_p).Rot[2];
	const FLT x222 = x217 + (-1 * x219 * x218) + (x220 * x221);
	const FLT x223 = 2 * (*lh_p).Rot[1];
	const FLT x224 = (x212 * (*lh_p).Rot[2]) + (-1 * x216 * (*lh_p).Rot[3]) + (x217 * (*lh_p).Rot[0]);
	const FLT x225 = x212 + (x218 * x223) + (-1 * x224 * x221);
	const FLT x226 = x216 + (-1 * x220 * x223) + (x219 * x224);
	const FLT x227 = (-1 * x118 * ((-1 * ((x225 * x116) + (x226 * x115)) * x117) + (x222 * x114))) +
					 (-1 * x113 * ((-1 * x225 * x110) + (x92 * x226)));
	const FLT x228 = -1 * x144;
	const FLT x229 = x228 + x143;
	const FLT x230 = (-1 * x139) + x138;
	const FLT x231 = -1 * x153;
	const FLT x232 = x152 + x231;
	const FLT x233 = x147 + x148;
	const FLT x234 = (x233 * x155) + (x232 * x150) + (x229 * x141) + (x230 * x146);
	const FLT x235 = x21 * x136;
	const FLT x236 = x234 * x235;
	const FLT x237 = x34 * x230;
	const FLT x238 = x29 * x234;
	const FLT x239 = x32 * x234;
	const FLT x240 = x239 * x136;
	const FLT x241 = x24 * x234;
	const FLT x242 = (-1 * x241 * x158) + (-1 * x240 * (*_x0).Pose.Rot[3]) + (x237 * (*_x0).Pose.Rot[0]) +
					 (x236 * (*_x0).Pose.Rot[1]) + (x35 * x229) + (x36 * x233) + (-1 * x238 * x164) + (-1 * x38 * x232);
	const FLT x243 = x34 * x233;
	const FLT x244 = x21 * x158;
	const FLT x245 = x234 * (*_x0).Pose.Rot[3];
	const FLT x246 = (x36 * x232) + (-1 * x241 * x137) + (-1 * x240 * (*_x0).Pose.Rot[0]) + (-1 * x234 * x244) +
					 (x37 * x229) + (x243 * (*_x0).Pose.Rot[1]) + (x29 * x245 * x136) +
					 (-1 * x237 * (*_x0).Pose.Rot[3]);
	const FLT x247 = (x239 * x158) + (x37 * x232) + (-1 * x236 * (*_x0).Pose.Rot[0]) + (-1 * x238 * x137) +
					 (-1 * x245 * x173) + (x243 * (*_x0).Pose.Rot[3]) + (x237 * (*_x0).Pose.Rot[1]) + (-1 * x36 * x229);
	const FLT x248 = (-1 * x35 * x232) + (x243 * (*_x0).Pose.Rot[0]) + (x235 * x245) + (-1 * x241 * x164) +
					 (x234 * x181) + (x240 * (*_x0).Pose.Rot[1]) + (-1 * x38 * x229) + (-1 * x36 * x230);
	const FLT x249 = (x248 * x183) + (x247 * x178) + (x242 * x172) + (x246 * x167);
	const FLT x250 = x249 * x187;
	const FLT x251 = x190 * x197;
	const FLT x252 = x249 * x188;
	const FLT x253 = x249 * x191;
	const FLT x254 = (x71 * x247) + (x253 * x195) + (-1 * x251 * x249) + (-1 * x246 * x194) + (-1 * x250 * x135) +
					 (-1 * x252 * x185) + (x242 * x193) + (x248 * x192);
	const FLT x255 = (-1 * x253 * x185) + (-1 * x207 * x249) + (x250 * x197) + (-1 * x252 * x195) + (x248 * x193) +
					 (-1 * x242 * x192) + (x71 * x246) + (x247 * x194);
	const FLT x256 = x185 * x197;
	const FLT x257 = (x71 * x248) + (x250 * x191) + (-1 * x252 * x190) + (-1 * x247 * x192) + (-1 * x242 * x194) +
					 (x202 * x249) + (x256 * x249) + (-1 * x246 * x193);
	const FLT x258 = (x257 * sensor_pt[1]) + (x254 * sensor_pt[0]) + (-1 * x255 * sensor_pt[2]);
	const FLT x259 = x185 * x135;
	const FLT x260 = x197 * x195;
	const FLT x261 = (-1 * x260 * x249) + (x71 * x242) + (-1 * x253 * x190) + (-1 * x252 * x187) + (x259 * x249) +
					 (x248 * x194) + (-1 * x247 * x193) + (x246 * x192);
	const FLT x262 = (x255 * sensor_pt[1]) + (-1 * x261 * sensor_pt[0]) + (x257 * sensor_pt[2]);
	const FLT x263 = (x214 * x261) + (x205 * x262) + (-1 * x215 * x258) + (-1 * x211 * x254);
	const FLT x264 = (x257 * sensor_pt[0]) + (x261 * sensor_pt[2]) + (-1 * x254 * sensor_pt[1]);
	const FLT x265 = (-1 * x206 * x261) + (x210 * x258) + (-1 * x205 * x264) + (x211 * x255);
	const FLT x266 = (-1 * x214 * x255) + (x215 * x264) + (-1 * x210 * x262) + (x206 * x254);
	const FLT x267 = (-1 * x263 * (*lh_p).Rot[2]) + (x266 * (*lh_p).Rot[1]) + (x265 * (*lh_p).Rot[0]);
	const FLT x268 = (x263 * (*lh_p).Rot[3]) + (-1 * x265 * (*lh_p).Rot[1]) + (x266 * (*lh_p).Rot[0]);
	const FLT x269 = x263 + (x267 * x221) + (-1 * x219 * x268);
	const FLT x270 = (x265 * (*lh_p).Rot[2]) + (-1 * x266 * (*lh_p).Rot[3]) + (x263 * (*lh_p).Rot[0]);
	const FLT x271 = x265 + (x268 * x223) + (-1 * x270 * x221);
	const FLT x272 = x266 + (-1 * x267 * x223) + (x219 * x270);
	const FLT x273 = (-1 * x118 * ((-1 * ((x271 * x116) + (x272 * x115)) * x117) + (x269 * x114))) +
					 (-1 * x113 * ((-1 * x271 * x110) + (x92 * x272)));
	const FLT x274 = x151 + x231;
	const FLT x275 = x142 + x228;
	const FLT x276 = (x275 * x155) + (x274 * x146) + (x141 * x149) + (x140 * x150);
	const FLT x277 = x24 * x276;
	const FLT x278 = x235 * x276;
	const FLT x279 = x32 * x276;
	const FLT x280 = (x37 * x275) + (-1 * x170) + (-1 * x277 * x164) + x168 + (x276 * x181) +
					 (x278 * (*_x0).Pose.Rot[3]) + (x279 * x137) + (-1 * x36 * x274);
	const FLT x281 = x29 * x276;
	const FLT x282 = (-1 * x279 * x164) + x175 + (-1 * x276 * x244) + (-1 * x277 * x137) + (x38 * x275) +
					 (-1 * x35 * x274) + (x281 * x161) + x176;
	const FLT x283 = (x279 * x158) + (-1 * x276 * x174) + x163 + (-1 * x278 * (*_x0).Pose.Rot[0]) + (x38 * x274) +
					 (x35 * x275) + (-1 * x160) + (-1 * x281 * x137);
	const FLT x284 = (-1 * x281 * x164) + (-1 * x279 * x161) + (x37 * x274) + x179 + (-1 * x276 * x169) + x180 +
					 (x278 * (*_x0).Pose.Rot[1]) + (x36 * x275);
	const FLT x285 = (x280 * x183) + (x282 * x167) + (x284 * x172) + (x283 * x178);
	const FLT x286 = x285 * x188;
	const FLT x287 = x285 * x187;
	const FLT x288 = x285 * x191;
	const FLT x289 = (x283 * x194) + (-1 * x288 * x185) + (-1 * x284 * x192) + (x71 * x282) + (x280 * x193) +
					 (-1 * x207 * x285) + (-1 * x286 * x195) + (x287 * x197);
	const FLT x290 = (x284 * x193) + (x71 * x283) + (-1 * x285 * x251) + (x280 * x192) + (-1 * x286 * x185) +
					 (x288 * x195) + (-1 * x287 * x135) + (-1 * x282 * x194);
	const FLT x291 = (x280 * x194) + (-1 * x283 * x193) + (x71 * x284) + (-1 * x286 * x187) + (x285 * x259) +
					 (-1 * x288 * x190) + (x282 * x192) + (-1 * x260 * x285);
	const FLT x292 = (x287 * x191) + (-1 * x282 * x193) + (-1 * x284 * x194) + (x202 * x285) + (-1 * x283 * x192) +
					 (x71 * x280) + (x285 * x256) + (-1 * x286 * x190);
	const FLT x293 = (x292 * sensor_pt[0]) + (-1 * x290 * sensor_pt[1]) + (x291 * sensor_pt[2]);
	const FLT x294 = (x292 * sensor_pt[1]) + (-1 * x289 * sensor_pt[2]) + (x290 * sensor_pt[0]);
	const FLT x295 = (x210 * x294) + (-1 * x206 * x291) + (x211 * x289) + (-1 * x205 * x293);
	const FLT x296 = (x289 * sensor_pt[1]) + (-1 * x291 * sensor_pt[0]) + (x292 * sensor_pt[2]);
	const FLT x297 = (x215 * x293) + (x206 * x290) + (-1 * x210 * x296) + (-1 * x214 * x289);
	const FLT x298 = (x205 * x296) + (-1 * x215 * x294) + (x214 * x291) + (-1 * x211 * x290);
	const FLT x299 = (x298 * (*lh_p).Rot[3]) + (-1 * x295 * (*lh_p).Rot[1]) + (x297 * (*lh_p).Rot[0]);
	const FLT x300 = (x297 * (*lh_p).Rot[1]) + (-1 * x298 * (*lh_p).Rot[2]) + (x295 * (*lh_p).Rot[0]);
	const FLT x301 = x298 + (-1 * x219 * x299) + (x221 * x300);
	const FLT x302 = (x298 * (*lh_p).Rot[0]) + (x295 * (*lh_p).Rot[2]) + (-1 * x297 * (*lh_p).Rot[3]);
	const FLT x303 = x295 + (-1 * x221 * x302) + (x299 * x223);
	const FLT x304 = x297 + (-1 * x223 * x300) + (x219 * x302);
	const FLT x305 = (-1 * x118 * ((-1 * ((x303 * x116) + (x304 * x115)) * x117) + (x301 * x114))) +
					 (-1 * x113 * ((-1 * x303 * x110) + (x92 * x304)));
	const FLT x306 = 2 * x4;
	const FLT x307 = -1 * x306;
	const FLT x308 = 2 * x0;
	const FLT x309 = 1 + (-1 * x308);
	const FLT x310 = x309 + x307;
	const FLT x311 = x221 * (*lh_p).Rot[0];
	const FLT x312 = x219 * (*lh_p).Rot[1];
	const FLT x313 = x312 + (-1 * x311);
	const FLT x314 = x221 * (*lh_p).Rot[1];
	const FLT x315 = x219 * (*lh_p).Rot[0];
	const FLT x316 = x315 + x314;
	const FLT x317 = (-1 * x118 * ((-1 * ((x313 * x116) + (x316 * x115)) * x117) + (x310 * x114))) +
					 (-1 * x113 * ((-1 * x313 * x110) + (x92 * x316)));
	const FLT x318 = x314 + (-1 * x315);
	const FLT x319 = x221 * (*lh_p).Rot[3];
	const FLT x320 = x223 * (*lh_p).Rot[0];
	const FLT x321 = x320 + x319;
	const FLT x322 = 2 * x125;
	const FLT x323 = -1 * x322;
	const FLT x324 = x309 + x323;
	const FLT x325 = (-1 * x118 * ((-1 * ((x321 * x116) + (x324 * x115)) * x117) + (x318 * x114))) +
					 (-1 * x113 * ((-1 * x321 * x110) + (x92 * x324)));
	const FLT x326 = x311 + x312;
	const FLT x327 = 1 + x323 + x307;
	const FLT x328 = x319 + (-1 * x320);
	const FLT x329 = (-1 * x118 * ((-1 * ((x327 * x116) + (x328 * x115)) * x117) + (x326 * x114))) +
					 (-1 * x113 * ((-1 * x327 * x110) + (x92 * x328)));
	const FLT x330 = x48 * x48 * x48;
	const FLT x331 = dt * dt * dt * dt;
	const FLT x332 = (1. / (x54 * sqrt(x54))) * x57;
	const FLT x333 = 1.0 * x61;
	const FLT x334 = x333 * x332;
	const FLT x335 = x334 * x331;
	const FLT x336 = 2 * x48;
	const FLT x337 = x60 * x45;
	const FLT x338 = (1. / (x54 * x54)) * x58;
	const FLT x339 = 2 * x338;
	const FLT x340 = x339 * x331;
	const FLT x341 = x338 * x336;
	const FLT x342 = x46 * x331;
	const FLT x343 = x48 * x334;
	const FLT x344 = x52 * x331;
	const FLT x345 = x65 * x45;
	const FLT x346 = x333 * x345;
	const FLT x347 = (-1 * x48 * x346) + (x344 * x343) + (-1 * x344 * x341) + (x335 * x330) + (-1 * x330 * x340) +
					 (x337 * x336) + (x342 * x343) + (-1 * x342 * x341);
	const FLT x348 = 1. / (x62 * sqrt(x62));
	const FLT x349 = x66 * x44 * x348;
	const FLT x350 = x51 * x349;
	const FLT x351 = x350 * x195;
	const FLT x352 = x64 * x41;
	const FLT x353 = 0.5 * x345;
	const FLT x354 = x352 * x353;
	const FLT x355 = x70 * x348;
	const FLT x356 = x355 * x185;
	const FLT x357 = dt * dt * dt;
	const FLT x358 = 0.5 * x59 * x357;
	const FLT x359 = x82 * x358;
	const FLT x360 = x7 * x349;
	const FLT x361 = x360 * x190;
	const FLT x362 = x357 * x332;
	const FLT x363 = x73 * x362;
	const FLT x364 = x347 * x187;
	const FLT x365 = x48 * x349;
	const FLT x366 = x7 * x48;
	const FLT x367 = x77 * x358;
	const FLT x368 = x64 * x39;
	const FLT x369 = x362 * x368;
	const FLT x370 = x7 * x369;
	const FLT x371 = (-1 * x48 * x370) + (x366 * x367);
	const FLT x372 = x51 * x48;
	const FLT x373 = x79 * x358;
	const FLT x374 = x64 * x42;
	const FLT x375 = x374 * x362;
	const FLT x376 = (x372 * x375) + (-1 * x373 * x372);
	const FLT x377 = x376 + (-1 * x364 * x365) + x371 + (-1 * x361 * x347) + (x351 * x347) + (-1 * x48 * x354) +
					 (-1 * x356 * x347) + (-1 * x49 * x363) + x74 + (x49 * x359);
	const FLT x378 = -1 * x76;
	const FLT x379 = x360 * x195;
	const FLT x380 = x72 * x358;
	const FLT x381 = x373 * x366;
	const FLT x382 = x375 * x366;
	const FLT x383 = x347 * x190;
	const FLT x384 = x73 * x353;
	const FLT x385 = x362 * x352;
	const FLT x386 = x347 * x185;
	const FLT x387 = x355 * x187;
	const FLT x388 = (-1 * x372 * x369) + (x372 * x367);
	const FLT x389 = x388 + (-1 * x387 * x347) + (x365 * x386) + (-1 * x48 * x384) + (-1 * x350 * x383) + (-1 * x382) +
					 (-1 * x379 * x347) + (-1 * x49 * x380) + (x49 * x385) + x378 + x381;
	const FLT x390 = x360 * x185;
	const FLT x391 = x372 * x359;
	const FLT x392 = x355 * x190;
	const FLT x393 = x365 * x195;
	const FLT x394 = x368 * x353;
	const FLT x395 = x372 * x363;
	const FLT x396 = -1 * x69;
	const FLT x397 = x7 * x385;
	const FLT x398 = (x48 * x397) + (-1 * x366 * x380);
	const FLT x399 = x398 + x396 + x395 + (-1 * x391) + (x49 * x375) + (-1 * x49 * x373) + (x390 * x347) +
					 (-1 * x48 * x394) + (x393 * x347) + (x364 * x350) + (-1 * x392 * x347);
	const FLT x400 = (x399 * sensor_pt[0]) + (-1 * x377 * sensor_pt[1]) + (x389 * sensor_pt[2]);
	const FLT x401 = x372 * x380;
	const FLT x402 = x363 * x366;
	const FLT x403 = x366 * x359;
	const FLT x404 = x355 * x195;
	const FLT x405 = x372 * x385;
	const FLT x406 = x374 * x353;
	const FLT x407 = x68 + x402 + (-1 * x365 * x383) + (x364 * x360) + x401 + (x49 * x367) + (-1 * x350 * x386) +
					 (-1 * x404 * x347) + (-1 * x403) + (-1 * x405) + (-1 * x48 * x406) + (-1 * x49 * x369);
	const FLT x408 = (-1 * x407 * sensor_pt[2]) + (x399 * sensor_pt[1]) + (x377 * sensor_pt[0]);
	const FLT x409 = (x408 * x210) + (-1 * x400 * x205) + (-1 * x206 * x389) + (x407 * x211);
	const FLT x410 = (x399 * sensor_pt[2]) + (x407 * sensor_pt[1]) + (-1 * x389 * sensor_pt[0]);
	const FLT x411 = (x206 * x377) + (x400 * x215) + (-1 * x410 * x210) + (-1 * x407 * x214);
	const FLT x412 = (x214 * x389) + (x410 * x205) + (-1 * x408 * x215) + (-1 * x211 * x377);
	const FLT x413 = (x412 * (*lh_p).Rot[3]) + (-1 * x409 * (*lh_p).Rot[1]) + (x411 * (*lh_p).Rot[0]);
	const FLT x414 = (x411 * (*lh_p).Rot[1]) + (-1 * x412 * (*lh_p).Rot[2]) + (x409 * (*lh_p).Rot[0]);
	const FLT x415 = x412 + (-1 * x413 * x219) + (x414 * x221);
	const FLT x416 = (x409 * (*lh_p).Rot[2]) + (-1 * x411 * (*lh_p).Rot[3]) + (x412 * (*lh_p).Rot[0]);
	const FLT x417 = (x413 * x223) + x409 + (-1 * x416 * x221);
	const FLT x418 = (x416 * x219) + x411 + (-1 * x414 * x223);
	const FLT x419 = (-1 * x118 * ((-1 * ((x417 * x116) + (x418 * x115)) * x117) + (x415 * x114))) +
					 (-1 * x113 * ((-1 * x417 * x110) + (x92 * x418)));
	const FLT x420 = x49 * x335;
	const FLT x421 = x51 * x340;
	const FLT x422 = (x51 * x51 * x51) * x331;
	const FLT x423 = 2 * x337;
	const FLT x424 = (x51 * x423) + (x422 * x334) + (-1 * x49 * x421) + (-1 * x422 * x339) + (-1 * x51 * x346) +
					 (-1 * x46 * x421) + (x51 * x420) + (x51 * x334 * x342);
	const FLT x425 = x424 * x190;
	const FLT x426 = x7 * x51;
	const FLT x427 = x426 * x375;
	const FLT x428 = x426 * x373;
	const FLT x429 = x424 * x185;
	const FLT x430 = (-1 * x424 * x387) + (-1 * x425 * x350) + x68 + (-1 * x52 * x369) + (-1 * x401) +
					 (-1 * x424 * x379) + x405 + (-1 * x427) + (x52 * x367) + x428 + (-1 * x51 * x384) + (x429 * x365);
	const FLT x431 = -1 * x74;
	const FLT x432 = x426 * x380;
	const FLT x433 = x424 * x187;
	const FLT x434 = x51 * x397;
	const FLT x435 = (-1 * x424 * x392) + (x424 * x390) + (-1 * x51 * x394) + (-1 * x432) + x431 + (x52 * x363) + x434 +
					 x376 + (x424 * x393) + (-1 * x52 * x359) + (x433 * x350);
	const FLT x436 = (x426 * x363) + (-1 * x426 * x359);
	const FLT x437 = x388 + x436 + (x52 * x380) + (-1 * x429 * x350) + x76 + (-1 * x425 * x365) + (-1 * x52 * x385) +
					 (-1 * x404 * x424) + (-1 * x51 * x406) + (x433 * x360);
	const FLT x438 = (x437 * sensor_pt[1]) + (-1 * x430 * sensor_pt[0]) + (x435 * sensor_pt[2]);
	const FLT x439 = (x426 * x367) + (-1 * x51 * x370);
	const FLT x440 = x439 + (-1 * x51 * x354) + (-1 * x424 * x356) + (-1 * x52 * x373) + (-1 * x395) + x391 +
					 (x52 * x375) + (-1 * x433 * x365) + x396 + (-1 * x424 * x361) + (x424 * x351);
	const FLT x441 = (x435 * sensor_pt[0]) + (-1 * x440 * sensor_pt[1]) + (x430 * sensor_pt[2]);
	const FLT x442 = (x440 * x206) + (-1 * x437 * x214) + (-1 * x438 * x210) + (x441 * x215);
	const FLT x443 = (x435 * sensor_pt[1]) + (x440 * sensor_pt[0]) + (-1 * x437 * sensor_pt[2]);
	const FLT x444 = (x437 * x211) + (-1 * x430 * x206) + (-1 * x441 * x205) + (x443 * x210);
	const FLT x445 = (x430 * x214) + (-1 * x443 * x215) + (-1 * x440 * x211) + (x438 * x205);
	const FLT x446 = (x445 * (*lh_p).Rot[3]) + (x442 * (*lh_p).Rot[0]) + (-1 * x444 * (*lh_p).Rot[1]);
	const FLT x447 = (x442 * (*lh_p).Rot[1]) + (x444 * (*lh_p).Rot[0]) + (-1 * x445 * (*lh_p).Rot[2]);
	const FLT x448 = x445 + (-1 * x446 * x219) + (x447 * x221);
	const FLT x449 = (x444 * (*lh_p).Rot[2]) + (-1 * x442 * (*lh_p).Rot[3]) + (x445 * (*lh_p).Rot[0]);
	const FLT x450 = x444 + (-1 * x449 * x221) + (x446 * x223);
	const FLT x451 = x442 + (-1 * x447 * x223) + (x449 * x219);
	const FLT x452 = (-1 * x118 * ((-1 * ((x450 * x116) + (x451 * x115)) * x117) + (x448 * x114))) +
					 (-1 * x113 * ((-1 * x450 * x110) + (x92 * x451)));
	const FLT x453 = x7 * x7 * x7;
	const FLT x454 = x7 * x340;
	const FLT x455 = (x7 * x334 * x344) + (-1 * x7 * x346) + (x7 * x420) + (x7 * x423) + (-1 * x52 * x454) +
					 (-1 * x453 * x340) + (x453 * x335) + (-1 * x49 * x454);
	const FLT x456 = x455 * x350;
	const FLT x457 = x46 * x362;
	const FLT x458 = x7 * x353;
	const FLT x459 = x455 * x187;
	const FLT x460 = (x46 * x367) + (-1 * x455 * x361) + x403 + (-1 * x402) + x68 + (x456 * x195) + (-1 * x458 * x352) +
					 (-1 * x457 * x368) + (-1 * x459 * x365) + (-1 * x428) + (-1 * x455 * x356) + x427;
	const FLT x461 = x455 * x365;
	const FLT x462 = x439 + x398 + (x461 * x185) + (-1 * x455 * x387) + (-1 * x7 * x384) + (-1 * x456 * x190) +
					 (-1 * x457 * x374) + (-1 * x455 * x379) + (x46 * x373) + x69;
	const FLT x463 = (x455 * x393) + (x456 * x187) + x378 + (x455 * x390) + (-1 * x381) + (-1 * x458 * x368) + x436 +
					 x382 + (-1 * x46 * x380) + (x457 * x352) + (-1 * x455 * x392);
	const FLT x464 = (x463 * sensor_pt[0]) + (-1 * x460 * sensor_pt[1]) + (x462 * sensor_pt[2]);
	const FLT x465 = x371 + (-1 * x7 * x406) + x432 + (-1 * x456 * x185) + (x459 * x360) + (-1 * x455 * x404) +
					 (-1 * x46 * x359) + (-1 * x434) + x431 + (x73 * x457) + (-1 * x461 * x190);
	const FLT x466 = (-1 * x462 * sensor_pt[0]) + (x465 * sensor_pt[1]) + (x463 * sensor_pt[2]);
	const FLT x467 = (-1 * x465 * x214) + (x464 * x215) + (x460 * x206) + (-1 * x466 * x210);
	const FLT x468 = (x463 * sensor_pt[1]) + (-1 * x465 * sensor_pt[2]) + (x460 * sensor_pt[0]);
	const FLT x469 = (x468 * x210) + (x465 * x211) + (-1 * x464 * x205) + (-1 * x462 * x206);
	const FLT x470 = (x466 * x205) + (x462 * x214) + (-1 * x460 * x211) + (-1 * x468 * x215);
	const FLT x471 = (x470 * (*lh_p).Rot[3]) + (x467 * (*lh_p).Rot[0]) + (-1 * x469 * (*lh_p).Rot[1]);
	const FLT x472 = (x467 * (*lh_p).Rot[1]) + (x469 * (*lh_p).Rot[0]) + (-1 * x470 * (*lh_p).Rot[2]);
	const FLT x473 = x470 + (-1 * x471 * x219) + (x472 * x221);
	const FLT x474 = (x469 * (*lh_p).Rot[2]) + (-1 * x467 * (*lh_p).Rot[3]) + (x470 * (*lh_p).Rot[0]);
	const FLT x475 = x469 + (-1 * x474 * x221) + (x471 * x223);
	const FLT x476 = x467 + (-1 * x472 * x223) + (x474 * x219);
	const FLT x477 = (-1 * x118 * ((-1 * ((x475 * x116) + (x476 * x115)) * x117) + (x473 * x114))) +
					 (-1 * x113 * ((-1 * x475 * x110) + (x92 * x476)));
	const FLT x478 = -1 * dt * x306;
	const FLT x479 = (-1 * dt * x308) + dt;
	const FLT x480 = x479 + x478;
	const FLT x481 = dt * x311;
	const FLT x482 = dt * x312;
	const FLT x483 = x482 + (-1 * x481);
	const FLT x484 = dt * x314;
	const FLT x485 = dt * x315;
	const FLT x486 = x485 + x484;
	const FLT x487 = (-1 * x118 * ((-1 * ((x483 * x116) + (x486 * x115)) * x117) + (x480 * x114))) +
					 (-1 * x113 * ((-1 * x483 * x110) + (x92 * x486)));
	const FLT x488 = x484 + (-1 * x485);
	const FLT x489 = dt * x319;
	const FLT x490 = dt * x320;
	const FLT x491 = x490 + x489;
	const FLT x492 = -1 * dt * x322;
	const FLT x493 = x479 + x492;
	const FLT x494 = (-1 * x118 * ((-1 * ((x491 * x116) + (x493 * x115)) * x117) + (x488 * x114))) +
					 (-1 * x113 * ((-1 * x491 * x110) + (x92 * x493)));
	const FLT x495 = x481 + x482;
	const FLT x496 = x478 + dt + x492;
	const FLT x497 = x489 + (-1 * x490);
	const FLT x498 = (-1 * x118 * ((-1 * ((x496 * x116) + (x497 * x115)) * x117) + (x495 * x114))) +
					 (-1 * x113 * ((-1 * x496 * x110) + (x92 * x497)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x119 + (x105 * ((x97 * x102) + (-1 * x6 * x92))) + (x119 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						x128 + (x105 * ((x102 * x124) + (-1 * x92 * x121))) + (x120 * x128));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x132 + (x105 * ((x102 * x130) + (-1 * x92 * x129))) + (x120 * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x227 + (x105 * ((x225 * x102) + (-1 * x92 * x222))) + (x227 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x273 + (x105 * ((x271 * x102) + (-1 * x92 * x269))) + (x273 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x105 * ((x303 * x102) + (-1 * x92 * x301))) + x305 + (x305 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT),
						x317 + (x105 * ((x313 * x102) + (-1 * x92 * x310))) + (x317 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT),
						x325 + (x105 * ((x321 * x102) + (-1 * x92 * x318))) + (x325 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT),
						x329 + (x105 * ((x327 * x102) + (-1 * x92 * x326))) + (x329 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						(x105 * ((x417 * x102) + (-1 * x92 * x415))) + x419 + (x419 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x452 + (x105 * ((x450 * x102) + (-1 * x92 * x448))) + (x452 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x477 + (x105 * ((x475 * x102) + (-1 * x92 * x473))) + (x477 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT),
						x487 + (x105 * ((x483 * x102) + (-1 * x92 * x480))) + (x487 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT),
						(x105 * ((x491 * x102) + (-1 * x92 * x488))) + x494 + (x494 * x120));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT),
						x498 + (x105 * ((x496 * x102) + (-1 * x92 * x495))) + (x498 * x120));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*error_model).AccBias[0],
// (*error_model).AccBias[1], (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2],
// (*error_model).IMUCorrection[0], (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2],
// (*error_model).IMUCorrection[3], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae7ccd0>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x5 * x9;
	const FLT x14 = x3 * x8;
	const FLT x15 = (x1 * x14) + (x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x11 * x17;
	const FLT x19 = x15 * x17;
	const FLT x20 = x12 * x17;
	const FLT x21 = x17 * x16;
	const FLT x22 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[1]) + (-1 * x18 * (*_x0).Pose.Rot[3]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x24 = dt * dt;
	const FLT x25 = x24 * (x23 * x23);
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (x21 * (*_x0).Pose.Rot[3]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[2]) +
					(x19 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x19 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x20 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[2]) + (-1 * x19 * (*_x0).Pose.Rot[3]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x36 * x36) + (x35 * x35) + (x34 * x34) + (x22 * x22))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x41 * x22;
	const FLT x43 = x40 * x36;
	const FLT x44 = x43 * x28;
	const FLT x45 = x38 * x39;
	const FLT x46 = x45 * x35;
	const FLT x47 = x40 * x26;
	const FLT x48 = x47 * x34;
	const FLT x49 = x46 + x42 + x48 + (-1 * x44);
	const FLT x50 = x40 * x35;
	const FLT x51 = x40 * x28;
	const FLT x52 = (x45 * x22) + (-1 * x50 * x23) + (-1 * x47 * x36) + (-1 * x51 * x34);
	const FLT x53 = x41 * x34;
	const FLT x54 = x50 * x28;
	const FLT x55 = x45 * x36;
	const FLT x56 = x47 * x22;
	const FLT x57 = x56 + x55 + (-1 * x53) + x54;
	const FLT x58 = (-1 * x57 * sensor_pt[2]) + (x49 * sensor_pt[0]) + (x52 * sensor_pt[1]);
	const FLT x59 = x51 * x22;
	const FLT x60 = x43 * x23;
	const FLT x61 = x45 * x34;
	const FLT x62 = x47 * x35;
	const FLT x63 = (-1 * x62) + x59 + x61 + x60;
	const FLT x64 = (-1 * x63 * sensor_pt[0]) + (x52 * sensor_pt[2]) + (x57 * sensor_pt[1]);
	const FLT x65 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x66 = (*error_model).Pose.Pos[0] + (2 * ((x63 * x64) + (-1 * x58 * x49))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) +
					(x65 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*_x0).Pose.Pos[0];
	const FLT x67 = (x63 * sensor_pt[2]) + (-1 * x49 * sensor_pt[1]) + (x52 * sensor_pt[0]);
	const FLT x68 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x58 * x57) + (-1 * x63 * x67))) +
					sensor_pt[2] + (x65 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x69 = (2 * ((x67 * x49) + (-1 * x64 * x57))) + (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x65 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x70 = (-1 * x69 * (*lh_p).Rot[3]) + (x66 * (*lh_p).Rot[0]) + (x68 * (*lh_p).Rot[2]);
	const FLT x71 = (-1 * x68 * (*lh_p).Rot[1]) + (x69 * (*lh_p).Rot[0]) + (x66 * (*lh_p).Rot[3]);
	const FLT x72 = x68 + (2 * ((x71 * (*lh_p).Rot[1]) + (-1 * x70 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x73 = 1. / x72;
	const FLT x74 = (-1 * x59) + x62 + (-1 * x60) + (-1 * x61);
	const FLT x75 = 2 * x63;
	const FLT x76 = 1 + (x75 * x74) + (-2 * (x49 * x49));
	const FLT x77 = 2 * x52;
	const FLT x78 = x77 * x63;
	const FLT x79 = 2 * x49;
	const FLT x80 = (x79 * x57) + (-1 * x78);
	const FLT x81 = 2 * x57;
	const FLT x82 = x77 * x49;
	const FLT x83 = x82 + (-1 * x81 * x74);
	const FLT x84 = (x83 * (*lh_p).Rot[1]) + (-1 * x76 * (*lh_p).Rot[2]) + (x80 * (*lh_p).Rot[0]);
	const FLT x85 = 2 * (*lh_p).Rot[2];
	const FLT x86 = 2 * ((x76 * (*lh_p).Rot[3]) + (-1 * x80 * (*lh_p).Rot[1]) + (x83 * (*lh_p).Rot[0]));
	const FLT x87 = x76 + (x84 * x85) + (-1 * x86 * (*lh_p).Rot[3]);
	const FLT x88 = (-1 * x66 * (*lh_p).Rot[2]) + (x68 * (*lh_p).Rot[0]) + (x69 * (*lh_p).Rot[1]);
	const FLT x89 = x66 + (*lh_p).Pos[0] + (2 * ((x88 * (*lh_p).Rot[2]) + (-1 * x71 * (*lh_p).Rot[3])));
	const FLT x90 = 2 * ((x80 * (*lh_p).Rot[2]) + (-1 * x83 * (*lh_p).Rot[3]) + (x76 * (*lh_p).Rot[0]));
	const FLT x91 = x80 + (x86 * (*lh_p).Rot[1]) + (-1 * x90 * (*lh_p).Rot[2]);
	const FLT x92 = x72 * x72;
	const FLT x93 = 1. / x92;
	const FLT x94 = x93 * x91;
	const FLT x95 = -1 * x72;
	const FLT x96 = x89 * x89;
	const FLT x97 = 2 * (1. / (x92 + x96)) * x92 * atan2(x89, x95) * (*bsc0).curve;
	const FLT x98 = 2 * (*lh_p).Rot[1];
	const FLT x99 = x83 + (x90 * (*lh_p).Rot[3]) + (-1 * x84 * x98);
	const FLT x100 = x69 + (*lh_p).Pos[1] + (2 * ((x70 * (*lh_p).Rot[3]) + (-1 * x88 * (*lh_p).Rot[1])));
	const FLT x101 = x92 + (x100 * x100);
	const FLT x102 = 1. / x101;
	const FLT x103 = x92 * x102;
	const FLT x104 = (1. / sqrt(x101)) * (*bsc0).tilt;
	const FLT x105 = 2 * x100;
	const FLT x106 = 2 * x72;
	const FLT x107 = 1.0 / 2.0 * x89 * (1. / (x101 * sqrt(x101))) * (*bsc0).tilt;
	const FLT x108 = 1. / sqrt(1 + (-1 * x96 * x102 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x109 = (-1 * x108 * ((-1 * ((x91 * x106) + (x99 * x105)) * x107) + (x87 * x104))) +
					 (-1 * x103 * ((-1 * x94 * x100) + (x73 * x99)));
	const FLT x110 = sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x89 * x104)) +
						 (-1 * atan2(-1 * x100, x95))) *
					 (*bsc0).gibmag;
	const FLT x111 = (x81 * x63) + (-1 * x82);
	const FLT x112 = (-1 * x48) + x44 + (-1 * x42) + (-1 * x46);
	const FLT x113 = x77 * x57;
	const FLT x114 = x113 + (-1 * x75 * x112);
	const FLT x115 = 1 + (x79 * x112) + (-2 * (x57 * x57));
	const FLT x116 = (x115 * (*lh_p).Rot[1]) + (-1 * x111 * (*lh_p).Rot[2]) + (x114 * (*lh_p).Rot[0]);
	const FLT x117 = (x111 * (*lh_p).Rot[3]) + (-1 * x114 * (*lh_p).Rot[1]) + (x115 * (*lh_p).Rot[0]);
	const FLT x118 = 2 * (*lh_p).Rot[3];
	const FLT x119 = x111 + (x85 * x116) + (-1 * x118 * x117);
	const FLT x120 = (x114 * (*lh_p).Rot[2]) + (-1 * x115 * (*lh_p).Rot[3]) + (x111 * (*lh_p).Rot[0]);
	const FLT x121 = x114 + (x98 * x117) + (-1 * x85 * x120);
	const FLT x122 = x93 * x121;
	const FLT x123 = x115 + (x118 * x120) + (-1 * x98 * x116);
	const FLT x124 = (-1 * x108 * ((-1 * ((x106 * x121) + (x105 * x123)) * x107) + (x104 * x119))) +
					 (-1 * x103 * ((-1 * x100 * x122) + (x73 * x123)));
	const FLT x125 = (-1 * x55) + (-1 * x56) + (-1 * x54) + x53;
	const FLT x126 = x78 + (-1 * x79 * x125);
	const FLT x127 = 1 + (x81 * x125) + (-2 * (x63 * x63));
	const FLT x128 = (x79 * x63) + (-1 * x113);
	const FLT x129 = (x128 * (*lh_p).Rot[1]) + (-1 * x126 * (*lh_p).Rot[2]) + (x127 * (*lh_p).Rot[0]);
	const FLT x130 = (x126 * (*lh_p).Rot[3]) + (-1 * x127 * (*lh_p).Rot[1]) + (x128 * (*lh_p).Rot[0]);
	const FLT x131 = x126 + (x85 * x129) + (-1 * x118 * x130);
	const FLT x132 = (x127 * (*lh_p).Rot[2]) + (-1 * x128 * (*lh_p).Rot[3]) + (x126 * (*lh_p).Rot[0]);
	const FLT x133 = x127 + (x98 * x130) + (-1 * x85 * x132);
	const FLT x134 = x93 * x133;
	const FLT x135 = x128 + (x118 * x132) + (-1 * x98 * x129);
	const FLT x136 = (-1 * x108 * ((-1 * ((x106 * x133) + (x105 * x135)) * x107) + (x104 * x131))) +
					 (-1 * x103 * ((-1 * x100 * x134) + (x73 * x135)));
	cnMatrixOptionalSet(Hx, 0, 0, x109 + (((x89 * x94) + (-1 * x87 * x73)) * x97) + (x109 * x110));
	cnMatrixOptionalSet(Hx, 0, 1, x124 + (((x89 * x122) + (-1 * x73 * x119)) * x97) + (x110 * x124));
	cnMatrixOptionalSet(Hx, 0, 2, x136 + (((x89 * x134) + (-1 * x73 * x131)) * x97) + (x110 * x136));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x2 * x11) + (x8 * x7);
	const FLT x14 = x6 * x10;
	const FLT x15 = x4 * x9;
	const FLT x16 = (x2 * x15) + (x8 * x14);
	const FLT x17 = (x2 * x14) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x12 * x18;
	const FLT x20 = x18 * (*_x0).Pose.Rot[2];
	const FLT x21 = x13 * x18;
	const FLT x22 = x18 * x17;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * x16);
	const FLT x24 = dt * dt;
	const FLT x25 = (x0 * x0) * x24;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = x18 * x16;
	const FLT x35 =
		(x22 * (*_x0).Pose.Rot[3]) + (-1 * x19 * (*_x0).Pose.Rot[1]) + (x20 * x13) + (x34 * (*_x0).Pose.Rot[0]);
	const FLT x36 =
		(x34 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) + (-1 * x20 * x17);
	const FLT x37 =
		(x21 * (*_x0).Pose.Rot[1]) + (x20 * x12) + (-1 * x34 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[0]);
	const FLT x38 = (1. / x30) * (x33 * x33);
	const FLT x39 = cos(x32);
	const FLT x40 = (1. / sqrt((x37 * x37) + (x36 * x36) + (x35 * x35) + (x23 * x23))) *
					(1. / sqrt((x38 * x27) + (x39 * x39) + (x38 * x25) + (x38 * x29)));
	const FLT x41 = dt * x40 * (1. / x31) * x33;
	const FLT x42 = x41 * x23;
	const FLT x43 = x41 * x37;
	const FLT x44 = x40 * x39;
	const FLT x45 = x41 * x35;
	const FLT x46 = (x44 * x36) + (x0 * x42) + (x45 * x26) + (-1 * x43 * x28);
	const FLT x47 = x41 * x36;
	const FLT x48 = x41 * x28;
	const FLT x49 = (-1 * x43 * x26) + (-1 * x0 * x47) + (x44 * x23) + (-1 * x48 * x35);
	const FLT x50 = (x42 * x26) + (x44 * x37) + (-1 * x0 * x45) + (x48 * x36);
	const FLT x51 = (-1 * x50 * sensor_pt[2]) + (x46 * sensor_pt[0]) + (x49 * sensor_pt[1]);
	const FLT x52 = (x44 * x35) + (x48 * x23) + (-1 * x47 * x26) + (x0 * x43);
	const FLT x53 = (x49 * sensor_pt[2]) + (-1 * x52 * sensor_pt[0]) + (x50 * sensor_pt[1]);
	const FLT x54 = 2 * ((x53 * x52) + (-1 * x51 * x46));
	const FLT x55 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x56 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x57 = x56 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x58 = x57 + (*error_model).Pose.Pos[0] + x54 + sensor_pt[0] + x55 + (*_x0).Pose.Pos[0];
	const FLT x59 = x58 * (*lh_p).Rot[0];
	const FLT x60 = (-1 * x46 * sensor_pt[1]) + (x52 * sensor_pt[2]) + (x49 * sensor_pt[0]);
	const FLT x61 = 2 * ((x50 * x51) + (-1 * x60 * x52));
	const FLT x62 = x56 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x63 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x64 = (*error_model).Pose.Pos[2] + (*_x0).Pose.Pos[2] + x61 + x62 + sensor_pt[2] + x63;
	const FLT x65 = x64 * (*lh_p).Rot[2];
	const FLT x66 = 2 * ((x60 * x46) + (-1 * x50 * x53));
	const FLT x67 = x56 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x68 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x69 = x66 + (*error_model).Pose.Pos[1] + x67 + sensor_pt[1] + x68 + (*_x0).Pose.Pos[1];
	const FLT x70 = x69 * (*lh_p).Rot[3];
	const FLT x71 = (-1 * x70) + x59 + x65;
	const FLT x72 = x69 * (*lh_p).Rot[0];
	const FLT x73 = x58 * (*lh_p).Rot[3];
	const FLT x74 = x64 * (*lh_p).Rot[1];
	const FLT x75 = (-1 * x74) + x72 + x73;
	const FLT x76 = x64 + (2 * ((x75 * (*lh_p).Rot[1]) + (-1 * x71 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x77 = x76 * x76;
	const FLT x78 = x64 * (*lh_p).Rot[0];
	const FLT x79 = x69 * (*lh_p).Rot[1];
	const FLT x80 = x58 * (*lh_p).Rot[2];
	const FLT x81 = (-1 * x80) + x78 + x79;
	const FLT x82 = x69 + (*lh_p).Pos[1] + (2 * ((x71 * (*lh_p).Rot[3]) + (-1 * x81 * (*lh_p).Rot[1])));
	const FLT x83 = (x82 * x82) + x77;
	const FLT x84 = 1. / x83;
	const FLT x85 = x58 + (*lh_p).Pos[0] + (2 * ((x81 * (*lh_p).Rot[2]) + (-1 * x75 * (*lh_p).Rot[3])));
	const FLT x86 = x85 * x85;
	const FLT x87 = 1. / sqrt(1 + (-1 * x84 * x86 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x88 = (1. / sqrt(x83)) * (*bsc0).tilt;
	const FLT x89 = x88 * x87;
	const FLT x90 = 2 * x76;
	const FLT x91 = -1 * x76;
	const FLT x92 = (1. / (x77 + x86)) * atan2(x85, x91) * (*bsc0).curve;
	const FLT x93 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
										 (-1 * asin(x88 * x85)) + (-1 * atan2(-1 * x82, x91)));
	const FLT x94 = (1. / (x83 * sqrt(x83))) * x85 * (*bsc0).tilt;
	const FLT x95 = x87 * x94;
	const FLT x96 = (x82 * x95) + (-1 * x84 * x76);
	const FLT x97 = 2 * x92;
	const FLT x98 = (x76 * x95) + (x82 * x84);
	const FLT x99 = 1. / x76;
	const FLT x100 = 2 * x70;
	const FLT x101 = (2 * x65) + (-1 * x100);
	const FLT x102 = 2 * x80;
	const FLT x103 = (2 * x79) + (-1 * x102);
	const FLT x104 = 1. / x77;
	const FLT x105 = x85 * x104;
	const FLT x106 = x77 * x97;
	const FLT x107 = 2 * x74;
	const FLT x108 = (2 * x73) + (-1 * x107);
	const FLT x109 = x82 * x104;
	const FLT x110 = x84 * x77;
	const FLT x111 = 2 * x82;
	const FLT x112 = 1.0 / 2.0 * x94;
	const FLT x113 = (-1 * x87 * ((-1 * x112 * ((x90 * x103) + (x108 * x111))) + (x88 * x101))) +
					 (-1 * x110 * ((-1 * x103 * x109) + (x99 * x108)));
	const FLT x114 = (-1 * sensor_pt[2]) + (-1 * x63) + (-1 * x61) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x62) +
					 (-1 * (*error_model).Pose.Pos[2]);
	const FLT x115 = 2 * (*lh_p).Rot[3];
	const FLT x116 = 2 * (*lh_p).Rot[2];
	const FLT x117 = (x69 * x116) + (-1 * x114 * x115);
	const FLT x118 = 2 * x72;
	const FLT x119 = 2 * (*lh_p).Rot[1];
	const FLT x120 = x108 + x118 + (x119 * x114);
	const FLT x121 = 2 * x78;
	const FLT x122 = x102 + (-4 * x79) + (-1 * x121);
	const FLT x123 = (-1 * x87 * ((-1 * x112 * ((x90 * x120) + (x111 * x122))) + (x88 * x117))) +
					 (-1 * x110 * ((-1 * x109 * x120) + (x99 * x122)));
	const FLT x124 = (-1 * (*error_model).Pose.Pos[0]) + (-1 * x54) + (-1 * sensor_pt[0]) + (-1 * (*_x0).Pose.Pos[0]) +
					 (-1 * x55) + (-1 * x57);
	const FLT x125 = x103 + (x116 * x124) + x121;
	const FLT x126 = 2 * x59;
	const FLT x127 = x100 + (-4 * x65) + (-1 * x126);
	const FLT x128 = (x64 * x115) + (-1 * x119 * x124);
	const FLT x129 = (-1 * x87 * ((-1 * x112 * ((x90 * x127) + (x111 * x128))) + (x88 * x125))) +
					 (-1 * x110 * ((-1 * x109 * x127) + (x99 * x128)));
	const FLT x130 = x107 + (-1 * x118) + (-4 * x73);
	const FLT x131 = (-1 * x66) + (-1 * x67) + (-1 * (*error_model).Pose.Pos[1]) + (-1 * sensor_pt[1]) + (-1 * x68) +
					 (-1 * (*_x0).Pose.Pos[1]);
	const FLT x132 = (x58 * x119) + (-1 * x116 * x131);
	const FLT x133 = x101 + (x115 * x131) + x126;
	const FLT x134 = (-1 * x87 * ((-1 * x112 * ((x90 * x132) + (x111 * x133))) + (x88 * x130))) +
					 (-1 * x110 * ((-1 * x109 * x132) + (x99 * x133)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						(-1 * x89 * x93) + (-1 * x89) + (-1 * x92 * x90));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), x96 + (x93 * x96));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x98 + (x85 * x97) + (x93 * x98));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(x106 * ((x103 * x105) + (-1 * x99 * x101))) + x113 + (x93 * x113));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x123 + (x106 * ((x105 * x120) + (-1 * x99 * x117))) + (x93 * x123));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x129 + (x106 * ((x105 * x127) + (-1 * x99 * x125))) + (x93 * x129));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x134 + (x106 * ((x105 * x132) + (-1 * x99 * x130))) + (x93 * x134));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae1bac0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae1bb80>, <cnkalman.codegen.WrapMember object at 0x7f5abae1bb20>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae1bc40>, <cnkalman.codegen.WrapMember object at 0x7f5abae1bbe0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae1b8b0>, <cnkalman.codegen.WrapMember object at 0x7f5abae1ba60>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (-1 * x6 * x7);
	const FLT x13 = x5 * x9;
	const FLT x14 = x3 * x8;
	const FLT x15 = (x7 * x14) + (x1 * x13);
	const FLT x16 = (x7 * x13) + (-1 * x1 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x12 * x12) + (x11 * x11));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x17 * x16;
	const FLT x20 = x12 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 =
		(x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (x11 * x18) + (-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x24 = dt * dt;
	const FLT x25 = x24 * (x23 * x23);
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = x11 * x17;
	const FLT x35 =
		(-1 * x20 * (*_x0).Pose.Rot[1]) + (x18 * x16) + (x34 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[0]);
	const FLT x36 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x34 * (*_x0).Pose.Rot[0]) + (-1 * x12 * x18) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x37 =
		(x34 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[2]) + (-1 * x15 * x18) + (x19 * (*_x0).Pose.Rot[0]);
	const FLT x38 = (1. / x30) * (x33 * x33);
	const FLT x39 = cos(x32);
	const FLT x40 = (1. / sqrt((x37 * x37) + (x22 * x22) + (x35 * x35) + (x36 * x36))) *
					(1. / sqrt((x38 * x27) + (x39 * x39) + (x38 * x25) + (x38 * x29)));
	const FLT x41 = dt * x40 * (1. / x31) * x33;
	const FLT x42 = x41 * x23;
	const FLT x43 = x41 * x35;
	const FLT x44 = x40 * x39;
	const FLT x45 = x41 * x37;
	const FLT x46 = (x44 * x36) + (-1 * x42 * x22) + (-1 * x45 * x26) + (-1 * x43 * x28);
	const FLT x47 = x41 * x22;
	const FLT x48 = x41 * x36;
	const FLT x49 = (x48 * x26) + (-1 * x42 * x35) + (x44 * x37) + (x47 * x28);
	const FLT x50 = (x44 * x35) + (-1 * x47 * x26) + (x48 * x28) + (x45 * x23);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x46 * sensor_pt[2]) + (x49 * sensor_pt[1]);
	const FLT x52 = (x43 * x26) + (x44 * x22) + (x42 * x36) + (-1 * x45 * x28);
	const FLT x53 = (-1 * x52 * sensor_pt[1]) + (x50 * sensor_pt[2]) + (x46 * sensor_pt[0]);
	const FLT x54 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x55 = (*error_model).Pose.Pos[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					sensor_pt[1] + (2 * ((x53 * x52) + (-1 * x51 * x49))) +
					(x54 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x56 = (-1 * x49 * sensor_pt[2]) + (x52 * sensor_pt[0]) + (x46 * sensor_pt[1]);
	const FLT x57 = (x54 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (2 * ((x50 * x51) + (-1 * x52 * x56))) +
					sensor_pt[0] + (dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) +
					(*error_model).Pose.Pos[0] + (*_x0).Pose.Pos[0];
	const FLT x58 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x54 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					sensor_pt[2] + (2 * ((x56 * x49) + (-1 * x50 * x53))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x59 = (-1 * x58 * (*lh_p).Rot[1]) + (x55 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[3]);
	const FLT x60 = (-1 * x57 * (*lh_p).Rot[2]) + (x58 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[1]);
	const FLT x61 = x57 + (*lh_p).Pos[0] + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x59 * (*lh_p).Rot[3])));
	const FLT x62 = (-1 * x55 * (*lh_p).Rot[3]) + (x57 * (*lh_p).Rot[0]) + (x58 * (*lh_p).Rot[2]);
	const FLT x63 = x58 + (2 * ((x59 * (*lh_p).Rot[1]) + (-1 * x62 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x64 = -1 * x63;
	const FLT x65 = x55 + (*lh_p).Pos[1] + (2 * ((x62 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x66 = (x65 * x65) + (x63 * x63);
	const FLT x67 = x61 * (1. / sqrt(x66));
	const FLT x68 = 1.5707963267949 + (-1 * asin(x67 * (*bsc0).tilt)) + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
					(-1 * atan2(-1 * x65, x64));
	const FLT x69 = sin(x68) * (*bsc0).gibmag;
	const FLT x70 = x67 * (1. / sqrt(1 + (-1 * (x61 * x61) * (1. / x66) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), atan2(x61, x64) * atan2(x61, x64));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), -1 * cos(x68));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x69);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase) / sizeof(FLT), -1 + (-1 * x69));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x70 * x69) + (-1 * x70));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae1bac0>, <cnkalman.codegen.WrapMember object at 0x7f5abae1bb80>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae1bb20>, <cnkalman.codegen.WrapMember object at 0x7f5abae1bc40>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae1bbe0>, <cnkalman.codegen.WrapMember object at 0x7f5abae1b8b0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae1ba60>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_x_gen2(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x2 * x15) + (x4 * x11);
	const FLT x17 = (x4 * x13) + (-1 * x15 * x10);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x12 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x14 * x18;
	const FLT x22 = x18 * x17;
	const FLT x23 = (x21 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x22 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x24 = dt * dt;
	const FLT x25 = (x0 * x0) * x24;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[2]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x36 * x36) + (x35 * x35) + (x34 * x34) + (x23 * x23))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x36;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x34;
	const FLT x45 = (x43 * x35) + (x44 * x26) + (x0 * x41) + (-1 * x42 * x28);
	const FLT x46 = x40 * x35;
	const FLT x47 = (-1 * x42 * x26) + (x43 * x23) + (-1 * x0 * x46) + (-1 * x44 * x28);
	const FLT x48 = (x41 * x26) + (x43 * x36) + (-1 * x0 * x44) + (x46 * x28);
	const FLT x49 = (-1 * x48 * sensor_pt[2]) + (x45 * sensor_pt[0]) + (x47 * sensor_pt[1]);
	const FLT x50 = (-1 * x46 * x26) + (x43 * x34) + (x41 * x28) + (x0 * x42);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x47 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = (2 * ((x50 * x51) + (-1 * x45 * x49))) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(x52 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x54 = (-1 * x45 * sensor_pt[1]) + (x50 * sensor_pt[2]) + (x47 * sensor_pt[0]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x52 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x50 * x54))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x56 = (2 * ((x54 * x45) + (-1 * x51 * x48))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x52 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x57 = (-1 * x56 * (*lh_p).Rot[3]) + (x53 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x58 = (-1 * x55 * (*lh_p).Rot[1]) + (x56 * (*lh_p).Rot[0]) + (x53 * (*lh_p).Rot[3]);
	const FLT x59 = x55 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x57 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x60 = (-1 * x53 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x61 = (*lh_p).Pos[0] + x53 + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = atan2(-1 * x59, x61);
	const FLT x63 = (*lh_p).Pos[1] + x56 + (2 * ((x57 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x64 = (x61 * x61) + (x59 * x59);
	const FLT x65 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x66 = cos(x65);
	const FLT x67 = asin(x63 * (1. / x66) * (1. / sqrt(x64 + (x63 * x63))));
	const FLT x68 = 0.0028679863 + (x67 * (-8.0108022e-06 + (-8.0108022e-06 * x67)));
	const FLT x69 = 5.3685255e-06 + (x67 * x68);
	const FLT x70 = 0.0076069798 + (x67 * x69);
	const FLT x71 = x63 * (1. / sqrt(x64)) * tan(x65);
	const FLT x72 = ((*bsc0).ogeemag * sin((-1 * asin(x71)) + (*bsc0).ogeephase + x62)) + (*bsc0).curve;
	const FLT x73 =
		(-1 *
		 asin(x71 + (x70 * x72 * (x67 * x67) *
					 (1. / (x66 + (-1 * x72 * sin(x65) *
								   ((x67 * (x70 + (x67 * (x69 + (x67 * (x68 + (x67 * (-8.0108022e-06 +
																					  (-1.60216044e-05 * x67))))))))) +
									(x70 * x67)))))))) +
		x62;
	return -1.5707963267949 + x73 + (sin(x73 + (*bsc0).gibpha) * (*bsc0).gibmag) + (-1 * (*bsc0).phase);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae1f580>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = dt * dt;
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x3 = x2 * x2;
	const FLT x4 = x1 * x3;
	const FLT x5 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x6 = x5 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = x0 * x0;
	const FLT x9 = x1 * x8;
	const FLT x10 = 1e-10 + x9 + x4 + x7;
	const FLT x11 = sqrt(x10);
	const FLT x12 = 0.5 * x11;
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * (1. / x11);
	const FLT x15 = dt * x14;
	const FLT x16 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x17 = sin(x16);
	const FLT x18 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x19 = sin(x18);
	const FLT x20 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x21 = cos(x20);
	const FLT x22 = x21 * x19;
	const FLT x23 = cos(x18);
	const FLT x24 = sin(x20);
	const FLT x25 = cos(x16);
	const FLT x26 = x24 * x25;
	const FLT x27 = (x23 * x26) + (-1 * x22 * x17);
	const FLT x28 = x24 * x17;
	const FLT x29 = x23 * x21;
	const FLT x30 = (x25 * x29) + (x28 * x19);
	const FLT x31 = (x25 * x22) + (x23 * x28);
	const FLT x32 = (x29 * x17) + (-1 * x26 * x19);
	const FLT x33 = 1. / sqrt((x31 * x31) + (x32 * x32) + (x27 * x27) + (x30 * x30));
	const FLT x34 = x30 * x33;
	const FLT x35 = x33 * (*_x0).Pose.Rot[0];
	const FLT x36 = x32 * x33;
	const FLT x37 = x33 * x27;
	const FLT x38 =
		(x36 * (*_x0).Pose.Rot[3]) + (-1 * x37 * (*_x0).Pose.Rot[1]) + (x34 * (*_x0).Pose.Rot[2]) + (x31 * x35);
	const FLT x39 = x31 * x33;
	const FLT x40 = (x30 * x35) + (-1 * x37 * (*_x0).Pose.Rot[3]) + (-1 * x36 * (*_x0).Pose.Rot[1]) +
					(-1 * x39 * (*_x0).Pose.Rot[2]);
	const FLT x41 =
		(x39 * (*_x0).Pose.Rot[1]) + (x35 * x27) + (x34 * (*_x0).Pose.Rot[3]) + (-1 * x36 * (*_x0).Pose.Rot[2]);
	const FLT x42 = (x34 * (*_x0).Pose.Rot[1]) + (x37 * (*_x0).Pose.Rot[2]) + (-1 * x39 * (*_x0).Pose.Rot[3]) +
					(x36 * (*_x0).Pose.Rot[0]);
	const FLT x43 = (x42 * x42) + (x41 * x41) + (x38 * x38) + (x40 * x40);
	const FLT x44 = 1. / sqrt(x43);
	const FLT x45 = x13 * x13;
	const FLT x46 = 1. / x10;
	const FLT x47 = x45 * x46;
	const FLT x48 = cos(x12);
	const FLT x49 = (x7 * x47) + (x48 * x48) + (x4 * x47) + (x9 * x47);
	const FLT x50 = 1. / sqrt(x49);
	const FLT x51 = x50 * x40;
	const FLT x52 = x51 * x44;
	const FLT x53 = x52 * x15;
	const FLT x54 = x50 * x44;
	const FLT x55 = x54 * x15;
	const FLT x56 = x55 * x42;
	const FLT x57 = x44 * x48;
	const FLT x58 = x50 * x57;
	const FLT x59 = x58 * x38;
	const FLT x60 = x54 * x41;
	const FLT x61 = x60 * x15;
	const FLT x62 = x59 + (-1 * x5 * x61) + (x0 * x53) + (x2 * x56);
	const FLT x63 = x55 * x38;
	const FLT x64 = x51 * x57;
	const FLT x65 = x64 + (-1 * x2 * x61) + (-1 * x5 * x56) + (-1 * x0 * x63);
	const FLT x66 = x58 * x41;
	const FLT x67 = (x5 * x63) + x66 + (x2 * x53) + (-1 * x0 * x56);
	const FLT x68 = (-1 * x67 * sensor_pt[1]) + (x62 * sensor_pt[2]) + (x65 * sensor_pt[0]);
	const FLT x69 = x58 * x42;
	const FLT x70 = x69 + (-1 * x2 * x63) + (x5 * x53) + (x0 * x61);
	const FLT x71 = (-1 * x70 * sensor_pt[2]) + (x67 * sensor_pt[0]) + (x65 * sensor_pt[1]);
	const FLT x72 = dt * fabs(dt);
	const FLT x73 = 1.0 / 2.0 * x72;
	const FLT x74 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x71 * x70) + (-1 * x62 * x68))) +
					(x73 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x75 = (-1 * x62 * sensor_pt[0]) + (x65 * sensor_pt[2]) + (x70 * sensor_pt[1]);
	const FLT x76 = (2 * ((x67 * x68) + (-1 * x70 * x75))) + (*error_model).Pose.Pos[1] +
					(x73 * ((*_x0).Acc[1] + (*error_model).Acc[1])) +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(*_x0).Pose.Pos[1];
	const FLT x77 = (2 * ((x75 * x62) + (-1 * x71 * x67))) + sensor_pt[0] +
					(x73 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*error_model).Pose.Pos[0] +
					(*_x0).Pose.Pos[0];
	const FLT x78 = (-1 * x77 * (*lh_p).Rot[2]) + (x74 * (*lh_p).Rot[0]) + (x76 * (*lh_p).Rot[1]);
	const FLT x79 = (-1 * x76 * (*lh_p).Rot[3]) + (x77 * (*lh_p).Rot[0]) + (x74 * (*lh_p).Rot[2]);
	const FLT x80 = x76 + (*lh_p).Pos[1] + (2 * ((x79 * (*lh_p).Rot[3]) + (-1 * x78 * (*lh_p).Rot[1])));
	const FLT x81 = x80 * x80;
	const FLT x82 = (-1 * x74 * (*lh_p).Rot[1]) + (x76 * (*lh_p).Rot[0]) + (x77 * (*lh_p).Rot[3]);
	const FLT x83 = x74 + (2 * ((x82 * (*lh_p).Rot[1]) + (-1 * x79 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x84 = (*lh_p).Pos[0] + x77 + (2 * ((x78 * (*lh_p).Rot[2]) + (-1 * x82 * (*lh_p).Rot[3])));
	const FLT x85 = x84 * x84;
	const FLT x86 = x85 + (x83 * x83);
	const FLT x87 = x86 + x81;
	const FLT x88 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x89 = cos(x88);
	const FLT x90 = 1. / x89;
	const FLT x91 = (1. / sqrt(x87)) * x90;
	const FLT x92 = asin(x80 * x91);
	const FLT x93 = 8.0108022e-06 * x92;
	const FLT x94 = -8.0108022e-06 + (-1 * x93);
	const FLT x95 = 0.0028679863 + (x92 * x94);
	const FLT x96 = 5.3685255e-06 + (x92 * x95);
	const FLT x97 = 0.0076069798 + (x92 * x96);
	const FLT x98 = x92 * x97;
	const FLT x99 = -8.0108022e-06 + (-1.60216044e-05 * x92);
	const FLT x100 = x95 + (x92 * x99);
	const FLT x101 = x96 + (x92 * x100);
	const FLT x102 = x97 + (x92 * x101);
	const FLT x103 = (x92 * x102) + x98;
	const FLT x104 = sin(x88);
	const FLT x105 = atan2(-1 * x83, x84);
	const FLT x106 = tan(x88);
	const FLT x107 = (1. / sqrt(x86)) * x106;
	const FLT x108 = x80 * x107;
	const FLT x109 = (-1 * asin(x108)) + (*bsc0).ogeephase + x105;
	const FLT x110 = (sin(x109) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x111 = x104 * x110;
	const FLT x112 = x89 + (-1 * x103 * x111);
	const FLT x113 = 1. / x112;
	const FLT x114 = x92 * x92;
	const FLT x115 = x110 * x114;
	const FLT x116 = x113 * x115;
	const FLT x117 = x108 + (x97 * x116);
	const FLT x118 = 1. / sqrt(1 + (-1 * (x117 * x117)));
	const FLT x119 = 1. / sqrt(1 + (-1 * x81 * (1. / (x89 * x89)) * (1. / x87)));
	const FLT x120 = x72 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x121 = x72 * (*lh_p).Rot[3];
	const FLT x122 = x121 * (*lh_p).Rot[0];
	const FLT x123 = x122 + x120;
	const FLT x124 = 2 * x80;
	const FLT x125 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x126 = -1 * x72 * x125;
	const FLT x127 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x128 = (-1 * x72 * x127) + x73;
	const FLT x129 = x128 + x126;
	const FLT x130 = 2 * x84;
	const FLT x131 = x72 * (*lh_p).Rot[0];
	const FLT x132 = x131 * (*lh_p).Rot[2];
	const FLT x133 = x121 * (*lh_p).Rot[1];
	const FLT x134 = x133 + (-1 * x132);
	const FLT x135 = 2 * x83;
	const FLT x136 = (x134 * x135) + (x129 * x130);
	const FLT x137 = 1.0 / 2.0 * x80;
	const FLT x138 = (1. / (x87 * sqrt(x87))) * x90 * x137;
	const FLT x139 = x119 * ((-1 * x138 * (x136 + (x124 * x123))) + (x91 * x123));
	const FLT x140 = 2 * x98 * x110 * x113;
	const FLT x141 = x94 * x139;
	const FLT x142 = 2.40324066e-05 * x92;
	const FLT x143 = (x95 * x139) + (x92 * (x141 + (-1 * x93 * x139)));
	const FLT x144 = (x96 * x139) + (x92 * x143);
	const FLT x145 = 1. / x86;
	const FLT x146 = 1. / sqrt(1 + (-1 * x81 * (x106 * x106) * x145));
	const FLT x147 = (1. / (x86 * sqrt(x86))) * x106 * x137;
	const FLT x148 = (-1 * x136 * x147) + (x107 * x123);
	const FLT x149 = x83 * (1. / x85);
	const FLT x150 = 1. / x84;
	const FLT x151 = x85 * x145;
	const FLT x152 = ((-1 * x134 * x150) + (x129 * x149)) * x151;
	const FLT x153 = x152 + (-1 * x146 * x148);
	const FLT x154 = cos(x109) * (*bsc0).ogeemag;
	const FLT x155 = x103 * x104;
	const FLT x156 = x154 * x155;
	const FLT x157 = x97 * (1. / (x112 * x112)) * x115;
	const FLT x158 = x97 * x113 * x114;
	const FLT x159 = x154 * x158;
	const FLT x160 =
		x152 + (-1 * x118 *
				((x116 * x144) + x148 + (x153 * x159) + (x139 * x140) +
				 (-1 * x157 *
				  ((-1 * x153 * x156) +
				   (-1 * x111 *
					((x92 * x144) + (x97 * x139) +
					 (x92 * (x144 + (x101 * x139) +
							 (x92 * (x143 + (x100 * x139) + (x92 * (x141 + (-1 * x139 * x142) + (x99 * x139))))))) +
					 (x102 * x139)))))));
	const FLT x161 = cos((-1 * asin(x117)) + (*bsc0).gibpha + x105) * (*bsc0).gibmag;
	const FLT x162 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x163 = -1 * x72 * x162;
	const FLT x164 = x126 + x163 + x73;
	const FLT x165 = x120 + (-1 * x122);
	const FLT x166 = x121 * (*lh_p).Rot[2];
	const FLT x167 = x131 * (*lh_p).Rot[1];
	const FLT x168 = x167 + x166;
	const FLT x169 = (x168 * x135) + (x165 * x130);
	const FLT x170 = (-1 * x138 * (x169 + (x124 * x164))) + (x91 * x164);
	const FLT x171 = x119 * x170;
	const FLT x172 = x101 * x119;
	const FLT x173 = x100 * x119;
	const FLT x174 = x94 * x171;
	const FLT x175 = (x95 * x171) + (x92 * (x174 + (-1 * x93 * x171)));
	const FLT x176 = (x96 * x171) + (x92 * x175);
	const FLT x177 = (-1 * x169 * x147) + (x107 * x164);
	const FLT x178 = ((-1 * x168 * x150) + (x165 * x149)) * x151;
	const FLT x179 = x178 + (-1 * x177 * x146);
	const FLT x180 =
		x178 + (-1 * x118 *
				((x171 * x140) + (x179 * x159) +
				 (-1 * x157 *
				  ((-1 * x179 * x156) +
				   (-1 * x111 *
					((x92 * x176) + (x97 * x171) + (x102 * x171) +
					 (x92 * ((x170 * x172) + x176 +
							 (x92 * (x175 + (x170 * x173) + (x92 * ((-1 * x171 * x142) + x174 + (x99 * x171))))))))))) +
				 x177 + (x116 * x176)));
	const FLT x181 = x166 + (-1 * x167);
	const FLT x182 = x132 + x133;
	const FLT x183 = x128 + x163;
	const FLT x184 = (x183 * x135) + (x182 * x130);
	const FLT x185 = (-1 * x138 * (x184 + (x124 * x181))) + (x91 * x181);
	const FLT x186 = x119 * x185;
	const FLT x187 = x94 * x186;
	const FLT x188 = x95 * x119;
	const FLT x189 = (x188 * x185) + (x92 * (x187 + (-1 * x93 * x186)));
	const FLT x190 = x96 * x119;
	const FLT x191 = (x185 * x190) + (x92 * x189);
	const FLT x192 = x97 * x119;
	const FLT x193 = x102 * x119;
	const FLT x194 = (-1 * x184 * x147) + (x107 * x181);
	const FLT x195 = ((-1 * x183 * x150) + (x182 * x149)) * x151;
	const FLT x196 = x195 + (-1 * x194 * x146);
	const FLT x197 =
		x195 + (-1 * x118 *
				((x196 * x159) + (x186 * x140) + (x116 * x191) + x194 +
				 (-1 * x157 *
				  ((-1 * x196 * x156) +
				   (-1 * x111 *
					((x92 * x191) + (x185 * x193) +
					 (x92 * ((x172 * x185) + x191 +
							 (x92 * (x189 + (x173 * x185) + (x92 * ((-1 * x186 * x142) + x187 + (x99 * x186))))))) +
					 (x185 * x192)))))));
	const FLT x198 = 2 * (*lh_p).Rot[1];
	const FLT x199 = x198 * (*lh_p).Rot[2];
	const FLT x200 = 2 * (*lh_p).Rot[3];
	const FLT x201 = x200 * (*lh_p).Rot[0];
	const FLT x202 = x201 + x199;
	const FLT x203 = 2 * x125;
	const FLT x204 = -1 * x203;
	const FLT x205 = 2 * x127;
	const FLT x206 = -1 * x205;
	const FLT x207 = 1 + x206 + x204;
	const FLT x208 = 2 * (*lh_p).Rot[2];
	const FLT x209 = x208 * (*lh_p).Rot[0];
	const FLT x210 = x200 * (*lh_p).Rot[1];
	const FLT x211 = x210 + (-1 * x209);
	const FLT x212 = (x211 * x135) + (x207 * x130);
	const FLT x213 = (-1 * x138 * (x212 + (x202 * x124))) + (x91 * x202);
	const FLT x214 = x93 * x119;
	const FLT x215 = x94 * x119;
	const FLT x216 = x213 * x215;
	const FLT x217 = (x213 * x188) + (x92 * (x216 + (-1 * x213 * x214)));
	const FLT x218 = (x213 * x190) + (x92 * x217);
	const FLT x219 = x119 * x140;
	const FLT x220 = x99 * x119;
	const FLT x221 = x119 * x142;
	const FLT x222 = (-1 * x212 * x147) + (x202 * x107);
	const FLT x223 = ((-1 * x211 * x150) + (x207 * x149)) * x151;
	const FLT x224 = x223 + (-1 * x222 * x146);
	const FLT x225 =
		x223 + (-1 * x118 *
				(x222 + (x218 * x116) + (x224 * x159) +
				 (-1 * x157 *
				  ((-1 * x224 * x156) +
				   (-1 * x111 *
					((x92 * (x218 + (x213 * x172) +
							 (x92 * (x217 + (x213 * x173) + (x92 * ((x213 * x220) + (-1 * x213 * x221) + x216)))))) +
					 (x92 * x218) + (x213 * x192) + (x213 * x193))))) +
				 (x213 * x219)));
	const FLT x226 = 2 * x162;
	const FLT x227 = 1 + (-1 * x226);
	const FLT x228 = x227 + x204;
	const FLT x229 = x199 + (-1 * x201);
	const FLT x230 = x200 * (*lh_p).Rot[2];
	const FLT x231 = x198 * (*lh_p).Rot[0];
	const FLT x232 = x231 + x230;
	const FLT x233 = (x232 * x135) + (x229 * x130);
	const FLT x234 = (-1 * x138 * (x233 + (x228 * x124))) + (x91 * x228);
	const FLT x235 = x215 * x234;
	const FLT x236 = (x234 * x188) + (x92 * (x235 + (-1 * x214 * x234)));
	const FLT x237 = (x234 * x190) + (x92 * x236);
	const FLT x238 = (-1 * x233 * x147) + (x228 * x107);
	const FLT x239 = ((-1 * x232 * x150) + (x229 * x149)) * x151;
	const FLT x240 = x239 + (-1 * x238 * x146);
	const FLT x241 =
		x239 +
		(-1 * x118 *
		 ((x240 * x159) + (x237 * x116) + x238 +
		  (-1 * x157 *
		   ((-1 * x240 * x156) +
			(-1 * x111 *
			 ((x92 * x237) + (x234 * x192) + (x234 * x193) +
			  (x92 * (x237 + (x234 * x172) +
					  (x92 * (x236 + (x234 * x173) + (x92 * ((-1 * x234 * x221) + x235 + (x234 * x220))))))))))) +
		  (x219 * x234)));
	const FLT x242 = x230 + (-1 * x231);
	const FLT x243 = x209 + x210;
	const FLT x244 = x227 + x206;
	const FLT x245 = (x244 * x135) + (x243 * x130);
	const FLT x246 = (-1 * x138 * (x245 + (x242 * x124))) + (x91 * x242);
	const FLT x247 = x246 * x119;
	const FLT x248 = x94 * x247;
	const FLT x249 = (x246 * x188) + (x92 * (x248 + (-1 * x93 * x247)));
	const FLT x250 = (x96 * x247) + (x92 * x249);
	const FLT x251 = (-1 * x245 * x147) + (x242 * x107);
	const FLT x252 = ((-1 * x244 * x150) + (x243 * x149)) * x151;
	const FLT x253 = x252 + (-1 * x251 * x146);
	const FLT x254 =
		x252 + (-1 * x118 *
				(x251 + (x253 * x159) + (x250 * x116) + (x247 * x140) +
				 (-1 * x157 *
				  ((-1 * x253 * x156) +
				   (-1 * x111 *
					((x92 * x250) + (x97 * x247) +
					 (x92 * (x250 + (x246 * x172) +
							 (x92 * (x249 + (x246 * x173) + (x92 * (x248 + (-1 * x247 * x142) + (x99 * x247))))))) +
					 (x246 * x193)))))));
	const FLT x255 = 2 * x36;
	const FLT x256 = 2 * x37;
	const FLT x257 = 2 * x39;
	const FLT x258 = 2 * x34;
	const FLT x259 = (x40 * x258) + (x38 * x257) + (x42 * x255) + (x41 * x256);
	const FLT x260 = x50 * x259;
	const FLT x261 = 1. / (x43 * sqrt(x43));
	const FLT x262 = 1.0 / 2.0 * x261;
	const FLT x263 = x41 * x262;
	const FLT x264 = x263 * x260;
	const FLT x265 = x5 * x15;
	const FLT x266 = x48 * x261;
	const FLT x267 = 1.0 / 2.0 * x266;
	const FLT x268 = x38 * x267;
	const FLT x269 = x0 * x15;
	const FLT x270 = x51 * x262;
	const FLT x271 = x270 * x259;
	const FLT x272 = x58 * x39;
	const FLT x273 = x55 * x36;
	const FLT x274 = x2 * x273;
	const FLT x275 = 1.0 / 2.0 * x42;
	const FLT x276 = x2 * x15;
	const FLT x277 = x276 * x275;
	const FLT x278 = x277 * x261;
	const FLT x279 = x55 * x37;
	const FLT x280 = -1 * x5 * x279;
	const FLT x281 = x55 * x34;
	const FLT x282 = x0 * x281;
	const FLT x283 = x282 + x280;
	const FLT x284 = x283 + (-1 * x278 * x260) + (-1 * x268 * x260) + x272 + (x264 * x265) + (-1 * x271 * x269) + x274;
	const FLT x285 = x51 * x267;
	const FLT x286 = x2 * x279;
	const FLT x287 = -1 * x286;
	const FLT x288 = x275 * x261;
	const FLT x289 = x265 * x288;
	const FLT x290 = x55 * x39;
	const FLT x291 = x0 * x290;
	const FLT x292 = -1 * x291;
	const FLT x293 = x38 * x262;
	const FLT x294 = x293 * x260;
	const FLT x295 = x5 * x273;
	const FLT x296 = x58 * x34;
	const FLT x297 = x296 + (-1 * x295);
	const FLT x298 = (x294 * x269) + x297 + (x276 * x264) + (-1 * x285 * x259) + (x260 * x289) + x287 + x292;
	const FLT x299 = x58 * x36;
	const FLT x300 = x0 * x279;
	const FLT x301 = x275 * x266;
	const FLT x302 = -1 * x2 * x290;
	const FLT x303 = x5 * x55;
	const FLT x304 = x34 * x303;
	const FLT x305 = x304 + x302;
	const FLT x306 = x305 + (-1 * x269 * x264) + x300 + x299 + (-1 * x260 * x301) + (-1 * x271 * x265) + (x276 * x294);
	const FLT x307 = (x306 * sensor_pt[1]) + (-1 * x284 * sensor_pt[0]) + (x298 * sensor_pt[2]);
	const FLT x308 = 2 * x62;
	const FLT x309 = x58 * x37;
	const FLT x310 = x2 * x281;
	const FLT x311 = x41 * x267;
	const FLT x312 = -1 * x0 * x273;
	const FLT x313 = x39 * x303;
	const FLT x314 = x313 + x312;
	const FLT x315 =
		x314 + x310 + x309 + (x269 * x260 * x288) + (-1 * x294 * x265) + (-1 * x276 * x271) + (-1 * x260 * x311);
	const FLT x316 = (x298 * sensor_pt[1]) + (-1 * x306 * sensor_pt[2]) + (x315 * sensor_pt[0]);
	const FLT x317 = 2 * x67;
	const FLT x318 = 2 * x71;
	const FLT x319 = 2 * x75;
	const FLT x320 = (-1 * x315 * x318) + (x307 * x308) + (x284 * x319) + (-1 * x317 * x316);
	const FLT x321 = (-1 * x315 * sensor_pt[1]) + (x298 * sensor_pt[0]) + (x284 * sensor_pt[2]);
	const FLT x322 = 2 * x68;
	const FLT x323 = 2 * x70;
	const FLT x324 = (x306 * x318) + (x323 * x316) + (-1 * x308 * x321) + (-1 * x284 * x322);
	const FLT x325 = (x315 * x322) + (-1 * x307 * x323) + (x321 * x317) + (-1 * x306 * x319);
	const FLT x326 = (x325 * (*lh_p).Rot[1]) + (-1 * x320 * (*lh_p).Rot[2]) + (x324 * (*lh_p).Rot[0]);
	const FLT x327 = (x324 * (*lh_p).Rot[2]) + (-1 * x325 * (*lh_p).Rot[3]) + (x320 * (*lh_p).Rot[0]);
	const FLT x328 = (-1 * x326 * x198) + x325 + (x200 * x327);
	const FLT x329 = (x320 * (*lh_p).Rot[3]) + (x325 * (*lh_p).Rot[0]) + (-1 * x324 * (*lh_p).Rot[1]);
	const FLT x330 = x320 + (x208 * x326) + (-1 * x200 * x329);
	const FLT x331 = (-1 * x208 * x327) + x324 + (x329 * x198);
	const FLT x332 = (x331 * x135) + (x330 * x130);
	const FLT x333 = (-1 * x138 * (x332 + (x328 * x124))) + (x91 * x328);
	const FLT x334 = x333 * x119;
	const FLT x335 = x94 * x334;
	const FLT x336 = (x95 * x334) + (x92 * (x335 + (-1 * x93 * x334)));
	const FLT x337 = (x96 * x334) + (x92 * x336);
	const FLT x338 = (-1 * x332 * x147) + (x328 * x107);
	const FLT x339 = ((-1 * x331 * x150) + (x330 * x149)) * x151;
	const FLT x340 = x339 + (-1 * x338 * x146);
	const FLT x341 =
		x339 +
		(-1 * x118 *
		 (x338 + (x337 * x116) + (x334 * x140) + (x340 * x159) +
		  (-1 * x157 *
		   ((-1 * x340 * x156) +
			(-1 * x111 *
			 ((x92 * x337) + (x334 * x102) + (x97 * x334) +
			  (x92 * (x337 + (x333 * x172) +
					  (x92 * (x336 + (x333 * x173) + (x92 * ((-1 * x334 * x142) + (x99 * x334) + x335))))))))))));
	const FLT x342 = -1 * x274;
	const FLT x343 = (-1 * x40 * x255) + (-1 * x38 * x256) + (x42 * x258) + (x41 * x257);
	const FLT x344 = x50 * x343;
	const FLT x345 = x265 * x344;
	const FLT x346 = x270 * x343;
	const FLT x347 = x269 * x344;
	const FLT x348 = (-1 * x282) + x280;
	const FLT x349 = x348 + x342 + x272 + (-1 * x311 * x344) + (-1 * x293 * x345) + (x288 * x347) + (-1 * x276 * x346);
	const FLT x350 = x276 * x344;
	const FLT x351 = -1 * x309;
	const FLT x352 = x312 + (-1 * x313);
	const FLT x353 = x352 + x351 + (x263 * x345) + x310 + (-1 * x268 * x344) + (-1 * x269 * x346) + (-1 * x288 * x350);
	const FLT x354 = -1 * x299;
	const FLT x355 = x302 + (-1 * x304);
	const FLT x356 = x354 + (x288 * x345) + x355 + (x263 * x350) + x300 + (-1 * x285 * x343) + (x293 * x347);
	const FLT x357 = (x356 * sensor_pt[0]) + (-1 * x349 * sensor_pt[1]) + (x353 * sensor_pt[2]);
	const FLT x358 = x297 + (x293 * x350) + (-1 * x301 * x344) + x291 + (-1 * x263 * x347) + (-1 * x265 * x346) + x286;
	const FLT x359 = (x356 * sensor_pt[1]) + (x349 * sensor_pt[0]) + (-1 * x358 * sensor_pt[2]);
	const FLT x360 = (x359 * x323) + (x358 * x318) + (-1 * x357 * x308) + (-1 * x353 * x322);
	const FLT x361 = (-1 * x353 * sensor_pt[0]) + (x358 * sensor_pt[1]) + (x356 * sensor_pt[2]);
	const FLT x362 = (x353 * x319) + (x361 * x308) + (-1 * x359 * x317) + (-1 * x349 * x318);
	const FLT x363 = (x357 * x317) + (-1 * x358 * x319) + (x322 * x349) + (-1 * x361 * x323);
	const FLT x364 = (x360 * (*lh_p).Rot[0]) + (x363 * (*lh_p).Rot[1]) + (-1 * x362 * (*lh_p).Rot[2]);
	const FLT x365 = (x360 * (*lh_p).Rot[2]) + (-1 * x363 * (*lh_p).Rot[3]) + (x362 * (*lh_p).Rot[0]);
	const FLT x366 = x363 + (-1 * x364 * x198) + (x200 * x365);
	const FLT x367 = (x362 * (*lh_p).Rot[3]) + (x363 * (*lh_p).Rot[0]) + (-1 * x360 * (*lh_p).Rot[1]);
	const FLT x368 = (-1 * x200 * x367) + x362 + (x208 * x364);
	const FLT x369 = x360 + (-1 * x208 * x365) + (x367 * x198);
	const FLT x370 = (x369 * x135) + (x368 * x130);
	const FLT x371 = (-1 * x138 * (x370 + (x366 * x124))) + (x91 * x366);
	const FLT x372 = x215 * x371;
	const FLT x373 = (x371 * x188) + (x92 * (x372 + (-1 * x214 * x371)));
	const FLT x374 = (x371 * x190) + (x92 * x373);
	const FLT x375 = (-1 * x370 * x147) + (x366 * x107);
	const FLT x376 = ((-1 * x369 * x150) + (x368 * x149)) * x151;
	const FLT x377 = x376 + (-1 * x375 * x146);
	const FLT x378 =
		x376 + (-1 * x118 *
				(x375 + (x377 * x159) + (x219 * x371) +
				 (-1 * x157 *
				  ((-1 * x377 * x156) +
				   (-1 * x111 *
					((x92 * x374) +
					 (x92 * (x374 + (x371 * x172) +
							 (x92 * (x373 + (x371 * x173) + (x92 * ((-1 * x221 * x371) + x372 + (x220 * x371))))))) +
					 (x371 * x192) + (x371 * x193))))) +
				 (x374 * x116)));
	const FLT x379 = -1 * x300;
	const FLT x380 = (-1 * x40 * x257) + (-1 * x41 * x255) + (x38 * x258) + (x42 * x256);
	const FLT x381 = x50 * x380;
	const FLT x382 = x270 * x380;
	const FLT x383 = x293 * x381;
	const FLT x384 = x288 * x381;
	const FLT x385 = x305 + (x269 * x384) + x354 + x379 + (-1 * x381 * x311) + (-1 * x265 * x383) + (-1 * x276 * x382);
	const FLT x386 = x263 * x381;
	const FLT x387 = x295 + x296;
	const FLT x388 = x387 + (-1 * x278 * x381) + x292 + x286 + (-1 * x268 * x381) + (x265 * x386) + (-1 * x269 * x382);
	const FLT x389 = -1 * x272;
	const FLT x390 = x348 + (x269 * x383) + x274 + (x265 * x384) + (x276 * x386) + x389 + (-1 * x285 * x380);
	const FLT x391 = (x390 * sensor_pt[0]) + (-1 * x385 * sensor_pt[1]) + (x388 * sensor_pt[2]);
	const FLT x392 = -1 * x310;
	const FLT x393 = (-1 * x269 * x386) + (-1 * x381 * x301) + x392 + x352 + (-1 * x265 * x382) + (x276 * x383) + x309;
	const FLT x394 = (x390 * sensor_pt[1]) + (-1 * x393 * sensor_pt[2]) + (x385 * sensor_pt[0]);
	const FLT x395 = (x393 * x318) + (-1 * x391 * x308) + (x394 * x323) + (-1 * x388 * x322);
	const FLT x396 = (x393 * sensor_pt[1]) + (-1 * x388 * sensor_pt[0]) + (x390 * sensor_pt[2]);
	const FLT x397 = (x388 * x319) + (-1 * x385 * x318) + (-1 * x394 * x317) + (x396 * x308);
	const FLT x398 = (-1 * x393 * x319) + (x391 * x317) + (-1 * x396 * x323) + (x385 * x322);
	const FLT x399 = (x398 * (*lh_p).Rot[1]) + (x395 * (*lh_p).Rot[0]) + (-1 * x397 * (*lh_p).Rot[2]);
	const FLT x400 = (x395 * (*lh_p).Rot[2]) + (x397 * (*lh_p).Rot[0]) + (-1 * x398 * (*lh_p).Rot[3]);
	const FLT x401 = x398 + (-1 * x399 * x198) + (x400 * x200);
	const FLT x402 = (x397 * (*lh_p).Rot[3]) + (-1 * x395 * (*lh_p).Rot[1]) + (x398 * (*lh_p).Rot[0]);
	const FLT x403 = x397 + (-1 * x402 * x200) + (x208 * x399);
	const FLT x404 = x395 + (-1 * x400 * x208) + (x402 * x198);
	const FLT x405 = (x404 * x135) + (x403 * x130);
	const FLT x406 = (-1 * x138 * (x405 + (x401 * x124))) + (x91 * x401);
	const FLT x407 = x406 * x119;
	const FLT x408 = x94 * x407;
	const FLT x409 = (x406 * x188) + (x92 * (x408 + (-1 * x93 * x407)));
	const FLT x410 = (x96 * x407) + (x92 * x409);
	const FLT x411 = (-1 * x405 * x147) + (x401 * x107);
	const FLT x412 = ((-1 * x404 * x150) + (x403 * x149)) * x151;
	const FLT x413 = x412 + (-1 * x411 * x146);
	const FLT x414 =
		x412 + (-1 * x118 *
				((x413 * x159) +
				 (-1 * x157 *
				  ((-1 * x413 * x156) +
				   (-1 * x111 *
					((x92 * x410) + (x406 * x193) + (x97 * x407) +
					 (x92 * (x410 + (x406 * x172) +
							 (x92 * (x409 + (x406 * x173) + (x92 * ((-1 * x407 * x142) + x408 + (x99 * x407))))))))))) +
				 (x410 * x116) + x411 + (x407 * x140)));
	const FLT x415 = (-1 * x40 * x256) + (x38 * x255) + (x41 * x258) + (-1 * x42 * x257);
	const FLT x416 = x415 * x270;
	const FLT x417 = x50 * x415;
	const FLT x418 = x417 * x293;
	const FLT x419 = x417 * x269;
	const FLT x420 = x389 + (-1 * x417 * x301) + x283 + (-1 * x416 * x265) + (x418 * x276) + x342 + (-1 * x419 * x263);
	const FLT x421 = x287 + (x419 * x288) + (-1 * x417 * x311) + x387 + (-1 * x418 * x265) + x291 + (-1 * x416 * x276);
	const FLT x422 = x417 * x263;
	const FLT x423 = (x419 * x293) + x392 + (x417 * x289) + x314 + x351 + (-1 * x415 * x285) + (x422 * x276);
	const FLT x424 = (x423 * sensor_pt[1]) + (-1 * x420 * sensor_pt[2]) + (x421 * sensor_pt[0]);
	const FLT x425 = x355 + x299 + (x422 * x265) + (-1 * x417 * x278) + x379 + (-1 * x417 * x268) + (-1 * x416 * x269);
	const FLT x426 = (x420 * sensor_pt[1]) + (-1 * x425 * sensor_pt[0]) + (x423 * sensor_pt[2]);
	const FLT x427 = (x425 * x319) + (x426 * x308) + (-1 * x424 * x317) + (-1 * x421 * x318);
	const FLT x428 = (-1 * x421 * sensor_pt[1]) + (x423 * sensor_pt[0]) + (x425 * sensor_pt[2]);
	const FLT x429 = (-1 * x425 * x322) + (x424 * x323) + (-1 * x428 * x308) + (x420 * x318);
	const FLT x430 = (x428 * x317) + (-1 * x426 * x323) + (x421 * x322) + (-1 * x420 * x319);
	const FLT x431 = (x430 * (*lh_p).Rot[1]) + (-1 * x427 * (*lh_p).Rot[2]) + (x429 * (*lh_p).Rot[0]);
	const FLT x432 = (-1 * x430 * (*lh_p).Rot[3]) + (x429 * (*lh_p).Rot[2]) + (x427 * (*lh_p).Rot[0]);
	const FLT x433 = (-1 * x431 * x198) + x430 + (x432 * x200);
	const FLT x434 = (x427 * (*lh_p).Rot[3]) + (-1 * x429 * (*lh_p).Rot[1]) + (x430 * (*lh_p).Rot[0]);
	const FLT x435 = (-1 * x434 * x200) + x427 + (x431 * x208);
	const FLT x436 = x429 + (-1 * x432 * x208) + (x434 * x198);
	const FLT x437 = (x436 * x135) + (x435 * x130);
	const FLT x438 = (-1 * x138 * (x437 + (x433 * x124))) + (x91 * x433);
	const FLT x439 = x438 * x215;
	const FLT x440 = (x438 * x188) + (x92 * (x439 + (-1 * x438 * x214)));
	const FLT x441 = (x438 * x190) + (x92 * x440);
	const FLT x442 = (-1 * x437 * x147) + (x433 * x107);
	const FLT x443 = ((-1 * x436 * x150) + (x435 * x149)) * x151;
	const FLT x444 = x443 + (-1 * x442 * x146);
	const FLT x445 =
		x443 + (-1 * x118 *
				((-1 * x157 *
				  ((-1 * x444 * x156) +
				   (-1 * x111 *
					((x92 * x441) + (x438 * x192) +
					 (x92 * (x441 + (x438 * x172) +
							 (x92 * (x440 + (x438 * x173) + (x92 * (x439 + (-1 * x438 * x221) + (x438 * x220))))))) +
					 (x438 * x193))))) +
				 (x438 * x219) + (x441 * x116) + x442 + (x444 * x159)));
	const FLT x446 = -1 * x56;
	const FLT x447 = dt * dt * dt;
	const FLT x448 = 0.5 * x46 * x447;
	const FLT x449 = x69 * x448;
	const FLT x450 = 1.0 / 2.0 * x269;
	const FLT x451 = dt * dt * dt * dt;
	const FLT x452 = (x5 * x5 * x5) * x451;
	const FLT x453 = 1.0 * x48;
	const FLT x454 = x13 * (1. / (x10 * sqrt(x10)));
	const FLT x455 = x453 * x454;
	const FLT x456 = x1 * x5;
	const FLT x457 = 2 * x47;
	const FLT x458 = 2 * x45 * (1. / (x10 * x10));
	const FLT x459 = x451 * x458;
	const FLT x460 = x5 * x459;
	const FLT x461 = x451 * x455;
	const FLT x462 = x8 * x461;
	const FLT x463 = x14 * x453;
	const FLT x464 = (-1 * x8 * x460) + (-1 * x456 * x463) + (x456 * x457) + (x452 * x455) + (x5 * x462) +
					 (-1 * x452 * x458) + (-1 * x3 * x460) + (x3 * x5 * x461);
	const FLT x465 = 1. / (x49 * sqrt(x49));
	const FLT x466 = x44 * x465;
	const FLT x467 = x464 * x466;
	const FLT x468 = 1.0 / 2.0 * x276;
	const FLT x469 = x41 * x467;
	const FLT x470 = x59 * x448;
	const FLT x471 = x0 * x5;
	const FLT x472 = x471 * x470;
	const FLT x473 = x57 * x465;
	const FLT x474 = 1.0 / 2.0 * x473;
	const FLT x475 = x40 * x474;
	const FLT x476 = x454 * x447;
	const FLT x477 = x6 * x476;
	const FLT x478 = x54 * x42;
	const FLT x479 = x467 * x275;
	const FLT x480 = 0.5 * x14;
	const FLT x481 = x456 * x480;
	const FLT x482 = x54 * x38;
	const FLT x483 = x5 * x476;
	const FLT x484 = x0 * x483;
	const FLT x485 = x484 * x482;
	const FLT x486 = x66 * x448;
	const FLT x487 = x2 * x486;
	const FLT x488 = x60 * x483;
	const FLT x489 = (x2 * x488) + (-1 * x5 * x487);
	const FLT x490 = (-1 * x52 * x481) + (x479 * x265) + (x477 * x478) + x485 + (-1 * x464 * x475) + (-1 * x6 * x449) +
					 x446 + x489 + (x38 * x450 * x467) + (x469 * x468) + (-1 * x472);
	const FLT x491 = -1 * x61;
	const FLT x492 = x2 * x449;
	const FLT x493 = x5 * x492;
	const FLT x494 = x2 * x478;
	const FLT x495 = x494 * x483;
	const FLT x496 = x40 * x467;
	const FLT x497 = 1.0 / 2.0 * x265;
	const FLT x498 = x38 * x474;
	const FLT x499 = x64 * x448;
	const FLT x500 = (x499 * x471) + (-1 * x52 * x484);
	const FLT x501 = (-1 * x498 * x464) + (x60 * x477) + (-1 * x482 * x481) + (x497 * x469) + x491 +
					 (-1 * x496 * x450) + (-1 * x467 * x277) + (-1 * x6 * x486) + x493 + x500 + (-1 * x495);
	const FLT x502 = x471 * x486;
	const FLT x503 = x2 * x482;
	const FLT x504 = x483 * x503;
	const FLT x505 = x2 * x470;
	const FLT x506 = x5 * x505;
	const FLT x507 = x473 * x275;
	const FLT x508 = x0 * x488;
	const FLT x509 = x38 * x468;
	const FLT x510 = x53 + x502 + (x6 * x499) + x504 + (-1 * x496 * x497) + (-1 * x450 * x469) + (-1 * x508) +
					 (-1 * x506) + (-1 * x464 * x507) + (x467 * x509) + (-1 * x478 * x481) + (-1 * x52 * x477);
	const FLT x511 = (x490 * sensor_pt[2]) + (x510 * sensor_pt[1]) + (-1 * x501 * sensor_pt[0]);
	const FLT x512 = x41 * x474;
	const FLT x513 = x38 * x497;
	const FLT x514 = (x478 * x484) + (-1 * x471 * x449);
	const FLT x515 = x2 * x499;
	const FLT x516 = x2 * x52;
	const FLT x517 = (-1 * x483 * x516) + (x5 * x515);
	const FLT x518 = (-1 * x467 * x513) + x63 + x514 + (x479 * x269) + (x6 * x470) + x517 + (-1 * x60 * x481) +
					 (-1 * x477 * x482) + (-1 * x496 * x468) + (-1 * x464 * x512);
	const FLT x519 = (x490 * sensor_pt[0]) + (-1 * x518 * sensor_pt[1]) + (x501 * sensor_pt[2]);
	const FLT x520 = (x518 * x322) + (-1 * x511 * x323) + (x519 * x317) + (-1 * x510 * x319);
	const FLT x521 = (x490 * sensor_pt[1]) + (-1 * x510 * sensor_pt[2]) + (x518 * sensor_pt[0]);
	const FLT x522 = (x501 * x319) + (x511 * x308) + (-1 * x521 * x317) + (-1 * x518 * x318);
	const FLT x523 = (x521 * x323) + (-1 * x519 * x308) + (-1 * x501 * x322) + (x510 * x318);
	const FLT x524 = (x523 * (*lh_p).Rot[2]) + (-1 * x520 * (*lh_p).Rot[3]) + (x522 * (*lh_p).Rot[0]);
	const FLT x525 = (x520 * (*lh_p).Rot[1]) + (-1 * x522 * (*lh_p).Rot[2]) + (x523 * (*lh_p).Rot[0]);
	const FLT x526 = x520 + (x524 * x200) + (-1 * x525 * x198);
	const FLT x527 = (x522 * (*lh_p).Rot[3]) + (-1 * x523 * (*lh_p).Rot[1]) + (x520 * (*lh_p).Rot[0]);
	const FLT x528 = x522 + (-1 * x527 * x200) + (x525 * x208);
	const FLT x529 = (x527 * x198) + x523 + (-1 * x524 * x208);
	const FLT x530 = (x529 * x135) + (x528 * x130);
	const FLT x531 = (-1 * x138 * (x530 + (x526 * x124))) + (x91 * x526);
	const FLT x532 = x531 * x215;
	const FLT x533 = (x531 * x188) + (x92 * (x532 + (-1 * x531 * x214)));
	const FLT x534 = (x531 * x190) + (x92 * x533);
	const FLT x535 = (-1 * x530 * x147) + (x526 * x107);
	const FLT x536 = ((-1 * x529 * x150) + (x528 * x149)) * x151;
	const FLT x537 = x536 + (-1 * x535 * x146);
	const FLT x538 =
		x536 + (-1 * x118 *
				(x535 + (x537 * x159) + (x534 * x116) + (x531 * x219) +
				 (-1 * x157 *
				  ((-1 * x537 * x156) +
				   (-1 * x111 *
					((x92 * x534) + (x531 * x192) +
					 (x92 * ((x531 * x172) + x534 +
							 (x92 * (x533 + (x531 * x173) + (x92 * ((-1 * x531 * x221) + (x531 * x220) + x532)))))) +
					 (x531 * x193)))))));
	const FLT x539 = x8 * x476;
	const FLT x540 = x0 * x461;
	const FLT x541 = x0 * x459;
	const FLT x542 = x1 * x463;
	const FLT x543 = x0 * x0 * x0;
	const FLT x544 = x1 * x457;
	const FLT x545 = (x0 * x544) + (-1 * x6 * x541) + (-1 * x459 * x543) + (x461 * x543) + (-1 * x0 * x542) +
					 (x6 * x540) + (-1 * x3 * x541) + (x3 * x540);
	const FLT x546 = x466 * x545;
	const FLT x547 = x40 * x468;
	const FLT x548 = x546 * x275;
	const FLT x549 = x1 * x480;
	const FLT x550 = x0 * x549;
	const FLT x551 = x0 * x476;
	const FLT x552 = (x0 * x515) + (-1 * x516 * x551);
	const FLT x553 = x552 + (-1 * x512 * x545) + (-1 * x60 * x550) + (-1 * x8 * x449) + (-1 * x513 * x546) +
					 (-1 * x485) + x472 + (-1 * x546 * x547) + (x478 * x539) + (x548 * x269) + x446;
	const FLT x554 = x450 * x546;
	const FLT x555 = x494 * x551;
	const FLT x556 = x0 * x492;
	const FLT x557 = x41 * x497;
	const FLT x558 = (-1 * x498 * x545) + x508 + (x8 * x499) + (-1 * x502) + x53 + (-1 * x40 * x554) +
					 (-1 * x546 * x277) + (-1 * x555) + (-1 * x52 * x539) + x556 + (-1 * x482 * x550) + (x546 * x557);
	const FLT x559 = x0 * x487;
	const FLT x560 = -1 * x63;
	const FLT x561 = x2 * x60;
	const FLT x562 = x551 * x561;
	const FLT x563 = x41 * x468;
	const FLT x564 = x514 + (x548 * x265) + (-1 * x8 * x470) + (x546 * x563) + (x482 * x539) + (-1 * x559) + x560 +
					 (-1 * x52 * x550) + (x38 * x554) + (-1 * x475 * x545) + x562;
	const FLT x565 = (x564 * sensor_pt[0]) + (-1 * x553 * sensor_pt[1]) + (x558 * sensor_pt[2]);
	const FLT x566 = x40 * x497;
	const FLT x567 = (x503 * x551) + (-1 * x0 * x505);
	const FLT x568 = x567 + (-1 * x41 * x554) + x500 + (-1 * x546 * x566) + (-1 * x60 * x539) + (-1 * x478 * x550) +
					 (x509 * x546) + (-1 * x507 * x545) + (x8 * x486) + x61;
	const FLT x569 = (x564 * sensor_pt[1]) + (x553 * sensor_pt[0]) + (-1 * x568 * sensor_pt[2]);
	const FLT x570 = (-1 * x558 * x322) + (x568 * x318) + (-1 * x565 * x308) + (x569 * x323);
	const FLT x571 = (-1 * x558 * sensor_pt[0]) + (x568 * sensor_pt[1]) + (x564 * sensor_pt[2]);
	const FLT x572 = (x558 * x319) + (-1 * x569 * x317) + (-1 * x553 * x318) + (x571 * x308);
	const FLT x573 = (x553 * x322) + (-1 * x568 * x319) + (-1 * x571 * x323) + (x565 * x317);
	const FLT x574 = (x573 * (*lh_p).Rot[1]) + (x570 * (*lh_p).Rot[0]) + (-1 * x572 * (*lh_p).Rot[2]);
	const FLT x575 = (x570 * (*lh_p).Rot[2]) + (-1 * x573 * (*lh_p).Rot[3]) + (x572 * (*lh_p).Rot[0]);
	const FLT x576 = (-1 * x574 * x198) + x573 + (x575 * x200);
	const FLT x577 = (x573 * (*lh_p).Rot[0]) + (x572 * (*lh_p).Rot[3]) + (-1 * x570 * (*lh_p).Rot[1]);
	const FLT x578 = (-1 * x577 * x200) + x572 + (x574 * x208);
	const FLT x579 = x570 + (-1 * x575 * x208) + (x577 * x198);
	const FLT x580 = (x579 * x135) + (x578 * x130);
	const FLT x581 = (-1 * x138 * (x580 + (x576 * x124))) + (x91 * x576);
	const FLT x582 = x581 * x119;
	const FLT x583 = x94 * x582;
	const FLT x584 = (x95 * x582) + (x92 * (x583 + (-1 * x93 * x582)));
	const FLT x585 = (x96 * x582) + (x92 * x584);
	const FLT x586 = (-1 * x580 * x147) + (x576 * x107);
	const FLT x587 = ((-1 * x579 * x150) + (x578 * x149)) * x151;
	const FLT x588 = x587 + (-1 * x586 * x146);
	const FLT x589 =
		x587 + (-1 * x118 *
				((x582 * x140) +
				 (-1 * x157 *
				  ((-1 * x588 * x156) +
				   (-1 * x111 *
					((x92 * x585) + (x97 * x582) + (x582 * x102) +
					 (x92 * ((x581 * x172) + x585 +
							 (x92 * ((x581 * x173) + x584 + (x92 * ((-1 * x582 * x142) + x583 + (x99 * x582))))))))))) +
				 x586 + (x588 * x159) + (x585 * x116)));
	const FLT x590 = x2 * x2 * x2;
	const FLT x591 = x2 * x459;
	const FLT x592 = (x2 * x462) + (-1 * x2 * x542) + (x461 * x590) + (x2 * x544) + (x2 * x6 * x461) +
					 (-1 * x6 * x591) + (-1 * x459 * x590) + (-1 * x8 * x591);
	const FLT x593 = x466 * x592;
	const FLT x594 = x593 * x275;
	const FLT x595 = x3 * x476;
	const FLT x596 = (-1 * x593 * x547) + (-1 * x504) + (-1 * x593 * x513) + (-1 * x52 * x595) + (-1 * x549 * x561) +
					 x506 + (x3 * x499) + (x594 * x269) + x53 + (-1 * x556) + x555 + (-1 * x592 * x512);
	const FLT x597 = x450 * x593;
	const FLT x598 = x489 + x552 + (-1 * x498 * x592) + (-1 * x40 * x597) + (-1 * x478 * x595) + (x593 * x557) +
					 (-1 * x593 * x277) + (-1 * x503 * x549) + (x3 * x449) + x56;
	const FLT x599 = (x594 * x265) + x567 + (x38 * x597) + (-1 * x475 * x592) + (-1 * x493) + x495 + (-1 * x3 * x486) +
					 (x593 * x563) + (-1 * x516 * x549) + x491 + (x60 * x595);
	const FLT x600 = (x599 * sensor_pt[0]) + (-1 * x596 * sensor_pt[1]) + (x598 * sensor_pt[2]);
	const FLT x601 = x517 + (-1 * x592 * x507) + x559 + (x593 * x509) + (-1 * x562) + (-1 * x494 * x549) +
					 (-1 * x41 * x597) + (-1 * x3 * x470) + (-1 * x593 * x566) + x560 + (x482 * x595);
	const FLT x602 = (x599 * sensor_pt[1]) + (-1 * x601 * sensor_pt[2]) + (x596 * sensor_pt[0]);
	const FLT x603 = (x601 * x318) + (x602 * x323) + (-1 * x600 * x308) + (-1 * x598 * x322);
	const FLT x604 = (-1 * x598 * sensor_pt[0]) + (x601 * sensor_pt[1]) + (x599 * sensor_pt[2]);
	const FLT x605 = (x598 * x319) + (-1 * x596 * x318) + (x604 * x308) + (-1 * x602 * x317);
	const FLT x606 = (-1 * x601 * x319) + (x600 * x317) + (x596 * x322) + (-1 * x604 * x323);
	const FLT x607 = 2 * ((x606 * (*lh_p).Rot[1]) + (x603 * (*lh_p).Rot[0]) + (-1 * x605 * (*lh_p).Rot[2]));
	const FLT x608 = 2 * ((x603 * (*lh_p).Rot[2]) + (-1 * x606 * (*lh_p).Rot[3]) + (x605 * (*lh_p).Rot[0]));
	const FLT x609 = x606 + (-1 * x607 * (*lh_p).Rot[1]) + (x608 * (*lh_p).Rot[3]);
	const FLT x610 = (x606 * (*lh_p).Rot[0]) + (x605 * (*lh_p).Rot[3]) + (-1 * x603 * (*lh_p).Rot[1]);
	const FLT x611 = (-1 * x610 * x200) + x605 + (x607 * (*lh_p).Rot[2]);
	const FLT x612 = x603 + (-1 * x608 * (*lh_p).Rot[2]) + (x610 * x198);
	const FLT x613 = (x612 * x135) + (x611 * x130);
	const FLT x614 = (-1 * x138 * (x613 + (x609 * x124))) + (x91 * x609);
	const FLT x615 = x614 * x215;
	const FLT x616 = (x614 * x188) + (x92 * (x615 + (-1 * x614 * x214)));
	const FLT x617 = (x614 * x190) + (x92 * x616);
	const FLT x618 = (-1 * x613 * x147) + (x609 * x107);
	const FLT x619 = ((-1 * x612 * x150) + (x611 * x149)) * x151;
	const FLT x620 = x154 * (x619 + (-1 * x618 * x146));
	const FLT x621 =
		x619 + (-1 * x118 *
				(x618 + (x620 * x158) + (x614 * x219) +
				 (-1 * x157 *
				  ((-1 * x620 * x155) +
				   (-1 * x111 *
					((x92 * x617) + (x614 * x192) +
					 (x92 * (x617 + (x614 * x172) +
							 (x92 * (x616 + (x614 * x173) + (x92 * ((x614 * x220) + (-1 * x614 * x221) + x615)))))) +
					 (x614 * x193))))) +
				 (x617 * x116)));
	const FLT x622 = dt * x199;
	const FLT x623 = dt * x201;
	const FLT x624 = x623 + x622;
	const FLT x625 = -1 * dt * x205;
	const FLT x626 = dt + (-1 * dt * x203);
	const FLT x627 = x626 + x625;
	const FLT x628 = dt * x209;
	const FLT x629 = dt * x210;
	const FLT x630 = x629 + (-1 * x628);
	const FLT x631 = (x630 * x135) + (x627 * x130);
	const FLT x632 = (-1 * x138 * (x631 + (x624 * x124))) + (x91 * x624);
	const FLT x633 = x632 * x215;
	const FLT x634 = (x632 * x188) + (x92 * (x633 + (-1 * x632 * x214)));
	const FLT x635 = (x632 * x190) + (x92 * x634);
	const FLT x636 = (-1 * x631 * x147) + (x624 * x107);
	const FLT x637 = ((-1 * x630 * x150) + (x627 * x149)) * x151;
	const FLT x638 = x637 + (-1 * x636 * x146);
	const FLT x639 =
		x637 + (-1 * x118 *
				(x636 + (x638 * x159) +
				 (-1 * x157 *
				  ((-1 * x638 * x156) +
				   (-1 * x111 *
					((x92 * (x635 + (x632 * x172) +
							 (x92 * (x634 + (x632 * x173) + (x92 * ((-1 * x632 * x221) + x633 + (x632 * x220))))))) +
					 (x92 * x635) + (x632 * x193) + (x632 * x192))))) +
				 (x635 * x116) + (x632 * x219)));
	const FLT x640 = -1 * dt * x226;
	const FLT x641 = x626 + x640;
	const FLT x642 = x622 + (-1 * x623);
	const FLT x643 = dt * x230;
	const FLT x644 = dt * x231;
	const FLT x645 = x644 + x643;
	const FLT x646 = (x645 * x135) + (x642 * x130);
	const FLT x647 = (-1 * x138 * (x646 + (x641 * x124))) + (x91 * x641);
	const FLT x648 = x647 * x119;
	const FLT x649 = x94 * x648;
	const FLT x650 = (x647 * x188) + (x92 * (x649 + (-1 * x93 * x648)));
	const FLT x651 = (x96 * x648) + (x92 * x650);
	const FLT x652 = (-1 * x646 * x147) + (x641 * x107);
	const FLT x653 = ((-1 * x645 * x150) + (x642 * x149)) * x151;
	const FLT x654 = x653 + (-1 * x652 * x146);
	const FLT x655 =
		x653 + (-1 * x118 *
				(x652 + (x654 * x159) +
				 (-1 * x157 *
				  ((-1 * x654 * x156) +
				   (-1 * x111 *
					((x97 * x648) + (x92 * x651) +
					 (x92 * (x651 + (x647 * x172) +
							 (x92 * ((x647 * x173) + x650 + (x92 * ((-1 * x648 * x142) + x649 + (x99 * x648))))))) +
					 (x647 * x193))))) +
				 (x648 * x140) + (x651 * x116)));
	const FLT x656 = x643 + (-1 * x644);
	const FLT x657 = x628 + x629;
	const FLT x658 = x625 + dt + x640;
	const FLT x659 = (x658 * x135) + (x657 * x130);
	const FLT x660 = (-1 * x138 * (x659 + (x656 * x124))) + (x91 * x656);
	const FLT x661 = x660 * x119;
	const FLT x662 = x94 * x661;
	const FLT x663 = (x660 * x188) + (x92 * (x662 + (-1 * x93 * x661)));
	const FLT x664 = (x660 * x190) + (x92 * x663);
	const FLT x665 = (-1 * x659 * x147) + (x656 * x107);
	const FLT x666 = ((-1 * x658 * x150) + (x657 * x149)) * x151;
	const FLT x667 = x666 + (-1 * x665 * x146);
	const FLT x668 =
		x666 + (-1 * x118 *
				((-1 * x157 *
				  ((-1 * x667 * x156) +
				   (-1 * x111 *
					((x92 * x664) + (x660 * x193) + (x660 * x192) +
					 (x92 * (x664 + (x660 * x172) +
							 (x92 * (x663 + (x660 * x173) + (x92 * ((-1 * x661 * x142) + x662 + (x99 * x661))))))))))) +
				 x665 + (x664 * x116) + (x661 * x140) + (x667 * x159)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT), x160 + (x161 * x160));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT), x180 + (x161 * x180));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT), x197 + (x161 * x197));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT), x225 + (x225 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT), x241 + (x241 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT), x254 + (x254 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x341 + (x341 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x378 + (x378 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x414 + (x414 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x445 + (x445 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x538 + (x538 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x589 + (x589 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x621 + (x621 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT), x639 + (x639 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT), x655 + (x655 * x161));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT), x668 + (x668 * x161));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae1f580>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*error_model).AccBias[0], (*error_model).AccBias[1],
// (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2],
// (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2], (*error_model).IMUCorrection[0],
// (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2], (*error_model).IMUCorrection[3],
// (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2],
// (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2],
// (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae17400>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = x2 * x7;
	const FLT x9 = sin(x1);
	const FLT x10 = cos(x5);
	const FLT x11 = cos(x3);
	const FLT x12 = x11 * x10;
	const FLT x13 = x9 * x12;
	const FLT x14 = x13 + (-1 * x8);
	const FLT x15 = x7 * x9;
	const FLT x16 = x2 * x12;
	const FLT x17 = x16 + x15;
	const FLT x18 = x4 * x10;
	const FLT x19 = x9 * x18;
	const FLT x20 = x6 * x11;
	const FLT x21 = x2 * x20;
	const FLT x22 = x21 + x19;
	const FLT x23 = x9 * x20;
	const FLT x24 = x2 * x18;
	const FLT x25 = x24 + (-1 * x23);
	const FLT x26 = (x25 * x25) + (x22 * x22) + (x14 * x14) + (x17 * x17);
	const FLT x27 = 1. / sqrt(x26);
	const FLT x28 = x27 * (*_x0).Pose.Rot[3];
	const FLT x29 = x22 * x27;
	const FLT x30 = x27 * x17;
	const FLT x31 = x25 * x27;
	const FLT x32 = (-1 * x31 * (*_x0).Pose.Rot[1]) + (x30 * (*_x0).Pose.Rot[0]) + (-1 * x28 * x14) +
					(-1 * x29 * (*_x0).Pose.Rot[2]);
	const FLT x33 = x27 * x14;
	const FLT x34 =
		(x30 * (*_x0).Pose.Rot[2]) + (-1 * x33 * (*_x0).Pose.Rot[1]) + (x25 * x28) + (x29 * (*_x0).Pose.Rot[0]);
	const FLT x35 =
		(x33 * (*_x0).Pose.Rot[0]) + (x29 * (*_x0).Pose.Rot[1]) + (x28 * x17) + (-1 * x31 * (*_x0).Pose.Rot[2]);
	const FLT x36 =
		(x33 * (*_x0).Pose.Rot[2]) + (x30 * (*_x0).Pose.Rot[1]) + (-1 * x22 * x28) + (x31 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (x36 * x36) + (x35 * x35) + (x34 * x34) + (x32 * x32);
	const FLT x38 = 1. / sqrt(x37);
	const FLT x39 = dt * dt;
	const FLT x40 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x41 = x40 * x40;
	const FLT x42 = x41 * x39;
	const FLT x43 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x44 = x43 * x43;
	const FLT x45 = x44 * x39;
	const FLT x46 = x0 * x0;
	const FLT x47 = x46 * x39;
	const FLT x48 = 1e-10 + x47 + x42 + x45;
	const FLT x49 = sqrt(x48);
	const FLT x50 = 0.5 * x49;
	const FLT x51 = sin(x50);
	const FLT x52 = x51 * x51;
	const FLT x53 = 1. / x48;
	const FLT x54 = x53 * x52;
	const FLT x55 = cos(x50);
	const FLT x56 = (x55 * x55) + (x54 * x42) + (x54 * x45) + (x54 * x47);
	const FLT x57 = 1. / sqrt(x56);
	const FLT x58 = x57 * x38;
	const FLT x59 = x51 * (1. / x49);
	const FLT x60 = dt * x59;
	const FLT x61 = x60 * x58;
	const FLT x62 = x61 * x32;
	const FLT x63 = x61 * x36;
	const FLT x64 = x57 * x55;
	const FLT x65 = x64 * x38;
	const FLT x66 = x65 * x34;
	const FLT x67 = x58 * x35;
	const FLT x68 = x60 * x67;
	const FLT x69 = x66 + (-1 * x68 * x43) + (x0 * x62) + (x63 * x40);
	const FLT x70 = x61 * x34;
	const FLT x71 = x65 * x32;
	const FLT x72 = (-1 * x63 * x43) + x71 + (-1 * x68 * x40) + (-1 * x0 * x70);
	const FLT x73 = x65 * x35;
	const FLT x74 = (x70 * x43) + x73 + (x62 * x40) + (-1 * x0 * x63);
	const FLT x75 = (-1 * x74 * sensor_pt[1]) + (x69 * sensor_pt[2]) + (x72 * sensor_pt[0]);
	const FLT x76 = x65 * x36;
	const FLT x77 = (x62 * x43) + x76 + (-1 * x70 * x40) + (x0 * x68);
	const FLT x78 = (-1 * x77 * sensor_pt[2]) + (x74 * sensor_pt[0]) + (x72 * sensor_pt[1]);
	const FLT x79 = dt * fabs(dt);
	const FLT x80 = 1.0 / 2.0 * x79;
	const FLT x81 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x78 * x77) + (-1 * x75 * x69))) +
					(x80 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x82 = (-1 * x69 * sensor_pt[0]) + (x72 * sensor_pt[2]) + (x77 * sensor_pt[1]);
	const FLT x83 = (2 * ((x75 * x74) + (-1 * x82 * x77))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x80 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x84 = (x80 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (2 * ((x82 * x69) + (-1 * x78 * x74))) +
					(*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x85 = (-1 * x84 * (*lh_p).Rot[2]) + (x81 * (*lh_p).Rot[0]) + (x83 * (*lh_p).Rot[1]);
	const FLT x86 = (-1 * x83 * (*lh_p).Rot[3]) + (x84 * (*lh_p).Rot[0]) + (x81 * (*lh_p).Rot[2]);
	const FLT x87 = (*lh_p).Pos[1] + x83 + (2 * ((x86 * (*lh_p).Rot[3]) + (-1 * x85 * (*lh_p).Rot[1])));
	const FLT x88 = x87 * x87;
	const FLT x89 = (-1 * x81 * (*lh_p).Rot[1]) + (x83 * (*lh_p).Rot[0]) + (x84 * (*lh_p).Rot[3]);
	const FLT x90 = x81 + (2 * ((x89 * (*lh_p).Rot[1]) + (-1 * x86 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x91 = x84 + (*lh_p).Pos[0] + (2 * ((x85 * (*lh_p).Rot[2]) + (-1 * x89 * (*lh_p).Rot[3])));
	const FLT x92 = x91 * x91;
	const FLT x93 = x92 + (x90 * x90);
	const FLT x94 = x93 + x88;
	const FLT x95 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x96 = cos(x95);
	const FLT x97 = 1. / x96;
	const FLT x98 = x97 * (1. / sqrt(x94));
	const FLT x99 = asin(x87 * x98);
	const FLT x100 = 8.0108022e-06 * x99;
	const FLT x101 = -8.0108022e-06 + (-1 * x100);
	const FLT x102 = 0.0028679863 + (x99 * x101);
	const FLT x103 = 5.3685255e-06 + (x99 * x102);
	const FLT x104 = 0.0076069798 + (x99 * x103);
	const FLT x105 = x99 * x104;
	const FLT x106 = -8.0108022e-06 + (-1.60216044e-05 * x99);
	const FLT x107 = x102 + (x99 * x106);
	const FLT x108 = x103 + (x99 * x107);
	const FLT x109 = x104 + (x99 * x108);
	const FLT x110 = (x99 * x109) + x105;
	const FLT x111 = sin(x95);
	const FLT x112 = atan2(-1 * x90, x91);
	const FLT x113 = tan(x95);
	const FLT x114 = (1. / sqrt(x93)) * x113;
	const FLT x115 = x87 * x114;
	const FLT x116 = (-1 * asin(x115)) + (*bsc0).ogeephase + x112;
	const FLT x117 = (sin(x116) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x118 = x111 * x117;
	const FLT x119 = x96 + (-1 * x110 * x118);
	const FLT x120 = 1. / x119;
	const FLT x121 = x99 * x99;
	const FLT x122 = x117 * x121;
	const FLT x123 = x120 * x122;
	const FLT x124 = x115 + (x104 * x123);
	const FLT x125 = 1. / sqrt(1 + (-1 * (x124 * x124)));
	const FLT x126 = 1. / sqrt(1 + (-1 * x88 * (1. / (x96 * x96)) * (1. / x94)));
	const FLT x127 = x79 * (*lh_p).Rot[1];
	const FLT x128 = x127 * (*lh_p).Rot[2];
	const FLT x129 = x79 * (*lh_p).Rot[3];
	const FLT x130 = x129 * (*lh_p).Rot[0];
	const FLT x131 = x130 + x128;
	const FLT x132 = 2 * x87;
	const FLT x133 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x134 = -1 * x79 * x133;
	const FLT x135 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x136 = x80 + (-1 * x79 * x135);
	const FLT x137 = x136 + x134;
	const FLT x138 = 2 * x91;
	const FLT x139 = x79 * (*lh_p).Rot[2] * (*lh_p).Rot[0];
	const FLT x140 = x129 * (*lh_p).Rot[1];
	const FLT x141 = x140 + (-1 * x139);
	const FLT x142 = 2 * x90;
	const FLT x143 = (x142 * x141) + (x137 * x138);
	const FLT x144 = 1.0 / 2.0 * x87;
	const FLT x145 = x97 * (1. / (x94 * sqrt(x94))) * x144;
	const FLT x146 = x126 * ((-1 * x145 * (x143 + (x131 * x132))) + (x98 * x131));
	const FLT x147 = 2 * x105 * x117 * x120;
	const FLT x148 = x101 * x146;
	const FLT x149 = 2.40324066e-05 * x99;
	const FLT x150 = (x102 * x146) + (x99 * (x148 + (-1 * x100 * x146)));
	const FLT x151 = (x103 * x146) + (x99 * x150);
	const FLT x152 = 1. / x93;
	const FLT x153 = 1. / sqrt(1 + (-1 * x88 * (x113 * x113) * x152));
	const FLT x154 = (1. / (x93 * sqrt(x93))) * x113 * x144;
	const FLT x155 = (-1 * x143 * x154) + (x114 * x131);
	const FLT x156 = (1. / x92) * x90;
	const FLT x157 = 1. / x91;
	const FLT x158 = x92 * x152;
	const FLT x159 = ((-1 * x141 * x157) + (x137 * x156)) * x158;
	const FLT x160 = x159 + (-1 * x153 * x155);
	const FLT x161 = cos(x116) * (*bsc0).ogeemag;
	const FLT x162 = x110 * x111;
	const FLT x163 = x161 * x162;
	const FLT x164 = x104 * (1. / (x119 * x119)) * x122;
	const FLT x165 = x104 * x120 * x121;
	const FLT x166 = x161 * x165;
	const FLT x167 =
		x159 + (-1 * x125 *
				(x155 + (x123 * x151) + (x160 * x166) + (x146 * x147) +
				 (-1 * x164 *
				  ((-1 * x160 * x163) +
				   (-1 * x118 *
					((x99 * x151) + (x104 * x146) +
					 (x99 * (x151 + (x108 * x146) +
							 (x99 * (x150 + (x107 * x146) + (x99 * ((-1 * x146 * x149) + x148 + (x106 * x146))))))) +
					 (x109 * x146)))))));
	const FLT x168 = cos((-1 * asin(x124)) + (*bsc0).gibpha + x112) * (*bsc0).gibmag;
	const FLT x169 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x170 = -1 * x79 * x169;
	const FLT x171 = x136 + x170;
	const FLT x172 = x128 + (-1 * x130);
	const FLT x173 = x129 * (*lh_p).Rot[2];
	const FLT x174 = x127 * (*lh_p).Rot[0];
	const FLT x175 = x174 + x173;
	const FLT x176 = (x175 * x142) + (x172 * x138);
	const FLT x177 = (-1 * x145 * (x176 + (x171 * x132))) + (x98 * x171);
	const FLT x178 = x109 * x126;
	const FLT x179 = x108 * x126;
	const FLT x180 = x107 * x126;
	const FLT x181 = x101 * x126;
	const FLT x182 = x177 * x181;
	const FLT x183 = x106 * x126;
	const FLT x184 = x126 * x149;
	const FLT x185 = x100 * x126;
	const FLT x186 = x102 * x126;
	const FLT x187 = (x177 * x186) + (x99 * (x182 + (-1 * x177 * x185)));
	const FLT x188 = x103 * x126;
	const FLT x189 = (x177 * x188) + (x99 * x187);
	const FLT x190 = x104 * x126;
	const FLT x191 = (-1 * x176 * x154) + (x114 * x171);
	const FLT x192 = ((-1 * x175 * x157) + (x172 * x156)) * x158;
	const FLT x193 = x192 + (-1 * x191 * x153);
	const FLT x194 = x126 * x147;
	const FLT x195 =
		x192 +
		(-1 * x125 *
		 (x191 + (x166 * x193) + (x177 * x194) +
		  (-1 * x164 *
		   ((-1 * x163 * x193) +
			(-1 * x118 *
			 ((x99 * x189) + (x177 * x190) + (x178 * x177) +
			  (x99 * (x189 + (x179 * x177) +
					  (x99 * (x187 + (x177 * x180) + (x99 * ((-1 * x177 * x184) + x182 + (x177 * x183))))))))))) +
		  (x123 * x189)));
	const FLT x196 = x173 + (-1 * x174);
	const FLT x197 = x139 + x140;
	const FLT x198 = x134 + x80 + x170;
	const FLT x199 = (x198 * x142) + (x197 * x138);
	const FLT x200 = (-1 * x145 * (x199 + (x196 * x132))) + (x98 * x196);
	const FLT x201 = x200 * x181;
	const FLT x202 = (x200 * x186) + (x99 * (x201 + (-1 * x200 * x185)));
	const FLT x203 = (x200 * x188) + (x99 * x202);
	const FLT x204 = (-1 * x199 * x154) + (x114 * x196);
	const FLT x205 = ((-1 * x198 * x157) + (x197 * x156)) * x158;
	const FLT x206 = x161 * (x205 + (-1 * x204 * x153));
	const FLT x207 =
		x205 + (-1 * x125 *
				(x204 + (x206 * x165) + (x203 * x123) + (x200 * x194) +
				 (-1 * x164 *
				  ((-1 * x206 * x162) +
				   (-1 * x118 *
					((x99 * x203) + (x200 * x178) +
					 (x99 * (x203 + (x200 * x179) +
							 (x99 * ((x200 * x180) + x202 + (x99 * ((-1 * x200 * x184) + x201 + (x200 * x183))))))) +
					 (x200 * x190)))))));
	const FLT x208 = 0.5 * x16;
	const FLT x209 = 0.5 * x15;
	const FLT x210 = x209 + x208;
	const FLT x211 = 2 * x25;
	const FLT x212 = 0.5 * x8;
	const FLT x213 = -1 * x212;
	const FLT x214 = 0.5 * x13;
	const FLT x215 = x214 + x213;
	const FLT x216 = 2 * x22;
	const FLT x217 = 0.5 * x19;
	const FLT x218 = -0.5 * x21;
	const FLT x219 = x218 + (-1 * x217);
	const FLT x220 = 2 * x14;
	const FLT x221 = 0.5 * x24;
	const FLT x222 = -1 * x221;
	const FLT x223 = 0.5 * x23;
	const FLT x224 = x223 + x222;
	const FLT x225 = 2 * x17;
	const FLT x226 = 1.0 / 2.0 * (1. / (x26 * sqrt(x26)));
	const FLT x227 = ((x224 * x225) + (x219 * x220) + (x211 * x210) + (x215 * x216)) * x226;
	const FLT x228 = x17 * x227;
	const FLT x229 = x14 * x227;
	const FLT x230 = x27 * (*_x0).Pose.Rot[1];
	const FLT x231 = x27 * x219;
	const FLT x232 = x231 * (*_x0).Pose.Rot[2];
	const FLT x233 = x22 * x227;
	const FLT x234 = x27 * x210;
	const FLT x235 = x234 * (*_x0).Pose.Rot[0];
	const FLT x236 = x25 * x227;
	const FLT x237 = (-1 * x28 * x215) + (-1 * x236 * (*_x0).Pose.Rot[0]) + x235 + (-1 * x229 * (*_x0).Pose.Rot[2]) +
					 (-1 * x228 * (*_x0).Pose.Rot[1]) + (x230 * x224) + x232 + (x233 * (*_x0).Pose.Rot[3]);
	const FLT x238 = 2 * x36;
	const FLT x239 = -1 * x231 * (*_x0).Pose.Rot[1];
	const FLT x240 = x17 * (*_x0).Pose.Rot[2];
	const FLT x241 = x27 * (*_x0).Pose.Rot[2];
	const FLT x242 = x27 * (*_x0).Pose.Rot[0];
	const FLT x243 = x28 * x210;
	const FLT x244 = (x215 * x242) + x239 + (-1 * x233 * (*_x0).Pose.Rot[0]) + (-1 * x227 * x240) +
					 (x229 * (*_x0).Pose.Rot[1]) + x243 + (-1 * x236 * (*_x0).Pose.Rot[3]) + (x224 * x241);
	const FLT x245 = 2 * x34;
	const FLT x246 = x234 * (*_x0).Pose.Rot[2];
	const FLT x247 = x231 * (*_x0).Pose.Rot[0];
	const FLT x248 = x247 + (-1 * x246) + (x215 * x230) + (-1 * x228 * (*_x0).Pose.Rot[3]) +
					 (-1 * x233 * (*_x0).Pose.Rot[1]) + (x28 * x224) + (x236 * (*_x0).Pose.Rot[2]) +
					 (-1 * x229 * (*_x0).Pose.Rot[0]);
	const FLT x249 = 2 * x35;
	const FLT x250 = -1 * x234 * (*_x0).Pose.Rot[1];
	const FLT x251 = x28 * x219;
	const FLT x252 = x14 * (*_x0).Pose.Rot[3];
	const FLT x253 = (x224 * x242) + (-1 * x215 * x241) + (x252 * x227) + x250 + (-1 * x228 * (*_x0).Pose.Rot[0]) +
					 (x236 * (*_x0).Pose.Rot[1]) + (-1 * x251) + (x233 * (*_x0).Pose.Rot[2]);
	const FLT x254 = 2 * x32;
	const FLT x255 = (x254 * x253) + (x248 * x249) + (x238 * x237) + (x244 * x245);
	const FLT x256 = 1. / (x37 * sqrt(x37));
	const FLT x257 = x64 * x256;
	const FLT x258 = x255 * x257;
	const FLT x259 = 1.0 / 2.0 * x258;
	const FLT x260 = x60 * x40;
	const FLT x261 = 1.0 / 2.0 * x34;
	const FLT x262 = x57 * x256;
	const FLT x263 = x262 * x255;
	const FLT x264 = x263 * x261;
	const FLT x265 = 1.0 / 2.0 * x35;
	const FLT x266 = x0 * x60;
	const FLT x267 = x266 * x265;
	const FLT x268 = x61 * x40;
	const FLT x269 = x0 * x61;
	const FLT x270 = 1.0 / 2.0 * x32;
	const FLT x271 = x60 * x270;
	const FLT x272 = x43 * x271;
	const FLT x273 = x61 * x43;
	const FLT x274 = (x273 * x253) + (x264 * x260) + (x65 * x237) + (-1 * x272 * x263) + (-1 * x36 * x259) +
					 (-1 * x267 * x263) + (-1 * x268 * x244) + (x269 * x248);
	const FLT x275 = x60 * x43;
	const FLT x276 = x275 * x261;
	const FLT x277 = x40 * x271;
	const FLT x278 = x61 * x237;
	const FLT x279 = 1.0 / 2.0 * x36;
	const FLT x280 = x279 * x266;
	const FLT x281 = (-1 * x0 * x278) + (x65 * x248) + (-1 * x276 * x263) + (-1 * x277 * x263) + (-1 * x265 * x258) +
					 (x263 * x280) + (x273 * x244) + (x268 * x253);
	const FLT x282 = x279 * x275;
	const FLT x283 = x265 * x260;
	const FLT x284 = (-1 * x269 * x244) + (x266 * x264) + (x65 * x253) + (-1 * x237 * x273) + (x263 * x282) +
					 (-1 * x270 * x258) + (-1 * x268 * x248) + (x263 * x283);
	const FLT x285 = (x284 * sensor_pt[1]) + (-1 * x274 * sensor_pt[2]) + (x281 * sensor_pt[0]);
	const FLT x286 = 2 * x74;
	const FLT x287 = x275 * x265;
	const FLT x288 = x0 * x271;
	const FLT x289 = x279 * x260;
	const FLT x290 = (-1 * x263 * x289) + (x269 * x253) + (x65 * x244) + (-1 * x34 * x259) + (x263 * x287) +
					 (-1 * x263 * x288) + (x40 * x278) + (-1 * x273 * x248);
	const FLT x291 = 2 * x82;
	const FLT x292 = (x274 * sensor_pt[1]) + (x284 * sensor_pt[2]) + (-1 * x290 * sensor_pt[0]);
	const FLT x293 = 2 * x69;
	const FLT x294 = 2 * x78;
	const FLT x295 = (x293 * x292) + (-1 * x294 * x281) + (-1 * x286 * x285) + (x291 * x290);
	const FLT x296 = (x284 * sensor_pt[0]) + (x290 * sensor_pt[2]) + (-1 * x281 * sensor_pt[1]);
	const FLT x297 = 2 * x75;
	const FLT x298 = 2 * x77;
	const FLT x299 = (x274 * x294) + (x298 * x285) + (-1 * x296 * x293) + (-1 * x297 * x290);
	const FLT x300 = (x296 * x286) + (-1 * x298 * x292) + (x297 * x281) + (-1 * x274 * x291);
	const FLT x301 = (x300 * (*lh_p).Rot[1]) + (-1 * x295 * (*lh_p).Rot[2]) + (x299 * (*lh_p).Rot[0]);
	const FLT x302 = 2 * (*lh_p).Rot[1];
	const FLT x303 = 2 * ((x299 * (*lh_p).Rot[2]) + (-1 * x300 * (*lh_p).Rot[3]) + (x295 * (*lh_p).Rot[0]));
	const FLT x304 = x300 + (-1 * x301 * x302) + (x303 * (*lh_p).Rot[3]);
	const FLT x305 = 2 * ((x295 * (*lh_p).Rot[3]) + (-1 * x299 * (*lh_p).Rot[1]) + (x300 * (*lh_p).Rot[0]));
	const FLT x306 = 2 * (*lh_p).Rot[2];
	const FLT x307 = x295 + (-1 * x305 * (*lh_p).Rot[3]) + (x301 * x306);
	const FLT x308 = x299 + (x305 * (*lh_p).Rot[1]) + (-1 * x303 * (*lh_p).Rot[2]);
	const FLT x309 = (x308 * x142) + (x307 * x138);
	const FLT x310 = (-1 * x145 * (x309 + (x304 * x132))) + (x98 * x304);
	const FLT x311 = x310 * x181;
	const FLT x312 = (x310 * x186) + (x99 * (x311 + (-1 * x310 * x185)));
	const FLT x313 = (x310 * x188) + (x99 * x312);
	const FLT x314 = (-1 * x309 * x154) + (x304 * x114);
	const FLT x315 = ((-1 * x308 * x157) + (x307 * x156)) * x158;
	const FLT x316 = x315 + (-1 * x314 * x153);
	const FLT x317 =
		x315 + (-1 * x125 *
				((x316 * x166) + x314 +
				 (-1 * x164 *
				  ((-1 * x316 * x163) +
				   (-1 * x118 *
					((x99 * x313) +
					 (x99 * (x313 + (x310 * x179) +
							 (x99 * (x312 + (x310 * x180) + (x99 * ((-1 * x310 * x184) + (x310 * x183) + x311)))))) +
					 (x310 * x178) + (x310 * x190))))) +
				 (x310 * x194) + (x313 * x123)));
	const FLT x318 = -1 * x214;
	const FLT x319 = x318 + x213;
	const FLT x320 = (-1 * x209) + x208;
	const FLT x321 = -1 * x223;
	const FLT x322 = x222 + x321;
	const FLT x323 = x217 + x218;
	const FLT x324 = ((x225 * x323) + (x220 * x322) + (x211 * x319) + (x216 * x320)) * x226;
	const FLT x325 = x14 * x324;
	const FLT x326 = x27 * x322;
	const FLT x327 = x27 * x320;
	const FLT x328 = x22 * x324;
	const FLT x329 = x25 * x324;
	const FLT x330 = (x28 * x319) + (-1 * x329 * (*_x0).Pose.Rot[3]) + (x241 * x323) + (-1 * x240 * x324) +
					 (-1 * x326 * (*_x0).Pose.Rot[1]) + (-1 * x328 * (*_x0).Pose.Rot[0]) + (x325 * (*_x0).Pose.Rot[1]) +
					 (x327 * (*_x0).Pose.Rot[0]);
	const FLT x331 = x27 * x323;
	const FLT x332 = x27 * x319;
	const FLT x333 = x17 * x324;
	const FLT x334 = (-1 * x325 * (*_x0).Pose.Rot[2]) + (x332 * (*_x0).Pose.Rot[0]) + (-1 * x333 * (*_x0).Pose.Rot[1]) +
					 (x331 * (*_x0).Pose.Rot[1]) + (x326 * (*_x0).Pose.Rot[2]) + (x328 * (*_x0).Pose.Rot[3]) +
					 (-1 * x329 * (*_x0).Pose.Rot[0]) + (-1 * x28 * x320);
	const FLT x335 = x324 * (*_x0).Pose.Rot[0];
	const FLT x336 = (x329 * (*_x0).Pose.Rot[2]) + (-1 * x14 * x335) + (x327 * (*_x0).Pose.Rot[1]) +
					 (-1 * x328 * (*_x0).Pose.Rot[1]) + (x28 * x323) + (x326 * (*_x0).Pose.Rot[0]) +
					 (-1 * x332 * (*_x0).Pose.Rot[2]) + (-1 * x333 * (*_x0).Pose.Rot[3]);
	const FLT x337 = (-1 * x28 * x322) + (x325 * (*_x0).Pose.Rot[3]) + (x331 * (*_x0).Pose.Rot[0]) +
					 (-1 * x241 * x320) + (-1 * x332 * (*_x0).Pose.Rot[1]) + (-1 * x17 * x335) +
					 (x328 * (*_x0).Pose.Rot[2]) + (x329 * (*_x0).Pose.Rot[1]);
	const FLT x338 = (x249 * x336) + (x254 * x337) + (x245 * x330) + (x238 * x334);
	const FLT x339 = x262 * x338;
	const FLT x340 = x265 * x257;
	const FLT x341 = (x65 * x336) + (-1 * x269 * x334) + (-1 * x276 * x339) + (x280 * x339) + (-1 * x338 * x340) +
					 (-1 * x277 * x339) + (x268 * x337) + (x273 * x330);
	const FLT x342 = 1.0 / 2.0 * x257;
	const FLT x343 = x338 * x342;
	const FLT x344 = x260 * x261;
	const FLT x345 = x265 * x339;
	const FLT x346 = (x65 * x334) + (-1 * x266 * x345) + (-1 * x272 * x339) + (-1 * x36 * x343) + (x339 * x344) +
					 (x269 * x336) + (-1 * x268 * x330) + (x273 * x337);
	const FLT x347 = x270 * x257;
	const FLT x348 = x266 * x261;
	const FLT x349 = (-1 * x268 * x336) + (x339 * x348) + (x282 * x339) + (x65 * x337) + (x260 * x345) +
					 (-1 * x338 * x347) + (-1 * x269 * x330) + (-1 * x273 * x334);
	const FLT x350 = (x349 * sensor_pt[1]) + (x341 * sensor_pt[0]) + (-1 * x346 * sensor_pt[2]);
	const FLT x351 = (x269 * x337) + (-1 * x289 * x339) + (x65 * x330) + (-1 * x288 * x339) + (x268 * x334) +
					 (-1 * x273 * x336) + (x287 * x339) + (-1 * x34 * x343);
	const FLT x352 = (x346 * sensor_pt[1]) + (-1 * x351 * sensor_pt[0]) + (x349 * sensor_pt[2]);
	const FLT x353 = (x291 * x351) + (x293 * x352) + (-1 * x286 * x350) + (-1 * x294 * x341);
	const FLT x354 = (x349 * sensor_pt[0]) + (x351 * sensor_pt[2]) + (-1 * x341 * sensor_pt[1]);
	const FLT x355 = (x298 * x350) + (-1 * x293 * x354) + (-1 * x297 * x351) + (x294 * x346);
	const FLT x356 = (-1 * x291 * x346) + (x286 * x354) + (-1 * x298 * x352) + (x297 * x341);
	const FLT x357 = 2 * ((x356 * (*lh_p).Rot[1]) + (-1 * x353 * (*lh_p).Rot[2]) + (x355 * (*lh_p).Rot[0]));
	const FLT x358 = 2 * ((-1 * x356 * (*lh_p).Rot[3]) + (x355 * (*lh_p).Rot[2]) + (x353 * (*lh_p).Rot[0]));
	const FLT x359 = x356 + (-1 * x357 * (*lh_p).Rot[1]) + (x358 * (*lh_p).Rot[3]);
	const FLT x360 = 2 * ((-1 * x355 * (*lh_p).Rot[1]) + (x353 * (*lh_p).Rot[3]) + (x356 * (*lh_p).Rot[0]));
	const FLT x361 = x353 + (x357 * (*lh_p).Rot[2]) + (-1 * x360 * (*lh_p).Rot[3]);
	const FLT x362 = x355 + (x360 * (*lh_p).Rot[1]) + (-1 * x358 * (*lh_p).Rot[2]);
	const FLT x363 = (x362 * x142) + (x361 * x138);
	const FLT x364 = (-1 * x145 * (x363 + (x359 * x132))) + (x98 * x359);
	const FLT x365 = x364 * x181;
	const FLT x366 = (x364 * x186) + (x99 * (x365 + (-1 * x364 * x185)));
	const FLT x367 = (x364 * x188) + (x99 * x366);
	const FLT x368 = (-1 * x363 * x154) + (x359 * x114);
	const FLT x369 = ((-1 * x362 * x157) + (x361 * x156)) * x158;
	const FLT x370 = x369 + (-1 * x368 * x153);
	const FLT x371 =
		x369 +
		(-1 * x125 *
		 ((x364 * x194) + (x370 * x166) +
		  (-1 * x164 *
		   ((-1 * x370 * x163) +
			(-1 * x118 *
			 ((x99 * x367) + (x364 * x178) + (x364 * x190) +
			  (x99 * ((x364 * x179) + x367 +
					  (x99 * (x366 + (x364 * x180) + (x99 * ((-1 * x364 * x184) + x365 + (x364 * x183))))))))))) +
		  x368 + (x367 * x123)));
	const FLT x372 = x221 + x321;
	const FLT x373 = x212 + x318;
	const FLT x374 = ((x225 * x373) + (x216 * x372) + (x211 * x219) + (x210 * x220)) * x226;
	const FLT x375 = x17 * x374;
	const FLT x376 = x374 * (*_x0).Pose.Rot[1];
	const FLT x377 = x22 * x374;
	const FLT x378 = (x377 * (*_x0).Pose.Rot[2]) + (-1 * x243) + x239 + (-1 * x375 * (*_x0).Pose.Rot[0]) +
					 (x25 * x376) + (x252 * x374) + (x242 * x373) + (-1 * x241 * x372);
	const FLT x379 = x14 * x374;
	const FLT x380 = x25 * x374;
	const FLT x381 = x246 + (x230 * x373) + (-1 * x380 * (*_x0).Pose.Rot[0]) + (-1 * x379 * (*_x0).Pose.Rot[2]) +
					 (-1 * x17 * x376) + (-1 * x28 * x372) + (x377 * (*_x0).Pose.Rot[3]) + x247;
	const FLT x382 = (x380 * (*_x0).Pose.Rot[2]) + (-1 * x375 * (*_x0).Pose.Rot[3]) + (-1 * x232) + x235 +
					 (x28 * x373) + (-1 * x379 * (*_x0).Pose.Rot[0]) + (x230 * x372) + (-1 * x377 * (*_x0).Pose.Rot[1]);
	const FLT x383 = (-1 * x377 * (*_x0).Pose.Rot[0]) + (x14 * x376) + (x242 * x372) +
					 (-1 * x380 * (*_x0).Pose.Rot[3]) + x250 + (-1 * x240 * x374) + x251 + (x241 * x373);
	const FLT x384 = (x254 * x378) + (x245 * x383) + (x238 * x381) + (x249 * x382);
	const FLT x385 = x384 * x342;
	const FLT x386 = x262 * x384;
	const FLT x387 = x261 * x386;
	const FLT x388 = x271 * x386;
	const FLT x389 = (-1 * x43 * x388) + (-1 * x36 * x385) + (-1 * x267 * x386) + (x260 * x387) + (x269 * x382) +
					 (x273 * x378) + (x65 * x381) + (-1 * x268 * x383);
	const FLT x390 = (x65 * x382) + (x273 * x383) + (-1 * x40 * x388) + (x280 * x386) + (x268 * x378) +
					 (-1 * x276 * x386) + (-1 * x269 * x381) + (-1 * x384 * x340);
	const FLT x391 = (x266 * x387) + (-1 * x273 * x381) + (-1 * x269 * x383) + (x282 * x386) + (-1 * x384 * x347) +
					 (x283 * x386) + (x65 * x378) + (-1 * x268 * x382);
	const FLT x392 = (x391 * sensor_pt[1]) + (-1 * x389 * sensor_pt[2]) + (x390 * sensor_pt[0]);
	const FLT x393 = (x269 * x378) + (-1 * x288 * x386) + (x65 * x383) + (-1 * x34 * x385) + (x287 * x386) +
					 (x268 * x381) + (-1 * x273 * x382) + (-1 * x289 * x386);
	const FLT x394 = (x389 * sensor_pt[1]) + (-1 * x393 * sensor_pt[0]) + (x391 * sensor_pt[2]);
	const FLT x395 = (x291 * x393) + (x293 * x394) + (-1 * x286 * x392) + (-1 * x294 * x390);
	const FLT x396 = (-1 * x390 * sensor_pt[1]) + (x391 * sensor_pt[0]) + (x393 * sensor_pt[2]);
	const FLT x397 = (x298 * x392) + (-1 * x297 * x393) + (x294 * x389) + (-1 * x293 * x396);
	const FLT x398 = (x297 * x390) + (x286 * x396) + (-1 * x298 * x394) + (-1 * x291 * x389);
	const FLT x399 = 2 * ((x398 * (*lh_p).Rot[1]) + (-1 * x395 * (*lh_p).Rot[2]) + (x397 * (*lh_p).Rot[0]));
	const FLT x400 = 2 * ((x397 * (*lh_p).Rot[2]) + (x395 * (*lh_p).Rot[0]) + (-1 * x398 * (*lh_p).Rot[3]));
	const FLT x401 = (-1 * x399 * (*lh_p).Rot[1]) + x398 + (x400 * (*lh_p).Rot[3]);
	const FLT x402 = (x395 * (*lh_p).Rot[3]) + (-1 * x397 * (*lh_p).Rot[1]) + (x398 * (*lh_p).Rot[0]);
	const FLT x403 = 2 * (*lh_p).Rot[3];
	const FLT x404 = x395 + (-1 * x402 * x403) + (x399 * (*lh_p).Rot[2]);
	const FLT x405 = (-1 * x400 * (*lh_p).Rot[2]) + x397 + (x402 * x302);
	const FLT x406 = (x405 * x142) + (x404 * x138);
	const FLT x407 = (-1 * x145 * (x406 + (x401 * x132))) + (x98 * x401);
	const FLT x408 = x407 * x181;
	const FLT x409 = (x407 * x186) + (x99 * (x408 + (-1 * x407 * x185)));
	const FLT x410 = (x407 * x188) + (x99 * x409);
	const FLT x411 = (-1 * x406 * x154) + (x401 * x114);
	const FLT x412 = ((-1 * x405 * x157) + (x404 * x156)) * x158;
	const FLT x413 = x412 + (-1 * x411 * x153);
	const FLT x414 =
		x412 + (-1 * x125 *
				(x411 + (x413 * x166) + (x410 * x123) + (x407 * x194) +
				 (-1 * x164 *
				  ((-1 * x413 * x163) +
				   (-1 * x118 *
					((x407 * x178) +
					 (x99 * ((x407 * x179) + x410 +
							 (x99 * (x409 + (x407 * x180) + (x99 * ((-1 * x407 * x184) + (x407 * x183) + x408)))))) +
					 (x99 * x410) + (x407 * x190)))))));
	const FLT x415 = x306 * (*lh_p).Rot[1];
	const FLT x416 = 2 * (*lh_p).Rot[0];
	const FLT x417 = x416 * (*lh_p).Rot[3];
	const FLT x418 = x417 + x415;
	const FLT x419 = 2 * x135;
	const FLT x420 = -1 * x419;
	const FLT x421 = 2 * x133;
	const FLT x422 = -1 * x421;
	const FLT x423 = 1 + x422 + x420;
	const FLT x424 = x416 * (*lh_p).Rot[2];
	const FLT x425 = x403 * (*lh_p).Rot[1];
	const FLT x426 = x425 + (-1 * x424);
	const FLT x427 = (x426 * x142) + (x423 * x138);
	const FLT x428 = (-1 * x145 * (x427 + (x418 * x132))) + (x98 * x418);
	const FLT x429 = x428 * x181;
	const FLT x430 = (x428 * x186) + (x99 * (x429 + (-1 * x428 * x185)));
	const FLT x431 = (x428 * x188) + (x99 * x430);
	const FLT x432 = x428 * x126;
	const FLT x433 = (-1 * x427 * x154) + (x418 * x114);
	const FLT x434 = ((-1 * x426 * x157) + (x423 * x156)) * x158;
	const FLT x435 = x434 + (-1 * x433 * x153);
	const FLT x436 =
		x434 + (-1 * x125 *
				(x433 + (x435 * x166) +
				 (-1 * x164 *
				  ((-1 * x435 * x163) +
				   (-1 * x118 *
					((x99 * x431) +
					 (x99 * (x431 + (x428 * x179) +
							 (x99 * ((x428 * x180) + x430 + (x99 * ((-1 * x432 * x149) + (x428 * x183) + x429)))))) +
					 (x428 * x190) + (x428 * x178))))) +
				 (x431 * x123) + (x432 * x147)));
	const FLT x437 = 2 * x169;
	const FLT x438 = 1 + (-1 * x437);
	const FLT x439 = x438 + x420;
	const FLT x440 = x415 + (-1 * x417);
	const FLT x441 = x403 * (*lh_p).Rot[2];
	const FLT x442 = x416 * (*lh_p).Rot[1];
	const FLT x443 = x442 + x441;
	const FLT x444 = (x443 * x142) + (x440 * x138);
	const FLT x445 = (-1 * x145 * (x444 + (x439 * x132))) + (x98 * x439);
	const FLT x446 = x445 * x181;
	const FLT x447 = (x445 * x186) + (x99 * (x446 + (-1 * x445 * x185)));
	const FLT x448 = (x445 * x188) + (x99 * x447);
	const FLT x449 = (-1 * x444 * x154) + (x439 * x114);
	const FLT x450 = ((-1 * x443 * x157) + (x440 * x156)) * x158;
	const FLT x451 = x450 + (-1 * x449 * x153);
	const FLT x452 =
		x450 +
		(-1 * x125 *
		 (x449 + (x451 * x166) +
		  (-1 * x164 *
		   ((-1 * x451 * x163) +
			(-1 * x118 *
			 ((x445 * x190) + (x445 * x178) + (x99 * x448) +
			  (x99 * (x448 + (x445 * x179) +
					  (x99 * (x447 + (x445 * x180) + (x99 * (x446 + (-1 * x445 * x184) + (x445 * x183))))))))))) +
		  (x448 * x123) + (x445 * x194)));
	const FLT x453 = x441 + (-1 * x442);
	const FLT x454 = x424 + x425;
	const FLT x455 = x438 + x422;
	const FLT x456 = (x455 * x142) + (x454 * x138);
	const FLT x457 = (-1 * x145 * (x456 + (x453 * x132))) + (x98 * x453);
	const FLT x458 = x457 * x181;
	const FLT x459 = (x457 * x186) + (x99 * (x458 + (-1 * x457 * x185)));
	const FLT x460 = (x457 * x188) + (x99 * x459);
	const FLT x461 = (-1 * x456 * x154) + (x453 * x114);
	const FLT x462 = ((-1 * x455 * x157) + (x454 * x156)) * x158;
	const FLT x463 = x462 + (-1 * x461 * x153);
	const FLT x464 =
		x462 + (-1 * x125 *
				(x461 + (x463 * x166) + (x457 * x194) + (x460 * x123) +
				 (-1 * x164 *
				  ((-1 * x463 * x163) +
				   (-1 * x118 *
					((x99 * x460) + (x457 * x190) +
					 (x99 * ((x457 * x179) + x460 +
							 (x99 * (x459 + (x457 * x180) + (x99 * ((-1 * x457 * x184) + x458 + (x457 * x183))))))) +
					 (x457 * x178)))))));
	const FLT x465 = -1 * x63;
	const FLT x466 = dt * dt * dt;
	const FLT x467 = 0.5 * x53 * x466;
	const FLT x468 = x76 * x467;
	const FLT x469 = x43 * x43 * x43;
	const FLT x470 = dt * dt * dt * dt;
	const FLT x471 = x51 * (1. / (x48 * sqrt(x48)));
	const FLT x472 = 1.0 * x55;
	const FLT x473 = x471 * x472;
	const FLT x474 = x473 * x470;
	const FLT x475 = 2 * x54;
	const FLT x476 = x39 * x475;
	const FLT x477 = 2 * x52 * (1. / (x48 * x48));
	const FLT x478 = x477 * x470;
	const FLT x479 = x41 * x43;
	const FLT x480 = x46 * x474;
	const FLT x481 = x59 * x472;
	const FLT x482 = x39 * x481;
	const FLT x483 = x46 * x478;
	const FLT x484 = (-1 * x43 * x483) + (-1 * x43 * x482) + (x43 * x480) + (x43 * x476) + (x469 * x474) +
					 (x479 * x474) + (-1 * x469 * x478) + (-1 * x479 * x478);
	const FLT x485 = (1. / (x56 * sqrt(x56))) * x38;
	const FLT x486 = x484 * x485;
	const FLT x487 = x66 * x467;
	const FLT x488 = x0 * x43;
	const FLT x489 = x488 * x487;
	const FLT x490 = x55 * x485;
	const FLT x491 = x490 * x484;
	const FLT x492 = x466 * x471;
	const FLT x493 = x44 * x492;
	const FLT x494 = x58 * x36;
	const FLT x495 = x58 * x32;
	const FLT x496 = 0.5 * x59;
	const FLT x497 = x495 * x496;
	const FLT x498 = x39 * x497;
	const FLT x499 = x0 * x492;
	const FLT x500 = x58 * x34;
	const FLT x501 = x43 * x500;
	const FLT x502 = x499 * x501;
	const FLT x503 = x73 * x467;
	const FLT x504 = x40 * x43;
	const FLT x505 = x40 * x492;
	const FLT x506 = x67 * x43;
	const FLT x507 = (x505 * x506) + (-1 * x503 * x504);
	const FLT x508 = x507 + x502 + (-1 * x43 * x498) + (-1 * x491 * x270) + (-1 * x44 * x468) + (x486 * x282) +
					 (x494 * x493) + x465 + (x486 * x348) + (x486 * x283) + (-1 * x489);
	const FLT x509 = -1 * x68;
	const FLT x510 = x468 * x504;
	const FLT x511 = x43 * x494;
	const FLT x512 = x511 * x505;
	const FLT x513 = x39 * x496;
	const FLT x514 = x71 * x467;
	const FLT x515 = x43 * x495;
	const FLT x516 = (-1 * x499 * x515) + (x488 * x514);
	const FLT x517 = x516 + (-1 * x491 * x261) + (-1 * x513 * x501) + (-1 * x486 * x288) + (x67 * x493) +
					 (-1 * x486 * x289) + x509 + (x486 * x287) + (-1 * x512) + (-1 * x44 * x503) + x510;
	const FLT x518 = x488 * x503;
	const FLT x519 = x501 * x505;
	const FLT x520 = x487 * x504;
	const FLT x521 = x499 * x506;
	const FLT x522 = x62 + (-1 * x520) + x519 + (-1 * x486 * x272) + (x44 * x514) + (-1 * x491 * x279) +
					 (-1 * x486 * x267) + (-1 * x521) + x518 + (-1 * x513 * x511) + (x486 * x344) + (-1 * x495 * x493);
	const FLT x523 = (x508 * sensor_pt[2]) + (x522 * sensor_pt[1]) + (-1 * x517 * sensor_pt[0]);
	const FLT x524 = x490 * x265;
	const FLT x525 = (-1 * x515 * x505) + (x514 * x504);
	const FLT x526 = (-1 * x468 * x488) + (x499 * x511);
	const FLT x527 = x526 + (-1 * x486 * x276) + (-1 * x493 * x500) + (-1 * x486 * x277) + x70 + (-1 * x484 * x524) +
					 (x486 * x280) + (-1 * x513 * x506) + x525 + (x44 * x487);
	const FLT x528 = (x508 * sensor_pt[0]) + (-1 * x527 * sensor_pt[1]) + (x517 * sensor_pt[2]);
	const FLT x529 = (x528 * x286) + (x527 * x297) + (-1 * x523 * x298) + (-1 * x522 * x291);
	const FLT x530 = (x508 * sensor_pt[1]) + (-1 * x522 * sensor_pt[2]) + (x527 * sensor_pt[0]);
	const FLT x531 = (x517 * x291) + (-1 * x530 * x286) + (x523 * x293) + (-1 * x527 * x294);
	const FLT x532 = (x530 * x298) + (-1 * x528 * x293) + (-1 * x517 * x297) + (x522 * x294);
	const FLT x533 = 2 * ((x532 * (*lh_p).Rot[2]) + (-1 * x529 * (*lh_p).Rot[3]) + (x531 * (*lh_p).Rot[0]));
	const FLT x534 = 2 * ((x529 * (*lh_p).Rot[1]) + (-1 * x531 * (*lh_p).Rot[2]) + (x532 * (*lh_p).Rot[0]));
	const FLT x535 = x529 + (x533 * (*lh_p).Rot[3]) + (-1 * x534 * (*lh_p).Rot[1]);
	const FLT x536 = 2 * ((x531 * (*lh_p).Rot[3]) + (-1 * x532 * (*lh_p).Rot[1]) + (x529 * (*lh_p).Rot[0]));
	const FLT x537 = x531 + (-1 * x536 * (*lh_p).Rot[3]) + (x534 * (*lh_p).Rot[2]);
	const FLT x538 = x532 + (x536 * (*lh_p).Rot[1]) + (-1 * x533 * (*lh_p).Rot[2]);
	const FLT x539 = (x538 * x142) + (x537 * x138);
	const FLT x540 = (-1 * x145 * (x539 + (x535 * x132))) + (x98 * x535);
	const FLT x541 = x540 * x181;
	const FLT x542 = (x540 * x186) + (x99 * (x541 + (-1 * x540 * x185)));
	const FLT x543 = (x540 * x188) + (x99 * x542);
	const FLT x544 = (-1 * x539 * x154) + (x535 * x114);
	const FLT x545 = ((-1 * x538 * x157) + (x537 * x156)) * x158;
	const FLT x546 = x545 + (-1 * x544 * x153);
	const FLT x547 =
		x545 + (-1 * x125 *
				((x546 * x166) + (x543 * x123) + x544 + (x540 * x194) +
				 (-1 * x164 *
				  ((-1 * x546 * x163) +
				   (-1 * x118 *
					((x99 * x543) +
					 (x99 * (x543 + (x540 * x179) +
							 (x99 * (x542 + (x540 * x180) + (x99 * ((x540 * x183) + (-1 * x540 * x184) + x541)))))) +
					 (x540 * x190) + (x540 * x178)))))));
	const FLT x548 = x46 * x492;
	const FLT x549 = x0 * x474;
	const FLT x550 = x0 * x478;
	const FLT x551 = x0 * x39;
	const FLT x552 = (x0 * x0 * x0) * x470;
	const FLT x553 = (-1 * x477 * x552) + (x473 * x552) + (-1 * x44 * x550) + (x44 * x549) + (-1 * x481 * x551) +
					 (x475 * x551) + (x41 * x549) + (-1 * x41 * x550);
	const FLT x554 = x485 * x553;
	const FLT x555 = x496 * x551;
	const FLT x556 = x0 * x40;
	const FLT x557 = x0 * x505;
	const FLT x558 = (-1 * x495 * x557) + (x514 * x556);
	const FLT x559 = x558 + (-1 * x524 * x553) + (-1 * x67 * x555) + (-1 * x46 * x468) + (-1 * x554 * x276) +
					 (x494 * x548) + x489 + (-1 * x502) + (-1 * x554 * x277) + (x554 * x280) + x465;
	const FLT x560 = x494 * x557;
	const FLT x561 = x468 * x556;
	const FLT x562 = x490 * x553;
	const FLT x563 = (-1 * x562 * x261) + (x46 * x514) + x62 + (-1 * x554 * x289) + (-1 * x518) + (-1 * x554 * x288) +
					 (x554 * x287) + (-1 * x560) + x521 + x561 + (-1 * x495 * x548) + (-1 * x500 * x555);
	const FLT x564 = -1 * x70;
	const FLT x565 = x503 * x556;
	const FLT x566 = x67 * x557;
	const FLT x567 = x526 + (-1 * x562 * x270) + (-1 * x497 * x551) + (-1 * x46 * x487) + (-1 * x565) + x564 +
					 (x554 * x282) + (x500 * x548) + (x554 * x283) + (x554 * x348) + x566;
	const FLT x568 = (x567 * sensor_pt[0]) + (-1 * x559 * sensor_pt[1]) + (x563 * sensor_pt[2]);
	const FLT x569 = (x500 * x557) + (-1 * x487 * x556);
	const FLT x570 = x516 + (x46 * x503) + (-1 * x554 * x267) + (-1 * x67 * x548) + (-1 * x562 * x279) + x569 +
					 (-1 * x494 * x555) + (-1 * x554 * x272) + (x554 * x344) + x68;
	const FLT x571 = (x567 * sensor_pt[1]) + (x559 * sensor_pt[0]) + (-1 * x570 * sensor_pt[2]);
	const FLT x572 = (x570 * x294) + (-1 * x563 * x297) + (-1 * x568 * x293) + (x571 * x298);
	const FLT x573 = (-1 * x563 * sensor_pt[0]) + (x570 * sensor_pt[1]) + (x567 * sensor_pt[2]);
	const FLT x574 = (-1 * x571 * x286) + (x563 * x291) + (-1 * x559 * x294) + (x573 * x293);
	const FLT x575 = (-1 * x570 * x291) + (-1 * x573 * x298) + (x559 * x297) + (x568 * x286);
	const FLT x576 = (x572 * (*lh_p).Rot[0]) + (x575 * (*lh_p).Rot[1]) + (-1 * x574 * (*lh_p).Rot[2]);
	const FLT x577 = (x572 * (*lh_p).Rot[2]) + (-1 * x575 * (*lh_p).Rot[3]) + (x574 * (*lh_p).Rot[0]);
	const FLT x578 = x575 + (-1 * x576 * x302) + (x403 * x577);
	const FLT x579 = (x574 * (*lh_p).Rot[3]) + (x575 * (*lh_p).Rot[0]) + (-1 * x572 * (*lh_p).Rot[1]);
	const FLT x580 = x574 + (-1 * x403 * x579) + (x576 * x306);
	const FLT x581 = x572 + (-1 * x577 * x306) + (x579 * x302);
	const FLT x582 = (x581 * x142) + (x580 * x138);
	const FLT x583 = (-1 * x145 * (x582 + (x578 * x132))) + (x98 * x578);
	const FLT x584 = x583 * x181;
	const FLT x585 = (x583 * x186) + (x99 * (x584 + (-1 * x583 * x185)));
	const FLT x586 = (x583 * x188) + (x99 * x585);
	const FLT x587 = (-1 * x582 * x154) + (x578 * x114);
	const FLT x588 = ((-1 * x581 * x157) + (x580 * x156)) * x158;
	const FLT x589 = x588 + (-1 * x587 * x153);
	const FLT x590 =
		x588 +
		(-1 * x125 *
		 ((x583 * x194) +
		  (-1 * x164 *
		   ((-1 * x589 * x163) +
			(-1 * x118 *
			 ((x583 * x190) + (x583 * x178) + (x99 * x586) +
			  (x99 * ((x583 * x179) + x586 +
					  (x99 * (x585 + (x583 * x180) + (x99 * ((-1 * x583 * x184) + x584 + (x583 * x183))))))))))) +
		  x587 + (x589 * x166) + (x586 * x123)));
	const FLT x591 = x40 * x44;
	const FLT x592 = x40 * x40 * x40;
	const FLT x593 = (-1 * x40 * x482) + (-1 * x478 * x592) + (x474 * x592) + (x474 * x591) + (x40 * x476) +
					 (x40 * x480) + (-1 * x40 * x483) + (-1 * x478 * x591);
	const FLT x594 = x485 * x593;
	const FLT x595 = x41 * x467;
	const FLT x596 = x41 * x492;
	const FLT x597 = x40 * x513;
	const FLT x598 = x490 * x593;
	const FLT x599 = (-1 * x594 * x276) + (-1 * x519) + x62 + x520 + (x71 * x595) + (x594 * x280) + (-1 * x594 * x277) +
					 (-1 * x495 * x596) + (-1 * x561) + x560 + (-1 * x598 * x265) + (-1 * x67 * x597);
	const FLT x600 = x558 + (-1 * x598 * x261) + (-1 * x594 * x288) + (x594 * x287) + (-1 * x594 * x289) +
					 (-1 * x597 * x500) + (-1 * x494 * x596) + x63 + x507 + (x41 * x468);
	const FLT x601 = x569 + (x594 * x282) + x509 + x512 + (x594 * x283) + (-1 * x73 * x595) + (-1 * x510) +
					 (x594 * x348) + (x67 * x596) + (-1 * x40 * x498) + (-1 * x598 * x270);
	const FLT x602 = (x601 * sensor_pt[0]) + (-1 * x599 * sensor_pt[1]) + (x600 * sensor_pt[2]);
	const FLT x603 = x525 + x565 + (-1 * x594 * x267) + (-1 * x598 * x279) + (x594 * x344) + (-1 * x494 * x597) +
					 (-1 * x66 * x595) + (-1 * x566) + (-1 * x594 * x272) + (x596 * x500) + x564;
	const FLT x604 = (-1 * x603 * sensor_pt[2]) + (x601 * sensor_pt[1]) + (x599 * sensor_pt[0]);
	const FLT x605 = (x603 * x294) + (x604 * x298) + (-1 * x602 * x293) + (-1 * x600 * x297);
	const FLT x606 = (x603 * sensor_pt[1]) + (-1 * x600 * sensor_pt[0]) + (x601 * sensor_pt[2]);
	const FLT x607 = (x600 * x291) + (x606 * x293) + (-1 * x599 * x294) + (-1 * x604 * x286);
	const FLT x608 = (x599 * x297) + (-1 * x603 * x291) + (x602 * x286) + (-1 * x606 * x298);
	const FLT x609 = (x608 * (*lh_p).Rot[1]) + (x605 * (*lh_p).Rot[0]) + (-1 * x607 * (*lh_p).Rot[2]);
	const FLT x610 = (x605 * (*lh_p).Rot[2]) + (-1 * x608 * (*lh_p).Rot[3]) + (x607 * (*lh_p).Rot[0]);
	const FLT x611 = x608 + (-1 * x609 * x302) + (x403 * x610);
	const FLT x612 = (x607 * (*lh_p).Rot[3]) + (x608 * (*lh_p).Rot[0]) + (-1 * x605 * (*lh_p).Rot[1]);
	const FLT x613 = x607 + (-1 * x403 * x612) + (x609 * x306);
	const FLT x614 = x605 + (-1 * x610 * x306) + (x612 * x302);
	const FLT x615 = (x614 * x142) + (x613 * x138);
	const FLT x616 = (-1 * x145 * (x615 + (x611 * x132))) + (x98 * x611);
	const FLT x617 = x616 * x181;
	const FLT x618 = (x616 * x186) + (x99 * (x617 + (-1 * x616 * x185)));
	const FLT x619 = (x616 * x188) + (x99 * x618);
	const FLT x620 = (-1 * x615 * x154) + (x611 * x114);
	const FLT x621 = ((-1 * x614 * x157) + (x613 * x156)) * x158;
	const FLT x622 = x621 + (-1 * x620 * x153);
	const FLT x623 =
		x621 + (-1 * x125 *
				(x620 + (x622 * x166) +
				 (-1 * x164 *
				  ((-1 * x622 * x163) +
				   (-1 * x118 *
					((x616 * x190) +
					 (x99 * (x619 + (x616 * x179) +
							 (x99 * (x618 + (x616 * x180) + (x99 * ((x616 * x183) + (-1 * x616 * x184) + x617)))))) +
					 (x99 * x619) + (x616 * x178))))) +
				 (x616 * x194) + (x619 * x123)));
	const FLT x624 = dt * x415;
	const FLT x625 = dt * x417;
	const FLT x626 = x625 + x624;
	const FLT x627 = -1 * dt * x421;
	const FLT x628 = (-1 * dt * x419) + dt;
	const FLT x629 = x628 + x627;
	const FLT x630 = dt * x424;
	const FLT x631 = dt * x425;
	const FLT x632 = x631 + (-1 * x630);
	const FLT x633 = (x632 * x142) + (x629 * x138);
	const FLT x634 = (-1 * x145 * (x633 + (x626 * x132))) + (x98 * x626);
	const FLT x635 = x634 * x181;
	const FLT x636 = (x634 * x186) + (x99 * (x635 + (-1 * x634 * x185)));
	const FLT x637 = (x634 * x188) + (x99 * x636);
	const FLT x638 = (-1 * x633 * x154) + (x626 * x114);
	const FLT x639 = ((-1 * x632 * x157) + (x629 * x156)) * x158;
	const FLT x640 = x639 + (-1 * x638 * x153);
	const FLT x641 =
		x639 + (-1 * x125 *
				((x640 * x166) + (x637 * x123) +
				 (-1 * x164 *
				  ((-1 * x640 * x163) +
				   (-1 * x118 *
					((x99 * (x637 + (x634 * x179) +
							 (x99 * (x636 + (x634 * x180) + (x99 * ((-1 * x634 * x184) + x635 + (x634 * x183))))))) +
					 (x99 * x637) + (x634 * x178) + (x634 * x190))))) +
				 x638 + (x634 * x194)));
	const FLT x642 = -1 * dt * x437;
	const FLT x643 = x628 + x642;
	const FLT x644 = x624 + (-1 * x625);
	const FLT x645 = dt * x441;
	const FLT x646 = dt * x442;
	const FLT x647 = x646 + x645;
	const FLT x648 = (x647 * x142) + (x644 * x138);
	const FLT x649 = (-1 * x145 * (x648 + (x643 * x132))) + (x98 * x643);
	const FLT x650 = x649 * x181;
	const FLT x651 = (x649 * x186) + (x99 * (x650 + (-1 * x649 * x185)));
	const FLT x652 = (x649 * x188) + (x99 * x651);
	const FLT x653 = (-1 * x648 * x154) + (x643 * x114);
	const FLT x654 = ((-1 * x647 * x157) + (x644 * x156)) * x158;
	const FLT x655 = x654 + (-1 * x653 * x153);
	const FLT x656 =
		x654 + (-1 * x125 *
				(x653 + (x655 * x166) +
				 (-1 * x164 *
				  ((-1 * x655 * x163) +
				   (-1 * x118 *
					((x99 * x652) +
					 (x99 * (x652 + (x649 * x179) +
							 (x99 * (x651 + (x649 * x180) + (x99 * ((-1 * x649 * x184) + x650 + (x649 * x183))))))) +
					 (x649 * x190) + (x649 * x178))))) +
				 (x649 * x194) + (x652 * x123)));
	const FLT x657 = x645 + (-1 * x646);
	const FLT x658 = x630 + x631;
	const FLT x659 = x627 + dt + x642;
	const FLT x660 = (x659 * x142) + (x658 * x138);
	const FLT x661 = (-1 * x145 * (x660 + (x657 * x132))) + (x98 * x657);
	const FLT x662 = x661 * x181;
	const FLT x663 = (x661 * x186) + (x99 * (x662 + (-1 * x661 * x185)));
	const FLT x664 = (x661 * x188) + (x99 * x663);
	const FLT x665 = (-1 * x660 * x154) + (x657 * x114);
	const FLT x666 = ((-1 * x659 * x157) + (x658 * x156)) * x158;
	const FLT x667 = x666 + (-1 * x665 * x153);
	const FLT x668 =
		x666 +
		(-1 * x125 *
		 ((x661 * x194) +
		  (-1 * x164 *
		   ((-1 * x667 * x163) +
			(-1 * x118 *
			 ((x99 * x664) + (x661 * x178) + (x661 * x190) +
			  (x99 * (x664 + (x661 * x179) +
					  (x99 * (x663 + (x661 * x180) + (x99 * ((-1 * x661 * x184) + x662 + (x661 * x183))))))))))) +
		  (x664 * x123) + x665 + (x667 * x166)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT), x167 + (x168 * x167));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT), x195 + (x168 * x195));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT), x207 + (x207 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x317 + (x317 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x371 + (x371 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x414 + (x414 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT), x436 + (x436 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT), x452 + (x452 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT), x464 + (x464 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x547 + (x547 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x590 + (x590 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x623 + (x623 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT), x641 + (x641 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT), x656 + (x656 * x168));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT), x668 + (x668 * x168));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*error_model).AccBias[0],
// (*error_model).AccBias[1], (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2],
// (*error_model).IMUCorrection[0], (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2],
// (*error_model).IMUCorrection[3], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae17400>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x2);
	const FLT x9 = sin(x4);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x3 * x9;
	const FLT x13 = x5 * x8;
	const FLT x14 = (x1 * x13) + (-1 * x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x11 * x11) + (x14 * x14) + (x15 * x15));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x17 * x16;
	const FLT x20 = x17 * (*_x0).Pose.Rot[2];
	const FLT x21 = x15 * x17;
	const FLT x22 = (-1 * x11 * x18) + (x21 * (*_x0).Pose.Rot[1]) + (x20 * x14) + (x19 * (*_x0).Pose.Rot[0]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x24 = dt * dt;
	const FLT x25 = x24 * (x23 * x23);
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = x11 * x17;
	const FLT x35 = x14 * x17;
	const FLT x36 = (x18 * x16) + (-1 * x35 * (*_x0).Pose.Rot[1]) + (x20 * x15) + (x34 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) + (-1 * x35 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * x11);
	const FLT x38 = (x34 * (*_x0).Pose.Rot[1]) + (x35 * (*_x0).Pose.Rot[0]) + (x15 * x18) + (-1 * x20 * x16);
	const FLT x39 = (1. / x30) * (x33 * x33);
	const FLT x40 = cos(x32);
	const FLT x41 = (1. / sqrt((x22 * x22) + (x38 * x38) + (x36 * x36) + (x37 * x37))) *
					(1. / sqrt((x40 * x40) + (x39 * x25) + (x39 * x27) + (x39 * x29)));
	const FLT x42 = dt * x41 * (1. / x31) * x33;
	const FLT x43 = x42 * x23;
	const FLT x44 = x43 * x22;
	const FLT x45 = x40 * x41;
	const FLT x46 = x45 * x36;
	const FLT x47 = x42 * x26;
	const FLT x48 = x47 * x38;
	const FLT x49 = x42 * x28;
	const FLT x50 = x49 * x37;
	const FLT x51 = (-1 * x50) + x48 + (-1 * x44) + (-1 * x46);
	const FLT x52 = x43 * x36;
	const FLT x53 = x49 * x38;
	const FLT x54 = x45 * x22;
	const FLT x55 = x47 * x37;
	const FLT x56 = x55 + x54 + (-1 * x52) + x53;
	const FLT x57 = 2 * x56;
	const FLT x58 = (-1 * x47 * x22) + (x45 * x37) + (-1 * x43 * x38) + (-1 * x49 * x36);
	const FLT x59 = x43 * x37;
	const FLT x60 = x49 * x22;
	const FLT x61 = x45 * x38;
	const FLT x62 = x47 * x36;
	const FLT x63 = x62 + x59 + x61 + (-1 * x60);
	const FLT x64 = 2 * x63;
	const FLT x65 = x64 * x58;
	const FLT x66 = x65 + (-1 * x51 * x57);
	const FLT x67 = x46 + x50 + (-1 * x48) + x44;
	const FLT x68 = 2 * x67;
	const FLT x69 = 1 + (x68 * x51) + (-2 * (x63 * x63));
	const FLT x70 = x68 * x58;
	const FLT x71 = (x63 * x57) + (-1 * x70);
	const FLT x72 = (x71 * (*lh_p).Rot[2]) + (-1 * x66 * (*lh_p).Rot[3]) + (x69 * (*lh_p).Rot[0]);
	const FLT x73 = 2 * (*lh_p).Rot[3];
	const FLT x74 = (x66 * (*lh_p).Rot[1]) + (-1 * x69 * (*lh_p).Rot[2]) + (x71 * (*lh_p).Rot[0]);
	const FLT x75 = 2 * (*lh_p).Rot[1];
	const FLT x76 = (x73 * x72) + x66 + (-1 * x75 * x74);
	const FLT x77 = (-1 * x63 * sensor_pt[1]) + (x67 * sensor_pt[2]) + (x58 * sensor_pt[0]);
	const FLT x78 = (-1 * x56 * sensor_pt[2]) + (x63 * sensor_pt[0]) + (x58 * sensor_pt[1]);
	const FLT x79 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x80 = (*error_model).Pose.Pos[2] + (*_x0).Pose.Pos[2] + (2 * ((x78 * x56) + (-1 * x77 * x67))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) +
					(x79 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2];
	const FLT x81 = (-1 * x67 * sensor_pt[0]) + (x58 * sensor_pt[2]) + (x56 * sensor_pt[1]);
	const FLT x82 = (*error_model).Pose.Pos[1] + (x79 * ((*_x0).Acc[1] + (*error_model).Acc[1])) +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(2 * ((x77 * x63) + (-1 * x81 * x56))) + sensor_pt[1] + (*_x0).Pose.Pos[1];
	const FLT x83 = (x79 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (2 * ((x81 * x67) + (-1 * x78 * x63))) +
					sensor_pt[0] + (dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) +
					(*error_model).Pose.Pos[0] + (*_x0).Pose.Pos[0];
	const FLT x84 = (-1 * x83 * (*lh_p).Rot[2]) + (x80 * (*lh_p).Rot[0]) + (x82 * (*lh_p).Rot[1]);
	const FLT x85 = (x83 * (*lh_p).Rot[0]) + (-1 * x82 * (*lh_p).Rot[3]) + (x80 * (*lh_p).Rot[2]);
	const FLT x86 = x82 + (*lh_p).Pos[1] + (2 * ((x85 * (*lh_p).Rot[3]) + (-1 * x84 * (*lh_p).Rot[1])));
	const FLT x87 = x86 * x86;
	const FLT x88 = (-1 * x80 * (*lh_p).Rot[1]) + (x82 * (*lh_p).Rot[0]) + (x83 * (*lh_p).Rot[3]);
	const FLT x89 = x80 + (2 * ((x88 * (*lh_p).Rot[1]) + (-1 * x85 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x90 = x83 + (*lh_p).Pos[0] + (2 * ((x84 * (*lh_p).Rot[2]) + (-1 * x88 * (*lh_p).Rot[3])));
	const FLT x91 = x90 * x90;
	const FLT x92 = x91 + (x89 * x89);
	const FLT x93 = x92 + x87;
	const FLT x94 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x95 = cos(x94);
	const FLT x96 = 1. / x95;
	const FLT x97 = (1. / sqrt(x93)) * x96;
	const FLT x98 = 2 * x86;
	const FLT x99 = 2 * (*lh_p).Rot[2];
	const FLT x100 = (-1 * x71 * (*lh_p).Rot[1]) + (x69 * (*lh_p).Rot[3]) + (x66 * (*lh_p).Rot[0]);
	const FLT x101 = x69 + (x74 * x99) + (-1 * x73 * x100);
	const FLT x102 = 2 * x90;
	const FLT x103 = x71 + (x75 * x100) + (-1 * x72 * x99);
	const FLT x104 = 2 * x89;
	const FLT x105 = (x103 * x104) + (x101 * x102);
	const FLT x106 = 1.0 / 2.0 * x86;
	const FLT x107 = (1. / (x93 * sqrt(x93))) * x96 * x106;
	const FLT x108 = (-1 * x107 * (x105 + (x76 * x98))) + (x76 * x97);
	const FLT x109 = asin(x86 * x97);
	const FLT x110 = -8.0108022e-06 + (-1.60216044e-05 * x109);
	const FLT x111 = 8.0108022e-06 * x109;
	const FLT x112 = -8.0108022e-06 + (-1 * x111);
	const FLT x113 = 0.0028679863 + (x109 * x112);
	const FLT x114 = x113 + (x109 * x110);
	const FLT x115 = 5.3685255e-06 + (x109 * x113);
	const FLT x116 = x115 + (x109 * x114);
	const FLT x117 = 1. / sqrt(1 + (-1 * x87 * (1. / x93) * (1. / (x95 * x95))));
	const FLT x118 = x116 * x117;
	const FLT x119 = x108 * x117;
	const FLT x120 = x112 * x119;
	const FLT x121 = 2.40324066e-05 * x109;
	const FLT x122 = (x113 * x119) + (x109 * (x120 + (-1 * x111 * x119)));
	const FLT x123 = (x119 * x115) + (x109 * x122);
	const FLT x124 = 0.0076069798 + (x109 * x115);
	const FLT x125 = x124 + (x109 * x116);
	const FLT x126 = x117 * x125;
	const FLT x127 = sin(x94);
	const FLT x128 = atan2(-1 * x89, x90);
	const FLT x129 = tan(x94);
	const FLT x130 = (1. / sqrt(x92)) * x129;
	const FLT x131 = x86 * x130;
	const FLT x132 = (-1 * asin(x131)) + (*bsc0).ogeephase + x128;
	const FLT x133 = (sin(x132) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x134 = x127 * x133;
	const FLT x135 = 1. / x92;
	const FLT x136 = 1. / sqrt(1 + (-1 * x87 * (x129 * x129) * x135));
	const FLT x137 = (1. / (x92 * sqrt(x92))) * x106 * x129;
	const FLT x138 = (-1 * x105 * x137) + (x76 * x130);
	const FLT x139 = x89 * (1. / x91);
	const FLT x140 = 1. / x90;
	const FLT x141 = x91 * x135;
	const FLT x142 = ((-1 * x103 * x140) + (x101 * x139)) * x141;
	const FLT x143 = x142 + (-1 * x138 * x136);
	const FLT x144 = cos(x132) * (*bsc0).ogeemag;
	const FLT x145 = x109 * x124;
	const FLT x146 = (x109 * x125) + x145;
	const FLT x147 = x127 * x146;
	const FLT x148 = x144 * x147;
	const FLT x149 = x95 + (-1 * x134 * x146);
	const FLT x150 = x109 * x109;
	const FLT x151 = x133 * x150;
	const FLT x152 = x124 * (1. / (x149 * x149)) * x151;
	const FLT x153 = 1. / x149;
	const FLT x154 = 2 * x133 * x145 * x153;
	const FLT x155 = x151 * x153;
	const FLT x156 = x124 * x150 * x153;
	const FLT x157 = x144 * x156;
	const FLT x158 = x131 + (x124 * x155);
	const FLT x159 = 1. / sqrt(1 + (-1 * (x158 * x158)));
	const FLT x160 =
		x142 + (-1 * x159 *
				((x143 * x157) + (x123 * x155) +
				 (-1 * x152 *
				  ((-1 * x143 * x148) +
				   (-1 * x134 *
					((x119 * x124) + (x109 * x123) +
					 (x109 * (x123 + (x108 * x118) +
							  (x109 * (x122 + (x119 * x114) + (x109 * ((-1 * x119 * x121) + (x110 * x119) + x120)))))) +
					 (x108 * x126))))) +
				 x138 + (x119 * x154)));
	const FLT x161 = cos((-1 * asin(x158)) + (*bsc0).gibpha + x128) * (*bsc0).gibmag;
	const FLT x162 = (-1 * x59) + (-1 * x62) + x60 + (-1 * x61);
	const FLT x163 = 1 + (x64 * x162) + (-2 * (x56 * x56));
	const FLT x164 = (x67 * x57) + (-1 * x65);
	const FLT x165 = x58 * x57;
	const FLT x166 = x165 + (-1 * x68 * x162);
	const FLT x167 = (-1 * x163 * (*lh_p).Rot[3]) + (x166 * (*lh_p).Rot[2]) + (x164 * (*lh_p).Rot[0]);
	const FLT x168 = (-1 * x164 * (*lh_p).Rot[2]) + (x163 * (*lh_p).Rot[1]) + (x166 * (*lh_p).Rot[0]);
	const FLT x169 = x163 + (x73 * x167) + (-1 * x75 * x168);
	const FLT x170 = (x164 * (*lh_p).Rot[3]) + (-1 * x166 * (*lh_p).Rot[1]) + (x163 * (*lh_p).Rot[0]);
	const FLT x171 = x164 + (x99 * x168) + (-1 * x73 * x170);
	const FLT x172 = (x75 * x170) + x166 + (-1 * x99 * x167);
	const FLT x173 = (x104 * x172) + (x102 * x171);
	const FLT x174 = (-1 * x107 * (x173 + (x98 * x169))) + (x97 * x169);
	const FLT x175 = x117 * x174;
	const FLT x176 = x112 * x175;
	const FLT x177 = (x113 * x175) + (x109 * (x176 + (-1 * x111 * x175)));
	const FLT x178 = (x115 * x175) + (x109 * x177);
	const FLT x179 = (-1 * x173 * x137) + (x169 * x130);
	const FLT x180 = ((-1 * x172 * x140) + (x171 * x139)) * x141;
	const FLT x181 = x180 + (-1 * x179 * x136);
	const FLT x182 =
		x180 + (-1 * x159 *
				(x179 + (x175 * x154) + (x181 * x157) +
				 (-1 * x152 *
				  ((-1 * x181 * x148) +
				   (-1 * x134 *
					((x109 * x178) + (x126 * x174) +
					 (x109 * ((x118 * x174) + x178 +
							  (x109 * (x177 + (x114 * x175) + (x109 * ((-1 * x121 * x175) + x176 + (x110 * x175))))))) +
					 (x124 * x175))))) +
				 (x178 * x155)));
	const FLT x183 = (x64 * x67) + (-1 * x165);
	const FLT x184 = (-1 * x54) + (-1 * x55) + (-1 * x53) + x52;
	const FLT x185 = x70 + (-1 * x64 * x184);
	const FLT x186 = 1 + (x57 * x184) + (-2 * (x67 * x67));
	const FLT x187 = (x186 * (*lh_p).Rot[2]) + (-1 * x183 * (*lh_p).Rot[3]) + (x185 * (*lh_p).Rot[0]);
	const FLT x188 = (x183 * (*lh_p).Rot[1]) + (-1 * x185 * (*lh_p).Rot[2]) + (x186 * (*lh_p).Rot[0]);
	const FLT x189 = x183 + (x73 * x187) + (-1 * x75 * x188);
	const FLT x190 = 2 * ((-1 * x186 * (*lh_p).Rot[1]) + (x185 * (*lh_p).Rot[3]) + (x183 * (*lh_p).Rot[0]));
	const FLT x191 = x185 + (x99 * x188) + (-1 * x190 * (*lh_p).Rot[3]);
	const FLT x192 = x186 + (x190 * (*lh_p).Rot[1]) + (-1 * x99 * x187);
	const FLT x193 = (x104 * x192) + (x102 * x191);
	const FLT x194 = (-1 * x107 * (x193 + (x98 * x189))) + (x97 * x189);
	const FLT x195 = x117 * x194;
	const FLT x196 = x112 * x195;
	const FLT x197 = (x113 * x195) + (x109 * (x196 + (-1 * x111 * x195)));
	const FLT x198 = (x115 * x195) + (x109 * x197);
	const FLT x199 = (-1 * x193 * x137) + (x189 * x130);
	const FLT x200 = ((-1 * x192 * x140) + (x191 * x139)) * x141;
	const FLT x201 = x144 * (x200 + (-1 * x199 * x136));
	const FLT x202 =
		x200 + (-1 * x159 *
				(x199 + (x201 * x156) +
				 (-1 * x152 *
				  ((-1 * x201 * x147) +
				   (-1 * x134 *
					((x109 * x198) + (x126 * x194) +
					 (x109 * (x198 + (x118 * x194) +
							  (x109 * (x197 + (x114 * x195) + (x109 * ((-1 * x121 * x195) + x196 + (x110 * x195))))))) +
					 (x124 * x195))))) +
				 (x195 * x154) + (x198 * x155)));
	cnMatrixOptionalSet(Hx, 0, 0, x160 + (x161 * x160));
	cnMatrixOptionalSet(Hx, 0, 1, x182 + (x161 * x182));
	cnMatrixOptionalSet(Hx, 0, 2, x202 + (x202 * x161));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x4);
	const FLT x8 = sin(x0);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x1 * x9;
	const FLT x13 = (x7 * x12) + (x6 * x8);
	const FLT x14 = x3 * x7;
	const FLT x15 = (x5 * x12) + (x8 * x14);
	const FLT x16 = (x1 * x14) + (-1 * x5 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x13 * x13));
	const FLT x18 = x13 * x17;
	const FLT x19 = x17 * x16;
	const FLT x20 = x11 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 = (x20 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[3]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x24 = dt * dt;
	const FLT x25 = x24 * (x23 * x23);
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x18 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[2]) + (-1 * x21 * (*_x0).Pose.Rot[3]) +
					(x19 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x22 * x22) + (x34 * x34) + (x36 * x36) + (x35 * x35))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x28;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x26;
	const FLT x45 = (x43 * x35) + (-1 * x44 * x36) + (-1 * x41 * x22) + (-1 * x42 * x34);
	const FLT x46 = x40 * x34;
	const FLT x47 = x40 * x35;
	const FLT x48 = (-1 * x46 * x23) + (x47 * x26) + (x43 * x36) + (x42 * x22);
	const FLT x49 = (x43 * x34) + (x42 * x35) + (-1 * x44 * x22) + (x41 * x36);
	const FLT x50 = (x45 * sensor_pt[2]) + (-1 * x49 * sensor_pt[0]) + (x48 * sensor_pt[1]);
	const FLT x51 = (x46 * x26) + (x43 * x22) + (x47 * x23) + (-1 * x42 * x36);
	const FLT x52 = (-1 * x51 * sensor_pt[1]) + (x49 * sensor_pt[2]) + (x45 * sensor_pt[0]);
	const FLT x53 = 2 * ((x52 * x51) + (-1 * x50 * x48));
	const FLT x54 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x55 = x54 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x56 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x57 = x56 + (*error_model).Pose.Pos[1] + sensor_pt[1] + x53 + x55 + (*_x0).Pose.Pos[1];
	const FLT x58 = x57 * (*lh_p).Rot[0];
	const FLT x59 = (-1 * x48 * sensor_pt[2]) + (x51 * sensor_pt[0]) + (x45 * sensor_pt[1]);
	const FLT x60 = 2 * ((x50 * x49) + (-1 * x51 * x59));
	const FLT x61 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x62 = x54 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x63 = x62 + x60 + sensor_pt[0] + x61 + (*error_model).Pose.Pos[0] + (*_x0).Pose.Pos[0];
	const FLT x64 = x63 * (*lh_p).Rot[3];
	const FLT x65 = 2 * ((x59 * x48) + (-1 * x52 * x49));
	const FLT x66 = x54 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x67 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x68 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + x65 + sensor_pt[2] + x66 + x67;
	const FLT x69 = x68 * (*lh_p).Rot[1];
	const FLT x70 = x58 + (-1 * x69) + x64;
	const FLT x71 = x68 * (*lh_p).Rot[0];
	const FLT x72 = x57 * (*lh_p).Rot[1];
	const FLT x73 = x63 * (*lh_p).Rot[2];
	const FLT x74 = (-1 * x73) + x71 + x72;
	const FLT x75 = x63 + (*lh_p).Pos[0] + (2 * ((x74 * (*lh_p).Rot[2]) + (-1 * x70 * (*lh_p).Rot[3])));
	const FLT x76 = x63 * (*lh_p).Rot[0];
	const FLT x77 = x68 * (*lh_p).Rot[2];
	const FLT x78 = x57 * (*lh_p).Rot[3];
	const FLT x79 = x76 + (-1 * x78) + x77;
	const FLT x80 = x57 + (*lh_p).Pos[1] + (2 * ((x79 * (*lh_p).Rot[3]) + (-1 * x74 * (*lh_p).Rot[1])));
	const FLT x81 = x80 * x75;
	const FLT x82 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x83 = tan(x82);
	const FLT x84 = x68 + (2 * ((x70 * (*lh_p).Rot[1]) + (-1 * x79 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x85 = x75 * x75;
	const FLT x86 = x85 + (x84 * x84);
	const FLT x87 = x83 * (1. / (x86 * sqrt(x86)));
	const FLT x88 = x81 * x87;
	const FLT x89 = 1. / x86;
	const FLT x90 = x80 * x80;
	const FLT x91 = 1. / sqrt(1 + (-1 * (x83 * x83) * x89 * x90));
	const FLT x92 = x89 * x84;
	const FLT x93 = x92 + (x88 * x91);
	const FLT x94 = atan2(-1 * x84, x75);
	const FLT x95 = x83 * (1. / sqrt(x86));
	const FLT x96 = x80 * x95;
	const FLT x97 = (-1 * asin(x96)) + (*bsc0).ogeephase + x94;
	const FLT x98 = cos(x97) * (*bsc0).ogeemag;
	const FLT x99 = x86 + x90;
	const FLT x100 = cos(x82);
	const FLT x101 = 1. / x100;
	const FLT x102 = (1. / sqrt(x99)) * x101;
	const FLT x103 = asin(x80 * x102);
	const FLT x104 = 8.0108022e-06 * x103;
	const FLT x105 = -8.0108022e-06 + (-1 * x104);
	const FLT x106 = 0.0028679863 + (x103 * x105);
	const FLT x107 = 5.3685255e-06 + (x103 * x106);
	const FLT x108 = 0.0076069798 + (x103 * x107);
	const FLT x109 = x103 * x108;
	const FLT x110 = -8.0108022e-06 + (-1.60216044e-05 * x103);
	const FLT x111 = x106 + (x103 * x110);
	const FLT x112 = x107 + (x103 * x111);
	const FLT x113 = x108 + (x103 * x112);
	const FLT x114 = (x103 * x113) + x109;
	const FLT x115 = sin(x82);
	const FLT x116 = (sin(x97) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x117 = x115 * x116;
	const FLT x118 = x100 + (-1 * x114 * x117);
	const FLT x119 = 1. / x118;
	const FLT x120 = x103 * x103;
	const FLT x121 = x108 * x120;
	const FLT x122 = x119 * x121;
	const FLT x123 = x98 * x122;
	const FLT x124 = (1. / (x99 * sqrt(x99))) * x101;
	const FLT x125 = x81 * x124;
	const FLT x126 = 1. / sqrt(1 + (-1 * x90 * (1. / x99) * (1. / (x100 * x100))));
	const FLT x127 = x112 * x126;
	const FLT x128 = x111 * x126;
	const FLT x129 = x105 * x126;
	const FLT x130 = -1 * x125 * x129;
	const FLT x131 = x110 * x126;
	const FLT x132 = 2.40324066e-05 * x103;
	const FLT x133 = x126 * x132;
	const FLT x134 = x104 * x126;
	const FLT x135 = x106 * x126;
	const FLT x136 = (-1 * x125 * x135) + (x103 * (x130 + (x125 * x134)));
	const FLT x137 = x107 * x126;
	const FLT x138 = (-1 * x125 * x137) + (x103 * x136);
	const FLT x139 = x113 * x126;
	const FLT x140 = x108 * x126;
	const FLT x141 = x114 * x115;
	const FLT x142 = x98 * x141;
	const FLT x143 = (1. / (x118 * x118)) * x116 * x121;
	const FLT x144 = x119 * x116;
	const FLT x145 = x120 * x144;
	const FLT x146 = 2 * x80;
	const FLT x147 = x109 * x144;
	const FLT x148 = x126 * x147;
	const FLT x149 = x96 + (x108 * x145);
	const FLT x150 = 1. / sqrt(1 + (-1 * (x149 * x149)));
	const FLT x151 =
		x92 +
		(-1 * x150 *
		 ((-1 * x75 * x124 * x146 * x148) + (x138 * x145) +
		  (-1 * x143 *
		   ((-1 * x93 * x142) +
			(-1 * x117 *
			 ((x103 * x138) + (-1 * x125 * x140) +
			  (x103 * (x138 + (-1 * x127 * x125) +
					   (x103 * (x136 + (-1 * x128 * x125) + (x103 * ((x125 * x133) + x130 + (-1 * x125 * x131))))))) +
			  (-1 * x125 * x139))))) +
		  (-1 * x88) + (x93 * x123)));
	const FLT x152 = cos((-1 * asin(x149)) + (*bsc0).gibpha + x94) * (*bsc0).gibmag;
	const FLT x153 = (-1 * x90 * x124) + x102;
	const FLT x154 = x126 * x153;
	const FLT x155 = 2 * x147;
	const FLT x156 = x91 * x95;
	const FLT x157 = x129 * x153;
	const FLT x158 = (x106 * x154) + (x103 * (x157 + (-1 * x104 * x154)));
	const FLT x159 = (x137 * x153) + (x103 * x158);
	const FLT x160 =
		x150 * ((-1 * x143 *
				 ((x142 * x156) +
				  (-1 * x117 *
				   ((x103 * x159) + (x139 * x153) +
					(x103 * (x159 + (x112 * x154) +
							 (x103 * (x158 + (x111 * x154) + (x103 * ((-1 * x132 * x154) + (x131 * x153) + x157)))))) +
					(x108 * x154))))) +
				(x145 * x159) + x95 + (-1 * x123 * x156) + (x154 * x155));
	const FLT x161 = x80 * x87;
	const FLT x162 = x84 * x161;
	const FLT x163 = -1 * x89 * x75;
	const FLT x164 = x163 + (x91 * x162);
	const FLT x165 = x80 * x124;
	const FLT x166 = x84 * x165;
	const FLT x167 = -1 * x129 * x166;
	const FLT x168 = (-1 * x166 * x135) + (x103 * (x167 + (x166 * x134)));
	const FLT x169 = (-1 * x166 * x137) + (x103 * x168);
	const FLT x170 = 2 * x84;
	const FLT x171 =
		x163 +
		(-1 * x150 *
		 ((x169 * x145) + (-1 * x165 * x170 * x148) +
		  (-1 * x143 *
		   ((-1 * x164 * x142) +
			(-1 * x117 *
			 ((-1 * x166 * x140) +
			  (x103 * (x169 + (-1 * x127 * x166) +
					   (x103 * (x168 + (-1 * x128 * x166) + (x103 * ((x166 * x133) + x167 + (-1 * x166 * x131))))))) +
			  (x103 * x169) + (-1 * x166 * x139))))) +
		  (-1 * x162) + (x123 * x164)));
	const FLT x172 = 2 * x69;
	const FLT x173 = (2 * x64) + (-1 * x172);
	const FLT x174 = 2 * x78;
	const FLT x175 = (2 * x77) + (-1 * x174);
	const FLT x176 = 2 * x75;
	const FLT x177 = 2 * x73;
	const FLT x178 = (2 * x72) + (-1 * x177);
	const FLT x179 = (x170 * x178) + (x176 * x175);
	const FLT x180 = 1.0 / 2.0 * x165;
	const FLT x181 = (-1 * x180 * (x179 + (x173 * x146))) + (x102 * x173);
	const FLT x182 = x126 * x181;
	const FLT x183 = x129 * x181;
	const FLT x184 = (x106 * x182) + (x103 * (x183 + (-1 * x104 * x182)));
	const FLT x185 = (x181 * x137) + (x103 * x184);
	const FLT x186 = 1.0 / 2.0 * x161;
	const FLT x187 = (-1 * x179 * x186) + (x95 * x173);
	const FLT x188 = x84 * (1. / x85);
	const FLT x189 = 1. / x75;
	const FLT x190 = x89 * x85;
	const FLT x191 = ((-1 * x178 * x189) + (x175 * x188)) * x190;
	const FLT x192 = x191 + (-1 * x91 * x187);
	const FLT x193 =
		x191 + (-1 * x150 *
				(x187 + (x123 * x192) + (x182 * x155) + (x185 * x145) +
				 (-1 * x143 *
				  ((-1 * x192 * x142) +
				   (-1 * x117 *
					((x103 * x185) + (x108 * x182) +
					 (x103 * (x185 + (x112 * x182) +
							  (x103 * (x184 + (x111 * x182) + (x103 * (x183 + (-1 * x182 * x132) + (x181 * x131))))))) +
					 (x181 * x139)))))));
	const FLT x194 = 2 * x71;
	const FLT x195 = x177 + (-4 * x72) + (-1 * x194);
	const FLT x196 = (-1 * sensor_pt[2]) + (-1 * x65) + (-1 * x67) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x66) +
					 (-1 * (*error_model).Pose.Pos[2]);
	const FLT x197 = 2 * (*lh_p).Rot[3];
	const FLT x198 = 2 * (*lh_p).Rot[2];
	const FLT x199 = (x57 * x198) + (-1 * x196 * x197);
	const FLT x200 = 2 * x58;
	const FLT x201 = 2 * (*lh_p).Rot[1];
	const FLT x202 = x200 + x173 + (x201 * x196);
	const FLT x203 = (x202 * x170) + (x176 * x199);
	const FLT x204 = (-1 * x180 * (x203 + (x195 * x146))) + (x102 * x195);
	const FLT x205 = x204 * x126;
	const FLT x206 = x204 * x129;
	const FLT x207 = (x204 * x135) + (x103 * (x206 + (-1 * x205 * x104)));
	const FLT x208 = (x204 * x137) + (x207 * x103);
	const FLT x209 = (-1 * x203 * x186) + (x95 * x195);
	const FLT x210 = ((-1 * x202 * x189) + (x188 * x199)) * x190;
	const FLT x211 = x210 + (-1 * x91 * x209);
	const FLT x212 =
		x210 + (-1 * x150 *
				(x209 +
				 (-1 * x143 *
				  ((-1 * x211 * x142) +
				   (-1 * x117 *
					((x208 * x103) + (x204 * x139) +
					 (x103 * (x208 + (x205 * x112) +
							  (x103 * (x207 + (x204 * x128) + (x103 * ((-1 * x205 * x132) + (x204 * x131) + x206)))))) +
					 (x205 * x108))))) +
				 (x205 * x155) + (x211 * x123) + (x208 * x145)));
	const FLT x213 = 2 * ((-1 * (*error_model).Pose.Pos[0]) + (-1 * x60) + (-1 * sensor_pt[0]) + (-1 * x61) +
						  (-1 * (*_x0).Pose.Pos[0]) + (-1 * x62));
	const FLT x214 = (x68 * x197) + (-1 * x213 * (*lh_p).Rot[1]);
	const FLT x215 = x178 + (x213 * (*lh_p).Rot[2]) + x194;
	const FLT x216 = 2 * x76;
	const FLT x217 = x174 + (-4 * x77) + (-1 * x216);
	const FLT x218 = (x217 * x170) + (x215 * x176);
	const FLT x219 = (-1 * x180 * (x218 + (x214 * x146))) + (x214 * x102);
	const FLT x220 = x219 * x126;
	const FLT x221 = x219 * x129;
	const FLT x222 = (x219 * x135) + (x103 * (x221 + (-1 * x220 * x104)));
	const FLT x223 = (x219 * x137) + (x222 * x103);
	const FLT x224 = (-1 * x218 * x186) + (x95 * x214);
	const FLT x225 = ((-1 * x217 * x189) + (x215 * x188)) * x190;
	const FLT x226 = x225 + (-1 * x91 * x224);
	const FLT x227 =
		x225 + (-1 * x150 *
				(x224 + (x226 * x123) + (x220 * x155) +
				 (-1 * x143 *
				  ((-1 * x226 * x142) +
				   (-1 * x117 *
					((x220 * x108) + (x223 * x103) +
					 (x103 * (x223 + (x220 * x112) +
							  (x103 * (x222 + (x219 * x128) + (x103 * (x221 + (-1 * x220 * x132) + (x219 * x131))))))) +
					 (x219 * x139))))) +
				 (x223 * x145)));
	const FLT x228 = (-1 * x56) + (-1 * (*error_model).Pose.Pos[1]) + (-1 * sensor_pt[1]) + (-1 * x53) + (-1 * x55) +
					 (-1 * (*_x0).Pose.Pos[1]);
	const FLT x229 = x175 + (x228 * x197) + x216;
	const FLT x230 = x172 + (-1 * x200) + (-4 * x64);
	const FLT x231 = (x63 * x201) + (-1 * x228 * x198);
	const FLT x232 = (x231 * x170) + (x230 * x176);
	const FLT x233 = (-1 * x180 * (x232 + (x229 * x146))) + (x229 * x102);
	const FLT x234 = x233 * x126;
	const FLT x235 = x233 * x129;
	const FLT x236 = (x234 * x106) + (x103 * (x235 + (-1 * x234 * x104)));
	const FLT x237 = (x233 * x137) + (x236 * x103);
	const FLT x238 = (-1 * x232 * x186) + (x95 * x229);
	const FLT x239 = ((-1 * x231 * x189) + (x230 * x188)) * x190;
	const FLT x240 = x98 * (x239 + (-1 * x91 * x238));
	const FLT x241 =
		x239 + (-1 * x150 *
				((-1 * x143 *
				  ((-1 * x240 * x141) +
				   (-1 * x117 *
					((x237 * x103) + (x234 * x108) +
					 (x103 * (x237 + (x234 * x112) +
							  (x103 * (x236 + (x234 * x111) + (x103 * ((-1 * x234 * x132) + x235 + (x233 * x131))))))) +
					 (x233 * x139))))) +
				 (x234 * x155) + x238 + (x240 * x122) + (x237 * x145)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), x151 + (x151 * x152));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), (-1 * x160 * x152) + (-1 * x160));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x171 + (x171 * x152));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x193 + (x193 * x152));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x212 + (x212 * x152));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x227 + (x227 * x152));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x241 + (x241 * x152));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae111f0>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae112b0>, <cnkalman.codegen.WrapMember object at 0x7f5abae11250>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae11370>, <cnkalman.codegen.WrapMember object at 0x7f5abae11310>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae17fa0>, <cnkalman.codegen.WrapMember object at 0x7f5abae11190>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = cos(x0);
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = cos(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x8 = sin(x7);
	const FLT x9 = x6 * x8;
	const FLT x10 = sin(x3);
	const FLT x11 = cos(x7);
	const FLT x12 = cos(x5);
	const FLT x13 = x12 * x11;
	const FLT x14 = (x13 * x10) + (-1 * x4 * x9);
	const FLT x15 = (x4 * x13) + (x9 * x10);
	const FLT x16 = x8 * x12;
	const FLT x17 = x6 * x11;
	const FLT x18 = (x4 * x17) + (x10 * x16);
	const FLT x19 = (x4 * x16) + (-1 * x10 * x17);
	const FLT x20 = 1. / sqrt((x19 * x19) + (x18 * x18) + (x14 * x14) + (x15 * x15));
	const FLT x21 = x20 * x14;
	const FLT x22 = x20 * x18;
	const FLT x23 = x20 * x15;
	const FLT x24 = x20 * x19;
	const FLT x25 = (x23 * (*_x0).Pose.Rot[0]) + (-1 * x24 * (*_x0).Pose.Rot[1]) + (-1 * x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x26 = dt * dt;
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x28 = x26 * (x27 * x27);
	const FLT x29 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x30 = (x29 * x29) * x26;
	const FLT x31 = (x2 * x2) * x26;
	const FLT x32 = 1e-10 + x31 + x28 + x30;
	const FLT x33 = sqrt(x32);
	const FLT x34 = 0.5 * x33;
	const FLT x35 = sin(x34);
	const FLT x36 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x24 * (*_x0).Pose.Rot[3]) + (x23 * (*_x0).Pose.Rot[2]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (x22 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) + (x23 * (*_x0).Pose.Rot[3]) +
					(-1 * x24 * (*_x0).Pose.Rot[2]);
	const FLT x38 = (x23 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[2]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(x24 * (*_x0).Pose.Rot[0]);
	const FLT x39 = (1. / x32) * (x35 * x35);
	const FLT x40 = cos(x34);
	const FLT x41 = (1. / sqrt((x38 * x38) + (x37 * x37) + (x36 * x36) + (x25 * x25))) *
					(1. / sqrt((x30 * x39) + (x40 * x40) + (x39 * x28) + (x31 * x39)));
	const FLT x42 = dt * x41 * (1. / x33) * x35;
	const FLT x43 = x42 * x25;
	const FLT x44 = x42 * x27;
	const FLT x45 = x40 * x41;
	const FLT x46 = x42 * x37;
	const FLT x47 = (x2 * x43) + (-1 * x46 * x29) + (x45 * x36) + (x44 * x38);
	const FLT x48 = x42 * x36;
	const FLT x49 = x42 * x38;
	const FLT x50 = (x45 * x25) + (-1 * x44 * x37) + (-1 * x49 * x29) + (-1 * x2 * x48);
	const FLT x51 = (x48 * x29) + (x45 * x37) + (x44 * x25) + (-1 * x2 * x49);
	const FLT x52 = (-1 * x51 * sensor_pt[1]) + (x47 * sensor_pt[2]) + (x50 * sensor_pt[0]);
	const FLT x53 = (x43 * x29) + (-1 * x44 * x36) + (x45 * x38) + (x2 * x46);
	const FLT x54 = (-1 * x53 * sensor_pt[2]) + (x51 * sensor_pt[0]) + (x50 * sensor_pt[1]);
	const FLT x55 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x56 = (*error_model).Pose.Pos[2] + (x55 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + (*_x0).Pose.Pos[2] +
					(2 * ((x54 * x53) + (-1 * x52 * x47))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x57 = (-1 * x47 * sensor_pt[0]) + (x50 * sensor_pt[2]) + (x53 * sensor_pt[1]);
	const FLT x58 = (2 * ((x52 * x51) + (-1 * x53 * x57))) + (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x55 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x59 = (x55 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] +
					sensor_pt[0] + (2 * ((x57 * x47) + (-1 * x54 * x51))) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x60 = (-1 * x59 * (*lh_p).Rot[2]) + (x56 * (*lh_p).Rot[0]) + (x58 * (*lh_p).Rot[1]);
	const FLT x61 = (x59 * (*lh_p).Rot[0]) + (-1 * x58 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[2]);
	const FLT x62 = x58 + (*lh_p).Pos[1] + (2 * ((x61 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x63 = x62 * x62;
	const FLT x64 = (-1 * x56 * (*lh_p).Rot[1]) + (x58 * (*lh_p).Rot[0]) + (x59 * (*lh_p).Rot[3]);
	const FLT x65 = x56 + (2 * ((x64 * (*lh_p).Rot[1]) + (-1 * x61 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x66 = x59 + (*lh_p).Pos[0] + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x64 * (*lh_p).Rot[3])));
	const FLT x67 = (x66 * x66) + (x65 * x65);
	const FLT x68 = x67 + x63;
	const FLT x69 = x62 * (1. / sqrt(x68));
	const FLT x70 = asin((1. / x1) * x69);
	const FLT x71 = 8.0108022e-06 * x70;
	const FLT x72 = -8.0108022e-06 + (-1 * x71);
	const FLT x73 = 0.0028679863 + (x70 * x72);
	const FLT x74 = 5.3685255e-06 + (x70 * x73);
	const FLT x75 = 0.0076069798 + (x70 * x74);
	const FLT x76 = x70 * x70;
	const FLT x77 = sin(x0);
	const FLT x78 = x70 * x75;
	const FLT x79 = -8.0108022e-06 + (-1.60216044e-05 * x70);
	const FLT x80 = x73 + (x70 * x79);
	const FLT x81 = x74 + (x80 * x70);
	const FLT x82 = x75 + (x81 * x70);
	const FLT x83 = (x82 * x70) + x78;
	const FLT x84 = atan2(-1 * x65, x66);
	const FLT x85 = tan(x0);
	const FLT x86 = x62 * (1. / sqrt(x67));
	const FLT x87 = x85 * x86;
	const FLT x88 = (-1 * asin(x87)) + (*bsc0).ogeephase + x84;
	const FLT x89 = sin(x88);
	const FLT x90 = (x89 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x91 = x83 * x90;
	const FLT x92 = x77 * x91;
	const FLT x93 = x1 + (-1 * x92);
	const FLT x94 = 1. / x93;
	const FLT x95 = x76 * x94;
	const FLT x96 = x75 * x95;
	const FLT x97 = x75 * x76 * (1. / (x93 * x93));
	const FLT x98 = x92 * x97;
	const FLT x99 = x87 + (x90 * x96);
	const FLT x100 = 1. / sqrt(1 + (-1 * (x99 * x99)));
	const FLT x101 = (x98 + x96) * x100;
	const FLT x102 = (-1 * asin(x99)) + (*bsc0).gibpha + x84;
	const FLT x103 = cos(x102) * (*bsc0).gibmag;
	const FLT x104 = ((x89 * x98) + (x89 * x96)) * x100;
	const FLT x105 = cos(x88) * (*bsc0).ogeemag;
	const FLT x106 = x96 * x105;
	const FLT x107 = x100 * ((x98 * x105) + x106);
	const FLT x108 = x85 * x85;
	const FLT x109 = x86 * (1 + x108);
	const FLT x110 = 1. / (x1 * x1);
	const FLT x111 = x69 * x110 * (1. / sqrt(1 + (-1 * x63 * (1. / x68) * x110)));
	const FLT x112 = x77 * x111;
	const FLT x113 = x72 * x112;
	const FLT x114 = (x73 * x112) + (x70 * (x113 + (-1 * x71 * x112)));
	const FLT x115 = (x74 * x112) + (x70 * x114);
	const FLT x116 = x109 * (1. / sqrt(1 + (-1 * x63 * (1. / x67) * x108)));
	const FLT x117 = x77 * x90;
	const FLT x118 =
		x100 *
		((-1 * x90 * x97 *
		  ((-1 * x117 *
			((x70 * x115) +
			 (x70 * ((x81 * x112) + x115 +
					 (x70 * (x114 + (x80 * x112) + (x70 * (x113 + (-2.40324066e-05 * x70 * x112) + (x79 * x112))))))) +
			 (x82 * x112) + (x75 * x112))) +
		   (-1 * x1 * x91) + (-1 * x77) + (x83 * x77 * x105 * x116))) +
		 (2 * x78 * x94 * x111 * x117) + (-1 * x106 * x116) + x109 + (x90 * x95 * x115));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), (-1 * x101 * x103) + (-1 * x101));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), sin(x102));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x103);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag) / sizeof(FLT), (-1 * x103 * x104) + (-1 * x104));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase) / sizeof(FLT), (-1 * x103 * x107) + (-1 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x103 * x118) + (-1 * x118));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae111f0>, <cnkalman.codegen.WrapMember object at 0x7f5abae112b0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae11250>, <cnkalman.codegen.WrapMember object at 0x7f5abae11370>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae11310>, <cnkalman.codegen.WrapMember object at 0x7f5abae17fa0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae11190>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_y_gen2(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x2 * x15) + (x4 * x11);
	const FLT x17 = (x4 * x13) + (-1 * x15 * x10);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x12 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x14 * x18;
	const FLT x22 = x18 * x17;
	const FLT x23 = (x21 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x22 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x24 = dt * dt;
	const FLT x25 = (x0 * x0) * x24;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[2]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x36 * x36) + (x35 * x35) + (x34 * x34) + (x23 * x23))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x36;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x34;
	const FLT x45 = (x43 * x35) + (x44 * x26) + (x0 * x41) + (-1 * x42 * x28);
	const FLT x46 = x40 * x35;
	const FLT x47 = (-1 * x42 * x26) + (x43 * x23) + (-1 * x0 * x46) + (-1 * x44 * x28);
	const FLT x48 = (x41 * x26) + (x43 * x36) + (-1 * x0 * x44) + (x46 * x28);
	const FLT x49 = (-1 * x48 * sensor_pt[2]) + (x45 * sensor_pt[0]) + (x47 * sensor_pt[1]);
	const FLT x50 = (-1 * x46 * x26) + (x43 * x34) + (x41 * x28) + (x0 * x42);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x47 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = (2 * ((x50 * x51) + (-1 * x45 * x49))) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(x52 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x54 = (-1 * x45 * sensor_pt[1]) + (x50 * sensor_pt[2]) + (x47 * sensor_pt[0]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x52 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x50 * x54))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x56 = (2 * ((x54 * x45) + (-1 * x51 * x48))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x52 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x57 = (-1 * x56 * (*lh_p).Rot[3]) + (x53 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x58 = (-1 * x55 * (*lh_p).Rot[1]) + (x56 * (*lh_p).Rot[0]) + (x53 * (*lh_p).Rot[3]);
	const FLT x59 = x55 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x57 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x60 = (-1 * x53 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x61 = (*lh_p).Pos[0] + x53 + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = atan2(-1 * x59, x61);
	const FLT x63 = (*lh_p).Pos[1] + x56 + (2 * ((x57 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x64 = (x61 * x61) + (x59 * x59);
	const FLT x65 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x66 = cos(x65);
	const FLT x67 = asin(x63 * (1. / x66) * (1. / sqrt(x64 + (x63 * x63))));
	const FLT x68 = 0.0028679863 + (x67 * (-8.0108022e-06 + (-8.0108022e-06 * x67)));
	const FLT x69 = 5.3685255e-06 + (x67 * x68);
	const FLT x70 = 0.0076069798 + (x67 * x69);
	const FLT x71 = -1 * x63 * (1. / sqrt(x64)) * tan(x65);
	const FLT x72 = ((*bsc0).ogeemag * sin((-1 * asin(x71)) + (*bsc0).ogeephase + x62)) + (*bsc0).curve;
	const FLT x73 = asin(
		x71 +
		(x70 * x72 * (x67 * x67) *
		 (1. /
		  (x66 + (x72 * sin(x65) *
				  ((x67 * (x70 + (x67 * (x69 + (x67 * (x68 + (x67 * (-8.0108022e-06 + (-1.60216044e-05 * x67))))))))) +
				   (x70 * x67)))))));
	return -1.5707963267949 + (-1 * x73) + (-1 * sin(x73 + (-1 * (*bsc0).gibpha) + (-1 * x62)) * (*bsc0).gibmag) + x62 +
		   (-1 * (*bsc0).phase);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1], (*_x0).AccBias[2],
// (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1], (*_x0).GyroBias[2],
// (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2], (*_x0).IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2],
// <cnkalman.codegen.WrapMember object at 0x7f5abae11ca0>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = dt * dt;
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x3 = x2 * x2;
	const FLT x4 = x1 * x3;
	const FLT x5 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x6 = x5 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = x0 * x0;
	const FLT x9 = x1 * x8;
	const FLT x10 = 1e-10 + x9 + x4 + x7;
	const FLT x11 = sqrt(x10);
	const FLT x12 = 0.5 * x11;
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * x13;
	const FLT x15 = 1. / x10;
	const FLT x16 = x15 * x14;
	const FLT x17 = cos(x12);
	const FLT x18 = (x7 * x16) + (x17 * x17) + (x4 * x16) + (x9 * x16);
	const FLT x19 = 1. / sqrt(x18);
	const FLT x20 = x13 * (1. / x11);
	const FLT x21 = dt * x20;
	const FLT x22 = x21 * x19;
	const FLT x23 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x24 = cos(x23);
	const FLT x25 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x26 = sin(x25);
	const FLT x27 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x28 = sin(x27);
	const FLT x29 = x28 * x26;
	const FLT x30 = cos(x25);
	const FLT x31 = cos(x27);
	const FLT x32 = sin(x23);
	const FLT x33 = x32 * x31;
	const FLT x34 = (x30 * x33) + (-1 * x24 * x29);
	const FLT x35 = x31 * x24;
	const FLT x36 = (x30 * x35) + (x32 * x29);
	const FLT x37 = x30 * x28;
	const FLT x38 = (x35 * x26) + (x32 * x37);
	const FLT x39 = (x37 * x24) + (-1 * x33 * x26);
	const FLT x40 = 1. / sqrt((x39 * x39) + (x38 * x38) + (x34 * x34) + (x36 * x36));
	const FLT x41 = x40 * x34;
	const FLT x42 = x40 * x38;
	const FLT x43 = x40 * (*_x0).Pose.Rot[0];
	const FLT x44 = x40 * x39;
	const FLT x45 = (-1 * x44 * (*_x0).Pose.Rot[1]) + (-1 * x41 * (*_x0).Pose.Rot[3]) + (x43 * x36) +
					(-1 * x42 * (*_x0).Pose.Rot[2]);
	const FLT x46 = x40 * x36;
	const FLT x47 =
		(-1 * x41 * (*_x0).Pose.Rot[1]) + (x44 * (*_x0).Pose.Rot[3]) + (x46 * (*_x0).Pose.Rot[2]) + (x43 * x38);
	const FLT x48 =
		(x43 * x34) + (x42 * (*_x0).Pose.Rot[1]) + (x46 * (*_x0).Pose.Rot[3]) + (-1 * x44 * (*_x0).Pose.Rot[2]);
	const FLT x49 =
		(x41 * (*_x0).Pose.Rot[2]) + (x46 * (*_x0).Pose.Rot[1]) + (-1 * x42 * (*_x0).Pose.Rot[3]) + (x43 * x39);
	const FLT x50 = (x49 * x49) + (x48 * x48) + (x47 * x47) + (x45 * x45);
	const FLT x51 = 1. / sqrt(x50);
	const FLT x52 = x51 * x45;
	const FLT x53 = x52 * x22;
	const FLT x54 = x51 * x49;
	const FLT x55 = x54 * x19;
	const FLT x56 = x55 * x21;
	const FLT x57 = x19 * x17;
	const FLT x58 = x51 * x57;
	const FLT x59 = x58 * x47;
	const FLT x60 = x51 * x48;
	const FLT x61 = x60 * x22;
	const FLT x62 = x59 + (-1 * x5 * x61) + (x0 * x53) + (x2 * x56);
	const FLT x63 = x51 * x47;
	const FLT x64 = x63 * x22;
	const FLT x65 = x58 * x45;
	const FLT x66 = (-1 * x5 * x56) + x65 + (-1 * x2 * x61) + (-1 * x0 * x64);
	const FLT x67 = x58 * x48;
	const FLT x68 = x67 + (x5 * x64) + (x2 * x53) + (-1 * x0 * x56);
	const FLT x69 = (-1 * x68 * sensor_pt[1]) + (x62 * sensor_pt[2]) + (x66 * sensor_pt[0]);
	const FLT x70 = x54 * x57;
	const FLT x71 = (x5 * x53) + x70 + (-1 * x2 * x64) + (x0 * x61);
	const FLT x72 = (-1 * x71 * sensor_pt[2]) + (x68 * sensor_pt[0]) + (x66 * sensor_pt[1]);
	const FLT x73 = dt * fabs(dt);
	const FLT x74 = 1.0 / 2.0 * x73;
	const FLT x75 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x71 * x72) + (-1 * x62 * x69))) +
					(x74 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x76 = (-1 * x62 * sensor_pt[0]) + (x66 * sensor_pt[2]) + (x71 * sensor_pt[1]);
	const FLT x77 = (2 * ((x68 * x69) + (-1 * x71 * x76))) + (*error_model).Pose.Pos[1] +
					(x74 * ((*_x0).Acc[1] + (*error_model).Acc[1])) +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(*_x0).Pose.Pos[1];
	const FLT x78 = (2 * ((x76 * x62) + (-1 * x72 * x68))) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) +
					(x74 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*_x0).Pose.Pos[0];
	const FLT x79 = (-1 * x78 * (*lh_p).Rot[2]) + (x75 * (*lh_p).Rot[0]) + (x77 * (*lh_p).Rot[1]);
	const FLT x80 = (-1 * x77 * (*lh_p).Rot[3]) + (x78 * (*lh_p).Rot[0]) + (x75 * (*lh_p).Rot[2]);
	const FLT x81 = x77 + (*lh_p).Pos[1] + (2 * ((x80 * (*lh_p).Rot[3]) + (-1 * x79 * (*lh_p).Rot[1])));
	const FLT x82 = x81 * x81;
	const FLT x83 = (-1 * x75 * (*lh_p).Rot[1]) + (x77 * (*lh_p).Rot[0]) + (x78 * (*lh_p).Rot[3]);
	const FLT x84 = x75 + (2 * ((x83 * (*lh_p).Rot[1]) + (-1 * x80 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x85 = x78 + (*lh_p).Pos[0] + (2 * ((x79 * (*lh_p).Rot[2]) + (-1 * x83 * (*lh_p).Rot[3])));
	const FLT x86 = x85 * x85;
	const FLT x87 = x86 + (x84 * x84);
	const FLT x88 = x87 + x82;
	const FLT x89 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x90 = cos(x89);
	const FLT x91 = 1. / x90;
	const FLT x92 = (1. / sqrt(x88)) * x91;
	const FLT x93 = asin(x81 * x92);
	const FLT x94 = 8.0108022e-06 * x93;
	const FLT x95 = -8.0108022e-06 + (-1 * x94);
	const FLT x96 = 0.0028679863 + (x93 * x95);
	const FLT x97 = 5.3685255e-06 + (x93 * x96);
	const FLT x98 = 0.0076069798 + (x93 * x97);
	const FLT x99 = x93 * x98;
	const FLT x100 = -8.0108022e-06 + (-1.60216044e-05 * x93);
	const FLT x101 = x96 + (x93 * x100);
	const FLT x102 = x97 + (x93 * x101);
	const FLT x103 = x98 + (x93 * x102);
	const FLT x104 = (x93 * x103) + x99;
	const FLT x105 = sin(x89);
	const FLT x106 = atan2(-1 * x84, x85);
	const FLT x107 = tan(x89);
	const FLT x108 = (1. / sqrt(x87)) * x107;
	const FLT x109 = -1 * x81 * x108;
	const FLT x110 = (*bsc0).ogeephase + (-1 * asin(x109)) + x106;
	const FLT x111 = (sin(x110) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x112 = x105 * x111;
	const FLT x113 = x90 + (x104 * x112);
	const FLT x114 = 1. / x113;
	const FLT x115 = x93 * x93;
	const FLT x116 = x111 * x115;
	const FLT x117 = x114 * x116;
	const FLT x118 = x109 + (x98 * x117);
	const FLT x119 = 1. / sqrt(1 + (-1 * (x118 * x118)));
	const FLT x120 = x73 * (*lh_p).Rot[1];
	const FLT x121 = x120 * (*lh_p).Rot[2];
	const FLT x122 = x73 * (*lh_p).Rot[0];
	const FLT x123 = x122 * (*lh_p).Rot[3];
	const FLT x124 = x123 + x121;
	const FLT x125 = 2 * x81;
	const FLT x126 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x127 = -1 * x73 * x126;
	const FLT x128 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x129 = (-1 * x73 * x128) + x74;
	const FLT x130 = x129 + x127;
	const FLT x131 = 2 * x85;
	const FLT x132 = x122 * (*lh_p).Rot[2];
	const FLT x133 = x120 * (*lh_p).Rot[3];
	const FLT x134 = x133 + (-1 * x132);
	const FLT x135 = 2 * x84;
	const FLT x136 = (x134 * x135) + (x130 * x131);
	const FLT x137 = 1.0 / 2.0 * x81;
	const FLT x138 = (1. / (x88 * sqrt(x88))) * x91 * x137;
	const FLT x139 = (-1 * x138 * (x136 + (x124 * x125))) + (x92 * x124);
	const FLT x140 = 1. / sqrt(1 + (-1 * x82 * (1. / x88) * (1. / (x90 * x90))));
	const FLT x141 = 2 * x99 * x111 * x114;
	const FLT x142 = x140 * x141;
	const FLT x143 = x94 * x140;
	const FLT x144 = x95 * x140;
	const FLT x145 = x139 * x144;
	const FLT x146 = x96 * x140;
	const FLT x147 = (x139 * x146) + (x93 * (x145 + (-1 * x139 * x143)));
	const FLT x148 = x97 * x140;
	const FLT x149 = (x139 * x148) + (x93 * x147);
	const FLT x150 = 1. / x87;
	const FLT x151 = 1. / sqrt(1 + (-1 * x82 * (x107 * x107) * x150));
	const FLT x152 = (1. / (x87 * sqrt(x87))) * x107 * x137;
	const FLT x153 = (x136 * x152) + (-1 * x108 * x124);
	const FLT x154 = x84 * (1. / x86);
	const FLT x155 = 1. / x85;
	const FLT x156 = x86 * x150;
	const FLT x157 = ((-1 * x134 * x155) + (x130 * x154)) * x156;
	const FLT x158 = x157 + (-1 * x151 * x153);
	const FLT x159 = cos(x110) * (*bsc0).ogeemag;
	const FLT x160 = x105 * x104;
	const FLT x161 = x160 * x159;
	const FLT x162 = x102 * x140;
	const FLT x163 = x101 * x140;
	const FLT x164 = x100 * x140;
	const FLT x165 = 2.40324066e-05 * x93;
	const FLT x166 = x165 * x140;
	const FLT x167 = x103 * x140;
	const FLT x168 = x98 * x140;
	const FLT x169 = x98 * (1. / (x113 * x113)) * x116;
	const FLT x170 = x98 * x114 * x115;
	const FLT x171 = x170 * x159;
	const FLT x172 =
		x119 *
		(x153 +
		 (-1 * x169 *
		  ((x112 * ((x93 * x149) + (x168 * x139) +
					(x93 * ((x162 * x139) + x149 +
							(x93 * (x147 + (x163 * x139) + (x93 * ((-1 * x166 * x139) + x145 + (x164 * x139))))))) +
					(x167 * x139))) +
		   (x161 * x158))) +
		 (x171 * x158) + (x139 * x142) + (x117 * x149));
	const FLT x173 = cos((-1 * asin(x118)) + (*bsc0).gibpha + x106) * (*bsc0).gibmag;
	const FLT x174 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x175 = -1 * x73 * x174;
	const FLT x176 = x175 + x127 + x74;
	const FLT x177 = x121 + (-1 * x123);
	const FLT x178 = x73 * (*lh_p).Rot[3] * (*lh_p).Rot[2];
	const FLT x179 = x120 * (*lh_p).Rot[0];
	const FLT x180 = x179 + x178;
	const FLT x181 = (x180 * x135) + (x177 * x131);
	const FLT x182 = (-1 * x138 * (x181 + (x125 * x176))) + (x92 * x176);
	const FLT x183 = (x181 * x152) + (-1 * x108 * x176);
	const FLT x184 = ((-1 * x180 * x155) + (x177 * x154)) * x156;
	const FLT x185 = x184 + (-1 * x183 * x151);
	const FLT x186 = x182 * x144;
	const FLT x187 = (x182 * x146) + (x93 * (x186 + (-1 * x182 * x143)));
	const FLT x188 = (x182 * x148) + (x93 * x187);
	const FLT x189 =
		x119 *
		(x183 + (x182 * x142) + (x171 * x185) + (x117 * x188) +
		 (-1 * x169 *
		  ((x112 * ((x168 * x182) +
					(x93 * (x188 + (x162 * x182) +
							(x93 * (x187 + (x163 * x182) + (x93 * ((-1 * x166 * x182) + (x164 * x182) + x186)))))) +
					(x93 * x188) + (x167 * x182))) +
		   (x161 * x185))));
	const FLT x190 = x178 + (-1 * x179);
	const FLT x191 = x132 + x133;
	const FLT x192 = x129 + x175;
	const FLT x193 = (x192 * x135) + (x191 * x131);
	const FLT x194 = (-1 * x138 * (x193 + (x125 * x190))) + (x92 * x190);
	const FLT x195 = (x193 * x152) + (-1 * x108 * x190);
	const FLT x196 = ((-1 * x192 * x155) + (x191 * x154)) * x156;
	const FLT x197 = x196 + (-1 * x195 * x151);
	const FLT x198 = x194 * x144;
	const FLT x199 = (x194 * x146) + (x93 * (x198 + (-1 * x194 * x143)));
	const FLT x200 = (x194 * x148) + (x93 * x199);
	const FLT x201 =
		x119 *
		((x171 * x197) + (x194 * x142) + x195 + (x200 * x117) +
		 (-1 * x169 *
		  ((x112 * ((x168 * x194) + (x93 * x200) + (x167 * x194) +
					(x93 * ((x162 * x194) + x200 +
							(x93 * ((x163 * x194) + x199 + (x93 * ((-1 * x166 * x194) + x198 + (x164 * x194))))))))) +
		   (x161 * x197))));
	const FLT x202 = 2 * (*lh_p).Rot[1];
	const FLT x203 = x202 * (*lh_p).Rot[2];
	const FLT x204 = 2 * (*lh_p).Rot[3];
	const FLT x205 = x204 * (*lh_p).Rot[0];
	const FLT x206 = x205 + x203;
	const FLT x207 = 2 * x128;
	const FLT x208 = -1 * x207;
	const FLT x209 = 2 * x126;
	const FLT x210 = 1 + (-1 * x209);
	const FLT x211 = x210 + x208;
	const FLT x212 = 2 * (*lh_p).Rot[2];
	const FLT x213 = x212 * (*lh_p).Rot[0];
	const FLT x214 = x202 * (*lh_p).Rot[3];
	const FLT x215 = x214 + (-1 * x213);
	const FLT x216 = (x215 * x135) + (x211 * x131);
	const FLT x217 = (-1 * x138 * (x216 + (x206 * x125))) + (x92 * x206);
	const FLT x218 = x217 * x140;
	const FLT x219 = (x216 * x152) + (-1 * x206 * x108);
	const FLT x220 = ((-1 * x215 * x155) + (x211 * x154)) * x156;
	const FLT x221 = x220 + (-1 * x219 * x151);
	const FLT x222 = x217 * x144;
	const FLT x223 = (x217 * x146) + (x93 * (x222 + (-1 * x94 * x218)));
	const FLT x224 = (x217 * x148) + (x93 * x223);
	const FLT x225 =
		x119 *
		((x221 * x171) + x219 + (x224 * x117) + (x218 * x141) +
		 (-1 * x169 *
		  ((x112 * ((x217 * x167) +
					(x93 * (x224 + (x217 * x162) +
							(x93 * (x223 + (x217 * x163) + (x93 * ((-1 * x218 * x165) + x222 + (x217 * x164))))))) +
					(x93 * x224) + (x217 * x168))) +
		   (x221 * x161))));
	const FLT x226 = 2 * x174;
	const FLT x227 = -1 * x226;
	const FLT x228 = x210 + x227;
	const FLT x229 = x203 + (-1 * x205);
	const FLT x230 = x204 * (*lh_p).Rot[2];
	const FLT x231 = x202 * (*lh_p).Rot[0];
	const FLT x232 = x231 + x230;
	const FLT x233 = (x232 * x135) + (x229 * x131);
	const FLT x234 = (x233 * x152) + (-1 * x228 * x108);
	const FLT x235 = ((-1 * x232 * x155) + (x229 * x154)) * x156;
	const FLT x236 = x235 + (-1 * x234 * x151);
	const FLT x237 = (-1 * x138 * (x233 + (x228 * x125))) + (x92 * x228);
	const FLT x238 = x237 * x140;
	const FLT x239 = x95 * x238;
	const FLT x240 = (x237 * x146) + (x93 * (x239 + (-1 * x94 * x238)));
	const FLT x241 = (x237 * x148) + (x93 * x240);
	const FLT x242 =
		x119 *
		(x234 + (x236 * x171) + (x238 * x141) +
		 (-1 * x169 *
		  ((x112 * ((x98 * x238) +
					(x93 * ((x238 * x102) + x241 +
							(x93 * (x240 + (x237 * x163) + (x93 * ((-1 * x238 * x165) + x239 + (x238 * x100))))))) +
					(x93 * x241) + (x238 * x103))) +
		   (x236 * x161))) +
		 (x241 * x117));
	const FLT x243 = x230 + (-1 * x231);
	const FLT x244 = x213 + x214;
	const FLT x245 = 1 + x227 + x208;
	const FLT x246 = (x245 * x135) + (x244 * x131);
	const FLT x247 = (-1 * x138 * (x246 + (x243 * x125))) + (x92 * x243);
	const FLT x248 = x247 * x144;
	const FLT x249 = (x247 * x146) + (x93 * (x248 + (-1 * x247 * x143)));
	const FLT x250 = (x247 * x148) + (x93 * x249);
	const FLT x251 = (x246 * x152) + (-1 * x243 * x108);
	const FLT x252 = ((-1 * x245 * x155) + (x244 * x154)) * x156;
	const FLT x253 = x252 + (-1 * x251 * x151);
	const FLT x254 =
		x119 *
		(x251 +
		 (-1 * x169 *
		  ((x112 * ((x247 * x168) +
					(x93 * (x250 + (x247 * x162) +
							(x93 * ((x247 * x163) + x249 + (x93 * ((-1 * x247 * x166) + x248 + (x247 * x164))))))) +
					(x93 * x250) + (x247 * x167))) +
		   (x253 * x161))) +
		 (x247 * x142) + (x253 * x171) + (x250 * x117));
	const FLT x255 = 1. / (x50 * sqrt(x50));
	const FLT x256 = x22 * x255;
	const FLT x257 = 1.0 / 2.0 * x5;
	const FLT x258 = x256 * x257;
	const FLT x259 = 2 * x44;
	const FLT x260 = 2 * x41;
	const FLT x261 = 2 * x42;
	const FLT x262 = 2 * x46;
	const FLT x263 = (x45 * x262) + (x47 * x261) + (x49 * x259) + (x48 * x260);
	const FLT x264 = x48 * x263;
	const FLT x265 = 1.0 / 2.0 * x47;
	const FLT x266 = x57 * x255;
	const FLT x267 = x266 * x265;
	const FLT x268 = 1.0 / 2.0 * x0;
	const FLT x269 = x268 * x256;
	const FLT x270 = x269 * x263;
	const FLT x271 = x58 * x42;
	const FLT x272 = x51 * x22;
	const FLT x273 = x44 * x272;
	const FLT x274 = x2 * x273;
	const FLT x275 = 1.0 / 2.0 * x2;
	const FLT x276 = x275 * x256;
	const FLT x277 = x276 * x263;
	const FLT x278 = x41 * x272;
	const FLT x279 = -1 * x5 * x278;
	const FLT x280 = x46 * x272;
	const FLT x281 = x0 * x280;
	const FLT x282 = x281 + x279;
	const FLT x283 = (-1 * x267 * x263) + (-1 * x45 * x270) + x282 + (-1 * x49 * x277) + x274 + (x264 * x258) + x271;
	const FLT x284 = 1.0 / 2.0 * x266;
	const FLT x285 = x263 * x284;
	const FLT x286 = x2 * x278;
	const FLT x287 = -1 * x286;
	const FLT x288 = x49 * x258;
	const FLT x289 = x42 * x272;
	const FLT x290 = x0 * x289;
	const FLT x291 = -1 * x290;
	const FLT x292 = x265 * x256;
	const FLT x293 = x292 * x263;
	const FLT x294 = x5 * x273;
	const FLT x295 = x58 * x46;
	const FLT x296 = x295 + (-1 * x294);
	const FLT x297 = x296 + (x0 * x293) + (x48 * x277) + (x263 * x288) + x291 + (-1 * x45 * x285) + x287;
	const FLT x298 = x45 * x258;
	const FLT x299 = x58 * x44;
	const FLT x300 = x0 * x278;
	const FLT x301 = x5 * x280;
	const FLT x302 = -1 * x2 * x289;
	const FLT x303 = x302 + x301;
	const FLT x304 = x303 + (-1 * x269 * x264) + (-1 * x49 * x285) + x300 + (-1 * x298 * x263) + x299 + (x2 * x293);
	const FLT x305 = (x304 * sensor_pt[1]) + (-1 * x283 * sensor_pt[0]) + (x297 * sensor_pt[2]);
	const FLT x306 = 2 * x62;
	const FLT x307 = x58 * x41;
	const FLT x308 = x5 * x289;
	const FLT x309 = -1 * x0 * x273;
	const FLT x310 = x2 * x280;
	const FLT x311 = x310 + x309;
	const FLT x312 = x311 + (x49 * x270) + x307 + (-1 * x5 * x293) + (-1 * x45 * x277) + x308 + (-1 * x48 * x285);
	const FLT x313 = (x297 * sensor_pt[1]) + (-1 * x304 * sensor_pt[2]) + (x312 * sensor_pt[0]);
	const FLT x314 = 2 * x68;
	const FLT x315 = 2 * x72;
	const FLT x316 = 2 * x76;
	const FLT x317 = (x283 * x316) + (-1 * x312 * x315) + (x305 * x306) + (-1 * x313 * x314);
	const FLT x318 = (-1 * x312 * sensor_pt[1]) + (x297 * sensor_pt[0]) + (x283 * sensor_pt[2]);
	const FLT x319 = 2 * x69;
	const FLT x320 = 2 * x71;
	const FLT x321 = (x304 * x315) + (x313 * x320) + (-1 * x306 * x318) + (-1 * x283 * x319);
	const FLT x322 = (x312 * x319) + (x314 * x318) + (-1 * x305 * x320) + (-1 * x304 * x316);
	const FLT x323 = (-1 * x317 * (*lh_p).Rot[2]) + (x322 * (*lh_p).Rot[1]) + (x321 * (*lh_p).Rot[0]);
	const FLT x324 = (-1 * x322 * (*lh_p).Rot[3]) + (x321 * (*lh_p).Rot[2]) + (x317 * (*lh_p).Rot[0]);
	const FLT x325 = x322 + (-1 * x202 * x323) + (x204 * x324);
	const FLT x326 = (x317 * (*lh_p).Rot[3]) + (x322 * (*lh_p).Rot[0]) + (-1 * x321 * (*lh_p).Rot[1]);
	const FLT x327 = x317 + (x212 * x323) + (-1 * x204 * x326);
	const FLT x328 = x321 + (-1 * x212 * x324) + (x202 * x326);
	const FLT x329 = (x328 * x135) + (x327 * x131);
	const FLT x330 = (-1 * x138 * (x329 + (x325 * x125))) + (x92 * x325);
	const FLT x331 = x330 * x144;
	const FLT x332 = (x330 * x146) + (x93 * (x331 + (-1 * x330 * x143)));
	const FLT x333 = (x330 * x148) + (x93 * x332);
	const FLT x334 = (x329 * x152) + (-1 * x325 * x108);
	const FLT x335 = ((-1 * x328 * x155) + (x327 * x154)) * x156;
	const FLT x336 = x335 + (-1 * x334 * x151);
	const FLT x337 =
		x119 *
		((x330 * x142) + x334 + (x336 * x171) + (x333 * x117) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x333) + (x330 * x168) +
					(x93 * (x333 + (x330 * x162) +
							(x93 * (x332 + (x330 * x163) + (x93 * (x331 + (-1 * x330 * x166) + (x330 * x164))))))) +
					(x330 * x167))) +
		   (x336 * x161))));
	const FLT x338 = -1 * x274;
	const FLT x339 = (-1 * x45 * x259) + (x49 * x262) + (-1 * x47 * x260) + (x48 * x261);
	const FLT x340 = x292 * x339;
	const FLT x341 = x284 * x339;
	const FLT x342 = x45 * x339;
	const FLT x343 = x49 * x339;
	const FLT x344 = (-1 * x281) + x279;
	const FLT x345 = x338 + (-1 * x5 * x340) + x271 + (-1 * x276 * x342) + x344 + (x269 * x343) + (-1 * x48 * x341);
	const FLT x346 = -1 * x308;
	const FLT x347 = -1 * x307;
	const FLT x348 = x48 * x339;
	const FLT x349 = x311 + (-1 * x276 * x343) + x347 + (x258 * x348) + x346 + (-1 * x269 * x342) + (-1 * x267 * x339);
	const FLT x350 = -1 * x299;
	const FLT x351 = (-1 * x301) + x302;
	const FLT x352 = x351 + x300 + x350 + (x0 * x340) + (x276 * x348) + (x288 * x339) + (-1 * x45 * x341);
	const FLT x353 = (-1 * x345 * sensor_pt[1]) + (x352 * sensor_pt[0]) + (x349 * sensor_pt[2]);
	const FLT x354 = x296 + (-1 * x269 * x348) + (-1 * x49 * x341) + (-1 * x298 * x339) + (x2 * x340) + x286 + x290;
	const FLT x355 = (x345 * sensor_pt[0]) + (x352 * sensor_pt[1]) + (-1 * x354 * sensor_pt[2]);
	const FLT x356 = (x354 * x315) + (-1 * x353 * x306) + (x355 * x320) + (-1 * x349 * x319);
	const FLT x357 = (x354 * sensor_pt[1]) + (-1 * x349 * sensor_pt[0]) + (x352 * sensor_pt[2]);
	const FLT x358 = (x349 * x316) + (x357 * x306) + (-1 * x355 * x314) + (-1 * x315 * x345);
	const FLT x359 = (x353 * x314) + (-1 * x354 * x316) + (x319 * x345) + (-1 * x357 * x320);
	const FLT x360 = (x359 * (*lh_p).Rot[1]) + (x356 * (*lh_p).Rot[0]) + (-1 * x358 * (*lh_p).Rot[2]);
	const FLT x361 = (x356 * (*lh_p).Rot[2]) + (-1 * x359 * (*lh_p).Rot[3]) + (x358 * (*lh_p).Rot[0]);
	const FLT x362 = x359 + (-1 * x202 * x360) + (x204 * x361);
	const FLT x363 = (x358 * (*lh_p).Rot[3]) + (x359 * (*lh_p).Rot[0]) + (-1 * x356 * (*lh_p).Rot[1]);
	const FLT x364 = x358 + (-1 * x204 * x363) + (x212 * x360);
	const FLT x365 = (-1 * x212 * x361) + x356 + (x202 * x363);
	const FLT x366 = (x365 * x135) + (x364 * x131);
	const FLT x367 = (-1 * x138 * (x366 + (x362 * x125))) + (x92 * x362);
	const FLT x368 = (x366 * x152) + (-1 * x362 * x108);
	const FLT x369 = ((-1 * x365 * x155) + (x364 * x154)) * x156;
	const FLT x370 = x369 + (-1 * x368 * x151);
	const FLT x371 = x367 * x144;
	const FLT x372 = (x367 * x146) + (x93 * (x371 + (-1 * x367 * x143)));
	const FLT x373 = (x367 * x148) + (x93 * x372);
	const FLT x374 =
		x119 *
		(x368 + (x370 * x171) + (x367 * x142) + (x373 * x117) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x373) +
					(x93 * (x373 + (x367 * x162) +
							(x93 * ((x367 * x163) + x372 + (x93 * ((-1 * x367 * x166) + x371 + (x367 * x164))))))) +
					(x367 * x167) + (x367 * x168))) +
		   (x370 * x161))));
	const FLT x375 = (-1 * x45 * x261) + (x47 * x262) + (-1 * x48 * x259) + (x49 * x260);
	const FLT x376 = x284 * x375;
	const FLT x377 = x45 * x375;
	const FLT x378 = -1 * x300;
	const FLT x379 = x292 * x375;
	const FLT x380 = x49 * x375;
	const FLT x381 = x256 * x380;
	const FLT x382 = x303 + x350 + x378 + (-1 * x276 * x377) + (x268 * x381) + (-1 * x48 * x376) + (-1 * x5 * x379);
	const FLT x383 = x48 * x375;
	const FLT x384 = x294 + x295;
	const FLT x385 = x384 + (-1 * x275 * x381) + x286 + x291 + (-1 * x267 * x375) + (x258 * x383) + (-1 * x269 * x377);
	const FLT x386 = -1 * x271;
	const FLT x387 = x344 + (x0 * x379) + x386 + x274 + (x276 * x383) + (x258 * x380) + (-1 * x45 * x376);
	const FLT x388 = (-1 * x382 * sensor_pt[1]) + (x387 * sensor_pt[0]) + (x385 * sensor_pt[2]);
	const FLT x389 = x309 + (-1 * x310);
	const FLT x390 = x389 + (-1 * x269 * x383) + x346 + (x2 * x379) + (-1 * x298 * x375) + x307 + (-1 * x49 * x376);
	const FLT x391 = (x387 * sensor_pt[1]) + (-1 * x390 * sensor_pt[2]) + (x382 * sensor_pt[0]);
	const FLT x392 = (x390 * x315) + (-1 * x388 * x306) + (x391 * x320) + (-1 * x385 * x319);
	const FLT x393 = (-1 * x385 * sensor_pt[0]) + (x390 * sensor_pt[1]) + (x387 * sensor_pt[2]);
	const FLT x394 = (-1 * x382 * x315) + (x385 * x316) + (-1 * x391 * x314) + (x393 * x306);
	const FLT x395 = (-1 * x390 * x316) + (x388 * x314) + (-1 * x393 * x320) + (x382 * x319);
	const FLT x396 = (x395 * (*lh_p).Rot[1]) + (x392 * (*lh_p).Rot[0]) + (-1 * x394 * (*lh_p).Rot[2]);
	const FLT x397 = (x392 * (*lh_p).Rot[2]) + (x394 * (*lh_p).Rot[0]) + (-1 * x395 * (*lh_p).Rot[3]);
	const FLT x398 = x395 + (-1 * x202 * x396) + (x204 * x397);
	const FLT x399 = (x394 * (*lh_p).Rot[3]) + (-1 * x392 * (*lh_p).Rot[1]) + (x395 * (*lh_p).Rot[0]);
	const FLT x400 = x394 + (-1 * x204 * x399) + (x212 * x396);
	const FLT x401 = (-1 * x212 * x397) + x392 + (x202 * x399);
	const FLT x402 = (x401 * x135) + (x400 * x131);
	const FLT x403 = (-1 * x138 * (x402 + (x398 * x125))) + (x92 * x398);
	const FLT x404 = x403 * x144;
	const FLT x405 = (x403 * x146) + (x93 * (x404 + (-1 * x403 * x143)));
	const FLT x406 = (x403 * x148) + (x93 * x405);
	const FLT x407 = (x402 * x152) + (-1 * x398 * x108);
	const FLT x408 = ((-1 * x401 * x155) + (x400 * x154)) * x156;
	const FLT x409 = x159 * (x408 + (-1 * x407 * x151));
	const FLT x410 =
		x119 *
		(x407 +
		 (-1 * x169 *
		  ((x112 * ((x403 * x168) + (x93 * x406) +
					(x93 * (x406 + (x403 * x162) +
							(x93 * (x405 + (x403 * x163) + (x93 * ((-1 * x403 * x166) + x404 + (x403 * x164))))))) +
					(x403 * x167))) +
		   (x409 * x160))) +
		 (x403 * x142) + (x409 * x170) + (x406 * x117));
	const FLT x411 = (-1 * x45 * x260) + (x47 * x259) + (x48 * x262) + (-1 * x49 * x261);
	const FLT x412 = x411 * x256;
	const FLT x413 = x45 * x412;
	const FLT x414 = x411 * x266;
	const FLT x415 = 1.0 / 2.0 * x414;
	const FLT x416 = x411 * x292;
	const FLT x417 = x48 * x412;
	const FLT x418 = x282 + x386 + (x2 * x416) + x338 + (-1 * x49 * x415) + (-1 * x413 * x257) + (-1 * x417 * x268);
	const FLT x419 = x49 * x412;
	const FLT x420 = x384 + (x419 * x268) + x290 + (-1 * x5 * x416) + x287 + (-1 * x413 * x275) + (-1 * x48 * x415);
	const FLT x421 = x389 + (x0 * x416) + (-1 * x45 * x415) + (x419 * x257) + (x417 * x275) + x347 + x308;
	const FLT x422 = (x421 * sensor_pt[1]) + (-1 * x418 * sensor_pt[2]) + (x420 * sensor_pt[0]);
	const FLT x423 = (-1 * x419 * x275) + x299 + x378 + (-1 * x413 * x268) + (-1 * x414 * x265) + x351 + (x417 * x257);
	const FLT x424 = (x418 * sensor_pt[1]) + (-1 * x423 * sensor_pt[0]) + (x421 * sensor_pt[2]);
	const FLT x425 = (x423 * x316) + (x424 * x306) + (-1 * x422 * x314) + (-1 * x420 * x315);
	const FLT x426 = (x421 * sensor_pt[0]) + (-1 * x420 * sensor_pt[1]) + (x423 * sensor_pt[2]);
	const FLT x427 = (-1 * x426 * x306) + (-1 * x423 * x319) + (x422 * x320) + (x418 * x315);
	const FLT x428 = (x420 * x319) + (x426 * x314) + (-1 * x424 * x320) + (-1 * x418 * x316);
	const FLT x429 = (-1 * x425 * (*lh_p).Rot[2]) + (x428 * (*lh_p).Rot[1]) + (x427 * (*lh_p).Rot[0]);
	const FLT x430 = (x427 * (*lh_p).Rot[2]) + (-1 * x428 * (*lh_p).Rot[3]) + (x425 * (*lh_p).Rot[0]);
	const FLT x431 = x428 + (-1 * x429 * x202) + (x430 * x204);
	const FLT x432 = (x425 * (*lh_p).Rot[3]) + (-1 * x427 * (*lh_p).Rot[1]) + (x428 * (*lh_p).Rot[0]);
	const FLT x433 = x425 + (-1 * x432 * x204) + (x429 * x212);
	const FLT x434 = x427 + (-1 * x430 * x212) + (x432 * x202);
	const FLT x435 = (x434 * x135) + (x433 * x131);
	const FLT x436 = (-1 * x138 * (x435 + (x431 * x125))) + (x92 * x431);
	const FLT x437 = (x435 * x152) + (-1 * x431 * x108);
	const FLT x438 = ((-1 * x434 * x155) + (x433 * x154)) * x156;
	const FLT x439 = x438 + (-1 * x437 * x151);
	const FLT x440 = x436 * x144;
	const FLT x441 = (x436 * x146) + (x93 * (x440 + (-1 * x436 * x143)));
	const FLT x442 = (x436 * x148) + (x93 * x441);
	const FLT x443 =
		x119 *
		(x437 + (x439 * x171) + (x442 * x117) + (x436 * x142) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x442) + (x436 * x168) +
					(x93 * (x442 + (x436 * x162) +
							(x93 * (x441 + (x436 * x163) + (x93 * (x440 + (-1 * x436 * x166) + (x436 * x164))))))) +
					(x436 * x167))) +
		   (x439 * x161))));
	const FLT x444 = -1 * x56;
	const FLT x445 = dt * dt * dt;
	const FLT x446 = 0.5 * x15 * x445;
	const FLT x447 = x70 * x446;
	const FLT x448 = x5 * x5 * x5;
	const FLT x449 = dt * dt * dt * dt;
	const FLT x450 = 1.0 * x17;
	const FLT x451 = x13 * (1. / (x10 * sqrt(x10)));
	const FLT x452 = x451 * x450;
	const FLT x453 = x452 * x449;
	const FLT x454 = 2 * x16;
	const FLT x455 = x1 * x454;
	const FLT x456 = 2 * x14 * (1. / (x10 * x10));
	const FLT x457 = x456 * x449;
	const FLT x458 = x3 * x457;
	const FLT x459 = x5 * x450;
	const FLT x460 = x3 * x451;
	const FLT x461 = x5 * x8;
	const FLT x462 = x1 * x20;
	const FLT x463 = (x453 * x461) + (-1 * x457 * x461) + (x5 * x455) + (x459 * x460 * x449) + (x453 * x448) +
					 (-1 * x457 * x448) + (-1 * x459 * x462) + (-1 * x5 * x458);
	const FLT x464 = 1. / (x18 * sqrt(x18));
	const FLT x465 = x21 * x464;
	const FLT x466 = x463 * x465;
	const FLT x467 = x51 * x265;
	const FLT x468 = x0 * x467;
	const FLT x469 = x60 * x466;
	const FLT x470 = x59 * x446;
	const FLT x471 = x0 * x5;
	const FLT x472 = x471 * x470;
	const FLT x473 = x17 * x464;
	const FLT x474 = 1.0 / 2.0 * x473;
	const FLT x475 = x463 * x474;
	const FLT x476 = x451 * x445;
	const FLT x477 = x6 * x476;
	const FLT x478 = x54 * x466;
	const FLT x479 = 1.0 / 2.0 * x478;
	const FLT x480 = x52 * x19;
	const FLT x481 = 0.5 * x462;
	const FLT x482 = x481 * x480;
	const FLT x483 = x63 * x19;
	const FLT x484 = x5 * x476;
	const FLT x485 = x0 * x484;
	const FLT x486 = x483 * x485;
	const FLT x487 = x67 * x446;
	const FLT x488 = x5 * x487;
	const FLT x489 = x60 * x19;
	const FLT x490 = x2 * x484;
	const FLT x491 = (x490 * x489) + (-1 * x2 * x488);
	const FLT x492 = x486 + (x5 * x479) + x491 + (x55 * x477) + (-1 * x52 * x475) + (-1 * x5 * x482) +
					 (-1 * x6 * x447) + (x469 * x275) + (x466 * x468) + x444 + (-1 * x472);
	const FLT x493 = -1 * x61;
	const FLT x494 = x2 * x5;
	const FLT x495 = x494 * x447;
	const FLT x496 = x55 * x490;
	const FLT x497 = x52 * x466;
	const FLT x498 = x483 * x481;
	const FLT x499 = x467 * x473;
	const FLT x500 = x484 * x480;
	const FLT x501 = x65 * x446;
	const FLT x502 = (x471 * x501) + (-1 * x0 * x500);
	const FLT x503 = x502 + (-1 * x499 * x463) + (-1 * x497 * x268) + (-1 * x478 * x275) + (x469 * x257) + x493 +
					 (x477 * x489) + (-1 * x5 * x498) + (-1 * x496) + (-1 * x6 * x487) + x495;
	const FLT x504 = x0 * x488;
	const FLT x505 = x490 * x483;
	const FLT x506 = x494 * x470;
	const FLT x507 = x489 * x485;
	const FLT x508 = 0.5 * x55;
	const FLT x509 = x462 * x508;
	const FLT x510 = x466 * x467;
	const FLT x511 = x504 + (-1 * x469 * x268) + x53 + (-1 * x477 * x480) + (x6 * x501) + (-1 * x507) + x505 +
					 (-1 * x506) + (-1 * x497 * x257) + (-1 * x54 * x475) + (-1 * x5 * x509) + (x2 * x510);
	const FLT x512 = (x511 * sensor_pt[1]) + (x492 * sensor_pt[2]) + (-1 * x503 * sensor_pt[0]);
	const FLT x513 = (-1 * x471 * x447) + (x55 * x485);
	const FLT x514 = (-1 * x2 * x500) + (x494 * x501);
	const FLT x515 = x514 + x513 + x64 + (x0 * x479) + (-1 * x477 * x483) + (-1 * x497 * x275) +
					 (-1 * x5 * x489 * x481) + (-1 * x5 * x510) + (-1 * x60 * x475) + (x6 * x470);
	const FLT x516 = (x492 * sensor_pt[0]) + (-1 * x515 * sensor_pt[1]) + (x503 * sensor_pt[2]);
	const FLT x517 = (x515 * x319) + (-1 * x512 * x320) + (x516 * x314) + (-1 * x511 * x316);
	const FLT x518 = (-1 * x511 * sensor_pt[2]) + (x492 * sensor_pt[1]) + (x515 * sensor_pt[0]);
	const FLT x519 = (x512 * x306) + (-1 * x518 * x314) + (x503 * x316) + (-1 * x515 * x315);
	const FLT x520 = (-1 * x503 * x319) + (x518 * x320) + (-1 * x516 * x306) + (x511 * x315);
	const FLT x521 = (x520 * (*lh_p).Rot[2]) + (-1 * x517 * (*lh_p).Rot[3]) + (x519 * (*lh_p).Rot[0]);
	const FLT x522 = (x517 * (*lh_p).Rot[1]) + (-1 * x519 * (*lh_p).Rot[2]) + (x520 * (*lh_p).Rot[0]);
	const FLT x523 = x517 + (x521 * x204) + (-1 * x522 * x202);
	const FLT x524 = (x519 * (*lh_p).Rot[3]) + (-1 * x520 * (*lh_p).Rot[1]) + (x517 * (*lh_p).Rot[0]);
	const FLT x525 = (-1 * x524 * x204) + x519 + (x522 * x212);
	const FLT x526 = x520 + (x524 * x202) + (-1 * x521 * x212);
	const FLT x527 = (x526 * x135) + (x525 * x131);
	const FLT x528 = (-1 * x138 * (x527 + (x523 * x125))) + (x92 * x523);
	const FLT x529 = (x527 * x152) + (-1 * x523 * x108);
	const FLT x530 = ((-1 * x526 * x155) + (x525 * x154)) * x156;
	const FLT x531 = x530 + (-1 * x529 * x151);
	const FLT x532 = x528 * x144;
	const FLT x533 = (x528 * x146) + (x93 * (x532 + (-1 * x528 * x143)));
	const FLT x534 = (x528 * x148) + (x93 * x533);
	const FLT x535 =
		x119 *
		((x531 * x171) + (x534 * x117) + x529 + (x528 * x142) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x534) + (x528 * x167) +
					(x93 * (x534 + (x528 * x162) +
							(x93 * (x533 + (x528 * x163) + (x93 * ((-1 * x528 * x166) + x532 + (x528 * x164))))))) +
					(x528 * x168))) +
		   (x531 * x161))));
	const FLT x536 = x8 * x476;
	const FLT x537 = x0 * x6;
	const FLT x538 = x0 * x1;
	const FLT x539 = x20 * x538;
	const FLT x540 = x0 * x0 * x0;
	const FLT x541 = (-1 * x457 * x540) + (x454 * x538) + (-1 * x457 * x537) + (x453 * x540) + (-1 * x450 * x539) +
					 (-1 * x0 * x458) + (x453 * x537) + (x0 * x3 * x453);
	const FLT x542 = x541 * x275;
	const FLT x543 = x52 * x465;
	const FLT x544 = x54 * x465;
	const FLT x545 = x544 * x541;
	const FLT x546 = 0.5 * x539;
	const FLT x547 = x60 * x474;
	const FLT x548 = x465 * x467;
	const FLT x549 = x541 * x548;
	const FLT x550 = x0 * x476;
	const FLT x551 = x2 * x550;
	const FLT x552 = x0 * x2;
	const FLT x553 = (x501 * x552) + (-1 * x480 * x551);
	const FLT x554 = (-1 * x5 * x549) + (-1 * x489 * x546) + (-1 * x541 * x547) + (-1 * x8 * x447) + (-1 * x486) +
					 (-1 * x542 * x543) + x553 + (x55 * x536) + (x545 * x268) + x472 + x444;
	const FLT x555 = x543 * x541;
	const FLT x556 = x55 * x551;
	const FLT x557 = x447 * x552;
	const FLT x558 = x60 * x465;
	const FLT x559 = x541 * x558;
	const FLT x560 = (-1 * x555 * x268) + (-1 * x483 * x546) + x53 + x557 + (-1 * x504) + (-1 * x542 * x544) +
					 (-1 * x556) + (-1 * x499 * x541) + (-1 * x480 * x536) + (x8 * x501) + x507 + (x559 * x257);
	const FLT x561 = x487 * x552;
	const FLT x562 = -1 * x64;
	const FLT x563 = x465 * x468;
	const FLT x564 = x2 * x489;
	const FLT x565 = x550 * x564;
	const FLT x566 = x52 * x474;
	const FLT x567 = x513 + (-1 * x8 * x470) + (x483 * x536) + (x542 * x558) + (-1 * x561) + x562 + (x545 * x257) +
					 (-1 * x541 * x566) + (-1 * x480 * x546) + (x541 * x563) + x565;
	const FLT x568 = (x567 * sensor_pt[0]) + (-1 * x554 * sensor_pt[1]) + (x560 * sensor_pt[2]);
	const FLT x569 = x54 * x474;
	const FLT x570 = (-1 * x470 * x552) + (x483 * x551);
	const FLT x571 = x570 + (x8 * x487) + (-1 * x559 * x268) + (-1 * x489 * x536) + (-1 * x541 * x569) +
					 (-1 * x508 * x539) + x502 + (-1 * x555 * x257) + x61 + (x2 * x549);
	const FLT x572 = (x567 * sensor_pt[1]) + (x554 * sensor_pt[0]) + (-1 * x571 * sensor_pt[2]);
	const FLT x573 = (x571 * x315) + (-1 * x560 * x319) + (-1 * x568 * x306) + (x572 * x320);
	const FLT x574 = (x571 * sensor_pt[1]) + (-1 * x560 * sensor_pt[0]) + (x567 * sensor_pt[2]);
	const FLT x575 = (x560 * x316) + (-1 * x554 * x315) + (-1 * x572 * x314) + (x574 * x306);
	const FLT x576 = (x554 * x319) + (-1 * x574 * x320) + (-1 * x571 * x316) + (x568 * x314);
	const FLT x577 = (x576 * (*lh_p).Rot[1]) + (x573 * (*lh_p).Rot[0]) + (-1 * x575 * (*lh_p).Rot[2]);
	const FLT x578 = (x573 * (*lh_p).Rot[2]) + (-1 * x576 * (*lh_p).Rot[3]) + (x575 * (*lh_p).Rot[0]);
	const FLT x579 = x576 + (-1 * x577 * x202) + (x578 * x204);
	const FLT x580 = (x575 * (*lh_p).Rot[3]) + (x576 * (*lh_p).Rot[0]) + (-1 * x573 * (*lh_p).Rot[1]);
	const FLT x581 = x575 + (-1 * x580 * x204) + (x577 * x212);
	const FLT x582 = x573 + (-1 * x578 * x212) + (x580 * x202);
	const FLT x583 = (x582 * x135) + (x581 * x131);
	const FLT x584 = (-1 * x138 * (x583 + (x579 * x125))) + (x92 * x579);
	const FLT x585 = (x583 * x152) + (-1 * x579 * x108);
	const FLT x586 = ((-1 * x582 * x155) + (x581 * x154)) * x156;
	const FLT x587 = x586 + (-1 * x585 * x151);
	const FLT x588 = x584 * x144;
	const FLT x589 = (x584 * x146) + (x93 * (x588 + (-1 * x584 * x143)));
	const FLT x590 = (x584 * x148) + (x93 * x589);
	const FLT x591 =
		x119 *
		(x585 + (x587 * x171) + (x584 * x142) + (x590 * x117) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x590) +
					(x93 * (x590 + (x584 * x162) +
							(x93 * (x589 + (x584 * x163) + (x93 * ((-1 * x584 * x166) + x588 + (x584 * x164))))))) +
					(x584 * x167) + (x584 * x168))) +
		   (x587 * x161))));
	const FLT x592 = x2 * x450;
	const FLT x593 = x451 * x449 * x592;
	const FLT x594 = (x2 * x2 * x2) * x449;
	const FLT x595 = x2 * x457;
	const FLT x596 = (-1 * x462 * x592) + (x8 * x593) + (-1 * x456 * x594) + (x6 * x593) + (x452 * x594) + (x2 * x455) +
					 (-1 * x6 * x595) + (-1 * x8 * x595);
	const FLT x597 = x596 * x544;
	const FLT x598 = x596 * x543;
	const FLT x599 = x460 * x445;
	const FLT x600 = x596 * x548;
	const FLT x601 = (-1 * x5 * x600) + (-1 * x505) + (-1 * x557) + x556 + (-1 * x596 * x547) + x506 + (x597 * x268) +
					 (-1 * x598 * x275) + (-1 * x480 * x599) + (x3 * x501) + x53 + (-1 * x481 * x564);
	const FLT x602 = x596 * x558;
	const FLT x603 = x553 + (-1 * x2 * x498) + (x602 * x257) + x56 + (-1 * x499 * x596) + (-1 * x55 * x599) +
					 (-1 * x597 * x275) + x491 + (-1 * x598 * x268) + (x3 * x447);
	const FLT x604 = (x597 * x257) + (x596 * x563) + x493 + (x602 * x275) + x496 + (-1 * x3 * x487) + (x489 * x599) +
					 x570 + (-1 * x495) + (-1 * x2 * x482) + (-1 * x596 * x566);
	const FLT x605 = (x604 * sensor_pt[0]) + (-1 * x601 * sensor_pt[1]) + (x603 * sensor_pt[2]);
	const FLT x606 = x514 + x561 + (-1 * x602 * x268) + (-1 * x2 * x509) + (x2 * x600) + x562 + (-1 * x3 * x470) +
					 (-1 * x565) + (-1 * x598 * x257) + (-1 * x596 * x569) + (x483 * x599);
	const FLT x607 = (-1 * x606 * sensor_pt[2]) + (x604 * sensor_pt[1]) + (x601 * sensor_pt[0]);
	const FLT x608 = (x606 * x315) + (x607 * x320) + (-1 * x605 * x306) + (-1 * x603 * x319);
	const FLT x609 = (x606 * sensor_pt[1]) + (-1 * x603 * sensor_pt[0]) + (x604 * sensor_pt[2]);
	const FLT x610 = (x609 * x306) + (-1 * x601 * x315) + (x603 * x316) + (-1 * x607 * x314);
	const FLT x611 = (x601 * x319) + (-1 * x606 * x316) + (x605 * x314) + (-1 * x609 * x320);
	const FLT x612 = (x611 * (*lh_p).Rot[1]) + (x608 * (*lh_p).Rot[0]) + (-1 * x610 * (*lh_p).Rot[2]);
	const FLT x613 = (x608 * (*lh_p).Rot[2]) + (-1 * x611 * (*lh_p).Rot[3]) + (x610 * (*lh_p).Rot[0]);
	const FLT x614 = x611 + (-1 * x612 * x202) + (x613 * x204);
	const FLT x615 = (x611 * (*lh_p).Rot[0]) + (x610 * (*lh_p).Rot[3]) + (-1 * x608 * (*lh_p).Rot[1]);
	const FLT x616 = x610 + (-1 * x615 * x204) + (x612 * x212);
	const FLT x617 = (-1 * x613 * x212) + x608 + (x615 * x202);
	const FLT x618 = (x617 * x135) + (x616 * x131);
	const FLT x619 = (-1 * x138 * (x618 + (x614 * x125))) + (x92 * x614);
	const FLT x620 = x619 * x144;
	const FLT x621 = (x619 * x146) + (x93 * (x620 + (-1 * x619 * x143)));
	const FLT x622 = (x619 * x148) + (x93 * x621);
	const FLT x623 = (x618 * x152) + (-1 * x614 * x108);
	const FLT x624 = ((-1 * x617 * x155) + (x616 * x154)) * x156;
	const FLT x625 = x624 + (-1 * x623 * x151);
	const FLT x626 =
		x119 *
		(x623 + (x625 * x171) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x622) + (x619 * x168) +
					(x93 * (x622 + (x619 * x162) +
							(x93 * (x621 + (x619 * x163) + (x93 * ((-1 * x619 * x166) + x620 + (x619 * x164))))))) +
					(x619 * x167))) +
		   (x625 * x161))) +
		 (x619 * x142) + (x622 * x117));
	const FLT x627 = dt * x203;
	const FLT x628 = dt * x205;
	const FLT x629 = x628 + x627;
	const FLT x630 = -1 * dt * x207;
	const FLT x631 = (-1 * dt * x209) + dt;
	const FLT x632 = x631 + x630;
	const FLT x633 = dt * x213;
	const FLT x634 = dt * x214;
	const FLT x635 = x634 + (-1 * x633);
	const FLT x636 = (x635 * x135) + (x632 * x131);
	const FLT x637 = (x636 * x152) + (-1 * x629 * x108);
	const FLT x638 = ((-1 * x635 * x155) + (x632 * x154)) * x156;
	const FLT x639 = x638 + (-1 * x637 * x151);
	const FLT x640 = (-1 * x138 * (x636 + (x629 * x125))) + (x92 * x629);
	const FLT x641 = x640 * x144;
	const FLT x642 = (x640 * x146) + (x93 * (x641 + (-1 * x640 * x143)));
	const FLT x643 = (x640 * x148) + (x93 * x642);
	const FLT x644 =
		x119 *
		((x639 * x171) + x637 + (x643 * x117) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x643) + (x640 * x168) +
					(x93 * (x643 + (x640 * x162) +
							(x93 * (x642 + (x640 * x163) + (x93 * ((-1 * x640 * x166) + x641 + (x640 * x164))))))) +
					(x640 * x167))) +
		   (x639 * x161))) +
		 (x640 * x142));
	const FLT x645 = -1 * dt * x226;
	const FLT x646 = x631 + x645;
	const FLT x647 = x627 + (-1 * x628);
	const FLT x648 = dt * x230;
	const FLT x649 = dt * x231;
	const FLT x650 = x649 + x648;
	const FLT x651 = (x650 * x135) + (x647 * x131);
	const FLT x652 = (-1 * x138 * (x651 + (x646 * x125))) + (x92 * x646);
	const FLT x653 = x652 * x144;
	const FLT x654 = (x652 * x146) + (x93 * (x653 + (-1 * x652 * x143)));
	const FLT x655 = (x652 * x148) + (x93 * x654);
	const FLT x656 = (x651 * x152) + (-1 * x646 * x108);
	const FLT x657 = ((-1 * x650 * x155) + (x647 * x154)) * x156;
	const FLT x658 = x657 + (-1 * x656 * x151);
	const FLT x659 =
		x119 *
		(x656 + (x652 * x142) + (x655 * x117) + (x658 * x171) +
		 (-1 * x169 *
		  ((x112 * ((x93 * x655) +
					(x93 * (x655 + (x652 * x162) +
							(x93 * (x654 + (x652 * x163) + (x93 * ((-1 * x652 * x166) + x653 + (x652 * x164))))))) +
					(x652 * x167) + (x652 * x168))) +
		   (x658 * x161))));
	const FLT x660 = x648 + (-1 * x649);
	const FLT x661 = x633 + x634;
	const FLT x662 = dt + x630 + x645;
	const FLT x663 = (x662 * x135) + (x661 * x131);
	const FLT x664 = (x663 * x152) + (-1 * x660 * x108);
	const FLT x665 = ((-1 * x662 * x155) + (x661 * x154)) * x156;
	const FLT x666 = x665 + (-1 * x664 * x151);
	const FLT x667 = (-1 * x138 * (x663 + (x660 * x125))) + (x92 * x660);
	const FLT x668 = x667 * x144;
	const FLT x669 = (x667 * x146) + (x93 * (x668 + (-1 * x667 * x143)));
	const FLT x670 = (x667 * x148) + (x93 * x669);
	const FLT x671 =
		x119 *
		(x664 +
		 (-1 * x169 *
		  ((x112 * ((x93 * x670) + (x667 * x168) +
					(x93 * (x670 + (x667 * x162) +
							(x93 * (x669 + (x667 * x163) + (x93 * ((-1 * x667 * x166) + x668 + (x667 * x164))))))) +
					(x667 * x167))) +
		   (x666 * x161))) +
		 (x667 * x142) + (x666 * x171) + (x670 * x117));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						x157 + (-1 * ((-1 * x157) + x172) * x173) + (-1 * x172));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						x184 + (-1 * x189) + (-1 * ((-1 * x184) + x189) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						x196 + (-1 * x201) + (-1 * ((-1 * x196) + x201) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT),
						x220 + (-1 * x225) + (-1 * ((-1 * x220) + x225) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT),
						(-1 * x242) + x235 + (-1 * ((-1 * x235) + x242) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT),
						(-1 * x254) + x252 + (-1 * ((-1 * x252) + x254) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x335 + (-1 * x337) + (-1 * ((-1 * x335) + x337) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x374) + x369 + (-1 * ((-1 * x369) + x374) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x408 + (-1 * ((-1 * x408) + x410) * x173) + (-1 * x410));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x438 + (-1 * x443) + (-1 * ((-1 * x438) + x443) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x530 + (-1 * x535) + (-1 * ((-1 * x530) + x535) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x586 + (-1 * x591) + (-1 * ((-1 * x586) + x591) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x624 + (-1 * x626) + (-1 * ((-1 * x624) + x626) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT),
						x638 + (-1 * ((-1 * x638) + x644) * x173) + (-1 * x644));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT),
						x657 + (-1 * x659) + (-1 * ((-1 * x657) + x659) * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT),
						x665 + (-1 * x671) + (-1 * ((-1 * x665) + x671) * x173));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*_x0).AccBias[0], (*_x0).AccBias[1],
// (*_x0).AccBias[2], (*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).GyroBias[0], (*_x0).GyroBias[1],
// (*_x0).GyroBias[2], (*_x0).IMUCorrection[0], (*_x0).IMUCorrection[1], (*_x0).IMUCorrection[2],
// (*_x0).IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae11ca0>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*error_model).AccBias[0], (*error_model).AccBias[1],
// (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2],
// (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2], (*error_model).IMUCorrection[0],
// (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2], (*error_model).IMUCorrection[3],
// (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2],
// (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2],
// (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae81a30>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = dt * dt;
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x3 = x2 * x2;
	const FLT x4 = x1 * x3;
	const FLT x5 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x6 = x5 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = x0 * x0;
	const FLT x9 = x1 * x8;
	const FLT x10 = 1e-10 + x9 + x4 + x7;
	const FLT x11 = sqrt(x10);
	const FLT x12 = 0.5 * x11;
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * (1. / x11);
	const FLT x15 = dt * x14;
	const FLT x16 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x17 = sin(x16);
	const FLT x18 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x19 = sin(x18);
	const FLT x20 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x21 = cos(x20);
	const FLT x22 = x21 * x19;
	const FLT x23 = x22 * x17;
	const FLT x24 = sin(x20);
	const FLT x25 = cos(x16);
	const FLT x26 = cos(x18);
	const FLT x27 = x25 * x26;
	const FLT x28 = x24 * x27;
	const FLT x29 = x28 + (-1 * x23);
	const FLT x30 = x24 * x19;
	const FLT x31 = x30 * x17;
	const FLT x32 = x21 * x27;
	const FLT x33 = x32 + x31;
	const FLT x34 = x30 * x25;
	const FLT x35 = x26 * x17;
	const FLT x36 = x35 * x21;
	const FLT x37 = x36 + x34;
	const FLT x38 = x35 * x24;
	const FLT x39 = x25 * x22;
	const FLT x40 = x39 + (-1 * x38);
	const FLT x41 = (x40 * x40) + (x37 * x37) + (x29 * x29) + (x33 * x33);
	const FLT x42 = 1. / sqrt(x41);
	const FLT x43 = x42 * x33;
	const FLT x44 = x42 * (*_x0).Pose.Rot[0];
	const FLT x45 = x42 * (*_x0).Pose.Rot[3];
	const FLT x46 = x42 * (*_x0).Pose.Rot[1];
	const FLT x47 = (x40 * x45) + (-1 * x46 * x29) + (x43 * (*_x0).Pose.Rot[2]) + (x44 * x37);
	const FLT x48 = x42 * (*_x0).Pose.Rot[2];
	const FLT x49 = (-1 * x40 * x46) + (x43 * (*_x0).Pose.Rot[0]) + (-1 * x45 * x29) + (-1 * x48 * x37);
	const FLT x50 = (x46 * x37) + (x44 * x29) + (x45 * x33) + (-1 * x40 * x48);
	const FLT x51 = (x43 * (*_x0).Pose.Rot[1]) + (x48 * x29) + (-1 * x45 * x37) + (x40 * x44);
	const FLT x52 = (x51 * x51) + (x50 * x50) + (x47 * x47) + (x49 * x49);
	const FLT x53 = 1. / sqrt(x52);
	const FLT x54 = x13 * x13;
	const FLT x55 = 1. / x10;
	const FLT x56 = x54 * x55;
	const FLT x57 = cos(x12);
	const FLT x58 = (x7 * x56) + (x4 * x56) + (x57 * x57) + (x9 * x56);
	const FLT x59 = 1. / sqrt(x58);
	const FLT x60 = x59 * x49;
	const FLT x61 = x60 * x53;
	const FLT x62 = x61 * x15;
	const FLT x63 = x53 * x59;
	const FLT x64 = x63 * x15;
	const FLT x65 = x64 * x51;
	const FLT x66 = x53 * x57;
	const FLT x67 = x66 * x59;
	const FLT x68 = x67 * x47;
	const FLT x69 = x64 * x50;
	const FLT x70 = (-1 * x5 * x69) + x68 + (x0 * x62) + (x2 * x65);
	const FLT x71 = x63 * x47;
	const FLT x72 = x71 * x15;
	const FLT x73 = x60 * x66;
	const FLT x74 = (-1 * x5 * x65) + x73 + (-1 * x2 * x69) + (-1 * x0 * x72);
	const FLT x75 = x67 * x50;
	const FLT x76 = (x2 * x62) + (x5 * x72) + x75 + (-1 * x0 * x65);
	const FLT x77 = (-1 * x76 * sensor_pt[1]) + (x70 * sensor_pt[2]) + (x74 * sensor_pt[0]);
	const FLT x78 = x67 * x51;
	const FLT x79 = x78 + (x5 * x62) + (-1 * x2 * x72) + (x0 * x69);
	const FLT x80 = (-1 * x79 * sensor_pt[2]) + (x76 * sensor_pt[0]) + (x74 * sensor_pt[1]);
	const FLT x81 = dt * fabs(dt);
	const FLT x82 = 1.0 / 2.0 * x81;
	const FLT x83 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x82 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x80 * x79) + (-1 * x70 * x77))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x84 = (-1 * x70 * sensor_pt[0]) + (x74 * sensor_pt[2]) + (x79 * sensor_pt[1]);
	const FLT x85 = (2 * ((x77 * x76) + (-1 * x84 * x79))) + (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x82 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x86 = (2 * ((x84 * x70) + (-1 * x80 * x76))) + (x82 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x87 = (x83 * (*lh_p).Rot[0]) + (-1 * x86 * (*lh_p).Rot[2]) + (x85 * (*lh_p).Rot[1]);
	const FLT x88 = (-1 * x85 * (*lh_p).Rot[3]) + (x86 * (*lh_p).Rot[0]) + (x83 * (*lh_p).Rot[2]);
	const FLT x89 = x85 + (*lh_p).Pos[1] + (2 * ((x88 * (*lh_p).Rot[3]) + (-1 * x87 * (*lh_p).Rot[1])));
	const FLT x90 = x89 * x89;
	const FLT x91 = (-1 * x83 * (*lh_p).Rot[1]) + (x85 * (*lh_p).Rot[0]) + (x86 * (*lh_p).Rot[3]);
	const FLT x92 = x83 + (2 * ((x91 * (*lh_p).Rot[1]) + (-1 * x88 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x93 = x86 + (*lh_p).Pos[0] + (2 * ((x87 * (*lh_p).Rot[2]) + (-1 * x91 * (*lh_p).Rot[3])));
	const FLT x94 = x93 * x93;
	const FLT x95 = x94 + (x92 * x92);
	const FLT x96 = x95 + x90;
	const FLT x97 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x98 = cos(x97);
	const FLT x99 = 1. / x98;
	const FLT x100 = x99 * (1. / sqrt(x96));
	const FLT x101 = asin(x89 * x100);
	const FLT x102 = 8.0108022e-06 * x101;
	const FLT x103 = -8.0108022e-06 + (-1 * x102);
	const FLT x104 = 0.0028679863 + (x101 * x103);
	const FLT x105 = 5.3685255e-06 + (x101 * x104);
	const FLT x106 = 0.0076069798 + (x101 * x105);
	const FLT x107 = x101 * x106;
	const FLT x108 = -8.0108022e-06 + (-1.60216044e-05 * x101);
	const FLT x109 = x104 + (x101 * x108);
	const FLT x110 = x105 + (x101 * x109);
	const FLT x111 = x106 + (x101 * x110);
	const FLT x112 = (x101 * x111) + x107;
	const FLT x113 = sin(x97);
	const FLT x114 = atan2(-1 * x92, x93);
	const FLT x115 = tan(x97);
	const FLT x116 = (1. / sqrt(x95)) * x115;
	const FLT x117 = -1 * x89 * x116;
	const FLT x118 = (-1 * asin(x117)) + (*bsc0).ogeephase + x114;
	const FLT x119 = (sin(x118) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x120 = x113 * x119;
	const FLT x121 = x98 + (x112 * x120);
	const FLT x122 = 1. / x121;
	const FLT x123 = x101 * x101;
	const FLT x124 = x119 * x123;
	const FLT x125 = x124 * x122;
	const FLT x126 = x117 + (x106 * x125);
	const FLT x127 = 1. / sqrt(1 + (-1 * (x126 * x126)));
	const FLT x128 = x81 * (*lh_p).Rot[1];
	const FLT x129 = x128 * (*lh_p).Rot[2];
	const FLT x130 = x81 * (*lh_p).Rot[0];
	const FLT x131 = x130 * (*lh_p).Rot[3];
	const FLT x132 = x131 + x129;
	const FLT x133 = 2 * x89;
	const FLT x134 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x135 = -1 * x81 * x134;
	const FLT x136 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x137 = x82 + (-1 * x81 * x136);
	const FLT x138 = x137 + x135;
	const FLT x139 = 2 * x93;
	const FLT x140 = x130 * (*lh_p).Rot[2];
	const FLT x141 = x128 * (*lh_p).Rot[3];
	const FLT x142 = x141 + (-1 * x140);
	const FLT x143 = 2 * x92;
	const FLT x144 = (x142 * x143) + (x138 * x139);
	const FLT x145 = 1.0 / 2.0 * x89;
	const FLT x146 = x99 * (1. / (x96 * sqrt(x96))) * x145;
	const FLT x147 = (-1 * x146 * (x144 + (x133 * x132))) + (x100 * x132);
	const FLT x148 = 1. / sqrt(1 + (-1 * x90 * (1. / (x98 * x98)) * (1. / x96)));
	const FLT x149 = 2 * x107 * x119 * x122;
	const FLT x150 = x148 * x149;
	const FLT x151 = x102 * x148;
	const FLT x152 = x103 * x148;
	const FLT x153 = x147 * x152;
	const FLT x154 = x104 * x148;
	const FLT x155 = (x147 * x154) + (x101 * (x153 + (-1 * x147 * x151)));
	const FLT x156 = x105 * x148;
	const FLT x157 = (x147 * x156) + (x101 * x155);
	const FLT x158 = 1. / x95;
	const FLT x159 = 1. / sqrt(1 + (-1 * x90 * (x115 * x115) * x158));
	const FLT x160 = (1. / (x95 * sqrt(x95))) * x115 * x145;
	const FLT x161 = (x160 * x144) + (-1 * x116 * x132);
	const FLT x162 = x92 * (1. / x94);
	const FLT x163 = 1. / x93;
	const FLT x164 = x94 * x158;
	const FLT x165 = ((-1 * x163 * x142) + (x162 * x138)) * x164;
	const FLT x166 = x165 + (-1 * x161 * x159);
	const FLT x167 = cos(x118) * (*bsc0).ogeemag;
	const FLT x168 = x112 * x113;
	const FLT x169 = x168 * x167;
	const FLT x170 = x110 * x148;
	const FLT x171 = x109 * x148;
	const FLT x172 = x108 * x148;
	const FLT x173 = 2.40324066e-05 * x101;
	const FLT x174 = x173 * x148;
	const FLT x175 = x111 * x148;
	const FLT x176 = x106 * x148;
	const FLT x177 = x106 * x124 * (1. / (x121 * x121));
	const FLT x178 = x106 * x123 * x122;
	const FLT x179 = x167 * x178;
	const FLT x180 =
		x127 *
		(x161 + (x166 * x179) + (x147 * x150) +
		 (-1 * x177 *
		  ((x120 * ((x176 * x147) + (x101 * x157) +
					(x101 * (x157 + (x170 * x147) +
							 (x101 * (x155 + (x171 * x147) + (x101 * ((-1 * x174 * x147) + x153 + (x172 * x147))))))) +
					(x175 * x147))) +
		   (x169 * x166))) +
		 (x125 * x157));
	const FLT x181 = cos((-1 * asin(x126)) + (*bsc0).gibpha + x114) * (*bsc0).gibmag;
	const FLT x182 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x183 = -1 * x81 * x182;
	const FLT x184 = x137 + x183;
	const FLT x185 = x129 + (-1 * x131);
	const FLT x186 = x81 * (*lh_p).Rot[3] * (*lh_p).Rot[2];
	const FLT x187 = x130 * (*lh_p).Rot[1];
	const FLT x188 = x187 + x186;
	const FLT x189 = (x188 * x143) + (x185 * x139);
	const FLT x190 = (-1 * x146 * (x189 + (x184 * x133))) + (x100 * x184);
	const FLT x191 = (x160 * x189) + (-1 * x116 * x184);
	const FLT x192 = ((-1 * x163 * x188) + (x162 * x185)) * x164;
	const FLT x193 = x192 + (-1 * x191 * x159);
	const FLT x194 = x190 * x152;
	const FLT x195 = (x190 * x154) + (x101 * (x194 + (-1 * x190 * x151)));
	const FLT x196 = (x190 * x156) + (x101 * x195);
	const FLT x197 =
		x127 *
		(x191 + (x190 * x150) + (x179 * x193) + (x125 * x196) +
		 (-1 * x177 *
		  ((x120 * ((x176 * x190) + (x101 * x196) +
					(x101 * (x196 + (x170 * x190) +
							 (x101 * (x195 + (x171 * x190) + (x101 * ((x172 * x190) + (-1 * x174 * x190) + x194)))))) +
					(x175 * x190))) +
		   (x169 * x193))));
	const FLT x198 = x186 + (-1 * x187);
	const FLT x199 = x140 + x141;
	const FLT x200 = x135 + x82 + x183;
	const FLT x201 = (x200 * x143) + (x199 * x139);
	const FLT x202 = (-1 * x146 * (x201 + (x198 * x133))) + (x100 * x198);
	const FLT x203 = (x201 * x160) + (-1 * x116 * x198);
	const FLT x204 = ((-1 * x200 * x163) + (x162 * x199)) * x164;
	const FLT x205 = x204 + (-1 * x203 * x159);
	const FLT x206 = x202 * x152;
	const FLT x207 = (x202 * x154) + (x101 * (x206 + (-1 * x202 * x151)));
	const FLT x208 = (x202 * x156) + (x207 * x101);
	const FLT x209 =
		x127 *
		(x203 + (x205 * x179) + (x208 * x125) + (x202 * x150) +
		 (-1 * x177 *
		  ((x120 *
			((x208 * x101) + (x202 * x176) + (x202 * x175) +
			 (x101 * (x208 + (x202 * x170) +
					  (x101 * (x207 + (x202 * x171) + (x101 * ((-1 * x202 * x174) + x206 + (x202 * x172))))))))) +
		   (x205 * x169))));
	const FLT x210 = 1.0 / 2.0 * x51;
	const FLT x211 = 0.5 * x32;
	const FLT x212 = 0.5 * x31;
	const FLT x213 = x212 + x211;
	const FLT x214 = 2 * x40;
	const FLT x215 = 0.5 * x23;
	const FLT x216 = -1 * x215;
	const FLT x217 = 0.5 * x28;
	const FLT x218 = x217 + x216;
	const FLT x219 = 2 * x37;
	const FLT x220 = 0.5 * x34;
	const FLT x221 = -0.5 * x36;
	const FLT x222 = x221 + (-1 * x220);
	const FLT x223 = 2 * x29;
	const FLT x224 = 0.5 * x39;
	const FLT x225 = -1 * x224;
	const FLT x226 = 0.5 * x38;
	const FLT x227 = x226 + x225;
	const FLT x228 = 2 * x33;
	const FLT x229 = (x227 * x228) + (x223 * x222) + (x213 * x214) + (x219 * x218);
	const FLT x230 = 1.0 / 2.0 * (1. / (x41 * sqrt(x41)));
	const FLT x231 = x33 * x230;
	const FLT x232 = x231 * x229;
	const FLT x233 = x29 * x230;
	const FLT x234 = x233 * x229;
	const FLT x235 = x48 * x222;
	const FLT x236 = x37 * x230;
	const FLT x237 = x236 * x229;
	const FLT x238 = x44 * x213;
	const FLT x239 = x40 * x230;
	const FLT x240 = x239 * x229;
	const FLT x241 = (-1 * x240 * (*_x0).Pose.Rot[0]) + (-1 * x45 * x218) + x235 + x238 +
					 (-1 * x232 * (*_x0).Pose.Rot[1]) + (-1 * x234 * (*_x0).Pose.Rot[2]) + (x237 * (*_x0).Pose.Rot[3]) +
					 (x46 * x227);
	const FLT x242 = 2 * x51;
	const FLT x243 = -1 * x46 * x222;
	const FLT x244 = x45 * x213;
	const FLT x245 = x244 + (-1 * x237 * (*_x0).Pose.Rot[0]) + (-1 * x240 * (*_x0).Pose.Rot[3]) + (x48 * x227) +
					 (x44 * x218) + x243 + (x234 * (*_x0).Pose.Rot[1]) + (-1 * x232 * (*_x0).Pose.Rot[2]);
	const FLT x246 = 2 * x47;
	const FLT x247 = x48 * x213;
	const FLT x248 = x44 * x222;
	const FLT x249 = (x46 * x218) + (-1 * x247) + (-1 * x232 * (*_x0).Pose.Rot[3]) + (-1 * x237 * (*_x0).Pose.Rot[1]) +
					 x248 + (x240 * (*_x0).Pose.Rot[2]) + (-1 * x234 * (*_x0).Pose.Rot[0]) + (x45 * x227);
	const FLT x250 = 2 * x50;
	const FLT x251 = -1 * x46 * x213;
	const FLT x252 = x45 * x222;
	const FLT x253 = (-1 * x48 * x218) + x251 + (x237 * (*_x0).Pose.Rot[2]) + (x44 * x227) +
					 (-1 * x232 * (*_x0).Pose.Rot[0]) + (x234 * (*_x0).Pose.Rot[3]) + (x240 * (*_x0).Pose.Rot[1]) +
					 (-1 * x252);
	const FLT x254 = 2 * x49;
	const FLT x255 = (x254 * x253) + (x250 * x249) + (x241 * x242) + (x245 * x246);
	const FLT x256 = 1. / (x52 * sqrt(x52));
	const FLT x257 = x59 * x256;
	const FLT x258 = x57 * x257;
	const FLT x259 = x255 * x258;
	const FLT x260 = x2 * x15;
	const FLT x261 = x260 * x257;
	const FLT x262 = 1.0 / 2.0 * x47;
	const FLT x263 = x262 * x255;
	const FLT x264 = x0 * x15;
	const FLT x265 = 1.0 / 2.0 * x50;
	const FLT x266 = x265 * x257;
	const FLT x267 = x266 * x264;
	const FLT x268 = x2 * x64;
	const FLT x269 = x0 * x64;
	const FLT x270 = x5 * x15;
	const FLT x271 = 1.0 / 2.0 * x60 * x256;
	const FLT x272 = x271 * x255;
	const FLT x273 = x64 * x253;
	const FLT x274 = (x263 * x261) + (x5 * x273) + (-1 * x272 * x270) + (-1 * x267 * x255) + (-1 * x268 * x245) +
					 (x67 * x241) + (-1 * x210 * x259) + (x269 * x249);
	const FLT x275 = x263 * x257;
	const FLT x276 = x5 * x64;
	const FLT x277 = x271 * x260;
	const FLT x278 = x210 * x257;
	const FLT x279 = x278 * x264;
	const FLT x280 = (x67 * x249) + (x276 * x245) + (x279 * x255) + (-1 * x269 * x241) + (-1 * x265 * x259) +
					 (-1 * x277 * x255) + (-1 * x275 * x270) + (x2 * x273);
	const FLT x281 = x210 * x270;
	const FLT x282 = x281 * x257;
	const FLT x283 = x57 * x271;
	const FLT x284 = x265 * x261;
	const FLT x285 = (x67 * x253) + (-1 * x269 * x245) + (x275 * x264) + (-1 * x276 * x241) + (-1 * x283 * x255) +
					 (x282 * x255) + (-1 * x268 * x249) + (x284 * x255);
	const FLT x286 = (x285 * sensor_pt[1]) + (-1 * x274 * sensor_pt[2]) + (x280 * sensor_pt[0]);
	const FLT x287 = 2 * x76;
	const FLT x288 = x270 * x266;
	const FLT x289 = x210 * x261;
	const FLT x290 = (-1 * x289 * x255) + (x0 * x273) + (x67 * x245) + (-1 * x262 * x259) + (-1 * x272 * x264) +
					 (x288 * x255) + (x268 * x241) + (-1 * x276 * x249);
	const FLT x291 = 2 * x84;
	const FLT x292 = (x285 * sensor_pt[2]) + (x274 * sensor_pt[1]) + (-1 * x290 * sensor_pt[0]);
	const FLT x293 = 2 * x70;
	const FLT x294 = 2 * x80;
	const FLT x295 = (-1 * x294 * x280) + (x293 * x292) + (-1 * x286 * x287) + (x291 * x290);
	const FLT x296 = (x285 * sensor_pt[0]) + (x290 * sensor_pt[2]) + (-1 * x280 * sensor_pt[1]);
	const FLT x297 = 2 * x77;
	const FLT x298 = 2 * x79;
	const FLT x299 = (x274 * x294) + (x298 * x286) + (-1 * x296 * x293) + (-1 * x297 * x290);
	const FLT x300 = (x296 * x287) + (-1 * x298 * x292) + (x297 * x280) + (-1 * x274 * x291);
	const FLT x301 = (x300 * (*lh_p).Rot[1]) + (-1 * x295 * (*lh_p).Rot[2]) + (x299 * (*lh_p).Rot[0]);
	const FLT x302 = 2 * (*lh_p).Rot[1];
	const FLT x303 = (x299 * (*lh_p).Rot[2]) + (-1 * x300 * (*lh_p).Rot[3]) + (x295 * (*lh_p).Rot[0]);
	const FLT x304 = 2 * (*lh_p).Rot[3];
	const FLT x305 = x300 + (-1 * x301 * x302) + (x303 * x304);
	const FLT x306 = (x295 * (*lh_p).Rot[3]) + (-1 * x299 * (*lh_p).Rot[1]) + (x300 * (*lh_p).Rot[0]);
	const FLT x307 = 2 * (*lh_p).Rot[2];
	const FLT x308 = x295 + (-1 * x306 * x304) + (x307 * x301);
	const FLT x309 = x299 + (x302 * x306) + (-1 * x307 * x303);
	const FLT x310 = (x309 * x143) + (x308 * x139);
	const FLT x311 = (-1 * x146 * (x310 + (x305 * x133))) + (x305 * x100);
	const FLT x312 = x311 * x152;
	const FLT x313 = (x311 * x154) + (x101 * (x312 + (-1 * x311 * x151)));
	const FLT x314 = (x311 * x156) + (x313 * x101);
	const FLT x315 = (x310 * x160) + (-1 * x305 * x116);
	const FLT x316 = ((-1 * x309 * x163) + (x308 * x162)) * x164;
	const FLT x317 = x316 + (-1 * x315 * x159);
	const FLT x318 =
		x127 *
		((x311 * x150) + (x317 * x179) + (x314 * x125) + x315 +
		 (-1 * x177 *
		  ((x120 * ((x314 * x101) + (x311 * x176) +
					(x101 * (x314 + (x311 * x170) +
							 (x101 * (x313 + (x311 * x171) + (x101 * ((-1 * x311 * x174) + x312 + (x311 * x172))))))) +
					(x311 * x175))) +
		   (x317 * x169))));
	const FLT x319 = x262 * x257;
	const FLT x320 = -1 * x217;
	const FLT x321 = x320 + x216;
	const FLT x322 = (-1 * x212) + x211;
	const FLT x323 = -1 * x226;
	const FLT x324 = x225 + x323;
	const FLT x325 = x220 + x221;
	const FLT x326 = (x228 * x325) + (x223 * x324) + (x214 * x321) + (x219 * x322);
	const FLT x327 = x326 * (*_x0).Pose.Rot[1];
	const FLT x328 = x326 * (*_x0).Pose.Rot[0];
	const FLT x329 = x326 * (*_x0).Pose.Rot[3];
	const FLT x330 = x231 * x326;
	const FLT x331 = (-1 * x330 * (*_x0).Pose.Rot[2]) + (-1 * x239 * x329) + (x48 * x325) + (x233 * x327) +
					 (-1 * x46 * x324) + (x44 * x322) + (x45 * x321) + (-1 * x236 * x328);
	const FLT x332 = x233 * x326;
	const FLT x333 = (x48 * x324) + (-1 * x239 * x328) + (-1 * x231 * x327) + (-1 * x332 * (*_x0).Pose.Rot[2]) +
					 (x44 * x321) + (-1 * x45 * x322) + (x46 * x325) + (x236 * x329);
	const FLT x334 = x326 * (*_x0).Pose.Rot[2];
	const FLT x335 = (x239 * x334) + (x46 * x322) + (x44 * x324) + (-1 * x233 * x328) + (-1 * x236 * x327) +
					 (-1 * x330 * (*_x0).Pose.Rot[3]) + (x45 * x325) + (-1 * x48 * x321);
	const FLT x336 = (-1 * x45 * x324) + (x236 * x334) + (x332 * (*_x0).Pose.Rot[3]) + (-1 * x46 * x321) +
					 (-1 * x231 * x328) + (x44 * x325) + (-1 * x48 * x322) + (x239 * x327);
	const FLT x337 = (x254 * x336) + (x250 * x335) + (x246 * x331) + (x242 * x333);
	const FLT x338 = x270 * x337;
	const FLT x339 = x258 * x337;
	const FLT x340 = (x67 * x335) + (x279 * x337) + (-1 * x269 * x333) + (-1 * x277 * x337) + (x268 * x336) +
					 (-1 * x265 * x339) + (-1 * x338 * x319) + (x276 * x331);
	const FLT x341 = x262 * x261;
	const FLT x342 = (-1 * x267 * x337) + (-1 * x271 * x338) + (x337 * x341) + (-1 * x210 * x339) + (x67 * x333) +
					 (-1 * x268 * x331) + (x276 * x336) + (x269 * x335);
	const FLT x343 = x264 * x337;
	const FLT x344 = (-1 * x268 * x335) + (-1 * x283 * x337) + (x67 * x336) + (-1 * x269 * x331) + (x319 * x343) +
					 (x282 * x337) + (x284 * x337) + (-1 * x276 * x333);
	const FLT x345 = (x344 * sensor_pt[1]) + (x340 * sensor_pt[0]) + (-1 * x342 * sensor_pt[2]);
	const FLT x346 = (-1 * x289 * x337) + (x269 * x336) + (x67 * x331) + (-1 * x271 * x343) + (x288 * x337) +
					 (-1 * x276 * x335) + (-1 * x262 * x339) + (x268 * x333);
	const FLT x347 = (x342 * sensor_pt[1]) + (-1 * x346 * sensor_pt[0]) + (x344 * sensor_pt[2]);
	const FLT x348 = (x291 * x346) + (x293 * x347) + (-1 * x287 * x345) + (-1 * x294 * x340);
	const FLT x349 = (x344 * sensor_pt[0]) + (x346 * sensor_pt[2]) + (-1 * x340 * sensor_pt[1]);
	const FLT x350 = (-1 * x297 * x346) + (x298 * x345) + (-1 * x293 * x349) + (x294 * x342);
	const FLT x351 = (-1 * x291 * x342) + (-1 * x298 * x347) + (x287 * x349) + (x297 * x340);
	const FLT x352 = 2 * ((-1 * x348 * (*lh_p).Rot[2]) + (x351 * (*lh_p).Rot[1]) + (x350 * (*lh_p).Rot[0]));
	const FLT x353 = (x350 * (*lh_p).Rot[2]) + (-1 * x351 * (*lh_p).Rot[3]) + (x348 * (*lh_p).Rot[0]);
	const FLT x354 = x351 + (-1 * x352 * (*lh_p).Rot[1]) + (x353 * x304);
	const FLT x355 = (x348 * (*lh_p).Rot[3]) + (-1 * x350 * (*lh_p).Rot[1]) + (x351 * (*lh_p).Rot[0]);
	const FLT x356 = x348 + (x352 * (*lh_p).Rot[2]) + (-1 * x355 * x304);
	const FLT x357 = x350 + (x355 * x302) + (-1 * x353 * x307);
	const FLT x358 = (x357 * x143) + (x356 * x139);
	const FLT x359 = (-1 * x146 * (x358 + (x354 * x133))) + (x354 * x100);
	const FLT x360 = (x358 * x160) + (-1 * x354 * x116);
	const FLT x361 = ((-1 * x357 * x163) + (x356 * x162)) * x164;
	const FLT x362 = x361 + (-1 * x360 * x159);
	const FLT x363 = x359 * x152;
	const FLT x364 = (x359 * x154) + (x101 * (x363 + (-1 * x359 * x151)));
	const FLT x365 = (x359 * x156) + (x364 * x101);
	const FLT x366 =
		x127 *
		((x362 * x179) + (x359 * x150) + x360 + (x365 * x125) +
		 (-1 * x177 *
		  ((x120 *
			((x365 * x101) + (x359 * x176) + (x359 * x175) +
			 (x101 * (x365 + (x359 * x170) +
					  (x101 * (x364 + (x359 * x171) + (x101 * ((-1 * x359 * x174) + x363 + (x359 * x172))))))))) +
		   (x362 * x169))));
	const FLT x367 = x224 + x323;
	const FLT x368 = x215 + x320;
	const FLT x369 = (x228 * x368) + (x219 * x367) + (x214 * x222) + (x213 * x223);
	const FLT x370 = x369 * (*_x0).Pose.Rot[0];
	const FLT x371 = x369 * (*_x0).Pose.Rot[3];
	const FLT x372 = x239 * x369;
	const FLT x373 = x236 * x369;
	const FLT x374 = (-1 * x244) + (-1 * x231 * x370) + (x44 * x368) + x243 + (x372 * (*_x0).Pose.Rot[1]) +
					 (-1 * x48 * x367) + (x373 * (*_x0).Pose.Rot[2]) + (x233 * x371);
	const FLT x375 = x231 * x369;
	const FLT x376 = x233 * x369;
	const FLT x377 = x247 + (-1 * x239 * x370) + (x46 * x368) + (-1 * x375 * (*_x0).Pose.Rot[1]) + (x236 * x371) +
					 (-1 * x376 * (*_x0).Pose.Rot[2]) + x248 + (-1 * x45 * x367);
	const FLT x378 = (x372 * (*_x0).Pose.Rot[2]) + x238 + (-1 * x231 * x371) + (x45 * x368) +
					 (-1 * x373 * (*_x0).Pose.Rot[1]) + (-1 * x235) + (-1 * x233 * x370) + (x46 * x367);
	const FLT x379 = (-1 * x236 * x370) + (x376 * (*_x0).Pose.Rot[1]) + (x44 * x367) + (-1 * x239 * x371) + x251 +
					 (-1 * x375 * (*_x0).Pose.Rot[2]) + x252 + (x48 * x368);
	const FLT x380 = (x254 * x374) + (x246 * x379) + (x242 * x377) + (x250 * x378);
	const FLT x381 = x258 * x380;
	const FLT x382 = x264 * x380;
	const FLT x383 = x270 * x380;
	const FLT x384 = (x269 * x378) + (-1 * x210 * x381) + (x67 * x377) + (-1 * x266 * x382) + (x276 * x374) +
					 (-1 * x268 * x379) + (-1 * x271 * x383) + (x380 * x341);
	const FLT x385 = (x67 * x378) + (x276 * x379) + (-1 * x277 * x380) + (-1 * x383 * x319) + (x278 * x382) +
					 (-1 * x269 * x377) + (x268 * x374) + (-1 * x265 * x381);
	const FLT x386 = (x67 * x374) + (-1 * x276 * x377) + (x284 * x380) + (-1 * x283 * x380) + (x382 * x319) +
					 (-1 * x269 * x379) + (x282 * x380) + (-1 * x268 * x378);
	const FLT x387 = (x386 * sensor_pt[1]) + (-1 * x384 * sensor_pt[2]) + (x385 * sensor_pt[0]);
	const FLT x388 = (-1 * x276 * x378) + (-1 * x262 * x381) + (x288 * x380) + (x67 * x379) + (-1 * x271 * x382) +
					 (x268 * x377) + (x269 * x374) + (-1 * x289 * x380);
	const FLT x389 = (x384 * sensor_pt[1]) + (-1 * x388 * sensor_pt[0]) + (x386 * sensor_pt[2]);
	const FLT x390 = (x291 * x388) + (x293 * x389) + (-1 * x287 * x387) + (-1 * x294 * x385);
	const FLT x391 = (x386 * sensor_pt[0]) + (-1 * x385 * sensor_pt[1]) + (x388 * sensor_pt[2]);
	const FLT x392 = (x294 * x384) + (x298 * x387) + (-1 * x297 * x388) + (-1 * x293 * x391);
	const FLT x393 = (x297 * x385) + (-1 * x298 * x389) + (x287 * x391) + (-1 * x291 * x384);
	const FLT x394 = (x393 * (*lh_p).Rot[1]) + (-1 * x390 * (*lh_p).Rot[2]) + (x392 * (*lh_p).Rot[0]);
	const FLT x395 = (x392 * (*lh_p).Rot[2]) + (x390 * (*lh_p).Rot[0]) + (-1 * x393 * (*lh_p).Rot[3]);
	const FLT x396 = x393 + (-1 * x394 * x302) + (x395 * x304);
	const FLT x397 = (x390 * (*lh_p).Rot[3]) + (-1 * x392 * (*lh_p).Rot[1]) + (x393 * (*lh_p).Rot[0]);
	const FLT x398 = x390 + (-1 * x397 * x304) + (x394 * x307);
	const FLT x399 = x392 + (-1 * x395 * x307) + (x397 * x302);
	const FLT x400 = (x399 * x143) + (x398 * x139);
	const FLT x401 = (x400 * x160) + (-1 * x396 * x116);
	const FLT x402 = ((-1 * x399 * x163) + (x398 * x162)) * x164;
	const FLT x403 = x402 + (-1 * x401 * x159);
	const FLT x404 = (-1 * x146 * (x400 + (x396 * x133))) + (x396 * x100);
	const FLT x405 = x404 * x148;
	const FLT x406 = x405 * x103;
	const FLT x407 = (x405 * x104) + (x101 * (x406 + (-1 * x405 * x102)));
	const FLT x408 = (x404 * x156) + (x407 * x101);
	const FLT x409 =
		x127 *
		((x403 * x179) + (x405 * x149) + x401 +
		 (-1 * x177 *
		  ((x120 * ((x405 * x106) +
					(x101 * (x408 + (x404 * x170) +
							 (x101 * ((x404 * x171) + x407 + (x101 * ((-1 * x405 * x173) + (x405 * x108) + x406)))))) +
					(x408 * x101) + (x404 * x175))) +
		   (x403 * x169))) +
		 (x408 * x125));
	const FLT x410 = x302 * (*lh_p).Rot[2];
	const FLT x411 = x304 * (*lh_p).Rot[0];
	const FLT x412 = x411 + x410;
	const FLT x413 = 2 * x136;
	const FLT x414 = -1 * x413;
	const FLT x415 = 2 * x134;
	const FLT x416 = -1 * x415;
	const FLT x417 = 1 + x416 + x414;
	const FLT x418 = x307 * (*lh_p).Rot[0];
	const FLT x419 = x304 * (*lh_p).Rot[1];
	const FLT x420 = x419 + (-1 * x418);
	const FLT x421 = (x420 * x143) + (x417 * x139);
	const FLT x422 = (-1 * x146 * (x421 + (x412 * x133))) + (x412 * x100);
	const FLT x423 = (x421 * x160) + (-1 * x412 * x116);
	const FLT x424 = ((-1 * x420 * x163) + (x417 * x162)) * x164;
	const FLT x425 = x424 + (-1 * x423 * x159);
	const FLT x426 = x422 * x152;
	const FLT x427 = (x422 * x154) + (x101 * (x426 + (-1 * x422 * x151)));
	const FLT x428 = (x422 * x156) + (x427 * x101);
	const FLT x429 =
		x127 *
		((x428 * x125) + x423 + (x425 * x179) + (x422 * x150) +
		 (-1 * x177 *
		  ((x120 * ((x428 * x101) + (x422 * x175) +
					(x101 * (x428 + (x422 * x170) +
							 (x101 * (x427 + (x422 * x171) + (x101 * ((-1 * x422 * x174) + x426 + (x422 * x172))))))) +
					(x422 * x176))) +
		   (x425 * x169))));
	const FLT x430 = 2 * x182;
	const FLT x431 = 1 + (-1 * x430);
	const FLT x432 = x431 + x414;
	const FLT x433 = x410 + (-1 * x411);
	const FLT x434 = x304 * (*lh_p).Rot[2];
	const FLT x435 = x302 * (*lh_p).Rot[0];
	const FLT x436 = x435 + x434;
	const FLT x437 = (x436 * x143) + (x433 * x139);
	const FLT x438 = (x437 * x160) + (-1 * x432 * x116);
	const FLT x439 = ((-1 * x436 * x163) + (x433 * x162)) * x164;
	const FLT x440 = x167 * (x439 + (-1 * x438 * x159));
	const FLT x441 = (-1 * x146 * (x437 + (x432 * x133))) + (x432 * x100);
	const FLT x442 = x441 * x152;
	const FLT x443 = (x441 * x154) + (x101 * (x442 + (-1 * x441 * x151)));
	const FLT x444 = (x441 * x156) + (x443 * x101);
	const FLT x445 =
		x127 *
		((x440 * x178) + x438 + (x441 * x150) +
		 (-1 * x177 *
		  ((x120 * ((x444 * x101) + (x441 * x176) +
					(x101 * ((x441 * x170) + x444 +
							 (x101 * (x443 + (x441 * x171) + (x101 * (x442 + (-1 * x441 * x174) + (x441 * x172))))))) +
					(x441 * x175))) +
		   (x440 * x168))) +
		 (x444 * x125));
	const FLT x446 = x434 + (-1 * x435);
	const FLT x447 = x418 + x419;
	const FLT x448 = x431 + x416;
	const FLT x449 = (x448 * x143) + (x447 * x139);
	const FLT x450 = (-1 * x146 * (x449 + (x446 * x133))) + (x446 * x100);
	const FLT x451 = x450 * x152;
	const FLT x452 = (x450 * x154) + (x101 * (x451 + (-1 * x450 * x151)));
	const FLT x453 = (x450 * x156) + (x452 * x101);
	const FLT x454 = (x449 * x160) + (-1 * x446 * x116);
	const FLT x455 = ((-1 * x448 * x163) + (x447 * x162)) * x164;
	const FLT x456 = x455 + (-1 * x454 * x159);
	const FLT x457 =
		x127 *
		(x454 + (x456 * x179) +
		 (-1 * x177 *
		  ((x120 * ((x453 * x101) +
					(x101 * (x453 + (x450 * x170) +
							 (x101 * (x452 + (x450 * x171) + (x101 * ((-1 * x450 * x174) + x451 + (x450 * x172))))))) +
					(x450 * x176) + (x450 * x175))) +
		   (x456 * x169))) +
		 (x450 * x150) + (x453 * x125));
	const FLT x458 = dt * dt * dt;
	const FLT x459 = 0.5 * x55 * x458;
	const FLT x460 = x6 * x459;
	const FLT x461 = dt * dt * dt * dt;
	const FLT x462 = (x5 * x5 * x5) * x461;
	const FLT x463 = 1.0 * x57;
	const FLT x464 = x13 * (1. / (x10 * sqrt(x10)));
	const FLT x465 = x464 * x463;
	const FLT x466 = 2 * x56;
	const FLT x467 = x1 * x466;
	const FLT x468 = 2 * x54 * (1. / (x10 * x10));
	const FLT x469 = x461 * x468;
	const FLT x470 = x5 * x463;
	const FLT x471 = x461 * x464;
	const FLT x472 = x471 * x470;
	const FLT x473 = x1 * x14;
	const FLT x474 = x8 * x469;
	const FLT x475 = (-1 * x473 * x470) + (x8 * x472) + (x5 * x467) + (-1 * x3 * x5 * x469) + (x462 * x465) +
					 (-1 * x5 * x474) + (-1 * x462 * x468) + (x3 * x472);
	const FLT x476 = 1. / (x58 * sqrt(x58));
	const FLT x477 = x53 * x476;
	const FLT x478 = x477 * x264;
	const FLT x479 = x477 * x260;
	const FLT x480 = x475 * x265;
	const FLT x481 = x68 * x459;
	const FLT x482 = x0 * x5;
	const FLT x483 = x482 * x481;
	const FLT x484 = x66 * x476;
	const FLT x485 = 1.0 / 2.0 * x484;
	const FLT x486 = x49 * x485;
	const FLT x487 = x458 * x464;
	const FLT x488 = x6 * x487;
	const FLT x489 = x63 * x51;
	const FLT x490 = x477 * x270;
	const FLT x491 = x475 * x210;
	const FLT x492 = x5 * x61;
	const FLT x493 = 0.5 * x473;
	const FLT x494 = x0 * x487;
	const FLT x495 = x5 * x71;
	const FLT x496 = x494 * x495;
	const FLT x497 = -1 * x65;
	const FLT x498 = x63 * x50;
	const FLT x499 = x498 * x487;
	const FLT x500 = x5 * x499;
	const FLT x501 = x75 * x459;
	const FLT x502 = x2 * x5;
	const FLT x503 = (-1 * x501 * x502) + (x2 * x500);
	const FLT x504 = x503 + x497 + (-1 * x492 * x493) + (x490 * x491) + (x489 * x488) + x496 + (x478 * x475 * x262) +
					 (x479 * x480) + (-1 * x78 * x460) + (-1 * x475 * x486) + (-1 * x483);
	const FLT x505 = -1 * x69;
	const FLT x506 = x78 * x459;
	const FLT x507 = x502 * x506;
	const FLT x508 = x2 * x487;
	const FLT x509 = x5 * x489;
	const FLT x510 = x508 * x509;
	const FLT x511 = 1.0 / 2.0 * x49;
	const FLT x512 = x475 * x511;
	const FLT x513 = x484 * x262;
	const FLT x514 = x73 * x459;
	const FLT x515 = x5 * x514;
	const FLT x516 = (-1 * x494 * x492) + (x0 * x515);
	const FLT x517 = x516 + (-1 * x475 * x513) + (x490 * x480) + (-1 * x495 * x493) + (-1 * x478 * x512) + x505 +
					 (-1 * x491 * x479) + (-1 * x75 * x460) + (x6 * x499) + (-1 * x510) + x507;
	const FLT x518 = x482 * x501;
	const FLT x519 = x71 * x508;
	const FLT x520 = x5 * x519;
	const FLT x521 = x481 * x502;
	const FLT x522 = x51 * x485;
	const FLT x523 = x0 * x500;
	const FLT x524 = x479 * x262;
	const FLT x525 = x62 + x520 + x518 + (-1 * x490 * x512) + (x73 * x460) + (-1 * x478 * x480) + (-1 * x521) +
					 (-1 * x475 * x522) + (-1 * x523) + (-1 * x493 * x509) + (x475 * x524) + (-1 * x61 * x488);
	const FLT x526 = (x525 * sensor_pt[1]) + (x504 * sensor_pt[2]) + (-1 * x517 * sensor_pt[0]);
	const FLT x527 = x478 * x210;
	const FLT x528 = x50 * x485;
	const FLT x529 = x490 * x262;
	const FLT x530 = x61 * x508;
	const FLT x531 = (-1 * x5 * x530) + (x2 * x515);
	const FLT x532 = (-1 * x482 * x506) + (x494 * x509);
	const FLT x533 = (-1 * x475 * x529) + (-1 * x71 * x488) + (-1 * x479 * x512) + (x475 * x527) + x532 +
					 (-1 * x5 * x498 * x493) + x72 + (-1 * x475 * x528) + x531 + (x68 * x460);
	const FLT x534 = (x504 * sensor_pt[0]) + (-1 * x533 * sensor_pt[1]) + (x517 * sensor_pt[2]);
	const FLT x535 = (x533 * x297) + (x534 * x287) + (-1 * x526 * x298) + (-1 * x525 * x291);
	const FLT x536 = (x504 * sensor_pt[1]) + (-1 * x525 * sensor_pt[2]) + (x533 * sensor_pt[0]);
	const FLT x537 = (x517 * x291) + (x526 * x293) + (-1 * x536 * x287) + (-1 * x533 * x294);
	const FLT x538 = (-1 * x517 * x297) + (x536 * x298) + (-1 * x534 * x293) + (x525 * x294);
	const FLT x539 = (x538 * (*lh_p).Rot[2]) + (-1 * x535 * (*lh_p).Rot[3]) + (x537 * (*lh_p).Rot[0]);
	const FLT x540 = (x535 * (*lh_p).Rot[1]) + (-1 * x537 * (*lh_p).Rot[2]) + (x538 * (*lh_p).Rot[0]);
	const FLT x541 = x535 + (x539 * x304) + (-1 * x540 * x302);
	const FLT x542 = (x537 * (*lh_p).Rot[3]) + (-1 * x538 * (*lh_p).Rot[1]) + (x535 * (*lh_p).Rot[0]);
	const FLT x543 = x537 + (-1 * x542 * x304) + (x540 * x307);
	const FLT x544 = x538 + (x542 * x302) + (-1 * x539 * x307);
	const FLT x545 = (x544 * x143) + (x543 * x139);
	const FLT x546 = (-1 * x146 * (x545 + (x541 * x133))) + (x541 * x100);
	const FLT x547 = (x545 * x160) + (-1 * x541 * x116);
	const FLT x548 = ((-1 * x544 * x163) + (x543 * x162)) * x164;
	const FLT x549 = x548 + (-1 * x547 * x159);
	const FLT x550 = x546 * x152;
	const FLT x551 = (x546 * x154) + (x101 * (x550 + (-1 * x546 * x151)));
	const FLT x552 = (x546 * x156) + (x551 * x101);
	const FLT x553 =
		x127 *
		(x547 + (x549 * x179) + (x552 * x125) + (x546 * x150) +
		 (-1 * x177 *
		  ((x120 * ((x552 * x101) + (x546 * x175) +
					(x101 * (x552 + (x546 * x170) +
							 (x101 * (x551 + (x546 * x171) + (x101 * ((-1 * x546 * x174) + x550 + (x546 * x172))))))) +
					(x546 * x176))) +
		   (x549 * x169))));
	const FLT x554 = x8 * x487;
	const FLT x555 = x461 * x465;
	const FLT x556 = x0 * x555;
	const FLT x557 = x0 * x469;
	const FLT x558 = x0 * x1;
	const FLT x559 = x14 * x558;
	const FLT x560 = x0 * x0 * x0;
	const FLT x561 = (-1 * x469 * x560) + (x555 * x560) + (-1 * x6 * x557) + (-1 * x3 * x557) + (x6 * x556) +
					 (x466 * x558) + (-1 * x463 * x559) + (x3 * x556);
	const FLT x562 = x511 * x561;
	const FLT x563 = 0.5 * x559;
	const FLT x564 = x485 * x561;
	const FLT x565 = x0 * x2;
	const FLT x566 = (-1 * x0 * x530) + (x514 * x565);
	const FLT x567 = x566 + (-1 * x50 * x564) + (-1 * x498 * x563) + (-1 * x8 * x506) + (-1 * x496) + x497 +
					 (x489 * x554) + (-1 * x479 * x562) + (-1 * x529 * x561) + x483 + (x527 * x561);
	const FLT x568 = x561 * x210;
	const FLT x569 = x0 * x489 * x508;
	const FLT x570 = x506 * x565;
	const FLT x571 = x561 * x265;
	const FLT x572 = (-1 * x513 * x561) + (-1 * x478 * x562) + (x8 * x514) + (x490 * x571) + x62 + x523 +
					 (-1 * x479 * x568) + (-1 * x71 * x563) + (-1 * x518) + (-1 * x569) + (-1 * x61 * x554) + x570;
	const FLT x573 = -1 * x72;
	const FLT x574 = x501 * x565;
	const FLT x575 = x478 * x561;
	const FLT x576 = x499 * x565;
	const FLT x577 = (x490 * x568) + (-1 * x8 * x481) + (-1 * x61 * x563) + x532 + (x479 * x571) + x573 + (-1 * x574) +
					 (x71 * x554) + (-1 * x49 * x564) + (x575 * x262) + x576;
	const FLT x578 = (x577 * sensor_pt[0]) + (-1 * x567 * sensor_pt[1]) + (x572 * sensor_pt[2]);
	const FLT x579 = (x0 * x519) + (-1 * x481 * x565);
	const FLT x580 = x579 + (-1 * x575 * x265) + (-1 * x490 * x562) + (-1 * x8 * x499) + (x8 * x501) +
					 (-1 * x51 * x564) + x69 + (x524 * x561) + x516 + (-1 * x489 * x563);
	const FLT x581 = (x577 * sensor_pt[1]) + (x567 * sensor_pt[0]) + (-1 * x580 * sensor_pt[2]);
	const FLT x582 = (-1 * x572 * x297) + (-1 * x578 * x293) + (x580 * x294) + (x581 * x298);
	const FLT x583 = (x580 * sensor_pt[1]) + (-1 * x572 * sensor_pt[0]) + (x577 * sensor_pt[2]);
	const FLT x584 = (x572 * x291) + (-1 * x567 * x294) + (-1 * x581 * x287) + (x583 * x293);
	const FLT x585 = (-1 * x580 * x291) + (x567 * x297) + (-1 * x583 * x298) + (x578 * x287);
	const FLT x586 = 2 * ((x585 * (*lh_p).Rot[1]) + (x582 * (*lh_p).Rot[0]) + (-1 * x584 * (*lh_p).Rot[2]));
	const FLT x587 = (x582 * (*lh_p).Rot[2]) + (-1 * x585 * (*lh_p).Rot[3]) + (x584 * (*lh_p).Rot[0]);
	const FLT x588 = x585 + (-1 * x586 * (*lh_p).Rot[1]) + (x587 * x304);
	const FLT x589 = (x584 * (*lh_p).Rot[3]) + (x585 * (*lh_p).Rot[0]) + (-1 * x582 * (*lh_p).Rot[1]);
	const FLT x590 = x584 + (-1 * x589 * x304) + (x586 * (*lh_p).Rot[2]);
	const FLT x591 = x582 + (-1 * x587 * x307) + (x589 * x302);
	const FLT x592 = (x591 * x143) + (x590 * x139);
	const FLT x593 = (-1 * x146 * (x592 + (x588 * x133))) + (x588 * x100);
	const FLT x594 = (x592 * x160) + (-1 * x588 * x116);
	const FLT x595 = ((-1 * x591 * x163) + (x590 * x162)) * x164;
	const FLT x596 = x595 + (-1 * x594 * x159);
	const FLT x597 = x593 * x152;
	const FLT x598 = (x593 * x154) + (x101 * (x597 + (-1 * x593 * x151)));
	const FLT x599 = (x593 * x156) + (x598 * x101);
	const FLT x600 =
		x127 *
		(x594 + (x596 * x179) + (x599 * x125) + (x593 * x150) +
		 (-1 * x177 *
		  ((x120 * ((x101 * (x599 + (x593 * x170) +
							 (x101 * ((x593 * x171) + x598 + (x101 * ((-1 * x593 * x174) + x597 + (x593 * x172))))))) +
					(x593 * x175) + (x599 * x101) + (x593 * x176))) +
		   (x596 * x169))));
	const FLT x601 = x2 * x463;
	const FLT x602 = x471 * x601;
	const FLT x603 = x2 * x2 * x2;
	const FLT x604 = (x8 * x602) + (-1 * x469 * x603) + (x603 * x555) + (-1 * x2 * x474) + (-1 * x473 * x601) +
					 (x6 * x602) + (x2 * x467) + (-1 * x2 * x6 * x469);
	const FLT x605 = x477 * x604;
	const FLT x606 = x605 * x264;
	const FLT x607 = x605 * x260;
	const FLT x608 = x3 * x487;
	const FLT x609 = x2 * x493;
	const FLT x610 = x605 * x270;
	const FLT x611 = (-1 * x607 * x511) + (-1 * x610 * x262) + (-1 * x520) + x521 + (x3 * x514) + (x606 * x210) + x62 +
					 (-1 * x61 * x608) + (-1 * x604 * x528) + (-1 * x570) + x569 + (-1 * x498 * x609);
	const FLT x612 = x605 * x511;
	const FLT x613 = x566 + x503 + (-1 * x604 * x513) + (-1 * x71 * x609) + (-1 * x612 * x264) + (-1 * x489 * x608) +
					 (-1 * x607 * x210) + (x610 * x265) + x65 + (x3 * x506);
	const FLT x614 = x579 + (x606 * x262) + (x607 * x265) + x510 + (-1 * x507) + x505 + (-1 * x486 * x604) +
					 (-1 * x61 * x609) + (-1 * x3 * x501) + (x605 * x281) + (x498 * x608);
	const FLT x615 = (x614 * sensor_pt[0]) + (-1 * x611 * sensor_pt[1]) + (x613 * sensor_pt[2]);
	const FLT x616 = (-1 * x604 * x522) + x574 + (x607 * x262) + (-1 * x489 * x609) + (-1 * x606 * x265) +
					 (-1 * x3 * x481) + x531 + (-1 * x576) + (-1 * x612 * x270) + x573 + (x71 * x608);
	const FLT x617 = 2 * ((x614 * sensor_pt[1]) + (-1 * x616 * sensor_pt[2]) + (x611 * sensor_pt[0]));
	const FLT x618 = (x616 * x294) + (x79 * x617) + (-1 * x615 * x293) + (-1 * x613 * x297);
	const FLT x619 = (-1 * x613 * sensor_pt[0]) + (x616 * sensor_pt[1]) + (x614 * sensor_pt[2]);
	const FLT x620 = (x613 * x291) + (x619 * x293) + (-1 * x611 * x294) + (-1 * x76 * x617);
	const FLT x621 = (x611 * x297) + (-1 * x616 * x291) + (x615 * x287) + (-1 * x619 * x298);
	const FLT x622 = (x621 * (*lh_p).Rot[1]) + (x618 * (*lh_p).Rot[0]) + (-1 * x620 * (*lh_p).Rot[2]);
	const FLT x623 = (x618 * (*lh_p).Rot[2]) + (-1 * x621 * (*lh_p).Rot[3]) + (x620 * (*lh_p).Rot[0]);
	const FLT x624 = x621 + (-1 * x622 * x302) + (x623 * x304);
	const FLT x625 = (x620 * (*lh_p).Rot[3]) + (x621 * (*lh_p).Rot[0]) + (-1 * x618 * (*lh_p).Rot[1]);
	const FLT x626 = x620 + (-1 * x625 * x304) + (x622 * x307);
	const FLT x627 = x618 + (-1 * x623 * x307) + (x625 * x302);
	const FLT x628 = (x627 * x143) + (x626 * x139);
	const FLT x629 = (-1 * x146 * (x628 + (x624 * x133))) + (x624 * x100);
	const FLT x630 = x629 * x152;
	const FLT x631 = (x629 * x154) + (x101 * (x630 + (-1 * x629 * x151)));
	const FLT x632 = (x629 * x156) + (x631 * x101);
	const FLT x633 = (x628 * x160) + (-1 * x624 * x116);
	const FLT x634 = ((-1 * x627 * x163) + (x626 * x162)) * x164;
	const FLT x635 = x634 + (-1 * x633 * x159);
	const FLT x636 =
		x127 *
		((x635 * x179) +
		 (-1 * x177 *
		  ((x120 * ((x101 * (x632 + (x629 * x170) +
							 (x101 * (x631 + (x629 * x171) + (x101 * ((-1 * x629 * x174) + x630 + (x629 * x172))))))) +
					(x632 * x101) + (x629 * x176) + (x629 * x175))) +
		   (x635 * x169))) +
		 x633 + (x629 * x150) + (x632 * x125));
	const FLT x637 = dt * x410;
	const FLT x638 = dt * x411;
	const FLT x639 = x638 + x637;
	const FLT x640 = -1 * dt * x415;
	const FLT x641 = (-1 * dt * x413) + dt;
	const FLT x642 = x641 + x640;
	const FLT x643 = dt * x418;
	const FLT x644 = dt * x419;
	const FLT x645 = x644 + (-1 * x643);
	const FLT x646 = (x645 * x143) + (x642 * x139);
	const FLT x647 = (x646 * x160) + (-1 * x639 * x116);
	const FLT x648 = ((-1 * x645 * x163) + (x642 * x162)) * x164;
	const FLT x649 = x648 + (-1 * x647 * x159);
	const FLT x650 = (-1 * x146 * (x646 + (x639 * x133))) + (x639 * x100);
	const FLT x651 = x650 * x152;
	const FLT x652 = (x650 * x154) + (x101 * (x651 + (-1 * x650 * x151)));
	const FLT x653 = (x650 * x156) + (x652 * x101);
	const FLT x654 =
		x127 *
		(x647 + (x649 * x179) + (x653 * x125) +
		 (-1 * x177 *
		  ((x120 * ((x653 * x101) + (x650 * x176) +
					(x101 * (x653 + (x650 * x170) +
							 (x101 * ((x650 * x171) + x652 + (x101 * ((-1 * x650 * x174) + x651 + (x650 * x172))))))) +
					(x650 * x175))) +
		   (x649 * x169))) +
		 (x650 * x150));
	const FLT x655 = -1 * dt * x430;
	const FLT x656 = x641 + x655;
	const FLT x657 = x637 + (-1 * x638);
	const FLT x658 = dt * x434;
	const FLT x659 = dt * x435;
	const FLT x660 = x659 + x658;
	const FLT x661 = (x660 * x143) + (x657 * x139);
	const FLT x662 = (-1 * x146 * (x661 + (x656 * x133))) + (x656 * x100);
	const FLT x663 = x662 * x152;
	const FLT x664 = (x662 * x154) + (x101 * (x663 + (-1 * x662 * x151)));
	const FLT x665 = (x662 * x156) + (x664 * x101);
	const FLT x666 = (x661 * x160) + (-1 * x656 * x116);
	const FLT x667 = ((-1 * x660 * x163) + (x657 * x162)) * x164;
	const FLT x668 = x667 + (-1 * x666 * x159);
	const FLT x669 =
		x127 *
		(x666 + (x665 * x125) + (x668 * x179) + (x662 * x150) +
		 (-1 * x177 *
		  ((x120 * ((x665 * x101) +
					(x101 * ((x662 * x170) + x665 +
							 (x101 * (x664 + (x662 * x171) + (x101 * (x663 + (-1 * x662 * x174) + (x662 * x172))))))) +
					(x662 * x175) + (x662 * x176))) +
		   (x668 * x169))));
	const FLT x670 = x658 + (-1 * x659);
	const FLT x671 = x643 + x644;
	const FLT x672 = dt + x640 + x655;
	const FLT x673 = (x672 * x143) + (x671 * x139);
	const FLT x674 = (x673 * x160) + (-1 * x670 * x116);
	const FLT x675 = ((-1 * x672 * x163) + (x671 * x162)) * x164;
	const FLT x676 = x675 + (-1 * x674 * x159);
	const FLT x677 = (-1 * x146 * (x673 + (x670 * x133))) + (x670 * x100);
	const FLT x678 = x677 * x148;
	const FLT x679 = x678 * x103;
	const FLT x680 = (x678 * x104) + (x101 * (x679 + (-1 * x678 * x102)));
	const FLT x681 = (x677 * x156) + (x680 * x101);
	const FLT x682 =
		x127 *
		(x674 + (x678 * x149) +
		 (-1 * x177 *
		  ((x120 * ((x678 * x106) +
					(x101 * (x681 + (x677 * x170) +
							 (x101 * (x680 + (x677 * x171) + (x101 * ((-1 * x678 * x173) + x679 + (x678 * x108))))))) +
					(x681 * x101) + (x677 * x175))) +
		   (x676 * x169))) +
		 (x676 * x179) + (x681 * x125));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x165 + (-1 * ((-1 * x165) + x180) * x181) + (-1 * x180));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						x192 + (-1 * x197) + (-1 * ((-1 * x192) + x197) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x204 + (-1 * x209) + (-1 * ((-1 * x204) + x209) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x316 + (-1 * x318) + (-1 * ((-1 * x316) + x318) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x361 + (-1 * x366) + (-1 * ((-1 * x361) + x366) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x402 + (-1 * x409) + (-1 * ((-1 * x402) + x409) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT),
						x424 + (-1 * x429) + (-1 * ((-1 * x424) + x429) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT),
						(-1 * x445) + x439 + (-1 * ((-1 * x439) + x445) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT),
						x455 + (-1 * x457) + (-1 * ((-1 * x455) + x457) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x548 + (-1 * x553) + (-1 * ((-1 * x548) + x553) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x595 + (-1 * x600) + (-1 * ((-1 * x595) + x600) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x634 + (-1 * x636) + (-1 * ((-1 * x634) + x636) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT),
						x648 + (-1 * ((-1 * x648) + x654) * x181) + (-1 * x654));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT),
						x667 + (-1 * x669) + (-1 * ((-1 * x667) + x669) * x181));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT),
						x675 + (-1 * x682) + (-1 * ((-1 * x675) + x682) * x181));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*error_model).AccBias[0],
// (*error_model).AccBias[1], (*error_model).AccBias[2], (*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).GyroBias[0], (*error_model).GyroBias[1], (*error_model).GyroBias[2],
// (*error_model).IMUCorrection[0], (*error_model).IMUCorrection[1], (*error_model).IMUCorrection[2],
// (*error_model).IMUCorrection[3], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2], <cnkalman.codegen.WrapMember object at 0x7f5abae81a30>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x3 * x8;
	const FLT x14 = x5 * x9;
	const FLT x15 = (x1 * x14) + (x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x11 * x17;
	const FLT x19 = x15 * x17;
	const FLT x20 = x12 * x17;
	const FLT x21 = x17 * x16;
	const FLT x22 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[1]) + (-1 * x18 * (*_x0).Pose.Rot[3]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = x24 * (x23 * x23);
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (x21 * (*_x0).Pose.Rot[3]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[2]) +
					(x19 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x19 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x20 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[2]) + (-1 * x19 * (*_x0).Pose.Rot[3]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x36 * x36) + (x35 * x35) + (x34 * x34) + (x22 * x22))) *
					(1. / sqrt((x37 * x28) + (x38 * x38) + (x37 * x26) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x41 * x22;
	const FLT x43 = x40 * x25;
	const FLT x44 = x43 * x36;
	const FLT x45 = x38 * x39;
	const FLT x46 = x45 * x34;
	const FLT x47 = x40 * x35;
	const FLT x48 = x47 * x27;
	const FLT x49 = x46 + x42 + (-1 * x48) + x44;
	const FLT x50 = x40 * x36;
	const FLT x51 = (-1 * x50 * x27) + (x45 * x22) + (-1 * x43 * x35) + (-1 * x41 * x34);
	const FLT x52 = x43 * x22;
	const FLT x53 = x50 * x23;
	const FLT x54 = x45 * x35;
	const FLT x55 = x40 * x27;
	const FLT x56 = x55 * x34;
	const FLT x57 = x54 + x56 + x52 + (-1 * x53);
	const FLT x58 = (-1 * x57 * sensor_pt[1]) + (x49 * sensor_pt[2]) + (x51 * sensor_pt[0]);
	const FLT x59 = x43 * x34;
	const FLT x60 = x47 * x23;
	const FLT x61 = x45 * x36;
	const FLT x62 = x55 * x22;
	const FLT x63 = x62 + (-1 * x59) + x61 + x60;
	const FLT x64 = (-1 * x63 * sensor_pt[2]) + (x57 * sensor_pt[0]) + (x51 * sensor_pt[1]);
	const FLT x65 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x66 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + sensor_pt[2] +
					(2 * ((x63 * x64) + (-1 * x58 * x49))) + (x65 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x67 = (-1 * x49 * sensor_pt[0]) + (x51 * sensor_pt[2]) + (x63 * sensor_pt[1]);
	const FLT x68 = (2 * ((x58 * x57) + (-1 * x63 * x67))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x65 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + sensor_pt[1] + (*_x0).Pose.Pos[1];
	const FLT x69 = (*error_model).Pose.Pos[0] + sensor_pt[0] + (2 * ((x67 * x49) + (-1 * x64 * x57))) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) +
					(x65 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*_x0).Pose.Pos[0];
	const FLT x70 = (-1 * x69 * (*lh_p).Rot[2]) + (x66 * (*lh_p).Rot[0]) + (x68 * (*lh_p).Rot[1]);
	const FLT x71 = (-1 * x68 * (*lh_p).Rot[3]) + (x69 * (*lh_p).Rot[0]) + (x66 * (*lh_p).Rot[2]);
	const FLT x72 = x68 + (*lh_p).Pos[1] + (2 * ((x71 * (*lh_p).Rot[3]) + (-1 * x70 * (*lh_p).Rot[1])));
	const FLT x73 = x72 * x72;
	const FLT x74 = (-1 * x66 * (*lh_p).Rot[1]) + (x68 * (*lh_p).Rot[0]) + (x69 * (*lh_p).Rot[3]);
	const FLT x75 = x66 + (2 * ((x74 * (*lh_p).Rot[1]) + (-1 * x71 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x76 = x69 + (*lh_p).Pos[0] + (2 * ((x70 * (*lh_p).Rot[2]) + (-1 * x74 * (*lh_p).Rot[3])));
	const FLT x77 = x76 * x76;
	const FLT x78 = x77 + (x75 * x75);
	const FLT x79 = x78 + x73;
	const FLT x80 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x81 = cos(x80);
	const FLT x82 = 1. / x81;
	const FLT x83 = x82 * (1. / sqrt(x79));
	const FLT x84 = asin(x83 * x72);
	const FLT x85 = 8.0108022e-06 * x84;
	const FLT x86 = 1. / sqrt(1 + (-1 * (1. / (x81 * x81)) * x73 * (1. / x79)));
	const FLT x87 = x48 + (-1 * x44) + (-1 * x42) + (-1 * x46);
	const FLT x88 = 2 * x63;
	const FLT x89 = 2 * x57;
	const FLT x90 = x89 * x51;
	const FLT x91 = x90 + (-1 * x88 * x87);
	const FLT x92 = 2 * x49;
	const FLT x93 = 1 + (x87 * x92) + (-2 * (x57 * x57));
	const FLT x94 = 2 * x51;
	const FLT x95 = x94 * x49;
	const FLT x96 = (x89 * x63) + (-1 * x95);
	const FLT x97 = (-1 * x91 * (*lh_p).Rot[3]) + (x96 * (*lh_p).Rot[2]) + (x93 * (*lh_p).Rot[0]);
	const FLT x98 = 2 * (*lh_p).Rot[3];
	const FLT x99 = (x91 * (*lh_p).Rot[1]) + (-1 * x93 * (*lh_p).Rot[2]) + (x96 * (*lh_p).Rot[0]);
	const FLT x100 = 2 * (*lh_p).Rot[1];
	const FLT x101 = x91 + (x98 * x97) + (-1 * x99 * x100);
	const FLT x102 = 2 * x72;
	const FLT x103 = 2 * (*lh_p).Rot[2];
	const FLT x104 = (x93 * (*lh_p).Rot[3]) + (-1 * x96 * (*lh_p).Rot[1]) + (x91 * (*lh_p).Rot[0]);
	const FLT x105 = x93 + (x99 * x103) + (-1 * x98 * x104);
	const FLT x106 = 2 * x76;
	const FLT x107 = x96 + (x100 * x104) + (-1 * x97 * x103);
	const FLT x108 = 2 * x75;
	const FLT x109 = (x108 * x107) + (x105 * x106);
	const FLT x110 = 1.0 / 2.0 * x72;
	const FLT x111 = x82 * (1. / (x79 * sqrt(x79))) * x110;
	const FLT x112 = x86 * ((-1 * x111 * (x109 + (x101 * x102))) + (x83 * x101));
	const FLT x113 = -8.0108022e-06 + (-1 * x85);
	const FLT x114 = x112 * x113;
	const FLT x115 = 0.0028679863 + (x84 * x113);
	const FLT x116 = (x112 * x115) + (x84 * (x114 + (-1 * x85 * x112)));
	const FLT x117 = 5.3685255e-06 + (x84 * x115);
	const FLT x118 = (x112 * x117) + (x84 * x116);
	const FLT x119 = x84 * x84;
	const FLT x120 = atan2(-1 * x75, x76);
	const FLT x121 = tan(x80);
	const FLT x122 = (1. / sqrt(x78)) * x121;
	const FLT x123 = -1 * x72 * x122;
	const FLT x124 = (-1 * asin(x123)) + (*bsc0).ogeephase + x120;
	const FLT x125 = (sin(x124) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x126 = 0.0076069798 + (x84 * x117);
	const FLT x127 = x84 * x126;
	const FLT x128 = -8.0108022e-06 + (-1.60216044e-05 * x84);
	const FLT x129 = x115 + (x84 * x128);
	const FLT x130 = x117 + (x84 * x129);
	const FLT x131 = x126 + (x84 * x130);
	const FLT x132 = (x84 * x131) + x127;
	const FLT x133 = sin(x80);
	const FLT x134 = x125 * x133;
	const FLT x135 = x81 + (x134 * x132);
	const FLT x136 = 1. / x135;
	const FLT x137 = x125 * x136;
	const FLT x138 = x119 * x137;
	const FLT x139 = 2 * x127 * x137;
	const FLT x140 = 1. / x78;
	const FLT x141 = 1. / sqrt(1 + (-1 * x73 * (x121 * x121) * x140));
	const FLT x142 = (1. / (x78 * sqrt(x78))) * x110 * x121;
	const FLT x143 = (x109 * x142) + (-1 * x101 * x122);
	const FLT x144 = x75 * (1. / x77);
	const FLT x145 = 1. / x76;
	const FLT x146 = x77 * x140;
	const FLT x147 = ((-1 * x107 * x145) + (x105 * x144)) * x146;
	const FLT x148 = cos(x124) * (*bsc0).ogeemag;
	const FLT x149 = x148 * (x147 + (-1 * x141 * x143));
	const FLT x150 = x133 * x132;
	const FLT x151 = 2.40324066e-05 * x84;
	const FLT x152 = x119 * x126;
	const FLT x153 = x125 * (1. / (x135 * x135)) * x152;
	const FLT x154 = x136 * x152;
	const FLT x155 = x123 + (x126 * x138);
	const FLT x156 = 1. / sqrt(1 + (-1 * (x155 * x155)));
	const FLT x157 =
		x156 *
		((-1 * x153 *
		  ((x134 * ((x84 * ((x112 * x130) + x118 +
							(x84 * (x116 + (x112 * x129) + (x84 * ((-1 * x112 * x151) + x114 + (x112 * x128))))))) +
					(x84 * x118) + (x112 * x131) + (x112 * x126))) +
		   (x149 * x150))) +
		 x143 + (x118 * x138) + (x149 * x154) + (x112 * x139));
	const FLT x158 = cos((-1 * asin(x155)) + (*bsc0).gibpha + x120) * (*bsc0).gibmag;
	const FLT x159 = (-1 * x52) + (-1 * x56) + x53 + (-1 * x54);
	const FLT x160 = 1 + (x89 * x159) + (-2 * (x63 * x63));
	const FLT x161 = (x63 * x92) + (-1 * x90);
	const FLT x162 = x63 * x94;
	const FLT x163 = x162 + (-1 * x92 * x159);
	const FLT x164 = (x163 * (*lh_p).Rot[2]) + (-1 * x160 * (*lh_p).Rot[3]) + (x161 * (*lh_p).Rot[0]);
	const FLT x165 = (x160 * (*lh_p).Rot[1]) + (-1 * x161 * (*lh_p).Rot[2]) + (x163 * (*lh_p).Rot[0]);
	const FLT x166 = x160 + (x98 * x164) + (-1 * x100 * x165);
	const FLT x167 = (x161 * (*lh_p).Rot[3]) + (-1 * x163 * (*lh_p).Rot[1]) + (x160 * (*lh_p).Rot[0]);
	const FLT x168 = (x103 * x165) + x161 + (-1 * x98 * x167);
	const FLT x169 = x163 + (x100 * x167) + (-1 * x103 * x164);
	const FLT x170 = (x108 * x169) + (x106 * x168);
	const FLT x171 = x86 * ((-1 * x111 * (x170 + (x102 * x166))) + (x83 * x166));
	const FLT x172 = x113 * x171;
	const FLT x173 = (x115 * x171) + (x84 * (x172 + (-1 * x85 * x171)));
	const FLT x174 = (x117 * x171) + (x84 * x173);
	const FLT x175 = (x170 * x142) + (-1 * x122 * x166);
	const FLT x176 = ((-1 * x169 * x145) + (x168 * x144)) * x146;
	const FLT x177 = x176 + (-1 * x175 * x141);
	const FLT x178 = x148 * x150;
	const FLT x179 = x148 * x154;
	const FLT x180 =
		x156 *
		(x175 + (x171 * x139) + (x174 * x138) + (x179 * x177) +
		 (-1 * x153 *
		  ((x134 * ((x84 * x174) + (x126 * x171) +
					(x84 * (x174 + (x171 * x130) +
							(x84 * (x173 + (x129 * x171) + (x84 * (x172 + (-1 * x171 * x151) + (x128 * x171))))))) +
					(x171 * x131))) +
		   (x178 * x177))));
	const FLT x181 = (x89 * x49) + (-1 * x162);
	const FLT x182 = (-1 * x62) + (-1 * x61) + (-1 * x60) + x59;
	const FLT x183 = x95 + (-1 * x89 * x182);
	const FLT x184 = 1 + (x88 * x182) + (-2 * (x49 * x49));
	const FLT x185 = 2 * ((x184 * (*lh_p).Rot[2]) + (-1 * x181 * (*lh_p).Rot[3]) + (x183 * (*lh_p).Rot[0]));
	const FLT x186 = (-1 * x183 * (*lh_p).Rot[2]) + (x181 * (*lh_p).Rot[1]) + (x184 * (*lh_p).Rot[0]);
	const FLT x187 = x181 + (x185 * (*lh_p).Rot[3]) + (-1 * x100 * x186);
	const FLT x188 = (x183 * (*lh_p).Rot[3]) + (-1 * x184 * (*lh_p).Rot[1]) + (x181 * (*lh_p).Rot[0]);
	const FLT x189 = (x103 * x186) + x183 + (-1 * x98 * x188);
	const FLT x190 = (x100 * x188) + x184 + (-1 * x185 * (*lh_p).Rot[2]);
	const FLT x191 = (x108 * x190) + (x106 * x189);
	const FLT x192 = x86 * ((-1 * x111 * (x191 + (x102 * x187))) + (x83 * x187));
	const FLT x193 = x113 * x192;
	const FLT x194 = (x115 * x192) + (x84 * (x193 + (-1 * x85 * x192)));
	const FLT x195 = (x117 * x192) + (x84 * x194);
	const FLT x196 = (x191 * x142) + (-1 * x122 * x187);
	const FLT x197 = ((-1 * x190 * x145) + (x189 * x144)) * x146;
	const FLT x198 = x197 + (-1 * x196 * x141);
	const FLT x199 =
		x156 *
		(x196 + (x179 * x198) +
		 (-1 * x153 *
		  ((x134 * ((x84 * x195) + (x126 * x192) +
					(x84 * (x195 + (x192 * x130) +
							(x84 * (x194 + (x129 * x192) + (x84 * ((-1 * x192 * x151) + x193 + (x128 * x192))))))) +
					(x192 * x131))) +
		   (x178 * x198))) +
		 (x192 * x139) + (x195 * x138));
	cnMatrixOptionalSet(Hx, 0, 0, x147 + (-1 * ((-1 * x147) + x157) * x158) + (-1 * x157));
	cnMatrixOptionalSet(Hx, 0, 1, (-1 * ((-1 * x176) + x180) * x158) + x176 + (-1 * x180));
	cnMatrixOptionalSet(Hx, 0, 2, x197 + (-1 * x199) + (-1 * ((-1 * x197) + x199) * x158));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = cos(x0);
	const FLT x9 = sin(x4);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x1 * x9;
	const FLT x13 = x5 * x7;
	const FLT x14 = (x8 * x13) + (x3 * x12);
	const FLT x15 = (x1 * x13) + (x3 * x10);
	const FLT x16 = (x6 * x8) + (-1 * x7 * x12);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x11 * x17;
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * (*_x0).Pose.Rot[0];
	const FLT x21 = x17 * x16;
	const FLT x22 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x20 * x14) + (-1 * x18 * (*_x0).Pose.Rot[3]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = x24 * (x23 * x23);
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = x14 * x17;
	const FLT x35 =
		(-1 * x18 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[3]) + (x34 * (*_x0).Pose.Rot[2]) + (x20 * x15);
	const FLT x36 =
		(x19 * (*_x0).Pose.Rot[1]) + (x20 * x11) + (x34 * (*_x0).Pose.Rot[3]) + (-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x37 =
		(x34 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[2]) + (-1 * x19 * (*_x0).Pose.Rot[3]) + (x20 * x16);
	const FLT x38 = (1. / x30) * (x33 * x33);
	const FLT x39 = cos(x32);
	const FLT x40 = (1. / sqrt((x37 * x37) + (x36 * x36) + (x35 * x35) + (x22 * x22))) *
					(1. / sqrt((x38 * x28) + (x39 * x39) + (x38 * x26) + (x38 * x29)));
	const FLT x41 = dt * x40 * (1. / x31) * x33;
	const FLT x42 = x41 * x23;
	const FLT x43 = x41 * x25;
	const FLT x44 = x40 * x39;
	const FLT x45 = x41 * x27;
	const FLT x46 = (-1 * x45 * x36) + (x44 * x35) + (x42 * x22) + (x43 * x37);
	const FLT x47 = (-1 * x45 * x37) + (x44 * x22) + (-1 * x43 * x36) + (-1 * x42 * x35);
	const FLT x48 = (x44 * x36) + (x43 * x22) + (x45 * x35) + (-1 * x42 * x37);
	const FLT x49 = (-1 * x48 * sensor_pt[1]) + (x46 * sensor_pt[2]) + (x47 * sensor_pt[0]);
	const FLT x50 = (x45 * x22) + (x44 * x37) + (-1 * x43 * x35) + (x42 * x36);
	const FLT x51 = (-1 * x50 * sensor_pt[2]) + (x48 * sensor_pt[0]) + (x47 * sensor_pt[1]);
	const FLT x52 = 2 * ((x50 * x51) + (-1 * x46 * x49));
	const FLT x53 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x54 = x53 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x55 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x56 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + x54 + x52 + sensor_pt[2] + x55;
	const FLT x57 = x56 * (*lh_p).Rot[0];
	const FLT x58 = (x47 * sensor_pt[2]) + (-1 * x46 * sensor_pt[0]) + (x50 * sensor_pt[1]);
	const FLT x59 = 2 * ((x48 * x49) + (-1 * x50 * x58));
	const FLT x60 = x53 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x61 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x62 = x61 + x59 + (*error_model).Pose.Pos[1] + sensor_pt[1] + x60 + (*_x0).Pose.Pos[1];
	const FLT x63 = x62 * (*lh_p).Rot[1];
	const FLT x64 = 2 * ((x58 * x46) + (-1 * x51 * x48));
	const FLT x65 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x66 = x53 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x67 = x66 + x64 + (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + sensor_pt[0] + x65;
	const FLT x68 = x67 * (*lh_p).Rot[2];
	const FLT x69 = (-1 * x68) + x57 + x63;
	const FLT x70 = x67 * (*lh_p).Rot[0];
	const FLT x71 = x56 * (*lh_p).Rot[2];
	const FLT x72 = x62 * (*lh_p).Rot[3];
	const FLT x73 = (-1 * x72) + x70 + x71;
	const FLT x74 = x62 + (*lh_p).Pos[1] + (2 * ((x73 * (*lh_p).Rot[3]) + (-1 * x69 * (*lh_p).Rot[1])));
	const FLT x75 = x74 * x74;
	const FLT x76 = x62 * (*lh_p).Rot[0];
	const FLT x77 = x67 * (*lh_p).Rot[3];
	const FLT x78 = x56 * (*lh_p).Rot[1];
	const FLT x79 = x76 + (-1 * x78) + x77;
	const FLT x80 = x56 + (2 * ((x79 * (*lh_p).Rot[1]) + (-1 * x73 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x81 = (*lh_p).Pos[0] + x67 + (2 * ((x69 * (*lh_p).Rot[2]) + (-1 * x79 * (*lh_p).Rot[3])));
	const FLT x82 = x81 * x81;
	const FLT x83 = x82 + (x80 * x80);
	const FLT x84 = x83 + x75;
	const FLT x85 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x86 = cos(x85);
	const FLT x87 = 1. / x86;
	const FLT x88 = (1. / sqrt(x84)) * x87;
	const FLT x89 = asin(x88 * x74);
	const FLT x90 = 8.0108022e-06 * x89;
	const FLT x91 = -8.0108022e-06 + (-1 * x90);
	const FLT x92 = 0.0028679863 + (x89 * x91);
	const FLT x93 = 5.3685255e-06 + (x89 * x92);
	const FLT x94 = 0.0076069798 + (x89 * x93);
	const FLT x95 = x89 * x94;
	const FLT x96 = -8.0108022e-06 + (-1.60216044e-05 * x89);
	const FLT x97 = x92 + (x89 * x96);
	const FLT x98 = x93 + (x89 * x97);
	const FLT x99 = x94 + (x89 * x98);
	const FLT x100 = (x89 * x99) + x95;
	const FLT x101 = sin(x85);
	const FLT x102 = atan2(-1 * x80, x81);
	const FLT x103 = tan(x85);
	const FLT x104 = (1. / sqrt(x83)) * x103;
	const FLT x105 = -1 * x74 * x104;
	const FLT x106 = (-1 * asin(x105)) + (*bsc0).ogeephase + x102;
	const FLT x107 = (sin(x106) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x108 = x101 * x107;
	const FLT x109 = x86 + (x100 * x108);
	const FLT x110 = 1. / x109;
	const FLT x111 = x89 * x89;
	const FLT x112 = x107 * x111;
	const FLT x113 = x110 * x112;
	const FLT x114 = x105 + (x94 * x113);
	const FLT x115 = 1. / sqrt(1 + (-1 * (x114 * x114)));
	const FLT x116 = 1. / x83;
	const FLT x117 = 1. / sqrt(1 + (-1 * x75 * (x103 * x103) * x116));
	const FLT x118 = (1. / (x83 * sqrt(x83))) * x103;
	const FLT x119 = x74 * x118;
	const FLT x120 = x81 * x119;
	const FLT x121 = x80 * x116;
	const FLT x122 = x121 + (-1 * x117 * x120);
	const FLT x123 = cos(x106) * (*bsc0).ogeemag;
	const FLT x124 = x94 * x110 * x111;
	const FLT x125 = x124 * x123;
	const FLT x126 = 1. / sqrt(1 + (-1 * (1. / x84) * (1. / (x86 * x86)) * x75));
	const FLT x127 = (1. / (x84 * sqrt(x84))) * x87;
	const FLT x128 = x74 * x127;
	const FLT x129 = x81 * x128;
	const FLT x130 = x126 * x129;
	const FLT x131 = -1 * x91 * x130;
	const FLT x132 = x92 * x126;
	const FLT x133 = (-1 * x129 * x132) + (x89 * (x131 + (x90 * x130)));
	const FLT x134 = (-1 * x93 * x130) + (x89 * x133);
	const FLT x135 = x101 * x100;
	const FLT x136 = x123 * x135;
	const FLT x137 = x98 * x126;
	const FLT x138 = 2.40324066e-05 * x89;
	const FLT x139 = x94 * (1. / (x109 * x109)) * x112;
	const FLT x140 = 2 * x74;
	const FLT x141 = x95 * x107 * x110;
	const FLT x142 = x126 * x141;
	const FLT x143 =
		x115 *
		((-1 * x81 * x127 * x140 * x142) + x120 +
		 (-1 * x139 *
		  ((x108 * ((-1 * x94 * x130) +
					(x89 * (x134 + (-1 * x129 * x137) +
							(x89 * (x133 + (-1 * x97 * x130) + (x89 * ((x130 * x138) + x131 + (-1 * x96 * x130))))))) +
					(x89 * x134) + (-1 * x99 * x130))) +
		   (x122 * x136))) +
		 (x122 * x125) + (x113 * x134));
	const FLT x144 = cos((-1 * asin(x114)) + (*bsc0).gibpha + x102) * (*bsc0).gibmag;
	const FLT x145 = x104 * x117;
	const FLT x146 = (-1 * x75 * x127) + x88;
	const FLT x147 = x126 * x146;
	const FLT x148 = x91 * x147;
	const FLT x149 = (x92 * x147) + (x89 * (x148 + (-1 * x90 * x147)));
	const FLT x150 = (x93 * x147) + (x89 * x149);
	const FLT x151 = 2 * x141;
	const FLT x152 =
		x115 *
		((x147 * x151) + (-1 * x104) + (x125 * x145) +
		 (-1 * x139 *
		  ((x108 * ((x89 * (x150 + (x137 * x146) +
							(x89 * ((x97 * x147) + x149 + (x89 * ((-1 * x138 * x147) + x148 + (x96 * x147))))))) +
					(x99 * x147) + (x89 * x150) + (x94 * x147))) +
		   (x136 * x145))) +
		 (x113 * x150));
	const FLT x153 = x80 * x74;
	const FLT x154 = x118 * x153;
	const FLT x155 = x81 * x116;
	const FLT x156 = -1 * x155;
	const FLT x157 = x156 + (-1 * x117 * x154);
	const FLT x158 = 2 * x80;
	const FLT x159 = x127 * x153;
	const FLT x160 = x126 * x159;
	const FLT x161 = -1 * x91 * x160;
	const FLT x162 = (-1 * x132 * x159) + (x89 * (x161 + (x90 * x160)));
	const FLT x163 = (-1 * x93 * x160) + (x89 * x162);
	const FLT x164 =
		x115 *
		((-1 * x139 *
		  ((x108 * ((x89 * x163) + (-1 * x99 * x160) +
					(x89 * (x163 + (-1 * x137 * x159) +
							(x89 * (x162 + (-1 * x97 * x160) + (x89 * ((x160 * x138) + x161 + (-1 * x96 * x160))))))) +
					(-1 * x94 * x160))) +
		   (x136 * x157))) +
		 x154 + (x113 * x163) + (x125 * x157) + (-1 * x128 * x142 * x158));
	const FLT x165 = 2 * x78;
	const FLT x166 = (2 * x77) + (-1 * x165);
	const FLT x167 = 2 * x72;
	const FLT x168 = (2 * x71) + (-1 * x167);
	const FLT x169 = 2 * x81;
	const FLT x170 = 2 * x68;
	const FLT x171 = (2 * x63) + (-1 * x170);
	const FLT x172 = (x171 * x158) + (x169 * x168);
	const FLT x173 = 1.0 / 2.0 * x119;
	const FLT x174 = (x172 * x173) + (-1 * x104 * x166);
	const FLT x175 = x80 * (1. / x82);
	const FLT x176 = 1. / x81;
	const FLT x177 = x82 * x116;
	const FLT x178 = ((-1 * x171 * x176) + (x168 * x175)) * x177;
	const FLT x179 = x178 + (-1 * x117 * x174);
	const FLT x180 = 1.0 / 2.0 * x128;
	const FLT x181 = (-1 * x180 * (x172 + (x166 * x140))) + (x88 * x166);
	const FLT x182 = x126 * x181;
	const FLT x183 = x91 * x182;
	const FLT x184 = (x92 * x182) + (x89 * (x183 + (-1 * x90 * x182)));
	const FLT x185 = (x93 * x182) + (x89 * x184);
	const FLT x186 =
		x115 *
		(x174 + (x182 * x151) + (x125 * x179) +
		 (-1 * x139 *
		  ((x108 * ((x89 * (x185 + (x181 * x137) +
							(x89 * (x184 + (x97 * x182) + (x89 * ((-1 * x182 * x138) + x183 + (x96 * x182))))))) +
					(x99 * x182) + (x89 * x185) + (x94 * x182))) +
		   (x179 * x136))) +
		 (x113 * x185));
	const FLT x187 = 2 * x57;
	const FLT x188 = x170 + (-4 * x63) + (-1 * x187);
	const FLT x189 = (-1 * sensor_pt[2]) + (-1 * x52) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x55) + (-1 * x54) +
					 (-1 * (*error_model).Pose.Pos[2]);
	const FLT x190 = 2 * (*lh_p).Rot[3];
	const FLT x191 = 2 * (*lh_p).Rot[2];
	const FLT x192 = (x62 * x191) + (-1 * x189 * x190);
	const FLT x193 = 2 * x76;
	const FLT x194 = 2 * (*lh_p).Rot[1];
	const FLT x195 = x166 + x193 + (x189 * x194);
	const FLT x196 = (x195 * x158) + (x169 * x192);
	const FLT x197 = (-1 * x180 * (x196 + (x188 * x140))) + (x88 * x188);
	const FLT x198 = x126 * x197;
	const FLT x199 = (x173 * x196) + (-1 * x104 * x188);
	const FLT x200 = ((-1 * x176 * x195) + (x175 * x192)) * x177;
	const FLT x201 = x200 + (-1 * x117 * x199);
	const FLT x202 = x91 * x198;
	const FLT x203 = (x92 * x198) + (x89 * (x202 + (-1 * x90 * x198)));
	const FLT x204 = (x93 * x198) + (x89 * x203);
	const FLT x205 =
		x115 *
		(x199 + (x198 * x151) + (x201 * x125) + (x204 * x113) +
		 (-1 * x139 *
		  ((x108 * ((x94 * x198) +
					(x89 * (x204 + (x197 * x137) +
							(x89 * (x203 + (x97 * x198) + (x89 * ((-1 * x198 * x138) + x202 + (x96 * x198))))))) +
					(x89 * x204) + (x99 * x198))) +
		   (x201 * x136))));
	const FLT x206 = (-1 * (*error_model).Pose.Pos[0]) + (-1 * (*_x0).Pose.Pos[0]) + (-1 * sensor_pt[0]) + (-1 * x65) +
					 (-1 * x64) + (-1 * x66);
	const FLT x207 = (x56 * x190) + (-1 * x206 * x194);
	const FLT x208 = x171 + (x206 * x191) + x187;
	const FLT x209 = 2 * x70;
	const FLT x210 = x167 + (-4 * x71) + (-1 * x209);
	const FLT x211 = (x210 * x158) + (x208 * x169);
	const FLT x212 = (-1 * x180 * (x211 + (x207 * x140))) + (x88 * x207);
	const FLT x213 = x212 * x126;
	const FLT x214 = x91 * x213;
	const FLT x215 = (x92 * x213) + (x89 * (x214 + (-1 * x90 * x213)));
	const FLT x216 = (x93 * x213) + (x89 * x215);
	const FLT x217 = (x211 * x173) + (-1 * x207 * x104);
	const FLT x218 = ((-1 * x210 * x176) + (x208 * x175)) * x177;
	const FLT x219 = x123 * (x218 + (-1 * x217 * x117));
	const FLT x220 =
		x115 *
		((x219 * x124) +
		 (-1 * x139 *
		  ((x108 * ((x89 * x216) + (x94 * x213) +
					(x89 * (x216 + (x212 * x137) +
							(x89 * (x215 + (x97 * x213) + (x89 * ((-1 * x213 * x138) + x214 + (x96 * x213))))))) +
					(x99 * x213))) +
		   (x219 * x135))) +
		 x217 + (x213 * x151) + (x216 * x113));
	const FLT x221 = (-1 * x61) + (-1 * x59) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * (*error_model).Pose.Pos[1]) +
					 (-1 * x60) + (-1 * sensor_pt[1]);
	const FLT x222 = x168 + (x221 * x190) + x209;
	const FLT x223 = (-1 * x193) + x165 + (-4 * x77);
	const FLT x224 = (x67 * x194) + (-1 * x221 * x191);
	const FLT x225 = (x224 * x158) + (x223 * x169);
	const FLT x226 = x126 * ((-1 * x180 * (x225 + (x222 * x140))) + (x88 * x222));
	const FLT x227 = (x225 * x173) + (-1 * x222 * x104);
	const FLT x228 = ((-1 * x224 * x176) + (x223 * x175)) * x177;
	const FLT x229 = x228 + (-1 * x227 * x117);
	const FLT x230 = x91 * x226;
	const FLT x231 = (x92 * x226) + (x89 * (x230 + (-1 * x90 * x226)));
	const FLT x232 = (x93 * x226) + (x89 * x231);
	const FLT x233 =
		x115 *
		((x229 * x125) + x227 + (x226 * x151) + (x232 * x113) +
		 (-1 * x139 *
		  ((x108 * ((x89 * (x232 + (x98 * x226) +
							(x89 * ((x97 * x226) + x231 + (x89 * ((-1 * x226 * x138) + x230 + (x96 * x226))))))) +
					(x99 * x226) + (x89 * x232) + (x94 * x226))) +
		   (x229 * x136))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						x121 + (-1 * x143) + (-1 * ((-1 * x121) + x143) * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), (-1 * x144 * x152) + (-1 * x152));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						x156 + (-1 * x164) + (-1 * (x155 + x164) * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x178 + (-1 * x186) + (-1 * ((-1 * x178) + x186) * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x200 + (-1 * x205) + (-1 * ((-1 * x200) + x205) * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						(-1 * ((-1 * x218) + x220) * x144) + x218 + (-1 * x220));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x228 + (-1 * x233) + (-1 * ((-1 * x228) + x233) * x144));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f5abae20820>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae208e0>, <cnkalman.codegen.WrapMember object at 0x7f5abae20880>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae209a0>, <cnkalman.codegen.WrapMember object at 0x7f5abae20940>,
// <cnkalman.codegen.WrapMember object at 0x7f5abae20610>, <cnkalman.codegen.WrapMember object at 0x7f5abae207c0>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x2 * x15) + (x4 * x11);
	const FLT x17 = (x4 * x13) + (-1 * x15 * x10);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x12 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x14 * x18;
	const FLT x22 = x18 * x17;
	const FLT x23 = (x21 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x22 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x24 = dt * dt;
	const FLT x25 = (x0 * x0) * x24;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x24 * (x26 * x26);
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x29 = x24 * (x28 * x28);
	const FLT x30 = 1e-10 + x29 + x25 + x27;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[2]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x35 = (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x36 = (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x37 = (1. / x30) * (x33 * x33);
	const FLT x38 = cos(x32);
	const FLT x39 = (1. / sqrt((x36 * x36) + (x35 * x35) + (x34 * x34) + (x23 * x23))) *
					(1. / sqrt((x38 * x38) + (x37 * x27) + (x37 * x25) + (x37 * x29)));
	const FLT x40 = dt * (1. / x31) * x33 * x39;
	const FLT x41 = x40 * x23;
	const FLT x42 = x40 * x36;
	const FLT x43 = x38 * x39;
	const FLT x44 = x40 * x34;
	const FLT x45 = (x43 * x35) + (x44 * x26) + (x0 * x41) + (-1 * x42 * x28);
	const FLT x46 = x40 * x35;
	const FLT x47 = (-1 * x42 * x26) + (x43 * x23) + (-1 * x0 * x46) + (-1 * x44 * x28);
	const FLT x48 = (x41 * x26) + (x43 * x36) + (-1 * x0 * x44) + (x46 * x28);
	const FLT x49 = (-1 * x48 * sensor_pt[2]) + (x45 * sensor_pt[0]) + (x47 * sensor_pt[1]);
	const FLT x50 = (-1 * x46 * x26) + (x43 * x34) + (x41 * x28) + (x0 * x42);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x47 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = (2 * ((x50 * x51) + (-1 * x45 * x49))) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(x52 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*_x0).Pose.Pos[0];
	const FLT x54 = (-1 * x45 * sensor_pt[1]) + (x50 * sensor_pt[2]) + (x47 * sensor_pt[0]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x52 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x50 * x54))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x56 = (2 * ((x54 * x45) + (-1 * x51 * x48))) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(x52 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*_x0).Pose.Pos[1];
	const FLT x57 = (-1 * x56 * (*lh_p).Rot[3]) + (x53 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x58 = (-1 * x55 * (*lh_p).Rot[1]) + (x56 * (*lh_p).Rot[0]) + (x53 * (*lh_p).Rot[3]);
	const FLT x59 = x55 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x57 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x60 = (-1 * x53 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x61 = (*lh_p).Pos[0] + x53 + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = atan2(-1 * x59, x61);
	const FLT x63 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x64 = tan(x63);
	const FLT x65 = (*lh_p).Pos[1] + x56 + (2 * ((x57 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x66 = (x61 * x61) + (x59 * x59);
	const FLT x67 = x65 * (1. / sqrt(x66));
	const FLT x68 = -1 * x64 * x67;
	const FLT x69 = (-1 * asin(x68)) + (*bsc0).ogeephase + x62;
	const FLT x70 = sin(x69);
	const FLT x71 = (x70 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x72 = cos(x63);
	const FLT x73 = x65 * x65;
	const FLT x74 = x66 + x73;
	const FLT x75 = (1. / sqrt(x74)) * x65;
	const FLT x76 = asin((1. / x72) * x75);
	const FLT x77 = 8.0108022e-06 * x76;
	const FLT x78 = -8.0108022e-06 + (-1 * x77);
	const FLT x79 = 0.0028679863 + (x78 * x76);
	const FLT x80 = 5.3685255e-06 + (x79 * x76);
	const FLT x81 = 0.0076069798 + (x80 * x76);
	const FLT x82 = x76 * x76;
	const FLT x83 = x81 * x76;
	const FLT x84 = -8.0108022e-06 + (-1.60216044e-05 * x76);
	const FLT x85 = x79 + (x84 * x76);
	const FLT x86 = x80 + (x85 * x76);
	const FLT x87 = x81 + (x86 * x76);
	const FLT x88 = (x87 * x76) + x83;
	const FLT x89 = sin(x63);
	const FLT x90 = x89 * x71;
	const FLT x91 = x88 * x90;
	const FLT x92 = x72 + x91;
	const FLT x93 = 1. / x92;
	const FLT x94 = x82 * x93;
	const FLT x95 = x81 * x94;
	const FLT x96 = x68 + (x71 * x95);
	const FLT x97 = 1. / sqrt(1 + (-1 * (x96 * x96)));
	const FLT x98 = x81 * x82 * (1. / (x92 * x92));
	const FLT x99 = x91 * x98;
	const FLT x100 = ((-1 * x99) + x95) * x97;
	const FLT x101 = asin(x96) + (-1 * (*bsc0).gibpha) + (-1 * x62);
	const FLT x102 = cos(x101) * (*bsc0).gibmag;
	const FLT x103 = ((-1 * x70 * x99) + (x70 * x95)) * x97;
	const FLT x104 = cos(x69) * (*bsc0).ogeemag;
	const FLT x105 = x95 * x104;
	const FLT x106 = x97 * ((-1 * x99 * x104) + x105);
	const FLT x107 = x64 * x64;
	const FLT x108 = x67 * (1 + x107);
	const FLT x109 = x108 * (1. / sqrt(1 + (-1 * x73 * (1. / x66) * x107)));
	const FLT x110 = 1. / (x72 * x72);
	const FLT x111 = x75 * x110 * (1. / sqrt(1 + (-1 * x73 * (1. / x74) * x110)));
	const FLT x112 = x89 * x111;
	const FLT x113 = -1 * x78 * x112;
	const FLT x114 = (-1 * x79 * x112) + (x76 * (x113 + (x77 * x112)));
	const FLT x115 = (-1 * x80 * x112) + (x76 * x114);
	const FLT x116 =
		x97 * ((-2 * x83 * x93 * x90 * x111) +
			   (-1 * x71 * x98 *
				((-1 * x88 * x71 * x72) + (-1 * x88 * x89 * x109 * x104) + x89 +
				 (x90 * ((x76 * x115) +
						 (x76 * (x115 + (-1 * x86 * x112) +
								 (x76 * (x114 + (-1 * x85 * x112) +
										 (x76 * (x113 + (2.40324066e-05 * x76 * x112) + (-1 * x84 * x112))))))) +
						 (-1 * x87 * x112) + (-1 * x81 * x112))))) +
			   (x71 * x94 * x115) + x108 + (-1 * x109 * x105));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), (-1 * x100 * x102) + (-1 * x100));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), -1 * sin(x101));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x102);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag) / sizeof(FLT), (-1 * x103 * x102) + (-1 * x103));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase) / sizeof(FLT), (-1 * x102 * x106) + (-1 * x106));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x102 * x116) + (-1 * x116));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f5abae20820>, <cnkalman.codegen.WrapMember object at 0x7f5abae208e0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae20880>, <cnkalman.codegen.WrapMember object at 0x7f5abae209a0>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae20940>, <cnkalman.codegen.WrapMember object at 0x7f5abae20610>, <cnkalman.codegen.WrapMember object at
// 0x7f5abae207c0>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
