/// NOTE: This is a generated file; do not edit.
#pragma once
#include <cnkalman/generated_header.h>
// clang-format off
static inline void SurvivePoseToErrorModel(SurviveAxisAnglePose *out, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x4 = x0 * x0;
	out->Pos[0] = (*_x1).Pos[0] + (-1 * (*_x0).Pos[0]);
	out->Pos[1] = (*_x1).Pos[1] + (-1 * (*_x0).Pos[1]);
	out->Pos[2] = (*_x1).Pos[2] + (-1 * (*_x0).Pos[2]);
	out->AxisAngleRot[0] = atan2(2 * ((x2 * x3) + (x0 * x1)), 1 + (-2 * ((x2 * x2) + x4)));
	out->AxisAngleRot[1] = asin(2 * ((x0 * x3) + (-1 * x2 * x1)));
	out->AxisAngleRot[2] = atan2(2 * ((x1 * x3) + (x0 * x2)), 1 + (-2 * (x4 + (x1 * x1))));
}

// Jacobian of SurvivePoseToErrorModel wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2], (*_x1).Rot[0], (*_x1).Rot[1],
// (*_x1).Rot[2], (*_x1).Rot[3]]
static inline void SurvivePoseToErrorModel_jac_x1(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x0).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x0).Rot[2];
	const FLT x4 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x5 = x4 * (*_x0).Rot[1];
	const FLT x6 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x7 = x6 * (*_x0).Rot[0];
	const FLT x8 = x7 + (-1 * x5);
	const FLT x9 = x0 * x0;
	const FLT x10 = 1 + (-2 * ((x6 * x6) + x9));
	const FLT x11 = 2 * (1. / x10);
	const FLT x12 = x0 * (*_x0).Rot[2];
	const FLT x13 = 4 * x12;
	const FLT x14 = x6 * (*_x0).Rot[1];
	const FLT x15 = x10 * x10;
	const FLT x16 = (x4 * x6) + (x0 * x2);
	const FLT x17 = 2 * (1. / x15) * x16;
	const FLT x18 = x15 * (1. / (x15 + (4 * (x16 * x16))));
	const FLT x19 = x2 * (*_x0).Rot[3];
	const FLT x20 = x14 + (x4 * (*_x0).Rot[0]);
	const FLT x21 = x20 + x12 + (-1 * x19);
	const FLT x22 = 4 * x1;
	const FLT x23 = x6 * (*_x0).Rot[2];
	const FLT x24 = x4 * (*_x0).Rot[3];
	const FLT x25 = x2 * (*_x0).Rot[0];
	const FLT x26 = x0 * (*_x0).Rot[1];
	const FLT x27 = (-1 * x26) + x25;
	const FLT x28 = x0 * (*_x0).Rot[0];
	const FLT x29 = -4 * x28;
	const FLT x30 = x6 * (*_x0).Rot[3];
	const FLT x31 = x4 * (*_x0).Rot[2];
	const FLT x32 = x2 * (*_x0).Rot[1];
	const FLT x33 = x32 + x28;
	const FLT x34 = (-1 * x31) + x33 + x30;
	const FLT x35 = -4 * x26;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x4) + (-1 * x2 * x6)) * ((x0 * x4) + (-1 * x2 * x6))))));
	const FLT x37 = (-1 * x24) + (-1 * x23);
	const FLT x38 = x1 + x3;
	const FLT x39 = 1 + (-2 * (x9 + (x2 * x2)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x2 * x4) + (x0 * x6);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x14) + x13) * x17) + ((x8 + (-1 * x1) + (-1 * x3)) * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x18 * ((-1 * x17 * ((-4 * x7) + x22)) + (x21 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x18 * ((-1 * ((-4 * x30) + x29) * x17) + (x11 * (x23 + x27 + x24))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x23) + x35) * x17) + (x34 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x34 * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x36 * (x37 + x26 + (-1 * x25)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x36 * (x38 + x5 + (-1 * x7)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * (x13 + (4 * x19)) * x43) + ((x37 + x27) * x40)) * x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x44 * ((-1 * x43 * (x22 + (-4 * x3))) + (x40 * (x31 + x33 + (-1 * x30)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x44 * ((-1 * (x29 + (4 * x32)) * x43) + (x40 * (x38 + x8))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x44 * ((-1 * (x35 + (-4 * x25)) * x43) + (x40 * (x20 + x19 + (-1 * x12)))));
}

// Full version Jacobian of SurvivePoseToErrorModel wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2], (*_x1).Rot[0],
// (*_x1).Rot[1], (*_x1).Rot[2], (*_x1).Rot[3]] Jacobian of SurvivePoseToErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1],
// (*_x0).Pos[2], (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseToErrorModel_jac_x0(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x1).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x1).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x6 = x5 * (*_x1).Rot[1];
	const FLT x7 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x8 = x7 * (*_x1).Rot[2];
	const FLT x9 = x8 + x6;
	const FLT x10 = x0 * x0;
	const FLT x11 = 1 + (-2 * ((x2 * x2) + x10));
	const FLT x12 = 2 * (1. / x11);
	const FLT x13 = x0 * (*_x1).Rot[2];
	const FLT x14 = -4 * x13;
	const FLT x15 = x2 * (*_x1).Rot[1];
	const FLT x16 = x11 * x11;
	const FLT x17 = (x2 * x5) + (x0 * x7);
	const FLT x18 = 2 * x17 * (1. / x16);
	const FLT x19 = x16 * (1. / (x16 + (4 * (x17 * x17))));
	const FLT x20 = x7 * (*_x1).Rot[3];
	const FLT x21 = x20 + (-1 * x5 * (*_x1).Rot[0]);
	const FLT x22 = -4 * x1;
	const FLT x23 = x5 * (*_x1).Rot[3];
	const FLT x24 = x7 * (*_x1).Rot[0];
	const FLT x25 = x0 * (*_x1).Rot[1];
	const FLT x26 = x2 * (*_x1).Rot[2];
	const FLT x27 = x26 + x25;
	const FLT x28 = x0 * (*_x1).Rot[0];
	const FLT x29 = 4 * x28;
	const FLT x30 = x2 * (*_x1).Rot[3];
	const FLT x31 = x5 * (*_x1).Rot[2];
	const FLT x32 = x7 * (*_x1).Rot[1];
	const FLT x33 = (-1 * x32) + x31;
	const FLT x34 = (-1 * x28) + x30;
	const FLT x35 = 4 * x25;
	const FLT x36 = 1. / sqrt(1 + (-4 * (((x0 * x5) + (-1 * x2 * x7)) * ((x0 * x5) + (-1 * x2 * x7)))));
	const FLT x37 = 2 * x36;
	const FLT x38 = x23 + x27 + x24;
	const FLT x39 = 2 * (x21 + x13 + (-1 * x15));
	const FLT x40 = 1 + (-2 * (x10 + (x7 * x7)));
	const FLT x41 = 1. / x40;
	const FLT x42 = 2 * x41;
	const FLT x43 = x40 * x40;
	const FLT x44 = (x5 * x7) + (x0 * x2);
	const FLT x45 = 2 * (1. / x43) * x44;
	const FLT x46 = x43 * (1. / (x43 + (4 * (x44 * x44))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * ((-4 * x15) + x14) * x18) + ((x9 + x4) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x19 * ((-1 * x18 * ((4 * x3) + x22)) + (x12 * (x21 + x15 + (-1 * x13)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x19 * ((-1 * ((4 * x30) + x29) * x18) + (x12 * ((-1 * x23) + x27 + (-1 * x24)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						((-1 * ((-4 * x26) + x35) * x18) + ((x34 + x33) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x37 * (x28 + x33 + (-1 * x30)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x38 * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x39);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), (x4 + (-1 * x6) + (-1 * x8)) * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x46 * ((-1 * (x14 + (-4 * x20)) * x45) + (x42 * x38)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x46 * ((-1 * x45 * (x22 + (4 * x8))) + (x42 * (x34 + x32 + (-1 * x31)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x46 * ((-1 * (x29 + (-4 * x32)) * x45) + ((x9 + (-1 * x3) + (-1 * x1)) * x42)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x46 * ((-1 * (x35 + (4 * x24)) * x45) + (x41 * x39)));
}

// Full version Jacobian of SurvivePoseToErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0],
// (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModel(SurvivePose *out, const SurvivePose *_x0,
											const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x5 * x7;
	const FLT x13 = (x1 * x12) + (x3 * x10);
	const FLT x14 = x1 * x8;
	const FLT x15 = (x9 * x12) + (x3 * x14);
	const FLT x16 = (x6 * x9) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x13 * x13));
	const FLT x18 = x11 * x17;
	const FLT x19 = x13 * x17;
	const FLT x20 = x15 * x17;
	const FLT x21 = x17 * x16;
	const FLT x22 = x17 * (*_x0).Rot[3];
	out->Pos[0] = (*_x0).Pos[0] + (*error_state).Pos[0];
	out->Pos[1] = (*_x0).Pos[1] + (*error_state).Pos[1];
	out->Pos[2] = (*_x0).Pos[2] + (*error_state).Pos[2];
	out->Rot[0] =
		(x20 * (*_x0).Rot[0]) + (-1 * x21 * (*_x0).Rot[1]) + (-1 * x18 * (*_x0).Rot[3]) + (-1 * x19 * (*_x0).Rot[2]);
	out->Rot[1] = (x20 * (*_x0).Rot[1]) + (x21 * (*_x0).Rot[0]) + (-1 * x22 * x13) + (x18 * (*_x0).Rot[2]);
	out->Rot[2] = (-1 * x18 * (*_x0).Rot[1]) + (x19 * (*_x0).Rot[0]) + (x21 * (*_x0).Rot[3]) + (x20 * (*_x0).Rot[2]);
	out->Rot[3] = (x19 * (*_x0).Rot[1]) + (x18 * (*_x0).Rot[0]) + (x22 * x15) + (-1 * x21 * (*_x0).Rot[2]);
}

// Jacobian of SurvivePoseAddErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0], (*_x0).Rot[1],
// (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModel_jac_x0(CnMat *Hx, const SurvivePose *_x0,
												   const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = sin(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x5 * x9;
	const FLT x13 = x3 * x8;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x15 * x17;
	const FLT x19 = x17 * x16;
	const FLT x20 = -1 * x19;
	const FLT x21 = x14 * x17;
	const FLT x22 = -1 * x21;
	const FLT x23 = x11 * x17;
	const FLT x24 = -1 * x23;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x18);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x20);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x22);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x24);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x19);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x18);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x23);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x22);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x21);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x24);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x18);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x19);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x23);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x21);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x20);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x18);
}

// Full version Jacobian of SurvivePoseAddErrorModel wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0],
// (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]] Jacobian of SurvivePoseAddErrorModel wrt
// [(*error_state).AxisAngleRot[0], (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2],
// (*error_state).Pos[0], (*error_state).Pos[1], (*error_state).Pos[2]]
static inline void SurvivePoseAddErrorModel_jac_error_state(CnMat *Hx, const SurvivePose *_x0,
															const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = 0.5 * x7;
	const FLT x9 = sin(x0);
	const FLT x10 = sin(x4);
	const FLT x11 = sin(x2);
	const FLT x12 = x11 * x10;
	const FLT x13 = x9 * x12;
	const FLT x14 = 0.5 * x13;
	const FLT x15 = x14 + x8;
	const FLT x16 = x3 * x10;
	const FLT x17 = x9 * x16;
	const FLT x18 = x5 * x11;
	const FLT x19 = x1 * x18;
	const FLT x20 = x19 + (-1 * x17);
	const FLT x21 = x1 * x12;
	const FLT x22 = x6 * x9;
	const FLT x23 = x22 + x21;
	const FLT x24 = x7 + x13;
	const FLT x25 = x9 * x18;
	const FLT x26 = x1 * x16;
	const FLT x27 = x26 + (-1 * x25);
	const FLT x28 = (x27 * x27) + (x24 * x24) + (x20 * x20) + (x23 * x23);
	const FLT x29 = 1. / sqrt(x28);
	const FLT x30 = x29 * (*_x0).Rot[1];
	const FLT x31 = -1 * x30 * x15;
	const FLT x32 = 2 * x15;
	const FLT x33 = 0.5 * x26;
	const FLT x34 = -1 * x33;
	const FLT x35 = 0.5 * x25;
	const FLT x36 = x35 + x34;
	const FLT x37 = 2 * x24;
	const FLT x38 = 0.5 * x21;
	const FLT x39 = -0.5 * x22;
	const FLT x40 = x39 + (-1 * x38);
	const FLT x41 = 2 * x40;
	const FLT x42 = 0.5 * x17;
	const FLT x43 = -1 * x42;
	const FLT x44 = 0.5 * x19;
	const FLT x45 = x44 + x43;
	const FLT x46 = 2 * x23;
	const FLT x47 = (x32 * x27) + (x45 * x46) + (x41 * x20) + (x36 * x37);
	const FLT x48 = 1.0 / 2.0 * (1. / (x28 * sqrt(x28)));
	const FLT x49 = x48 * x20;
	const FLT x50 = x47 * x49;
	const FLT x51 = x40 * x29;
	const FLT x52 = x51 * (*_x0).Rot[3];
	const FLT x53 = x48 * x23;
	const FLT x54 = x53 * x47;
	const FLT x55 = x48 * x27;
	const FLT x56 = x55 * (*_x0).Rot[1];
	const FLT x57 = x29 * (*_x0).Rot[0];
	const FLT x58 = x48 * x24;
	const FLT x59 = x58 * x47;
	const FLT x60 = x29 * (*_x0).Rot[2];
	const FLT x61 = -1 * x44;
	const FLT x62 = x61 + x43;
	const FLT x63 = x62 * x29;
	const FLT x64 = x38 + x39;
	const FLT x65 = -1 * x35;
	const FLT x66 = x34 + x65;
	const FLT x67 = (-1 * x14) + x8;
	const FLT x68 = (x67 * x46) + (2 * x66 * x20) + (2 * x62 * x27) + (x64 * x37);
	const FLT x69 = x68 * x58;
	const FLT x70 = x68 * x49;
	const FLT x71 = x68 * (*_x0).Rot[2];
	const FLT x72 = x66 * x29;
	const FLT x73 = x42 + x61;
	const FLT x74 = x33 + x65;
	const FLT x75 = (x32 * x20) + (x74 * x46) + (x41 * x27) + (x73 * x37);
	const FLT x76 = x75 * x58;
	const FLT x77 = x75 * x49;
	const FLT x78 = -1 * x51 * (*_x0).Rot[1];
	const FLT x79 = x29 * (*_x0).Rot[3];
	const FLT x80 = x79 * x15;
	const FLT x81 = x75 * x53;
	const FLT x82 = x58 * (*_x0).Rot[1];
	const FLT x83 = x55 * x47;
	const FLT x84 = x47 * (*_x0).Rot[2];
	const FLT x85 = x60 * x40;
	const FLT x86 = x57 * x15;
	const FLT x87 = x68 * x55;
	const FLT x88 = x68 * x53;
	const FLT x89 = x75 * x55;
	const FLT x90 = x60 * x15;
	const FLT x91 = x51 * (*_x0).Rot[0];
	const FLT x92 = x58 * (*_x0).Rot[3];
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						(x50 * (*_x0).Rot[3]) + (-1 * x60 * x45) + (x57 * x36) + (-1 * x52) +
							(-1 * x59 * (*_x0).Rot[0]) + (x54 * (*_x0).Rot[2]) + x31 + (x56 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(x64 * x57) + (-1 * x69 * (*_x0).Rot[0]) + (x70 * (*_x0).Rot[3]) + (-1 * x72 * (*_x0).Rot[3]) +
							(x71 * x53) + (-1 * x60 * x67) + (-1 * x63 * (*_x0).Rot[1]) + (x68 * x56));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x80) + (x73 * x57) + (-1 * x76 * (*_x0).Rot[0]) + (x75 * x56) + (-1 * x74 * x60) +
							(x81 * (*_x0).Rot[2]) + (x77 * (*_x0).Rot[3]) + x78);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						x86 + x85 + (x54 * (*_x0).Rot[3]) + (-1 * x82 * x47) + (-1 * x83 * (*_x0).Rot[0]) +
							(-1 * x84 * x49) + (x30 * x36) + (-1 * x79 * x45));
	cnMatrixOptionalSet(
		Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
		(x63 * (*_x0).Rot[0]) + (-1 * x71 * x49) + (x72 * (*_x0).Rot[2]) + (x64 * x30) + (-1 * x69 * (*_x0).Rot[1]) +
			(-1 * x87 * (*_x0).Rot[0]) + (x88 * (*_x0).Rot[3]) + (-1 * x79 * x67));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						x91 + (x73 * x30) + (-1 * x77 * (*_x0).Rot[2]) + (-1 * x89 * (*_x0).Rot[0]) + (-1 * x82 * x75) +
							(x81 * (*_x0).Rot[3]) + (-1 * x79 * x74) + x90);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						(x57 * x45) + (x60 * x36) + (x50 * (*_x0).Rot[1]) + (-1 * x54 * (*_x0).Rot[0]) +
							(-1 * x83 * (*_x0).Rot[3]) + x80 + x78 + (-1 * x59 * (*_x0).Rot[2]));
	cnMatrixOptionalSet(
		Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
		(x67 * x57) + (-1 * x71 * x58) + (x70 * (*_x0).Rot[1]) + (-1 * x88 * (*_x0).Rot[0]) +
			(-1 * x72 * (*_x0).Rot[1]) + (-1 * x87 * (*_x0).Rot[3]) + (x63 * (*_x0).Rot[3]) + (x60 * x64));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x76 * (*_x0).Rot[2]) + x31 + (-1 * x89 * (*_x0).Rot[3]) + (-1 * x81 * (*_x0).Rot[0]) +
							(x73 * x60) + (x77 * (*_x0).Rot[1]) + x52 + (x74 * x57));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						x91 + (x45 * x30) + (-1 * x90) + (-1 * x92 * x47) + (-1 * x50 * (*_x0).Rot[0]) +
							(-1 * x54 * (*_x0).Rot[1]) + (x84 * x55) + (x79 * x36));
	cnMatrixOptionalSet(
		Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
		(-1 * x68 * x92) + (x72 * (*_x0).Rot[0]) + (x67 * x30) + (x71 * x55) + (-1 * x70 * (*_x0).Rot[0]) +
			(-1 * x63 * (*_x0).Rot[2]) + (x79 * x64) + (-1 * x88 * (*_x0).Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						x86 + (x89 * (*_x0).Rot[2]) + (x74 * x30) + (-1 * x81 * (*_x0).Rot[1]) + (-1 * x75 * x92) +
							(-1 * x77 * (*_x0).Rot[0]) + (-1 * x85) + (x73 * x79));
}

// Full version Jacobian of SurvivePoseAddErrorModel wrt [(*error_state).AxisAngleRot[0],
// (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2], (*error_state).Pos[0], (*error_state).Pos[1],
// (*error_state).Pos[2]]
static inline void SurvivePoseToErrorModelExact(SurviveAxisAnglePose *out, const SurvivePose *_x1,
												const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x4 = x0 * x0;
	out->Pos[0] = (*_x1).Pos[0] + (-1 * (*_x0).Pos[0]);
	out->Pos[1] = (*_x1).Pos[1] + (-1 * (*_x0).Pos[1]);
	out->Pos[2] = (*_x1).Pos[2] + (-1 * (*_x0).Pos[2]);
	out->AxisAngleRot[0] = atan2(2 * ((x2 * x3) + (x0 * x1)), 1 + (-2 * ((x2 * x2) + x4)));
	out->AxisAngleRot[1] = asin(2 * ((x0 * x3) + (-1 * x2 * x1)));
	out->AxisAngleRot[2] = atan2(2 * ((x1 * x3) + (x0 * x2)), 1 + (-2 * (x4 + (x1 * x1))));
}

// Jacobian of SurvivePoseToErrorModelExact wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2], (*_x1).Rot[0],
// (*_x1).Rot[1], (*_x1).Rot[2], (*_x1).Rot[3]]
static inline void SurvivePoseToErrorModelExact_jac_x1(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x0).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x0).Rot[2];
	const FLT x4 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x5 = x4 * (*_x0).Rot[1];
	const FLT x6 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x7 = x6 * (*_x0).Rot[0];
	const FLT x8 = x7 + (-1 * x5);
	const FLT x9 = x0 * x0;
	const FLT x10 = 1 + (-2 * ((x6 * x6) + x9));
	const FLT x11 = 2 * (1. / x10);
	const FLT x12 = x0 * (*_x0).Rot[2];
	const FLT x13 = 4 * x12;
	const FLT x14 = x6 * (*_x0).Rot[1];
	const FLT x15 = x10 * x10;
	const FLT x16 = (x4 * x6) + (x0 * x2);
	const FLT x17 = 2 * (1. / x15) * x16;
	const FLT x18 = x15 * (1. / (x15 + (4 * (x16 * x16))));
	const FLT x19 = x2 * (*_x0).Rot[3];
	const FLT x20 = x14 + (x4 * (*_x0).Rot[0]);
	const FLT x21 = x20 + x12 + (-1 * x19);
	const FLT x22 = 4 * x1;
	const FLT x23 = x6 * (*_x0).Rot[2];
	const FLT x24 = x4 * (*_x0).Rot[3];
	const FLT x25 = x2 * (*_x0).Rot[0];
	const FLT x26 = x0 * (*_x0).Rot[1];
	const FLT x27 = (-1 * x26) + x25;
	const FLT x28 = x0 * (*_x0).Rot[0];
	const FLT x29 = -4 * x28;
	const FLT x30 = x6 * (*_x0).Rot[3];
	const FLT x31 = x4 * (*_x0).Rot[2];
	const FLT x32 = x2 * (*_x0).Rot[1];
	const FLT x33 = x32 + x28;
	const FLT x34 = (-1 * x31) + x33 + x30;
	const FLT x35 = -4 * x26;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x4) + (-1 * x2 * x6)) * ((x0 * x4) + (-1 * x2 * x6))))));
	const FLT x37 = (-1 * x24) + (-1 * x23);
	const FLT x38 = x1 + x3;
	const FLT x39 = 1 + (-2 * (x9 + (x2 * x2)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x2 * x4) + (x0 * x6);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x14) + x13) * x17) + ((x8 + (-1 * x1) + (-1 * x3)) * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x18 * ((-1 * x17 * ((-4 * x7) + x22)) + (x21 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x18 * ((-1 * ((-4 * x30) + x29) * x17) + (x11 * (x23 + x27 + x24))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x18 * ((-1 * ((4 * x23) + x35) * x17) + (x34 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x34 * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x36 * (x37 + x26 + (-1 * x25)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x36 * (x38 + x5 + (-1 * x7)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * (x13 + (4 * x19)) * x43) + ((x37 + x27) * x40)) * x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x44 * ((-1 * x43 * (x22 + (-4 * x3))) + (x40 * (x31 + x33 + (-1 * x30)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x44 * ((-1 * (x29 + (4 * x32)) * x43) + (x40 * (x38 + x8))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x44 * ((-1 * (x35 + (-4 * x25)) * x43) + (x40 * (x20 + x19 + (-1 * x12)))));
}

// Full version Jacobian of SurvivePoseToErrorModelExact wrt [(*_x1).Pos[0], (*_x1).Pos[1], (*_x1).Pos[2],
// (*_x1).Rot[0], (*_x1).Rot[1], (*_x1).Rot[2], (*_x1).Rot[3]] Jacobian of SurvivePoseToErrorModelExact wrt
// [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseToErrorModelExact_jac_x0(CnMat *Hx, const SurvivePose *_x1, const SurvivePose *_x0) {
	const FLT x0 = ((*_x1).Rot[3] * (*_x0).Rot[1]) + (-1 * (*_x1).Rot[0] * (*_x0).Rot[2]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[0]) + (-1 * (*_x1).Rot[1] * (*_x0).Rot[3]);
	const FLT x1 = x0 * (*_x1).Rot[3];
	const FLT x2 = (-1 * (*_x1).Rot[0] * (*_x0).Rot[1]) + ((*_x1).Rot[1] * (*_x0).Rot[0]) +
				   ((*_x1).Rot[2] * (*_x0).Rot[3]) + (-1 * (*_x1).Rot[3] * (*_x0).Rot[2]);
	const FLT x3 = x2 * (*_x1).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = ((*_x1).Rot[1] * (*_x0).Rot[1]) + ((*_x1).Rot[2] * (*_x0).Rot[2]) + ((*_x1).Rot[3] * (*_x0).Rot[3]) +
				   ((*_x1).Rot[0] * (*_x0).Rot[0]);
	const FLT x6 = x5 * (*_x1).Rot[1];
	const FLT x7 = (-1 * (*_x1).Rot[2] * (*_x0).Rot[1]) + ((*_x1).Rot[3] * (*_x0).Rot[0]) +
				   (-1 * (*_x1).Rot[0] * (*_x0).Rot[3]) + ((*_x1).Rot[1] * (*_x0).Rot[2]);
	const FLT x8 = x7 * (*_x1).Rot[2];
	const FLT x9 = x8 + x6;
	const FLT x10 = x0 * x0;
	const FLT x11 = 1 + (-2 * ((x2 * x2) + x10));
	const FLT x12 = 2 * (1. / x11);
	const FLT x13 = x0 * (*_x1).Rot[2];
	const FLT x14 = -4 * x13;
	const FLT x15 = x2 * (*_x1).Rot[1];
	const FLT x16 = x11 * x11;
	const FLT x17 = (x2 * x5) + (x0 * x7);
	const FLT x18 = 2 * x17 * (1. / x16);
	const FLT x19 = x16 * (1. / (x16 + (4 * (x17 * x17))));
	const FLT x20 = x7 * (*_x1).Rot[3];
	const FLT x21 = x20 + (-1 * x5 * (*_x1).Rot[0]);
	const FLT x22 = -4 * x1;
	const FLT x23 = x5 * (*_x1).Rot[3];
	const FLT x24 = x7 * (*_x1).Rot[0];
	const FLT x25 = x0 * (*_x1).Rot[1];
	const FLT x26 = x2 * (*_x1).Rot[2];
	const FLT x27 = x26 + x25;
	const FLT x28 = x0 * (*_x1).Rot[0];
	const FLT x29 = 4 * x28;
	const FLT x30 = x2 * (*_x1).Rot[3];
	const FLT x31 = x5 * (*_x1).Rot[2];
	const FLT x32 = x7 * (*_x1).Rot[1];
	const FLT x33 = (-1 * x32) + x31;
	const FLT x34 = (-1 * x28) + x30;
	const FLT x35 = 4 * x25;
	const FLT x36 = 1. / sqrt(1 + (-4 * (((x0 * x5) + (-1 * x2 * x7)) * ((x0 * x5) + (-1 * x2 * x7)))));
	const FLT x37 = 2 * x36;
	const FLT x38 = x23 + x27 + x24;
	const FLT x39 = 2 * (x21 + x13 + (-1 * x15));
	const FLT x40 = 1 + (-2 * (x10 + (x7 * x7)));
	const FLT x41 = 1. / x40;
	const FLT x42 = 2 * x41;
	const FLT x43 = x40 * x40;
	const FLT x44 = (x5 * x7) + (x0 * x2);
	const FLT x45 = 2 * (1. / x43) * x44;
	const FLT x46 = x43 * (1. / (x43 + (4 * (x44 * x44))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurvivePose, Pos[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						((-1 * ((-4 * x15) + x14) * x18) + ((x9 + x4) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x19 * ((-1 * x18 * ((4 * x3) + x22)) + (x12 * (x21 + x15 + (-1 * x13)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x19 * ((-1 * ((4 * x30) + x29) * x18) + (x12 * ((-1 * x23) + x27 + (-1 * x24)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						((-1 * ((-4 * x26) + x35) * x18) + ((x34 + x33) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x37 * (x28 + x33 + (-1 * x30)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x38 * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x36 * x39);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT), (x4 + (-1 * x6) + (-1 * x8)) * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x46 * ((-1 * (x14 + (-4 * x20)) * x45) + (x42 * x38)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x46 * ((-1 * x45 * (x22 + (4 * x8))) + (x42 * (x34 + x32 + (-1 * x31)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x46 * ((-1 * (x29 + (-4 * x32)) * x45) + ((x9 + (-1 * x3) + (-1 * x1)) * x42)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x46 * ((-1 * (x35 + (4 * x24)) * x45) + (x41 * x39)));
}

// Full version Jacobian of SurvivePoseToErrorModelExact wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2],
// (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModelExact(SurvivePose *out, const SurvivePose *_x0,
												 const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x5 * x7;
	const FLT x13 = (x1 * x12) + (x3 * x10);
	const FLT x14 = x1 * x8;
	const FLT x15 = (x9 * x12) + (x3 * x14);
	const FLT x16 = (x6 * x9) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x13 * x13));
	const FLT x18 = x11 * x17;
	const FLT x19 = x13 * x17;
	const FLT x20 = x15 * x17;
	const FLT x21 = x17 * x16;
	const FLT x22 = x17 * (*_x0).Rot[3];
	out->Pos[0] = (*_x0).Pos[0] + (*error_state).Pos[0];
	out->Pos[1] = (*_x0).Pos[1] + (*error_state).Pos[1];
	out->Pos[2] = (*_x0).Pos[2] + (*error_state).Pos[2];
	out->Rot[0] =
		(x20 * (*_x0).Rot[0]) + (-1 * x21 * (*_x0).Rot[1]) + (-1 * x18 * (*_x0).Rot[3]) + (-1 * x19 * (*_x0).Rot[2]);
	out->Rot[1] = (x20 * (*_x0).Rot[1]) + (x21 * (*_x0).Rot[0]) + (-1 * x22 * x13) + (x18 * (*_x0).Rot[2]);
	out->Rot[2] = (-1 * x18 * (*_x0).Rot[1]) + (x19 * (*_x0).Rot[0]) + (x21 * (*_x0).Rot[3]) + (x20 * (*_x0).Rot[2]);
	out->Rot[3] = (x19 * (*_x0).Rot[1]) + (x18 * (*_x0).Rot[0]) + (x22 * x15) + (-1 * x21 * (*_x0).Rot[2]);
}

// Jacobian of SurvivePoseAddErrorModelExact wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2], (*_x0).Rot[0],
// (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]]
static inline void SurvivePoseAddErrorModelExact_jac_x0(CnMat *Hx, const SurvivePose *_x0,
														const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = sin(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x5 * x9;
	const FLT x13 = x3 * x8;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x15 * x17;
	const FLT x19 = x17 * x16;
	const FLT x20 = -1 * x19;
	const FLT x21 = x14 * x17;
	const FLT x22 = -1 * x21;
	const FLT x23 = x11 * x17;
	const FLT x24 = -1 * x23;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x18);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x20);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x22);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x24);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x19);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x18);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x23);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x22);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x21);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x24);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x18);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x19);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x23);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x21);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x20);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x18);
}

// Full version Jacobian of SurvivePoseAddErrorModelExact wrt [(*_x0).Pos[0], (*_x0).Pos[1], (*_x0).Pos[2],
// (*_x0).Rot[0], (*_x0).Rot[1], (*_x0).Rot[2], (*_x0).Rot[3]] Jacobian of SurvivePoseAddErrorModelExact wrt
// [(*error_state).AxisAngleRot[0], (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2],
// (*error_state).Pos[0], (*error_state).Pos[1], (*error_state).Pos[2]]
static inline void SurvivePoseAddErrorModelExact_jac_error_state(CnMat *Hx, const SurvivePose *_x0,
																 const SurviveAxisAnglePose *error_state) {
	const FLT x0 = 0.5 * (*error_state).AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_state).AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).AxisAngleRot[0];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = 0.5 * x7;
	const FLT x9 = sin(x0);
	const FLT x10 = sin(x4);
	const FLT x11 = sin(x2);
	const FLT x12 = x11 * x10;
	const FLT x13 = x9 * x12;
	const FLT x14 = 0.5 * x13;
	const FLT x15 = x14 + x8;
	const FLT x16 = x3 * x10;
	const FLT x17 = x9 * x16;
	const FLT x18 = x5 * x11;
	const FLT x19 = x1 * x18;
	const FLT x20 = x19 + (-1 * x17);
	const FLT x21 = x1 * x12;
	const FLT x22 = x6 * x9;
	const FLT x23 = x22 + x21;
	const FLT x24 = x7 + x13;
	const FLT x25 = x9 * x18;
	const FLT x26 = x1 * x16;
	const FLT x27 = x26 + (-1 * x25);
	const FLT x28 = (x27 * x27) + (x24 * x24) + (x20 * x20) + (x23 * x23);
	const FLT x29 = 1. / sqrt(x28);
	const FLT x30 = x29 * (*_x0).Rot[1];
	const FLT x31 = -1 * x30 * x15;
	const FLT x32 = 2 * x15;
	const FLT x33 = 0.5 * x26;
	const FLT x34 = -1 * x33;
	const FLT x35 = 0.5 * x25;
	const FLT x36 = x35 + x34;
	const FLT x37 = 2 * x24;
	const FLT x38 = 0.5 * x21;
	const FLT x39 = -0.5 * x22;
	const FLT x40 = x39 + (-1 * x38);
	const FLT x41 = 2 * x40;
	const FLT x42 = 0.5 * x17;
	const FLT x43 = -1 * x42;
	const FLT x44 = 0.5 * x19;
	const FLT x45 = x44 + x43;
	const FLT x46 = 2 * x23;
	const FLT x47 = (x32 * x27) + (x45 * x46) + (x41 * x20) + (x36 * x37);
	const FLT x48 = 1.0 / 2.0 * (1. / (x28 * sqrt(x28)));
	const FLT x49 = x48 * x20;
	const FLT x50 = x47 * x49;
	const FLT x51 = x40 * x29;
	const FLT x52 = x51 * (*_x0).Rot[3];
	const FLT x53 = x48 * x23;
	const FLT x54 = x53 * x47;
	const FLT x55 = x48 * x27;
	const FLT x56 = x55 * (*_x0).Rot[1];
	const FLT x57 = x29 * (*_x0).Rot[0];
	const FLT x58 = x48 * x24;
	const FLT x59 = x58 * x47;
	const FLT x60 = x29 * (*_x0).Rot[2];
	const FLT x61 = -1 * x44;
	const FLT x62 = x61 + x43;
	const FLT x63 = x62 * x29;
	const FLT x64 = x38 + x39;
	const FLT x65 = -1 * x35;
	const FLT x66 = x34 + x65;
	const FLT x67 = (-1 * x14) + x8;
	const FLT x68 = (x67 * x46) + (2 * x66 * x20) + (2 * x62 * x27) + (x64 * x37);
	const FLT x69 = x68 * x58;
	const FLT x70 = x68 * x49;
	const FLT x71 = x68 * (*_x0).Rot[2];
	const FLT x72 = x66 * x29;
	const FLT x73 = x42 + x61;
	const FLT x74 = x33 + x65;
	const FLT x75 = (x32 * x20) + (x74 * x46) + (x41 * x27) + (x73 * x37);
	const FLT x76 = x75 * x58;
	const FLT x77 = x75 * x49;
	const FLT x78 = -1 * x51 * (*_x0).Rot[1];
	const FLT x79 = x29 * (*_x0).Rot[3];
	const FLT x80 = x79 * x15;
	const FLT x81 = x75 * x53;
	const FLT x82 = x58 * (*_x0).Rot[1];
	const FLT x83 = x55 * x47;
	const FLT x84 = x47 * (*_x0).Rot[2];
	const FLT x85 = x60 * x40;
	const FLT x86 = x57 * x15;
	const FLT x87 = x68 * x55;
	const FLT x88 = x68 * x53;
	const FLT x89 = x75 * x55;
	const FLT x90 = x60 * x15;
	const FLT x91 = x51 * (*_x0).Rot[0];
	const FLT x92 = x58 * (*_x0).Rot[3];
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						(x50 * (*_x0).Rot[3]) + (-1 * x60 * x45) + (x57 * x36) + (-1 * x52) +
							(-1 * x59 * (*_x0).Rot[0]) + (x54 * (*_x0).Rot[2]) + x31 + (x56 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(x64 * x57) + (-1 * x69 * (*_x0).Rot[0]) + (x70 * (*_x0).Rot[3]) + (-1 * x72 * (*_x0).Rot[3]) +
							(x71 * x53) + (-1 * x60 * x67) + (-1 * x63 * (*_x0).Rot[1]) + (x68 * x56));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x80) + (x73 * x57) + (-1 * x76 * (*_x0).Rot[0]) + (x75 * x56) + (-1 * x74 * x60) +
							(x81 * (*_x0).Rot[2]) + (x77 * (*_x0).Rot[3]) + x78);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						x86 + x85 + (x54 * (*_x0).Rot[3]) + (-1 * x82 * x47) + (-1 * x83 * (*_x0).Rot[0]) +
							(-1 * x84 * x49) + (x30 * x36) + (-1 * x79 * x45));
	cnMatrixOptionalSet(
		Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
		(x63 * (*_x0).Rot[0]) + (-1 * x71 * x49) + (x72 * (*_x0).Rot[2]) + (x64 * x30) + (-1 * x69 * (*_x0).Rot[1]) +
			(-1 * x87 * (*_x0).Rot[0]) + (x88 * (*_x0).Rot[3]) + (-1 * x79 * x67));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						x91 + (x73 * x30) + (-1 * x77 * (*_x0).Rot[2]) + (-1 * x89 * (*_x0).Rot[0]) + (-1 * x82 * x75) +
							(x81 * (*_x0).Rot[3]) + (-1 * x79 * x74) + x90);
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						(x57 * x45) + (x60 * x36) + (x50 * (*_x0).Rot[1]) + (-1 * x54 * (*_x0).Rot[0]) +
							(-1 * x83 * (*_x0).Rot[3]) + x80 + x78 + (-1 * x59 * (*_x0).Rot[2]));
	cnMatrixOptionalSet(
		Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
		(x67 * x57) + (-1 * x71 * x58) + (x70 * (*_x0).Rot[1]) + (-1 * x88 * (*_x0).Rot[0]) +
			(-1 * x72 * (*_x0).Rot[1]) + (-1 * x87 * (*_x0).Rot[3]) + (x63 * (*_x0).Rot[3]) + (x60 * x64));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x76 * (*_x0).Rot[2]) + x31 + (-1 * x89 * (*_x0).Rot[3]) + (-1 * x81 * (*_x0).Rot[0]) +
							(x73 * x60) + (x77 * (*_x0).Rot[1]) + x52 + (x74 * x57));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						x91 + (x45 * x30) + (-1 * x90) + (-1 * x92 * x47) + (-1 * x50 * (*_x0).Rot[0]) +
							(-1 * x54 * (*_x0).Rot[1]) + (x84 * x55) + (x79 * x36));
	cnMatrixOptionalSet(
		Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
		(-1 * x68 * x92) + (x72 * (*_x0).Rot[0]) + (x67 * x30) + (x71 * x55) + (-1 * x70 * (*_x0).Rot[0]) +
			(-1 * x63 * (*_x0).Rot[2]) + (x79 * x64) + (-1 * x88 * (*_x0).Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						x86 + (x89 * (*_x0).Rot[2]) + (x74 * x30) + (-1 * x81 * (*_x0).Rot[1]) + (-1 * x75 * x92) +
							(-1 * x77 * (*_x0).Rot[0]) + (-1 * x85) + (x73 * x79));
}

// Full version Jacobian of SurvivePoseAddErrorModelExact wrt [(*error_state).AxisAngleRot[0],
// (*error_state).AxisAngleRot[1], (*error_state).AxisAngleRot[2], (*error_state).Pos[0], (*error_state).Pos[1],
// (*error_state).Pos[2]]
static inline void SurviveKalmanModelToErrorModel(SurviveKalmanErrorModel* out, const SurviveKalmanModel* _x1, const SurviveKalmanModel* _x0) {
	const FLT x0 = ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[3]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[2]);
	const FLT x1 = (-1 * (*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[2]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[0]);
	const FLT x2 = (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[2]);
	const FLT x3 = ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[0]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[2]);
	const FLT x4 = x0 * x0;
	const FLT x5 = ((*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[3]) +
				   (-1 * (*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[0]) +
				   (-1 * (*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[1]) +
				   ((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[2]);
	const FLT x6 = (-1 * (*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[2]) +
				   ((*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[1]) +
				   ((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[3]) +
				   (-1 * (*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[0]);
	const FLT x7 = (-1 * (*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[0]) +
				   ((*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[2]) +
				   ((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[1]) +
				   (-1 * (*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[3]);
	const FLT x8 = ((*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[1]) +
				   ((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[0]) +
				   ((*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[3]) +
				   ((*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[2]);
	const FLT x9 = x5 * x5;
	out->Pose.Pos[0]=(*_x1).Pose.Pos[0] + (-1 * (*_x0).Pose.Pos[0]);
	out->Pose.Pos[1]=(*_x1).Pose.Pos[1] + (-1 * (*_x0).Pose.Pos[1]);
	out->Pose.Pos[2]=(*_x1).Pose.Pos[2] + (-1 * (*_x0).Pose.Pos[2]);
	out->Pose.AxisAngleRot[0]=atan2(2 * ((x2 * x3) + (x0 * x1)), 1 + (-2 * ((x2 * x2) + x4)));
	out->Pose.AxisAngleRot[1]=asin(2 * ((x0 * x3) + (-1 * x2 * x1)));
	out->Pose.AxisAngleRot[2]=atan2(2 * ((x1 * x3) + (x0 * x2)), 1 + (-2 * (x4 + (x1 * x1))));
	out->Velocity.Pos[0]=(*_x1).Velocity.Pos[0] + (-1 * (*_x0).Velocity.Pos[0]);
	out->Velocity.Pos[1]=(*_x1).Velocity.Pos[1] + (-1 * (*_x0).Velocity.Pos[1]);
	out->Velocity.Pos[2]=(*_x1).Velocity.Pos[2] + (-1 * (*_x0).Velocity.Pos[2]);
	out->Velocity.AxisAngleRot[0]=(*_x1).Velocity.AxisAngleRot[0] + (-1 * (*_x0).Velocity.AxisAngleRot[0]);
	out->Velocity.AxisAngleRot[1]=(*_x1).Velocity.AxisAngleRot[1] + (-1 * (*_x0).Velocity.AxisAngleRot[1]);
	out->Velocity.AxisAngleRot[2]=(*_x1).Velocity.AxisAngleRot[2] + (-1 * (*_x0).Velocity.AxisAngleRot[2]);
	out->Acc[0]=(*_x1).Acc[0] + (-1 * (*_x0).Acc[0]);
	out->Acc[1]=(*_x1).Acc[1] + (-1 * (*_x0).Acc[1]);
	out->Acc[2]=(*_x1).Acc[2] + (-1 * (*_x0).Acc[2]);
	out->IMUBias.AccScale[0] = (*_x1).IMUBias.AccScale[0] + (-1 * (*_x0).IMUBias.AccScale[0]);
	out->IMUBias.AccScale[1] = (*_x1).IMUBias.AccScale[1] + (-1 * (*_x0).IMUBias.AccScale[1]);
	out->IMUBias.AccScale[2] = (*_x1).IMUBias.AccScale[2] + (-1 * (*_x0).IMUBias.AccScale[2]);
	out->IMUBias.IMUCorrection[0] = atan2(2 * ((x8 * x7) + (x6 * x5)), 1 + (-2 * ((x7 * x7) + x9)));
	out->IMUBias.IMUCorrection[1] = asin(2 * ((x5 * x8) + (-1 * x6 * x7)));
	out->IMUBias.IMUCorrection[2] = atan2(2 * ((x6 * x8) + (x5 * x7)), 1 + (-2 * (x9 + (x6 * x6))));
	out->IMUBias.AccBias[0] = (*_x1).IMUBias.AccBias[0] + (-1 * (*_x0).IMUBias.AccBias[0]);
	out->IMUBias.AccBias[1] = (*_x1).IMUBias.AccBias[1] + (-1 * (*_x0).IMUBias.AccBias[1]);
	out->IMUBias.AccBias[2] = (*_x1).IMUBias.AccBias[2] + (-1 * (*_x0).IMUBias.AccBias[2]);
	out->IMUBias.GyroBias[0] = (*_x1).IMUBias.GyroBias[0] + (-1 * (*_x0).IMUBias.GyroBias[0]);
	out->IMUBias.GyroBias[1] = (*_x1).IMUBias.GyroBias[1] + (-1 * (*_x0).IMUBias.GyroBias[1]);
	out->IMUBias.GyroBias[2] = (*_x1).IMUBias.GyroBias[2] + (-1 * (*_x0).IMUBias.GyroBias[2]);
}

// Jacobian of SurviveKalmanModelToErrorModel wrt [(*_x1).Acc[0], (*_x1).Acc[1], (*_x1).Acc[2],
// (*_x1).IMUBias.AccBias[0], (*_x1).IMUBias.AccBias[1], (*_x1).IMUBias.AccBias[2], (*_x1).IMUBias.AccScale[0],
// (*_x1).IMUBias.AccScale[1], (*_x1).IMUBias.AccScale[2], (*_x1).IMUBias.GyroBias[0], (*_x1).IMUBias.GyroBias[1],
// (*_x1).IMUBias.GyroBias[2], (*_x1).IMUBias.IMUCorrection[0], (*_x1).IMUBias.IMUCorrection[1],
// (*_x1).IMUBias.IMUCorrection[2], (*_x1).IMUBias.IMUCorrection[3], (*_x1).Pose.Pos[0], (*_x1).Pose.Pos[1],
// (*_x1).Pose.Pos[2], (*_x1).Pose.Rot[0], (*_x1).Pose.Rot[1], (*_x1).Pose.Rot[2], (*_x1).Pose.Rot[3],
// (*_x1).Velocity.AxisAngleRot[0], (*_x1).Velocity.AxisAngleRot[1], (*_x1).Velocity.AxisAngleRot[2],
// (*_x1).Velocity.Pos[0], (*_x1).Velocity.Pos[1], (*_x1).Velocity.Pos[2]]
static inline void SurviveKalmanModelToErrorModel_jac_x1(CnMat* Hx, const SurviveKalmanModel* _x1, const SurviveKalmanModel* _x0) {
	const FLT x0 = ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[3]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[2]);
	const FLT x1 = x0 * (*_x0).Pose.Rot[3];
	const FLT x2 = (-1 * (*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[2]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[0]);
	const FLT x3 = x2 * (*_x0).Pose.Rot[2];
	const FLT x4 = ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[0]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[2]);
	const FLT x5 = x4 * (*_x0).Pose.Rot[1];
	const FLT x6 = (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[2]);
	const FLT x7 = x6 * (*_x0).Pose.Rot[0];
	const FLT x8 = x7 + (-1 * x5);
	const FLT x9 = x0 * x0;
	const FLT x10 = 1 + (-2 * ((x6 * x6) + x9));
	const FLT x11 = 2 * (1. / x10);
	const FLT x12 = x0 * (*_x0).Pose.Rot[2];
	const FLT x13 = 4 * x12;
	const FLT x14 = x6 * (*_x0).Pose.Rot[1];
	const FLT x15 = x10 * x10;
	const FLT x16 = (x4 * x6) + (x0 * x2);
	const FLT x17 = 2 * (1. / x15) * x16;
	const FLT x18 = x15 * (1. / (x15 + (4 * (x16 * x16))));
	const FLT x19 = x2 * (*_x0).Pose.Rot[3];
	const FLT x20 = (x4 * (*_x0).Pose.Rot[0]) + x14;
	const FLT x21 = x20 + x12 + (-1 * x19);
	const FLT x22 = 4 * x1;
	const FLT x23 = x6 * (*_x0).Pose.Rot[2];
	const FLT x24 = x4 * (*_x0).Pose.Rot[3];
	const FLT x25 = x0 * (*_x0).Pose.Rot[1];
	const FLT x26 = x2 * (*_x0).Pose.Rot[0];
	const FLT x27 = x26 + (-1 * x25);
	const FLT x28 = x0 * (*_x0).Pose.Rot[0];
	const FLT x29 = -4 * x28;
	const FLT x30 = x6 * (*_x0).Pose.Rot[3];
	const FLT x31 = x4 * (*_x0).Pose.Rot[2];
	const FLT x32 = x2 * (*_x0).Pose.Rot[1];
	const FLT x33 = x32 + x28;
	const FLT x34 = (-1 * x31) + x33 + x30;
	const FLT x35 = -4 * x25;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x4) + (-1 * x2 * x6)) * ((x0 * x4) + (-1 * x2 * x6))))));
	const FLT x37 = (-1 * x24) + (-1 * x23);
	const FLT x38 = x3 + x1;
	const FLT x39 = 1 + (-2 * (x9 + (x2 * x2)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x2 * x4) + (x0 * x6);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	const FLT x45 = ((*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[3]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[0]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[1]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[2]);
	const FLT x46 = x45 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x47 = (-1 * (*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[2]) +
					((*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[1]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[3]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[0]);
	const FLT x48 = x47 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x49 = ((*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[1]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[0]) +
					((*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[3]) +
					((*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[2]);
	const FLT x50 = x49 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x51 = (-1 * (*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[0]) +
					((*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[2]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[1]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[3]);
	const FLT x52 = x51 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x53 = x52 + (-1 * x50);
	const FLT x54 = x45 * x45;
	const FLT x55 = 1 + (-2 * ((x51 * x51) + x54));
	const FLT x56 = 2 * (1. / x55);
	const FLT x57 = x45 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x58 = 4 * x57;
	const FLT x59 = x51 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x60 = x55 * x55;
	const FLT x61 = (x51 * x49) + (x45 * x47);
	const FLT x62 = 2 * (1. / x60) * x61;
	const FLT x63 = x60 * (1. / (x60 + (4 * (x61 * x61))));
	const FLT x64 = x47 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x65 = x59 + (x49 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x66 = x65 + x57 + (-1 * x64);
	const FLT x67 = 4 * x46;
	const FLT x68 = x49 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x69 = x51 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x70 = x47 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x71 = x45 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x72 = (-1 * x71) + x70;
	const FLT x73 = x45 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x74 = -4 * x73;
	const FLT x75 = x51 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x76 = x49 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x77 = x47 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x78 = x77 + x73;
	const FLT x79 = x78 + x75 + (-1 * x76);
	const FLT x80 = -4 * x71;
	const FLT x81 = 2 * (1. / sqrt(1 + (-4 * (((x45 * x49) + (-1 * x51 * x47)) * ((x45 * x49) + (-1 * x51 * x47))))));
	const FLT x82 = (-1 * x69) + (-1 * x68);
	const FLT x83 = x48 + x46;
	const FLT x84 = 1 + (-2 * (x54 + (x47 * x47)));
	const FLT x85 = 2 * (1. / x84);
	const FLT x86 = x84 * x84;
	const FLT x87 = (x47 * x49) + (x51 * x45);
	const FLT x88 = 2 * (1. / x86) * x87;
	const FLT x89 = x86 * (1. / (x86 + (4 * (x87 * x87))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x18 * ((-1 * ((4 * x14) + x13) * x17) + ((x8 + (-1 * x1) + (-1 * x3)) * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x18 * ((-1 * x17 * ((-4 * x7) + x22)) + (x21 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x18 * ((-1 * ((-4 * x30) + x29) * x17) + (x11 * (x23 + x27 + x24))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x18 * ((-1 * ((4 * x23) + x35) * x17) + (x34 * x11)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x34 * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x36 * (x37 + x25 + (-1 * x26)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x36 * x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x36 * (x38 + x5 + (-1 * x7)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						((-1 * (x13 + (4 * x19)) * x43) + ((x27 + x37) * x40)) * x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x44 * ((-1 * x43 * (x22 + (-4 * x3))) + (x40 * (x31 + x33 + (-1 * x30)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x44 * ((-1 * (x29 + (4 * x32)) * x43) + (x40 * (x8 + x38))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x44 * ((-1 * (x35 + (-4 * x26)) * x43) + (x40 * (x20 + x19 + (-1 * x12)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x63 * ((-1 * ((4 * x59) + x58) * x62) + (x56 * (x53 + (-1 * x46) + (-1 * x48)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x63 * ((-1 * ((-4 * x52) + x67) * x62) + (x66 * x56)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x63 * ((-1 * ((-4 * x75) + x74) * x62) + (x56 * (x72 + x68 + x69))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x63 * ((-1 * ((4 * x69) + x80) * x62) + (x79 * x56)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT), x81 * x79);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x81 * (x82 + x71 + (-1 * x70)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT), x81 * x66);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x81 * (x50 + x83 + (-1 * x52)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x89 * ((-1 * (x58 + (4 * x64)) * x88) + ((x72 + x82) * x85)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x89 * ((-1 * (x67 + (-4 * x48)) * x88) + (x85 * (x78 + (-1 * x75) + x76))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x89 * ((-1 * (x74 + (4 * x77)) * x88) + ((x53 + x83) * x85)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x89 * ((-1 * (x80 + (-4 * x70)) * x88) + (x85 * (x65 + x64 + (-1 * x57)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelToErrorModel wrt [(*_x1).Acc[0], (*_x1).Acc[1], (*_x1).Acc[2],
// (*_x1).IMUBias.AccBias[0], (*_x1).IMUBias.AccBias[1], (*_x1).IMUBias.AccBias[2], (*_x1).IMUBias.AccScale[0],
// (*_x1).IMUBias.AccScale[1], (*_x1).IMUBias.AccScale[2], (*_x1).IMUBias.GyroBias[0], (*_x1).IMUBias.GyroBias[1],
// (*_x1).IMUBias.GyroBias[2], (*_x1).IMUBias.IMUCorrection[0], (*_x1).IMUBias.IMUCorrection[1],
// (*_x1).IMUBias.IMUCorrection[2], (*_x1).IMUBias.IMUCorrection[3], (*_x1).Pose.Pos[0], (*_x1).Pose.Pos[1],
// (*_x1).Pose.Pos[2], (*_x1).Pose.Rot[0], (*_x1).Pose.Rot[1], (*_x1).Pose.Rot[2], (*_x1).Pose.Rot[3],
// (*_x1).Velocity.AxisAngleRot[0], (*_x1).Velocity.AxisAngleRot[1], (*_x1).Velocity.AxisAngleRot[2],
// (*_x1).Velocity.Pos[0], (*_x1).Velocity.Pos[1], (*_x1).Velocity.Pos[2]] Jacobian of SurviveKalmanModelToErrorModel
// wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1],
// (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0], (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2],
// (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1], (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0],
// (*_x0).IMUBias.IMUCorrection[1], (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3],
// (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1],
// (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1],
// (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModelToErrorModel_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x1, const SurviveKalmanModel* _x0) {
	const FLT x0 = ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[0]) +
				   (-1 * (*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[3]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[2]);
	const FLT x1 = x0 * (*_x1).Pose.Rot[3];
	const FLT x2 = (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[3]) +
				   ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[0]) + (-1 * (*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[2]);
	const FLT x3 = x2 * (*_x1).Pose.Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[0]) + ((*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[2]);
	const FLT x6 = x5 * (*_x1).Pose.Rot[1];
	const FLT x7 = (-1 * (*_x1).Pose.Rot[2] * (*_x0).Pose.Rot[1]) + ((*_x1).Pose.Rot[1] * (*_x0).Pose.Rot[2]) + (-1 * (*_x1).Pose.Rot[0] * (*_x0).Pose.Rot[3]) + ((*_x1).Pose.Rot[3] * (*_x0).Pose.Rot[0]);
	const FLT x8 = x7 * (*_x1).Pose.Rot[2];
	const FLT x9 = x8 + x6;
	const FLT x10 = x0 * x0;
	const FLT x11 = 1 + (-2 * ((x2 * x2) + x10));
	const FLT x12 = 2 * (1. / x11);
	const FLT x13 = x0 * (*_x1).Pose.Rot[2];
	const FLT x14 = -4 * x13;
	const FLT x15 = x2 * (*_x1).Pose.Rot[1];
	const FLT x16 = x11 * x11;
	const FLT x17 = (x2 * x5) + (x0 * x7);
	const FLT x18 = 2 * x17 * (1. / x16);
	const FLT x19 = x16 * (1. / (x16 + (4 * (x17 * x17))));
	const FLT x20 = x7 * (*_x1).Pose.Rot[3];
	const FLT x21 = x20 + (-1 * x5 * (*_x1).Pose.Rot[0]);
	const FLT x22 = -4 * x1;
	const FLT x23 = x5 * (*_x1).Pose.Rot[3];
	const FLT x24 = x7 * (*_x1).Pose.Rot[0];
	const FLT x25 = x0 * (*_x1).Pose.Rot[1];
	const FLT x26 = x2 * (*_x1).Pose.Rot[2];
	const FLT x27 = x26 + x25;
	const FLT x28 = x0 * (*_x1).Pose.Rot[0];
	const FLT x29 = 4 * x28;
	const FLT x30 = x2 * (*_x1).Pose.Rot[3];
	const FLT x31 = (-1 * x28) + x30;
	const FLT x32 = x5 * (*_x1).Pose.Rot[2];
	const FLT x33 = x7 * (*_x1).Pose.Rot[1];
	const FLT x34 = (-1 * x33) + x32;
	const FLT x35 = 4 * x25;
	const FLT x36 = 2 * (1. / sqrt(1 + (-4 * (((x0 * x5) + (-1 * x2 * x7)) * ((x0 * x5) + (-1 * x2 * x7))))));
	const FLT x37 = x23 + x27 + x24;
	const FLT x38 = x21 + x13 + (-1 * x15);
	const FLT x39 = 1 + (-2 * (x10 + (x7 * x7)));
	const FLT x40 = 2 * (1. / x39);
	const FLT x41 = x39 * x39;
	const FLT x42 = (x5 * x7) + (x0 * x2);
	const FLT x43 = 2 * (1. / x41) * x42;
	const FLT x44 = x41 * (1. / (x41 + (4 * (x42 * x42))));
	const FLT x45 = (-1 * (*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[0]) +
					((*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[2]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[1]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[3]);
	const FLT x46 = x45 * (*_x1).IMUBias.IMUCorrection[0];
	const FLT x47 = ((*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[3]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[0]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[1]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[2]);
	const FLT x48 = x47 * (*_x1).IMUBias.IMUCorrection[3];
	const FLT x49 = x48 + x46;
	const FLT x50 = ((*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[1]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[0]) +
					((*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[3]) +
					((*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[2]);
	const FLT x51 = x50 * (*_x1).IMUBias.IMUCorrection[1];
	const FLT x52 = (-1 * (*_x0).IMUBias.IMUCorrection[1] * (*_x1).IMUBias.IMUCorrection[2]) +
					((*_x0).IMUBias.IMUCorrection[2] * (*_x1).IMUBias.IMUCorrection[1]) +
					((*_x0).IMUBias.IMUCorrection[0] * (*_x1).IMUBias.IMUCorrection[3]) +
					(-1 * (*_x0).IMUBias.IMUCorrection[3] * (*_x1).IMUBias.IMUCorrection[0]);
	const FLT x53 = x52 * (*_x1).IMUBias.IMUCorrection[2];
	const FLT x54 = x53 + x51;
	const FLT x55 = x47 * x47;
	const FLT x56 = 1 + (-2 * ((x45 * x45) + x55));
	const FLT x57 = 2 * (1. / x56);
	const FLT x58 = x47 * (*_x1).IMUBias.IMUCorrection[2];
	const FLT x59 = -4 * x58;
	const FLT x60 = x45 * (*_x1).IMUBias.IMUCorrection[1];
	const FLT x61 = x56 * x56;
	const FLT x62 = (x50 * x45) + (x52 * x47);
	const FLT x63 = 2 * (1. / x61) * x62;
	const FLT x64 = x61 * (1. / (x61 + (4 * (x62 * x62))));
	const FLT x65 = x52 * (*_x1).IMUBias.IMUCorrection[3];
	const FLT x66 = x65 + (-1 * x50 * (*_x1).IMUBias.IMUCorrection[0]);
	const FLT x67 = -4 * x48;
	const FLT x68 = x50 * (*_x1).IMUBias.IMUCorrection[3];
	const FLT x69 = x52 * (*_x1).IMUBias.IMUCorrection[0];
	const FLT x70 = x45 * (*_x1).IMUBias.IMUCorrection[2];
	const FLT x71 = x47 * (*_x1).IMUBias.IMUCorrection[1];
	const FLT x72 = x71 + x70;
	const FLT x73 = x47 * (*_x1).IMUBias.IMUCorrection[0];
	const FLT x74 = 4 * x73;
	const FLT x75 = x45 * (*_x1).IMUBias.IMUCorrection[3];
	const FLT x76 = x50 * (*_x1).IMUBias.IMUCorrection[2];
	const FLT x77 = x52 * (*_x1).IMUBias.IMUCorrection[1];
	const FLT x78 = (-1 * x77) + x76;
	const FLT x79 = (-1 * x73) + x75;
	const FLT x80 = 4 * x71;
	const FLT x81 = 2 * (1. / sqrt(1 + (-4 * (((x50 * x47) + (-1 * x52 * x45)) * ((x50 * x47) + (-1 * x52 * x45))))));
	const FLT x82 = x72 + x68 + x69;
	const FLT x83 = x66 + x58 + (-1 * x60);
	const FLT x84 = 1 + (-2 * (x55 + (x52 * x52)));
	const FLT x85 = 2 * (1. / x84);
	const FLT x86 = x84 * x84;
	const FLT x87 = (x50 * x52) + (x45 * x47);
	const FLT x88 = 2 * (1. / x86) * x87;
	const FLT x89 = x86 * (1. / (x86 + (4 * (x87 * x87))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), ((-1 * ((-4 * x15) + x14) * x18) + ((x9 + x4) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x19 * ((-1 * x18 * ((4 * x3) + x22)) + (x12 * (x21 + x15 + (-1 * x13)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x19 * ((-1 * ((4 * x30) + x29) * x18) + (x12 * ((-1 * x23) + x27 + (-1 * x24)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), ((-1 * ((-4 * x26) + x35) * x18) + ((x34 + x31) * x12)) * x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x36 * (x34 + x28 + (-1 * x30)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x36 * x37);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x36 * x38);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (x4 + (-1 * x6) + (-1 * x8)) * x36);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x44 * ((-1 * (x14 + (-4 * x20)) * x43) + (x40 * x37)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x44 * ((-1 * x43 * (x22 + (4 * x8))) + (x40 * (x31 + x33 + (-1 * x32)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x44 * ((-1 * (x29 + (-4 * x33)) * x43) + ((x9 + (-1 * x1) + (-1 * x3)) * x40)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x44 * ((-1 * (x35 + (4 * x24)) * x43) + (x40 * x38)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x64 * ((-1 * ((-4 * x60) + x59) * x63) + ((x54 + x49) * x57)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x64 * ((-1 * ((4 * x46) + x67) * x63) + (x57 * (x66 + x60 + (-1 * x58)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x64 * ((-1 * ((4 * x75) + x74) * x63) + (x57 * (x72 + (-1 * x68) + (-1 * x69)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x64 * ((-1 * ((-4 * x70) + x80) * x63) + ((x79 + x78) * x57)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x81 * (x78 + x73 + (-1 * x75)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT), x81 * x82);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT), x81 * x83);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x81 * (x49 + (-1 * x51) + (-1 * x53)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x89 * ((-1 * (x59 + (-4 * x65)) * x88) + (x82 * x85)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x89 * ((-1 * (x67 + (4 * x53)) * x88) + (x85 * (x79 + (-1 * x76) + x77))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x89 * ((-1 * (x74 + (-4 * x77)) * x88) + (x85 * (x54 + (-1 * x46) + (-1 * x48)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x89 * ((-1 * (x80 + (4 * x69)) * x88) + (x83 * x85)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT), -1);
}

// Full version Jacobian of SurviveKalmanModelToErrorModel wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModelAddErrorModel(SurviveKalmanModel* out, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_state) {
	const FLT x0 = 0.5 * (*error_state).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).Pose.AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = sin(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x5 * x9;
	const FLT x13 = x3 * x8;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x14 * x17;
	const FLT x20 = x15 * x17;
	const FLT x21 = x17 * x16;
	const FLT x22 = x11 * x17;
	const FLT x23 = 0.5 * (*error_state).IMUBias.IMUCorrection[1];
	const FLT x24 = cos(x23);
	const FLT x25 = 0.5 * (*error_state).IMUBias.IMUCorrection[2];
	const FLT x26 = sin(x25);
	const FLT x27 = 0.5 * (*error_state).IMUBias.IMUCorrection[0];
	const FLT x28 = sin(x27);
	const FLT x29 = x28 * x26;
	const FLT x30 = sin(x23);
	const FLT x31 = cos(x27);
	const FLT x32 = cos(x25);
	const FLT x33 = x32 * x31;
	const FLT x34 = (x30 * x33) + (x24 * x29);
	const FLT x35 = (x33 * x24) + (x30 * x29);
	const FLT x36 = x32 * x28;
	const FLT x37 = x31 * x26;
	const FLT x38 = (x37 * x24) + (-1 * x30 * x36);
	const FLT x39 = (x36 * x24) + (-1 * x30 * x37);
	const FLT x40 = 1. / sqrt((x39 * x39) + (x38 * x38) + (x34 * x34) + (x35 * x35));
	const FLT x41 = x40 * x38;
	const FLT x42 = x40 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x43 = x40 * x35;
	const FLT x44 = x40 * x39;
	const FLT x45 = x40 * x34;
	out->Pose.Pos[0]=(*_x0).Pose.Pos[0] + (*error_state).Pose.Pos[0];
	out->Pose.Pos[1]=(*_x0).Pose.Pos[1] + (*error_state).Pose.Pos[1];
	out->Pose.Pos[2]=(*_x0).Pose.Pos[2] + (*error_state).Pose.Pos[2];
	out->Pose.Rot[0] = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x11 * x18) +
					   (-1 * x19 * (*_x0).Pose.Rot[2]);
	out->Pose.Rot[1] =
		(x20 * (*_x0).Pose.Rot[1]) + (-1 * x14 * x18) + (x21 * (*_x0).Pose.Rot[0]) + (x22 * (*_x0).Pose.Rot[2]);
	out->Pose.Rot[2] = (x19 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) + (-1 * x22 * (*_x0).Pose.Rot[1]) +
					   (x20 * (*_x0).Pose.Rot[2]);
	out->Pose.Rot[3] =
		(x19 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[0]) + (x15 * x18) + (-1 * x21 * (*_x0).Pose.Rot[2]);
	out->Velocity.Pos[0]=(*_x0).Velocity.Pos[0] + (*error_state).Velocity.Pos[0];
	out->Velocity.Pos[1]=(*_x0).Velocity.Pos[1] + (*error_state).Velocity.Pos[1];
	out->Velocity.Pos[2]=(*_x0).Velocity.Pos[2] + (*error_state).Velocity.Pos[2];
	out->Velocity.AxisAngleRot[0]=(*_x0).Velocity.AxisAngleRot[0] + (*error_state).Velocity.AxisAngleRot[0];
	out->Velocity.AxisAngleRot[1]=(*_x0).Velocity.AxisAngleRot[1] + (*error_state).Velocity.AxisAngleRot[1];
	out->Velocity.AxisAngleRot[2]=(*_x0).Velocity.AxisAngleRot[2] + (*error_state).Velocity.AxisAngleRot[2];
	out->Acc[0]=(*_x0).Acc[0] + (*error_state).Acc[0];
	out->Acc[1]=(*_x0).Acc[1] + (*error_state).Acc[1];
	out->Acc[2]=(*_x0).Acc[2] + (*error_state).Acc[2];
	out->IMUBias.AccScale[0] = (*_x0).IMUBias.AccScale[0] + (*error_state).IMUBias.AccScale[0];
	out->IMUBias.AccScale[1] = (*_x0).IMUBias.AccScale[1] + (*error_state).IMUBias.AccScale[1];
	out->IMUBias.AccScale[2] = (*_x0).IMUBias.AccScale[2] + (*error_state).IMUBias.AccScale[2];
	out->IMUBias.IMUCorrection[0] = (-1 * x44 * (*_x0).IMUBias.IMUCorrection[1]) +
									(x43 * (*_x0).IMUBias.IMUCorrection[0]) +
									(-1 * x41 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x42 * x34);
	out->IMUBias.IMUCorrection[1] = (x44 * (*_x0).IMUBias.IMUCorrection[0]) +
									(-1 * x45 * (*_x0).IMUBias.IMUCorrection[3]) +
									(x43 * (*_x0).IMUBias.IMUCorrection[1]) + (x42 * x38);
	out->IMUBias.IMUCorrection[2] = (x44 * (*_x0).IMUBias.IMUCorrection[3]) +
									(-1 * x41 * (*_x0).IMUBias.IMUCorrection[1]) + (x42 * x35) +
									(x45 * (*_x0).IMUBias.IMUCorrection[0]);
	out->IMUBias.IMUCorrection[3] = (x41 * (*_x0).IMUBias.IMUCorrection[0]) + (x45 * (*_x0).IMUBias.IMUCorrection[1]) +
									(x43 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x42 * x39);
	out->IMUBias.AccBias[0] = (*_x0).IMUBias.AccBias[0] + (*error_state).IMUBias.AccBias[0];
	out->IMUBias.AccBias[1] = (*_x0).IMUBias.AccBias[1] + (*error_state).IMUBias.AccBias[1];
	out->IMUBias.AccBias[2] = (*_x0).IMUBias.AccBias[2] + (*error_state).IMUBias.AccBias[2];
	out->IMUBias.GyroBias[0] = (*_x0).IMUBias.GyroBias[0] + (*error_state).IMUBias.GyroBias[0];
	out->IMUBias.GyroBias[1] = (*_x0).IMUBias.GyroBias[1] + (*error_state).IMUBias.GyroBias[1];
	out->IMUBias.GyroBias[2] = (*_x0).IMUBias.GyroBias[2] + (*error_state).IMUBias.GyroBias[2];
}

// Jacobian of SurviveKalmanModelAddErrorModel wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModelAddErrorModel_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_state) {
	const FLT x0 = 0.5 * (*error_state).Pose.AxisAngleRot[1];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_state).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_state).Pose.AxisAngleRot[2];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = x3 * x8;
	const FLT x13 = x5 * x9;
	const FLT x14 = (x1 * x13) + (x7 * x12);
	const FLT x15 = (x7 * x13) + (x1 * x12);
	const FLT x16 = (x6 * x7) + (-1 * x1 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x15 * x17;
	const FLT x19 = x17 * x16;
	const FLT x20 = -1 * x19;
	const FLT x21 = x14 * x17;
	const FLT x22 = -1 * x21;
	const FLT x23 = x11 * x17;
	const FLT x24 = -1 * x23;
	const FLT x25 = 0.5 * (*error_state).IMUBias.IMUCorrection[1];
	const FLT x26 = cos(x25);
	const FLT x27 = 0.5 * (*error_state).IMUBias.IMUCorrection[0];
	const FLT x28 = sin(x27);
	const FLT x29 = 0.5 * (*error_state).IMUBias.IMUCorrection[2];
	const FLT x30 = sin(x29);
	const FLT x31 = x30 * x28;
	const FLT x32 = sin(x25);
	const FLT x33 = cos(x29);
	const FLT x34 = cos(x27);
	const FLT x35 = x34 * x33;
	const FLT x36 = (x32 * x35) + (x31 * x26);
	const FLT x37 = (x35 * x26) + (x32 * x31);
	const FLT x38 = x33 * x28;
	const FLT x39 = x30 * x34;
	const FLT x40 = (x39 * x26) + (-1 * x32 * x38);
	const FLT x41 = (x38 * x26) + (-1 * x32 * x39);
	const FLT x42 = 1. / sqrt((x41 * x41) + (x36 * x36) + (x40 * x40) + (x37 * x37));
	const FLT x43 = x42 * x37;
	const FLT x44 = x41 * x42;
	const FLT x45 = -1 * x44;
	const FLT x46 = x42 * x36;
	const FLT x47 = -1 * x46;
	const FLT x48 = x40 * x42;
	const FLT x49 = -1 * x48;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x20);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x22);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x24);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x23);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x22);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x24);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x23);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x21);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x20);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT), x43);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT), x45);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT), x47);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT), x49);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT), x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT), x43);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT), x48);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT), x47);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT), x46);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT), x49);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT), x43);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT), x44);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT), x48);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT), x46);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT), x45);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT), x43);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelAddErrorModel wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]] Jacobian of SurviveKalmanModelAddErrorModel
// wrt [(*error_state).Acc[0], (*error_state).Acc[1], (*error_state).Acc[2], (*error_state).IMUBias.AccBias[0],
// (*error_state).IMUBias.AccBias[1], (*error_state).IMUBias.AccBias[2], (*error_state).IMUBias.AccScale[0],
// (*error_state).IMUBias.AccScale[1], (*error_state).IMUBias.AccScale[2], (*error_state).IMUBias.GyroBias[0],
// (*error_state).IMUBias.GyroBias[1], (*error_state).IMUBias.GyroBias[2], (*error_state).IMUBias.IMUCorrection[0],
// (*error_state).IMUBias.IMUCorrection[1], (*error_state).IMUBias.IMUCorrection[2],
// (*error_state).Pose.AxisAngleRot[0], (*error_state).Pose.AxisAngleRot[1], (*error_state).Pose.AxisAngleRot[2],
// (*error_state).Pose.Pos[0], (*error_state).Pose.Pos[1], (*error_state).Pose.Pos[2],
// (*error_state).Velocity.AxisAngleRot[0], (*error_state).Velocity.AxisAngleRot[1],
// (*error_state).Velocity.AxisAngleRot[2], (*error_state).Velocity.Pos[0], (*error_state).Velocity.Pos[1],
// (*error_state).Velocity.Pos[2]]
static inline void SurviveKalmanModelAddErrorModel_jac_error_state(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_state) {
	const FLT x0 = 0.5 * (*error_state).Pose.AxisAngleRot[0];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_state).Pose.AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_state).Pose.AxisAngleRot[1];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = 0.5 * x7;
	const FLT x9 = sin(x2);
	const FLT x10 = sin(x4);
	const FLT x11 = sin(x0);
	const FLT x12 = x11 * x10;
	const FLT x13 = x9 * x12;
	const FLT x14 = 0.5 * x13;
	const FLT x15 = x14 + x8;
	const FLT x16 = x3 * x12;
	const FLT x17 = x5 * x9;
	const FLT x18 = x1 * x17;
	const FLT x19 = x18 + (-1 * x16);
	const FLT x20 = x11 * x17;
	const FLT x21 = x1 * x10;
	const FLT x22 = x3 * x21;
	const FLT x23 = x22 + x20;
	const FLT x24 = x7 + x13;
	const FLT x25 = x9 * x21;
	const FLT x26 = x6 * x11;
	const FLT x27 = x26 + (-1 * x25);
	const FLT x28 = (x24 * x24) + (x27 * x27) + (x19 * x19) + (x23 * x23);
	const FLT x29 = 1. / sqrt(x28);
	const FLT x30 = x29 * (*_x0).Pose.Rot[1];
	const FLT x31 = -1 * x30 * x15;
	const FLT x32 = 1.0 / 2.0 * (1. / (x28 * sqrt(x28)));
	const FLT x33 = x32 * (*_x0).Pose.Rot[1];
	const FLT x34 = 2 * x27;
	const FLT x35 = 0.5 * x26;
	const FLT x36 = -1 * x35;
	const FLT x37 = 0.5 * x25;
	const FLT x38 = x37 + x36;
	const FLT x39 = 2 * x24;
	const FLT x40 = 0.5 * x20;
	const FLT x41 = -0.5 * x22;
	const FLT x42 = x41 + (-1 * x40);
	const FLT x43 = 2 * x19;
	const FLT x44 = 0.5 * x16;
	const FLT x45 = -1 * x44;
	const FLT x46 = 0.5 * x18;
	const FLT x47 = x46 + x45;
	const FLT x48 = 2 * x23;
	const FLT x49 = (x47 * x48) + (x42 * x43) + (x34 * x15) + (x38 * x39);
	const FLT x50 = x49 * x27;
	const FLT x51 = x32 * (*_x0).Pose.Rot[0];
	const FLT x52 = x49 * x24;
	const FLT x53 = x49 * x19;
	const FLT x54 = x32 * (*_x0).Pose.Rot[3];
	const FLT x55 = x29 * (*_x0).Pose.Rot[3];
	const FLT x56 = x55 * x42;
	const FLT x57 = x29 * (*_x0).Pose.Rot[2];
	const FLT x58 = x32 * (*_x0).Pose.Rot[2];
	const FLT x59 = x49 * x23;
	const FLT x60 = x29 * (*_x0).Pose.Rot[0];
	const FLT x61 = -1 * x46;
	const FLT x62 = x61 + x45;
	const FLT x63 = x40 + x41;
	const FLT x64 = -1 * x37;
	const FLT x65 = x36 + x64;
	const FLT x66 = (-1 * x14) + x8;
	const FLT x67 = (x66 * x48) + (x62 * x34) + (x65 * x43) + (x63 * x39);
	const FLT x68 = x67 * x27;
	const FLT x69 = x67 * x24;
	const FLT x70 = x67 * x19;
	const FLT x71 = x66 * x29;
	const FLT x72 = x67 * x23;
	const FLT x73 = x63 * x29;
	const FLT x74 = x44 + x61;
	const FLT x75 = x35 + x64;
	const FLT x76 = (x75 * x48) + (x43 * x15) + (x74 * x39) + (x42 * x34);
	const FLT x77 = x76 * x32;
	const FLT x78 = x77 * x27;
	const FLT x79 = -1 * x42 * x30;
	const FLT x80 = x76 * x51;
	const FLT x81 = x77 * x19;
	const FLT x82 = x55 * x15;
	const FLT x83 = x77 * x23;
	const FLT x84 = x54 * x49;
	const FLT x85 = x57 * x42;
	const FLT x86 = x60 * x15;
	const FLT x87 = x77 * x24;
	const FLT x88 = x77 * (*_x0).Pose.Rot[3];
	const FLT x89 = x60 * x42;
	const FLT x90 = x57 * x15;
	const FLT x91 = 0.5 * (*error_state).IMUBias.IMUCorrection[1];
	const FLT x92 = cos(x91);
	const FLT x93 = 0.5 * (*error_state).IMUBias.IMUCorrection[0];
	const FLT x94 = cos(x93);
	const FLT x95 = 0.5 * (*error_state).IMUBias.IMUCorrection[2];
	const FLT x96 = cos(x95);
	const FLT x97 = x96 * x94;
	const FLT x98 = x92 * x97;
	const FLT x99 = 0.5 * x98;
	const FLT x100 = sin(x91);
	const FLT x101 = sin(x95);
	const FLT x102 = sin(x93);
	const FLT x103 = x101 * x102;
	const FLT x104 = x100 * x103;
	const FLT x105 = 0.5 * x104;
	const FLT x106 = x105 + x99;
	const FLT x107 = x92 * x103;
	const FLT x108 = x97 * x100;
	const FLT x109 = x108 + x107;
	const FLT x110 = x98 + x104;
	const FLT x111 = x96 * x102;
	const FLT x112 = x100 * x111;
	const FLT x113 = x94 * x101;
	const FLT x114 = x92 * x113;
	const FLT x115 = x114 + (-1 * x112);
	const FLT x116 = x100 * x113;
	const FLT x117 = x92 * x111;
	const FLT x118 = x117 + (-1 * x116);
	const FLT x119 = (x118 * x118) + (x115 * x115) + (x109 * x109) + (x110 * x110);
	const FLT x120 = 1. / sqrt(x119);
	const FLT x121 = x120 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x122 = -1 * x106 * x121;
	const FLT x123 = 1.0 / 2.0 * (1. / (x119 * sqrt(x119)));
	const FLT x124 = x123 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x125 = 2 * x118;
	const FLT x126 = 0.5 * x107;
	const FLT x127 = -0.5 * x108;
	const FLT x128 = x127 + (-1 * x126);
	const FLT x129 = 2 * x115;
	const FLT x130 = 0.5 * x112;
	const FLT x131 = -1 * x130;
	const FLT x132 = 0.5 * x114;
	const FLT x133 = x132 + x131;
	const FLT x134 = 2 * x109;
	const FLT x135 = 0.5 * x117;
	const FLT x136 = -1 * x135;
	const FLT x137 = 0.5 * x116;
	const FLT x138 = x137 + x136;
	const FLT x139 = 2 * x110;
	const FLT x140 = (x138 * x139) + (x133 * x134) + (x106 * x125) + (x128 * x129);
	const FLT x141 = x115 * x140;
	const FLT x142 = x120 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x143 = x128 * x142;
	const FLT x144 = x123 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x145 = x110 * x140;
	const FLT x146 = x120 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x147 = x123 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x148 = x140 * x147;
	const FLT x149 = x123 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x150 = x109 * x140;
	const FLT x151 = x120 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x152 = -1 * x132;
	const FLT x153 = x152 + x131;
	const FLT x154 = (-1 * x105) + x99;
	const FLT x155 = -1 * x137;
	const FLT x156 = x136 + x155;
	const FLT x157 = x126 + x127;
	const FLT x158 = (x129 * x156) + (x125 * x153) + (x139 * x157) + (x134 * x154);
	const FLT x159 = x118 * x158;
	const FLT x160 = x110 * x158;
	const FLT x161 = x115 * x158;
	const FLT x162 = x120 * x154;
	const FLT x163 = x149 * x158;
	const FLT x164 = x135 + x155;
	const FLT x165 = x130 + x152;
	const FLT x166 = (x128 * x125) + (x106 * x129) + (x165 * x139) + (x164 * x134);
	const FLT x167 = x118 * x166;
	const FLT x168 = -1 * x121 * x128;
	const FLT x169 = x115 * x166;
	const FLT x170 = x106 * x142;
	const FLT x171 = x109 * x166;
	const FLT x172 = x123 * x171;
	const FLT x173 = x110 * x166;
	const FLT x174 = x118 * x140;
	const FLT x175 = x128 * x146;
	const FLT x176 = x106 * x151;
	const FLT x177 = x120 * x157;
	const FLT x178 = x123 * x159;
	const FLT x179 = x109 * x158;
	const FLT x180 = x128 * x151;
	const FLT x181 = x106 * x146;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x58 * x59) + (x50 * x33) + (x54 * x53) + (-1 * x57 * x47) + x31 + (-1 * x52 * x51) +
							(x60 * x38) + (-1 * x56));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x73 * (*_x0).Pose.Rot[0]) + (x72 * x58) + (-1 * x69 * x51) + (-1 * x71 * (*_x0).Pose.Rot[2]) +
							(x68 * x33) + (x70 * x54) + (-1 * x62 * x30) + (-1 * x65 * x55));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x74 * x60) + (-1 * x75 * x57) + x79 + (x81 * (*_x0).Pose.Rot[3]) + (x83 * (*_x0).Pose.Rot[2]) +
							(-1 * x80 * x24) + (x78 * (*_x0).Pose.Rot[1]) + (-1 * x82));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x86 + (x30 * x38) + (-1 * x52 * x33) + x85 + (-1 * x55 * x47) + (x84 * x23) + (-1 * x53 * x58) +
							(-1 * x50 * x51));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x60 * x62) + (x65 * x57) + (-1 * x69 * x33) + (-1 * x68 * x51) + (x73 * (*_x0).Pose.Rot[1]) +
							(-1 * x70 * x58) + (x72 * x54) + (-1 * x71 * (*_x0).Pose.Rot[3]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x89 + x90 + (x74 * x30) + (x88 * x23) + (-1 * x75 * x55) + (-1 * x80 * x27) +
							(-1 * x87 * (*_x0).Pose.Rot[1]) + (-1 * x81 * (*_x0).Pose.Rot[2]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x57 * x38) + x79 + (-1 * x52 * x58) + (-1 * x84 * x27) + (x60 * x47) + (x53 * x33) + x82 +
							(-1 * x51 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x71 * (*_x0).Pose.Rot[0]) + (-1 * x65 * x30) + (-1 * x68 * x54) + (x70 * x33) +
							(-1 * x69 * x58) + (x73 * (*_x0).Pose.Rot[2]) + (-1 * x72 * x51) + (x62 * x55));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x75 * x60) + (-1 * x87 * (*_x0).Pose.Rot[2]) + (x74 * x57) + x31 + (x81 * (*_x0).Pose.Rot[1]) +
							(-1 * x78 * (*_x0).Pose.Rot[3]) + (-1 * x80 * x23) + x56);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x89 + (-1 * x84 * x24) + (-1 * x59 * x33) + (x47 * x30) + (x50 * x58) + (-1 * x53 * x51) +
							(x55 * x38) + (-1 * x90));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x73 * (*_x0).Pose.Rot[3]) + (-1 * x72 * x33) + (-1 * x62 * x57) + (x71 * (*_x0).Pose.Rot[1]) +
							(-1 * x69 * x54) + (-1 * x70 * x51) + (x60 * x65) + (x68 * x58));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x86 + (x78 * (*_x0).Pose.Rot[2]) + (-1 * x85) + (x75 * x30) + (-1 * x83 * (*_x0).Pose.Rot[1]) +
							(x74 * x55) + (-1 * x88 * x24) + (-1 * x80 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x138 * x151) + (x149 * x150) + (x118 * x148) + (x124 * x141) + x122 + (-1 * x144 * x145) +
							(-1 * x143) + (-1 * x133 * x146));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(-1 * x142 * x156) + (-1 * x121 * x153) + (x147 * x159) + (x109 * x163) +
							(-1 * x162 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x160 * x144) + (x124 * x161) +
							(x151 * x157));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x165 * x151) + (-1 * x173 * x144) + (x172 * (*_x0).IMUBias.IMUCorrection[2]) + x168 +
							(x167 * x147) + (x124 * x169) + (-1 * x170) + (-1 * x164 * x146));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(-1 * x133 * x142) + (-1 * x174 * x144) + x176 + (-1 * x110 * x148) + (x124 * x150) +
							(-1 * x141 * x149) + (x121 * x138) + x175);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x151 * x153) + (x146 * x156) + (-1 * x178 * (*_x0).IMUBias.IMUCorrection[0]) + (x124 * x179) +
							(-1 * x161 * x149) + (-1 * x160 * x147) + (x177 * (*_x0).IMUBias.IMUCorrection[1]) +
							(-1 * x162 * (*_x0).IMUBias.IMUCorrection[3]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x180 + (-1 * x169 * x149) + (x121 * x165) + (-1 * x173 * x147) + (-1 * x164 * x142) + x181 +
							(-1 * x167 * x144) + (x124 * x171));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(-1 * x144 * x150) + (x133 * x151) + (-1 * x124 * x174) + x168 + (-1 * x145 * x149) +
							(x115 * x148) + (x138 * x146) + x170);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x142 * x153) + (x151 * x154) + (x177 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x124 * x159) +
							(-1 * x121 * x156) + (-1 * x179 * x144) + (x161 * x147) + (-1 * x110 * x163));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x143 + (x169 * x147) + (x165 * x146) + (-1 * x124 * x167) +
							(-1 * x172 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x173 * x149) + (x164 * x151) + x122);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(-1 * x181) + x180 + (-1 * x109 * x148) + (-1 * x124 * x145) + (x121 * x133) + (x138 * x142) +
							(x174 * x149) + (-1 * x141 * x144));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x178 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x146 * x153) + (-1 * x161 * x144) +
							(-1 * x124 * x160) + (-1 * x179 * x147) + (x177 * (*_x0).IMUBias.IMUCorrection[3]) +
							(x151 * x156) + (x162 * (*_x0).IMUBias.IMUCorrection[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(-1 * x172 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x169 * x144) + (x167 * x149) +
							(x165 * x142) + (-1 * x175) + (-1 * x124 * x173) + (x121 * x164) + x176);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelAddErrorModel wrt [(*error_state).Acc[0], (*error_state).Acc[1],
// (*error_state).Acc[2], (*error_state).IMUBias.AccBias[0], (*error_state).IMUBias.AccBias[1],
// (*error_state).IMUBias.AccBias[2], (*error_state).IMUBias.AccScale[0], (*error_state).IMUBias.AccScale[1],
// (*error_state).IMUBias.AccScale[2], (*error_state).IMUBias.GyroBias[0], (*error_state).IMUBias.GyroBias[1],
// (*error_state).IMUBias.GyroBias[2], (*error_state).IMUBias.IMUCorrection[0], (*error_state).IMUBias.IMUCorrection[1],
// (*error_state).IMUBias.IMUCorrection[2], (*error_state).Pose.AxisAngleRot[0], (*error_state).Pose.AxisAngleRot[1],
// (*error_state).Pose.AxisAngleRot[2], (*error_state).Pose.Pos[0], (*error_state).Pose.Pos[1],
// (*error_state).Pose.Pos[2], (*error_state).Velocity.AxisAngleRot[0], (*error_state).Velocity.AxisAngleRot[1],
// (*error_state).Velocity.AxisAngleRot[2], (*error_state).Velocity.Pos[0], (*error_state).Velocity.Pos[1],
// (*error_state).Velocity.Pos[2]]
static inline void SurviveKalmanModelPredict(SurviveKalmanModel* out, const FLT t, const SurviveKalmanModel* kalman_model) {
	const FLT x0 = t * (*kalman_model).Acc[0];
	const FLT x1 = 1.0/2.0 * fabs(t);
	const FLT x2 = t * (*kalman_model).Acc[1];
	const FLT x3 = t * (*kalman_model).Acc[2];
	const FLT x4 = t * t;
	const FLT x5 = x4 * ((*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2]);
	const FLT x6 = x4 * ((*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0]);
	const FLT x7 = x4 * ((*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1]);
	const FLT x8 = 1e-10 + x7 + x5 + x6;
	const FLT x9 = sqrt(x8);
	const FLT x10 = 0.5 * x9;
	const FLT x11 = sin(x10);
	const FLT x12 = (1. / x8) * (x11 * x11);
	const FLT x13 = cos(x10);
	const FLT x14 = 1. / sqrt((x6 * x12) + (x13 * x13) + (x5 * x12) + (x7 * x12));
	const FLT x15 = t * (1. / x9) * x14 * x11;
	const FLT x16 = x15 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x17 = x15 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x18 = x14 * x13;
	const FLT x19 = x15 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x20 = x15 * (*kalman_model).Pose.Rot[0];
	out->Pose.Pos[0]=(x0 * x1) + (t * (*kalman_model).Velocity.Pos[0]) + (*kalman_model).Pose.Pos[0];
	out->Pose.Pos[1]=(t * (*kalman_model).Velocity.Pos[1]) + (x2 * x1) + (*kalman_model).Pose.Pos[1];
	out->Pose.Pos[2]=(t * (*kalman_model).Velocity.Pos[2]) + (x1 * x3) + (*kalman_model).Pose.Pos[2];
	out->Pose.Rot[0]=(-1 * x19 * (*kalman_model).Pose.Rot[1]) + (x18 * (*kalman_model).Pose.Rot[0]) + (-1 * x16 * (*kalman_model).Pose.Rot[3]) + (-1 * x17 * (*kalman_model).Pose.Rot[2]);
	out->Pose.Rot[1]=(x20 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x18 * (*kalman_model).Pose.Rot[1]) + (-1 * x16 * (*kalman_model).Pose.Rot[2]) + (x17 * (*kalman_model).Pose.Rot[3]);
	out->Pose.Rot[2]=(-1 * x19 * (*kalman_model).Pose.Rot[3]) + (x18 * (*kalman_model).Pose.Rot[2]) + (x20 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x16 * (*kalman_model).Pose.Rot[1]);
	out->Pose.Rot[3]=(x19 * (*kalman_model).Pose.Rot[2]) + (x18 * (*kalman_model).Pose.Rot[3]) + (x20 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x17 * (*kalman_model).Pose.Rot[1]);
	out->Velocity.Pos[0]=(*kalman_model).Velocity.Pos[0] + x0;
	out->Velocity.Pos[1]=(*kalman_model).Velocity.Pos[1] + x2;
	out->Velocity.Pos[2]=(*kalman_model).Velocity.Pos[2] + x3;
	out->Velocity.AxisAngleRot[0]=(*kalman_model).Velocity.AxisAngleRot[0];
	out->Velocity.AxisAngleRot[1]=(*kalman_model).Velocity.AxisAngleRot[1];
	out->Velocity.AxisAngleRot[2]=(*kalman_model).Velocity.AxisAngleRot[2];
	out->Acc[0]=(*kalman_model).Acc[0];
	out->Acc[1]=(*kalman_model).Acc[1];
	out->Acc[2]=(*kalman_model).Acc[2];
	out->IMUBias = (*kalman_model).IMUBias;
}

// Jacobian of SurviveKalmanModelPredict wrt [t]
static inline void SurviveKalmanModelPredict_jac_t(CnMat* Hx, const FLT t, const SurviveKalmanModel* kalman_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = x0 * ((t) > 0 ? 1 : -1) /* Note: Maybe not valid for == 0 */;
	const FLT x2 = fabs(t);
	const FLT x3 = 1.0/2.0 * x2;
	const FLT x4 = t * t;
	const FLT x5 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x6 = x4 * x5;
	const FLT x7 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x8 = x4 * x7;
	const FLT x9 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x10 = x4 * x9;
	const FLT x11 = 1e-10 + x10 + x6 + x8;
	const FLT x12 = 1. / x11;
	const FLT x13 = sqrt(x11);
	const FLT x14 = 0.5 * x13;
	const FLT x15 = sin(x14);
	const FLT x16 = x15 * x15;
	const FLT x17 = x12 * x16;
	const FLT x18 = cos(x14);
	const FLT x19 = (x8 * x17) + (x6 * x17) + (x18 * x18) + (x10 * x17);
	const FLT x20 = 1. / sqrt(x19);
	const FLT x21 = x15 * (1. / x13);
	const FLT x22 = x21 * (*kalman_model).Pose.Rot[1];
	const FLT x23 = x22 * x20;
	const FLT x24 = x18 * (*kalman_model).Pose.Rot[2];
	const FLT x25 = 2 * t;
	const FLT x26 = x9 * x25;
	const FLT x27 = x5 * x25;
	const FLT x28 = x7 * x25;
	const FLT x29 = x28 + x26 + x27;
	const FLT x30 = 0.25 * x29;
	const FLT x31 = t * x30 * x12;
	const FLT x32 = x31 * x24;
	const FLT x33 = x32 * x20;
	const FLT x34 = x15 * (1. / (x11 * sqrt(x11)));
	const FLT x35 = x0 * x34 * x29;
	const FLT x36 = x35 * x20;
	const FLT x37 = x36 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x38 = (1. / (x11 * x11)) * x16;
	const FLT x39 = x38 * x29;
	const FLT x40 = 0.5 * x18;
	const FLT x41 = x40 * x29;
	const FLT x42 = x41 * x34;
	const FLT x43 = x29 * x10;
	const FLT x44 = (1. / (x19 * sqrt(x19))) * ((x6 * x42) + (x26 * x17) + (-1 * x6 * x39) + (x40 * x43 * x34) + (x27 * x17) + (x28 * x17) + (-1 * x43 * x38) + (-1 * x8 * x39) + (x8 * x42) + (-1 * x41 * x21));
	const FLT x45 = x0 * x44;
	const FLT x46 = x45 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x47 = x46 * x21;
	const FLT x48 = x20 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x49 = x48 * (*kalman_model).Pose.Rot[3];
	const FLT x50 = x31 * x18;
	const FLT x51 = x45 * x21;
	const FLT x52 = x51 * (*kalman_model).Pose.Rot[3];
	const FLT x53 = x50 * x20;
	const FLT x54 = x53 * (*kalman_model).Pose.Rot[1];
	const FLT x55 = 1.0/2.0 * x44;
	const FLT x56 = x55 * x18;
	const FLT x57 = x48 * x21;
	const FLT x58 = x20 * x21;
	const FLT x59 = x58 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x60 = x58 * (*kalman_model).Pose.Rot[0];
	const FLT x61 = x45 * x22;
	const FLT x62 = x36 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x63 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[0];
	const FLT x64 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[3];
	const FLT x65 = x51 * (*kalman_model).Pose.Rot[2];
	const FLT x66 = x48 * x35;
	const FLT x67 = x58 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x68 = x50 * x48;
	const FLT x69 = x58 * x30;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 0, (x3 * (*kalman_model).Acc[0]) + (*kalman_model).Velocity.Pos[0] + (x1 * (*kalman_model).Acc[0]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 0, (x3 * (*kalman_model).Acc[1]) + (*kalman_model).Velocity.Pos[1] + (x1 * (*kalman_model).Acc[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 0, (x3 * (*kalman_model).Acc[2]) + (*kalman_model).Velocity.Pos[2] + (x1 * (*kalman_model).Acc[2]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), 0, (-1 * x60 * x30) + (x47 * (*kalman_model).Pose.Rot[2]) + (-1 * x57 * (*kalman_model).Pose.Rot[3]) + (-1 * x50 * x49) + (x61 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x59 * (*kalman_model).Pose.Rot[2]) + (-1 * x23 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x33 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x52 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x62 * (*kalman_model).Pose.Rot[1]) + (-1 * x56 * (*kalman_model).Pose.Rot[0]) + (x49 * x35) + (x37 * (*kalman_model).Pose.Rot[2]) + (-1 * x54 * (*kalman_model).Velocity.AxisAngleRot[0]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), 0, (x59 * (*kalman_model).Pose.Rot[3]) + (-1 * x47 * (*kalman_model).Pose.Rot[3]) + (-1 * x56 * (*kalman_model).Pose.Rot[1]) + (x66 * (*kalman_model).Pose.Rot[2]) + (x64 * x53) + (-1 * x48 * x32) + (x63 * x53) + (x60 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x57 * (*kalman_model).Pose.Rot[2]) + (-1 * x62 * (*kalman_model).Pose.Rot[0]) + (x65 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x30 * x23) + (-1 * x63 * x51) + (-1 * x64 * x36));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), 0, (-1 * x53 * (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[3]) + (-1 * x37 * (*kalman_model).Pose.Rot[0]) + (-1 * x47 * (*kalman_model).Pose.Rot[0]) + (x52 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x55 * x24) + (x53 * (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[0]) + (x60 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x61 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x68 * (*kalman_model).Pose.Rot[1]) + (-1 * x69 * (*kalman_model).Pose.Rot[2]) + (x48 * x22) + (x62 * (*kalman_model).Pose.Rot[3]) + (-1 * x67 * (*kalman_model).Pose.Rot[3]) + (-1 * x66 * (*kalman_model).Pose.Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), 0, (x33 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x56 * (*kalman_model).Pose.Rot[3]) + (-1 * x66 * (*kalman_model).Pose.Rot[0]) + (-1 * x51 * (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Pose.Rot[0]) + (-1 * x65 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x46 * x22) + (x67 * (*kalman_model).Pose.Rot[2]) + (-1 * x54 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x62 * (*kalman_model).Pose.Rot[2]) + (-1 * x69 * (*kalman_model).Pose.Rot[3]) + (x37 * (*kalman_model).Pose.Rot[1]) + (x68 * (*kalman_model).Pose.Rot[0]) + (-1 * x23 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x57 * (*kalman_model).Pose.Rot[0]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 0, (*kalman_model).Acc[0]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 0, (*kalman_model).Acc[1]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 0, (*kalman_model).Acc[2]);
}

// Full version Jacobian of SurviveKalmanModelPredict wrt [t]
// Jacobian of SurviveKalmanModelPredict wrt [(*kalman_model).Acc[0], (*kalman_model).Acc[1], (*kalman_model).Acc[2],
// (*kalman_model).IMUBias.AccBias[0], (*kalman_model).IMUBias.AccBias[1], (*kalman_model).IMUBias.AccBias[2],
// (*kalman_model).IMUBias.AccScale[0], (*kalman_model).IMUBias.AccScale[1], (*kalman_model).IMUBias.AccScale[2],
// (*kalman_model).IMUBias.GyroBias[0], (*kalman_model).IMUBias.GyroBias[1], (*kalman_model).IMUBias.GyroBias[2],
// (*kalman_model).IMUBias.IMUCorrection[0], (*kalman_model).IMUBias.IMUCorrection[1],
// (*kalman_model).IMUBias.IMUCorrection[2], (*kalman_model).IMUBias.IMUCorrection[3], (*kalman_model).Pose.Pos[0],
// (*kalman_model).Pose.Pos[1], (*kalman_model).Pose.Pos[2], (*kalman_model).Pose.Rot[0], (*kalman_model).Pose.Rot[1],
// (*kalman_model).Pose.Rot[2], (*kalman_model).Pose.Rot[3], (*kalman_model).Velocity.AxisAngleRot[0],
// (*kalman_model).Velocity.AxisAngleRot[1], (*kalman_model).Velocity.AxisAngleRot[2], (*kalman_model).Velocity.Pos[0],
// (*kalman_model).Velocity.Pos[1], (*kalman_model).Velocity.Pos[2]]
static inline void SurviveKalmanModelPredict_jac_kalman_model(CnMat* Hx, const FLT t, const SurviveKalmanModel* kalman_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = fabs(t) * x0;
	const FLT x2 = t * t;
	const FLT x3 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x4 = x2 * x3;
	const FLT x5 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x6 = x2 * x5;
	const FLT x7 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x8 = x2 * x7;
	const FLT x9 = 1e-10 + x8 + x4 + x6;
	const FLT x10 = 1. / x9;
	const FLT x11 = sqrt(x9);
	const FLT x12 = 0.5 * x11;
	const FLT x13 = sin(x12);
	const FLT x14 = x13 * x13;
	const FLT x15 = x14 * x10;
	const FLT x16 = cos(x12);
	const FLT x17 = (x6 * x15) + (x16 * x16) + (x4 * x15) + (x8 * x15);
	const FLT x18 = 1. / sqrt(x17);
	const FLT x19 = x18 * x16;
	const FLT x20 = x13 * x18;
	const FLT x21 = 1. / x11;
	const FLT x22 = t * x21;
	const FLT x23 = x22 * x20;
	const FLT x24 = x23 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x25 = -1 * x24;
	const FLT x26 = x23 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x27 = -1 * x26;
	const FLT x28 = x23 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x29 = -1 * x28;
	const FLT x30 = t * t * t;
	const FLT x31 = 0.5 * x30 * x10 * x19;
	const FLT x32 = x31 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x33 = x32 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x34 = x33 * (*kalman_model).Pose.Rot[2];
	const FLT x35 = 1. / (x17 * sqrt(x17));
	const FLT x36 = 2 * x15;
	const FLT x37 = x2 * x36;
	const FLT x38 = t * t * t * t;
	const FLT x39 = x38 * ((*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Velocity.AxisAngleRot[0]);
	const FLT x40 = 2 * (1. / (x9 * x9)) * x14;
	const FLT x41 = 1. / (x9 * sqrt(x9));
	const FLT x42 = 1.0 * x13 * x16;
	const FLT x43 = x41 * x42;
	const FLT x44 = x43 * x38;
	const FLT x45 = x3 * x44;
	const FLT x46 = x40 * x38;
	const FLT x47 = x3 * x46;
	const FLT x48 = x7 * x46;
	const FLT x49 = x7 * x44;
	const FLT x50 = x42 * x21;
	const FLT x51 = x2 * x50;
	const FLT x52 = ((-1 * x51 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x49 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x48 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x40 * x39) + (x37 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x43 * x39) + (x45 * (*kalman_model).Velocity.AxisAngleRot[0]) + (-1 * x47 * (*kalman_model).Velocity.AxisAngleRot[0])) * x35;
	const FLT x53 = x0 * x21 * x13;
	const FLT x54 = x53 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x55 = x54 * x52;
	const FLT x56 = x20 * (*kalman_model).Pose.Rot[0];
	const FLT x57 = 0.5 * x21;
	const FLT x58 = x2 * x57;
	const FLT x59 = x58 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x60 = x53 * x52;
	const FLT x61 = x60 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x62 = x20 * (*kalman_model).Pose.Rot[2];
	const FLT x63 = x41 * x30;
	const FLT x64 = x63 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x65 = x64 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x66 = x62 * x65;
	const FLT x67 = 1.0/2.0 * x16;
	const FLT x68 = x67 * x52;
	const FLT x69 = x5 * x31;
	const FLT x70 = x23 * (*kalman_model).Pose.Rot[1];
	const FLT x71 = -1 * x70;
	const FLT x72 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[2];
	const FLT x73 = x5 * x63;
	const FLT x74 = x20 * (*kalman_model).Pose.Rot[1];
	const FLT x75 = x20 * (*kalman_model).Pose.Rot[3];
	const FLT x76 = x64 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x77 = x31 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x78 = x77 * (*kalman_model).Pose.Rot[3];
	const FLT x79 = (-1 * x78 * (*kalman_model).Velocity.AxisAngleRot[0]) + (x75 * x76);
	const FLT x80 = x23 * (*kalman_model).Pose.Rot[2];
	const FLT x81 = -1 * x80;
	const FLT x82 = x7 * x63;
	const FLT x83 = x78 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x84 = x5 * x46;
	const FLT x85 = x5 * x44;
	const FLT x86 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x87 = ((x37 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x86 * x46) + (-1 * x51 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x84 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x86 * x44) + (x85 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x47 * (*kalman_model).Velocity.AxisAngleRot[1]) + (x45 * (*kalman_model).Velocity.AxisAngleRot[1])) * x35;
	const FLT x88 = x87 * x53;
	const FLT x89 = x88 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x90 = x7 * x31;
	const FLT x91 = x58 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x92 = x75 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x93 = x63 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x94 = x93 * x92;
	const FLT x95 = x87 * x54;
	const FLT x96 = x87 * x67;
	const FLT x97 = x74 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x98 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[1];
	const FLT x99 = (-1 * x98 * x32) + (x64 * x97);
	const FLT x100 = x74 * x76;
	const FLT x101 = x2 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x102 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x103 = ((-1 * x48 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x49 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x46 * x102) + (-1 * x50 * x101) + (x85 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x84 * (*kalman_model).Velocity.AxisAngleRot[2]) + (x36 * x101) + (x44 * x102)) * x35;
	const FLT x104 = x103 * (*kalman_model).Pose.Rot[3];
	const FLT x105 = x53 * x104;
	const FLT x106 = x53 * x103;
	const FLT x107 = x106 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x108 = x3 * x63;
	const FLT x109 = x23 * (*kalman_model).Pose.Rot[3];
	const FLT x110 = -1 * x109;
	const FLT x111 = x57 * x101;
	const FLT x112 = x67 * x103;
	const FLT x113 = x3 * x31;
	const FLT x114 = x77 * x98;
	const FLT x115 = (*kalman_model).Velocity.AxisAngleRot[2] * (*kalman_model).Pose.Rot[2];
	const FLT x116 = x93 * (*kalman_model).Velocity.AxisAngleRot[1];
	const FLT x117 = (x62 * x116) + (-1 * x32 * x115);
	const FLT x118 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[3];
	const FLT x119 = x33 * (*kalman_model).Pose.Rot[3];
	const FLT x120 = x76 * x62;
	const FLT x121 = x75 * x65;
	const FLT x122 = x31 * (*kalman_model).Velocity.AxisAngleRot[0];
	const FLT x123 = x115 * x122;
	const FLT x124 = x56 * x22;
	const FLT x125 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[0];
	const FLT x126 = (x122 * x125) + (-1 * x65 * x56);
	const FLT x127 = (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[0];
	const FLT x128 = (x77 * x127) + (-1 * x76 * x56);
	const FLT x129 = x67 * (*kalman_model).Pose.Rot[2];
	const FLT x130 = (*kalman_model).Velocity.AxisAngleRot[1] * (*kalman_model).Pose.Rot[1];
	const FLT x131 = x77 * x130;
	const FLT x132 = x93 * x97;
	const FLT x133 = x106 * (*kalman_model).Velocity.AxisAngleRot[2];
	const FLT x134 = (x77 * x125) + (-1 * x56 * x116);
	const FLT x135 = x54 * (*kalman_model).Pose.Rot[2];
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x25);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x29);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x79 + (x72 * x60) + x71 + (-1 * x69 * (*kalman_model).Pose.Rot[1]) + (-1 * x68 * (*kalman_model).Pose.Rot[0]) + (x55 * (*kalman_model).Pose.Rot[1]) + (-1 * x34) + (x73 * x74) + (-1 * x56 * x59) + (x61 * (*kalman_model).Pose.Rot[3]) + x66);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), (x95 * (*kalman_model).Pose.Rot[1]) + x94 + (x82 * x62) + (-1 * x83) + (x88 * x72) + (-1 * x90 * (*kalman_model).Pose.Rot[2]) + x99 + (-1 * x96 * (*kalman_model).Pose.Rot[0]) + (-1 * x56 * x91) + x81 + (x89 * (*kalman_model).Pose.Rot[3]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), (x98 * x106) + (-1 * x113 * (*kalman_model).Pose.Rot[3]) + (-1 * x56 * x111) + (-1 * x114) + (x105 * (*kalman_model).Velocity.AxisAngleRot[2]) + (-1 * x112 * (*kalman_model).Pose.Rot[0]) + (x75 * x108) + x100 + x117 + (x107 * (*kalman_model).Pose.Rot[2]) + x110);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x24);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x29);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x26);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x120 + (x69 * (*kalman_model).Pose.Rot[0]) + (-1 * x123) + (-1 * x73 * x56) + x119 + (-1 * x121) + (-1 * x55 * (*kalman_model).Pose.Rot[0]) + (-1 * x60 * x118) + (-1 * x74 * x59) + x124 + (-1 * x68 * (*kalman_model).Pose.Rot[1]) + (x60 * x115));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x126 + x117 + (-1 * x88 * x118) + x109 + (x88 * x115) + (-1 * x95 * (*kalman_model).Pose.Rot[0]) + (-1 * x96 * (*kalman_model).Pose.Rot[1]) + (x90 * (*kalman_model).Pose.Rot[3]) + (-1 * x58 * x97) + (-1 * x82 * x75));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x128 + (-1 * x105 * (*kalman_model).Velocity.AxisAngleRot[1]) + (-1 * x113 * (*kalman_model).Pose.Rot[2]) + (-1 * x112 * (*kalman_model).Pose.Rot[1]) + (-1 * x94) + (-1 * x74 * x111) + (x106 * x115) + x83 + (-1 * x106 * x127) + (x62 * x108) + x81);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x26);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x28);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x25);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x126 + (-1 * x62 * x59) + (-1 * x100) + (-1 * x69 * (*kalman_model).Pose.Rot[3]) + (-1 * x52 * x129) + x110 + (-1 * x60 * x125) + (x55 * (*kalman_model).Pose.Rot[3]) + x114 + (x73 * x75) + (-1 * x61 * (*kalman_model).Pose.Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), (x95 * (*kalman_model).Pose.Rot[3]) + x131 + (-1 * x87 * x129) + (-1 * x88 * x125) + (-1 * x82 * x56) + (-1 * x119) + x121 + (-1 * x62 * x91) + (x90 * (*kalman_model).Pose.Rot[0]) + (-1 * x132) + x124 + (-1 * x89 * (*kalman_model).Pose.Rot[1]));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x79 + x134 + (-1 * x62 * x111) + (-1 * x133 * (*kalman_model).Pose.Rot[1]) + (x54 * x104) + (-1 * x107 * (*kalman_model).Pose.Rot[0]) + (x113 * (*kalman_model).Pose.Rot[1]) + x70 + (-1 * x74 * x108) + (-1 * x103 * x129));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x28);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x27);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x24);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x128 + x80 + (x69 * (*kalman_model).Pose.Rot[2]) + (-1 * x68 * (*kalman_model).Pose.Rot[3]) + (-1 * x73 * x62) + x99 + (x60 * x130) + (-1 * x52 * x135) + (-1 * x61 * (*kalman_model).Pose.Rot[0]) + (-1 * x75 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x134 + x34 + (x82 * x74) + (-1 * x58 * x92) + x71 + (-1 * x87 * x135) + (-1 * x89 * (*kalman_model).Pose.Rot[0]) + (-1 * x96 * (*kalman_model).Pose.Rot[3]) + (-1 * x66) + (-1 * x90 * (*kalman_model).Pose.Rot[1]) + (x88 * x130));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), (x113 * (*kalman_model).Pose.Rot[0]) + (-1 * x120) + (-1 * x131) + x123 + (-1 * x67 * x104) + (-1 * x133 * (*kalman_model).Pose.Rot[0]) + x132 + (-1 * x75 * x111) + (-1 * x106 * (*kalman_model).Velocity.AxisAngleRot[0] * (*kalman_model).Pose.Rot[2]) + x124 + (x107 * (*kalman_model).Pose.Rot[1]) + (-1 * x56 * x108));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelPredict wrt [(*kalman_model).Acc[0], (*kalman_model).Acc[1],
// (*kalman_model).Acc[2], (*kalman_model).IMUBias.AccBias[0], (*kalman_model).IMUBias.AccBias[1],
// (*kalman_model).IMUBias.AccBias[2], (*kalman_model).IMUBias.AccScale[0], (*kalman_model).IMUBias.AccScale[1],
// (*kalman_model).IMUBias.AccScale[2], (*kalman_model).IMUBias.GyroBias[0], (*kalman_model).IMUBias.GyroBias[1],
// (*kalman_model).IMUBias.GyroBias[2], (*kalman_model).IMUBias.IMUCorrection[0],
// (*kalman_model).IMUBias.IMUCorrection[1], (*kalman_model).IMUBias.IMUCorrection[2],
// (*kalman_model).IMUBias.IMUCorrection[3], (*kalman_model).Pose.Pos[0], (*kalman_model).Pose.Pos[1],
// (*kalman_model).Pose.Pos[2], (*kalman_model).Pose.Rot[0], (*kalman_model).Pose.Rot[1], (*kalman_model).Pose.Rot[2],
// (*kalman_model).Pose.Rot[3], (*kalman_model).Velocity.AxisAngleRot[0], (*kalman_model).Velocity.AxisAngleRot[1],
// (*kalman_model).Velocity.AxisAngleRot[2], (*kalman_model).Velocity.Pos[0], (*kalman_model).Velocity.Pos[1],
// (*kalman_model).Velocity.Pos[2]]
static inline void AxisAngleFlip(CnMat* out, const FLT* _x0) {
	const FLT _x00 = _x0[0];
	const FLT _x01 = _x0[1];
	const FLT _x02 = _x0[2];
	const FLT x0 = sqrt(1e-10 + (_x01 * _x01) + (_x02 * _x02) + (_x00 * _x00));
	const FLT x1 = (1. / x0) * (-6.28318530717959 + x0);
	cnMatrixOptionalSet(out, 0, 0, x1 * _x00);
	cnMatrixOptionalSet(out, 1, 0, x1 * _x01);
	cnMatrixOptionalSet(out, 2, 0, x1 * _x02);
}

// Jacobian of AxisAngleFlip wrt [_x00, _x01, _x02]
static inline void AxisAngleFlip_jac_x0(CnMat* Hx, const FLT* _x0) {
	const FLT _x00 = _x0[0];
	const FLT _x01 = _x0[1];
	const FLT _x02 = _x0[2];
	const FLT x0 = _x00 * _x00;
	const FLT x1 = 1e-10 + (_x01 * _x01) + (_x02 * _x02) + x0;
	const FLT x2 = 1. / x1;
	const FLT x3 = sqrt(x1);
	const FLT x4 = -6.28318530717959 + x3;
	const FLT x5 = (1. / (x1 * sqrt(x1))) * x4;
	const FLT x6 = x2 * _x00;
	const FLT x7 = x5 * _x00;
	cnMatrixOptionalSet(Hx, 0, 0, (-1 * x0 * x5) + (x0 * x2) + (x4 * (1. / x3)));
	cnMatrixOptionalSet(Hx, 0, 1, (-1 * x7 * _x01) + (x6 * _x01));
	cnMatrixOptionalSet(Hx, 0, 2, (-1 * x7 * _x02) + (x6 * _x02));
}

// Full version Jacobian of AxisAngleFlip wrt [_x00, _x01, _x02]

static inline void AxisAngleFlip_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT* _x0) {
    if(hx != 0) { 
        AxisAngleFlip(hx, _x0);
    }
    if(Hx != 0) { 
        AxisAngleFlip_jac_x0(Hx, _x0);
    }
}
static inline void SurviveKalmanModelErrorPredict(SurviveKalmanErrorModel* out, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = t * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x1 = 1.0/2.0 * fabs(t);
	const FLT x2 = t * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x3 = t * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x4 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x8 = sin(x7);
	const FLT x9 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x10 = cos(x9);
	const FLT x11 = x8 * x10;
	const FLT x12 = sin(x9);
	const FLT x13 = cos(x5);
	const FLT x14 = cos(x7);
	const FLT x15 = x14 * x13;
	const FLT x16 = (x15 * x12) + (-1 * x6 * x11);
	const FLT x17 = x8 * x12;
	const FLT x18 = (x15 * x10) + (x6 * x17);
	const FLT x19 = x6 * x14;
	const FLT x20 = (x13 * x11) + (x12 * x19);
	const FLT x21 = (x10 * x19) + (-1 * x13 * x17);
	const FLT x22 = 1. / sqrt((x20 * x20) + (x21 * x21) + (x16 * x16) + (x18 * x18));
	const FLT x23 = x22 * x18;
	const FLT x24 = x22 * x21;
	const FLT x25 = x22 * x16;
	const FLT x26 = x22 * x20;
	const FLT x27 = (x26 * (*_x0).Pose.Rot[1]) + (x25 * (*_x0).Pose.Rot[0]) + (x23 * (*_x0).Pose.Rot[3]) +
					(-1 * x24 * (*_x0).Pose.Rot[2]);
	const FLT x28 = t * t;
	const FLT x29 = (x4 * x4) * x28;
	const FLT x30 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x31 = (x30 * x30) * x28;
	const FLT x32 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x33 = (x32 * x32) * x28;
	const FLT x34 = 1e-10 + x33 + x29 + x31;
	const FLT x35 = sqrt(x34);
	const FLT x36 = 0.5 * x35;
	const FLT x37 = sin(x36);
	const FLT x38 = (1. / x34) * (x37 * x37);
	const FLT x39 = cos(x36);
	const FLT x40 = 1. / sqrt((x39 * x39) + (x31 * x38) + (x38 * x29) + (x33 * x38));
	const FLT x41 = t * x40 * (1. / x35) * x37;
	const FLT x42 = x41 * x27;
	const FLT x43 = (x24 * (*_x0).Pose.Rot[3]) + (-1 * x25 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[2]) +
					(x26 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x41 * x43;
	const FLT x45 = (x23 * (*_x0).Pose.Rot[0]) + (-1 * x24 * (*_x0).Pose.Rot[1]) + (-1 * x25 * (*_x0).Pose.Rot[3]) +
					(-1 * x26 * (*_x0).Pose.Rot[2]);
	const FLT x46 = x40 * x39;
	const FLT x47 = (x23 * (*_x0).Pose.Rot[1]) + (x25 * (*_x0).Pose.Rot[2]) + (-1 * x26 * (*_x0).Pose.Rot[3]) +
					(x24 * (*_x0).Pose.Rot[0]);
	const FLT x48 = x41 * x47;
	const FLT x49 = (-1 * x48 * x30) + (x45 * x46) + (-1 * x4 * x42) + (-1 * x44 * x32);
	const FLT x50 = x41 * x45;
	const FLT x51 = (x50 * x30) + (x42 * x32) + (-1 * x4 * x44) + (x46 * x47);
	const FLT x52 = (x44 * x30) + (x46 * x27) + (x4 * x50) + (-1 * x48 * x32);
	const FLT x53 = (-1 * x42 * x30) + (x50 * x32) + (x43 * x46) + (x4 * x48);
	const FLT x54 = (x52 * (*_x0).Pose.Rot[0]) + (-1 * x53 * (*_x0).Pose.Rot[1]) + (-1 * x49 * (*_x0).Pose.Rot[3]) +
					(x51 * (*_x0).Pose.Rot[2]);
	const FLT x55 = (x52 * (*_x0).Pose.Rot[1]) + (x53 * (*_x0).Pose.Rot[0]) + (-1 * x51 * (*_x0).Pose.Rot[3]) +
					(-1 * x49 * (*_x0).Pose.Rot[2]);
	const FLT x56 = (-1 * x49 * (*_x0).Pose.Rot[1]) + (x53 * (*_x0).Pose.Rot[3]) + (-1 * x52 * (*_x0).Pose.Rot[2]) +
					(x51 * (*_x0).Pose.Rot[0]);
	const FLT x57 = (x51 * (*_x0).Pose.Rot[1]) + (x49 * (*_x0).Pose.Rot[0]) + (x52 * (*_x0).Pose.Rot[3]) +
					(x53 * (*_x0).Pose.Rot[2]);
	const FLT x58 = x55 * x55;
	const FLT x59 = 0.5 * (*error_model).IMUBias.IMUCorrection[0];
	const FLT x60 = sin(x59);
	const FLT x61 = 0.5 * (*error_model).IMUBias.IMUCorrection[1];
	const FLT x62 = sin(x61);
	const FLT x63 = 0.5 * (*error_model).IMUBias.IMUCorrection[2];
	const FLT x64 = cos(x63);
	const FLT x65 = x64 * x62;
	const FLT x66 = cos(x59);
	const FLT x67 = sin(x63);
	const FLT x68 = cos(x61);
	const FLT x69 = x67 * x68;
	const FLT x70 = (x66 * x69) + (-1 * x60 * x65);
	const FLT x71 = (x65 * x66) + (x60 * x69);
	const FLT x72 = x62 * x67;
	const FLT x73 = x64 * x68;
	const FLT x74 = (x73 * x66) + (x72 * x60);
	const FLT x75 = (x73 * x60) + (-1 * x72 * x66);
	const FLT x76 = 1. / sqrt((x75 * x75) + (x70 * x70) + (x74 * x74) + (x71 * x71));
	const FLT x77 = x71 * x76;
	const FLT x78 = x70 * x76;
	const FLT x79 = x75 * x76;
	const FLT x80 = x76 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x81 = (x80 * x74) + (-1 * x77 * (*_x0).IMUBias.IMUCorrection[3]) +
					(x79 * (*_x0).IMUBias.IMUCorrection[0]) + (x78 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x82 = x74 * x76;
	const FLT x83 = (-1 * x80 * x75) + (-1 * x78 * (*_x0).IMUBias.IMUCorrection[3]) +
					(x82 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x77 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x84 = (-1 * x78 * (*_x0).IMUBias.IMUCorrection[1]) + (x82 * (*_x0).IMUBias.IMUCorrection[2]) +
					(x79 * (*_x0).IMUBias.IMUCorrection[3]) + (x77 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x85 = (x77 * (*_x0).IMUBias.IMUCorrection[1]) + (x78 * (*_x0).IMUBias.IMUCorrection[0]) +
					(-1 * x79 * (*_x0).IMUBias.IMUCorrection[2]) + (x82 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x86 = (x85 * (*_x0).IMUBias.IMUCorrection[1]) + (x84 * (*_x0).IMUBias.IMUCorrection[0]) +
					(-1 * x81 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x83 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x87 = (-1 * x84 * (*_x0).IMUBias.IMUCorrection[1]) + (x85 * (*_x0).IMUBias.IMUCorrection[0]) +
					(-1 * x83 * (*_x0).IMUBias.IMUCorrection[3]) + (x81 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x88 = (x81 * (*_x0).IMUBias.IMUCorrection[1]) + (x83 * (*_x0).IMUBias.IMUCorrection[0]) +
					(x84 * (*_x0).IMUBias.IMUCorrection[2]) + (x85 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x89 = (-1 * x83 * (*_x0).IMUBias.IMUCorrection[1]) + (x84 * (*_x0).IMUBias.IMUCorrection[3]) +
					(x81 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x85 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x90 = x86 * x86;
	out->Pose.Pos[0]=(t * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*error_model).Pose.Pos[0] + (x0 * x1);
	out->Pose.Pos[1]=(t * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + (*error_model).Pose.Pos[1] + (x2 * x1);
	out->Pose.Pos[2]=(t * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + (*error_model).Pose.Pos[2] + (x1 * x3);
	out->Pose.AxisAngleRot[0] = atan2(2 * ((x57 * x56) + (x54 * x55)), 1 + (-2 * ((x56 * x56) + x58)));
	out->Pose.AxisAngleRot[1] = asin(2 * ((x57 * x55) + (-1 * x54 * x56)));
	out->Pose.AxisAngleRot[2] = atan2(2 * ((x54 * x57) + (x56 * x55)), 1 + (-2 * (x58 + (x54 * x54))));
	out->Velocity.Pos[0]=x0 + (*error_model).Velocity.Pos[0];
	out->Velocity.Pos[1]=(*error_model).Velocity.Pos[1] + x2;
	out->Velocity.Pos[2]=x3 + (*error_model).Velocity.Pos[2];
	out->Velocity.AxisAngleRot[0]=(*error_model).Velocity.AxisAngleRot[0];
	out->Velocity.AxisAngleRot[1]=(*error_model).Velocity.AxisAngleRot[1];
	out->Velocity.AxisAngleRot[2]=(*error_model).Velocity.AxisAngleRot[2];
	out->Acc[0]=(*error_model).Acc[0];
	out->Acc[1]=(*error_model).Acc[1];
	out->Acc[2]=(*error_model).Acc[2];
	out->IMUBias.AccScale[0] = (*error_model).IMUBias.AccScale[0];
	out->IMUBias.AccScale[1] = (*error_model).IMUBias.AccScale[1];
	out->IMUBias.AccScale[2] = (*error_model).IMUBias.AccScale[2];
	out->IMUBias.IMUCorrection[0] = atan2(2 * ((x88 * x89) + (x86 * x87)), 1 + (-2 * ((x89 * x89) + x90)));
	out->IMUBias.IMUCorrection[1] = asin(2 * ((x88 * x86) + (-1 * x89 * x87)));
	out->IMUBias.IMUCorrection[2] = atan2(2 * ((x88 * x87) + (x89 * x86)), 1 + (-2 * (x90 + (x87 * x87))));
	out->IMUBias.AccBias[0] = (*error_model).IMUBias.AccBias[0];
	out->IMUBias.AccBias[1] = (*error_model).IMUBias.AccBias[1];
	out->IMUBias.AccBias[2] = (*error_model).IMUBias.AccBias[2];
	out->IMUBias.GyroBias[0] = (*error_model).IMUBias.GyroBias[0];
	out->IMUBias.GyroBias[1] = (*error_model).IMUBias.GyroBias[1];
	out->IMUBias.GyroBias[2] = (*error_model).IMUBias.GyroBias[2];
}

// Jacobian of SurviveKalmanModelErrorPredict wrt [t]
static inline void SurviveKalmanModelErrorPredict_jac_t(CnMat* Hx, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = (*_x0).Acc[0] + (*error_model).Acc[0];
	const FLT x1 = 1.0/2.0 * t;
	const FLT x2 = x1 * ((t) > 0 ? 1 : -1) /* Note: Maybe not valid for == 0 */;
	const FLT x3 = fabs(t);
	const FLT x4 = 1.0/2.0 * x3;
	const FLT x5 = (*_x0).Acc[1] + (*error_model).Acc[1];
	const FLT x6 = (*_x0).Acc[2] + (*error_model).Acc[2];
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x8 = sin(x7);
	const FLT x9 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x10 = sin(x9);
	const FLT x11 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x12 = cos(x11);
	const FLT x13 = x12 * x10;
	const FLT x14 = cos(x9);
	const FLT x15 = cos(x7);
	const FLT x16 = sin(x11);
	const FLT x17 = x15 * x16;
	const FLT x18 = (x14 * x17) + (-1 * x8 * x13);
	const FLT x19 = x8 * x16;
	const FLT x20 = x14 * x12;
	const FLT x21 = (x20 * x15) + (x10 * x19);
	const FLT x22 = (x15 * x13) + (x14 * x19);
	const FLT x23 = (x8 * x20) + (-1 * x10 * x17);
	const FLT x24 = 1. / sqrt((x23 * x23) + (x22 * x22) + (x18 * x18) + (x21 * x21));
	const FLT x25 = x24 * x21;
	const FLT x26 = x24 * x22;
	const FLT x27 = x24 * x23;
	const FLT x28 = x24 * x18;
	const FLT x29 = (x27 * (*_x0).Pose.Rot[3]) + (x25 * (*_x0).Pose.Rot[2]) + (-1 * x28 * (*_x0).Pose.Rot[1]) +
					(x26 * (*_x0).Pose.Rot[0]);
	const FLT x30 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x31 = t * t;
	const FLT x32 = x30 * x30;
	const FLT x33 = x32 * x31;
	const FLT x34 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x35 = x34 * x34;
	const FLT x36 = x31 * x35;
	const FLT x37 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x38 = x37 * x37;
	const FLT x39 = x31 * x38;
	const FLT x40 = 1e-10 + x33 + x39 + x36;
	const FLT x41 = sqrt(x40);
	const FLT x42 = 0.5 * x41;
	const FLT x43 = sin(x42);
	const FLT x44 = x43 * x43;
	const FLT x45 = 1. / x40;
	const FLT x46 = x44 * x45;
	const FLT x47 = cos(x42);
	const FLT x48 = (x46 * x36) + (x47 * x47) + (x46 * x33) + (x46 * x39);
	const FLT x49 = 1. / sqrt(x48);
	const FLT x50 = (1. / x41) * x43;
	const FLT x51 = x50 * x49;
	const FLT x52 = x51 * x30;
	const FLT x53 = x52 * x29;
	const FLT x54 = (x25 * (*_x0).Pose.Rot[1]) + (x28 * (*_x0).Pose.Rot[2]) + (-1 * x26 * (*_x0).Pose.Rot[3]) +
					(x27 * (*_x0).Pose.Rot[0]);
	const FLT x55 = x47 * x49;
	const FLT x56 = x54 * x55;
	const FLT x57 = (x26 * (*_x0).Pose.Rot[1]) + (x28 * (*_x0).Pose.Rot[0]) + (x25 * (*_x0).Pose.Rot[3]) +
					(-1 * x27 * (*_x0).Pose.Rot[2]);
	const FLT x58 = x51 * x57;
	const FLT x59 = x58 * x37;
	const FLT x60 = (-1 * x27 * (*_x0).Pose.Rot[1]) + (x25 * (*_x0).Pose.Rot[0]) + (-1 * x28 * (*_x0).Pose.Rot[3]) +
					(-1 * x26 * (*_x0).Pose.Rot[2]);
	const FLT x61 = x60 * x51;
	const FLT x62 = x61 * x34;
	const FLT x63 = (t * x62) + (t * x59) + (-1 * t * x53) + x56;
	const FLT x64 = x52 * x57;
	const FLT x65 = x51 * x29;
	const FLT x66 = x65 * x37;
	const FLT x67 = x60 * x55;
	const FLT x68 = x54 * x51;
	const FLT x69 = x68 * x34;
	const FLT x70 = (-1 * t * x69) + x67 + (-1 * t * x64) + (-1 * t * x66);
	const FLT x71 = x61 * x37;
	const FLT x72 = x54 * x52;
	const FLT x73 = x55 * x29;
	const FLT x74 = x58 * x34;
	const FLT x75 = (-1 * t * x74) + (t * x71) + x73 + (t * x72);
	const FLT x76 = x60 * x52;
	const FLT x77 = x68 * x37;
	const FLT x78 = x57 * x55;
	const FLT x79 = x65 * x34;
	const FLT x80 = (t * x79) + x78 + (t * x76) + (-1 * t * x77);
	const FLT x81 = (x80 * (*_x0).Pose.Rot[1]) + (x75 * (*_x0).Pose.Rot[0]) + (-1 * x63 * (*_x0).Pose.Rot[3]) +
					(-1 * x70 * (*_x0).Pose.Rot[2]);
	const FLT x82 = x81 * x81;
	const FLT x83 = (x75 * (*_x0).Pose.Rot[3]) + (-1 * x70 * (*_x0).Pose.Rot[1]) + (-1 * x80 * (*_x0).Pose.Rot[2]) +
					(x63 * (*_x0).Pose.Rot[0]);
	const FLT x84 = 1 + (-2 * ((x83 * x83) + x82));
	const FLT x85 = x84 * x84;
	const FLT x86 = (-1 * x75 * (*_x0).Pose.Rot[1]) + (x80 * (*_x0).Pose.Rot[0]) + (-1 * x70 * (*_x0).Pose.Rot[3]) +
					(x63 * (*_x0).Pose.Rot[2]);
	const FLT x87 = (x63 * (*_x0).Pose.Rot[1]) + (x80 * (*_x0).Pose.Rot[3]) + (x70 * (*_x0).Pose.Rot[0]) +
					(x75 * (*_x0).Pose.Rot[2]);
	const FLT x88 = (x83 * x87) + (x81 * x86);
	const FLT x89 = 2 * t;
	const FLT x90 = x89 * x38;
	const FLT x91 = x89 * x32;
	const FLT x92 = x89 * x35;
	const FLT x93 = x92 + x90 + x91;
	const FLT x94 = 0.25 * t * x93 * x45;
	const FLT x95 = x94 * x34;
	const FLT x96 = x50 * x93;
	const FLT x97 = 0.5 * x47;
	const FLT x98 = (1. / (x40 * x40)) * x44;
	const FLT x99 = x93 * x98;
	const FLT x100 = 1. / (x40 * sqrt(x40));
	const FLT x101 = x97 * x43 * x100;
	const FLT x102 = x93 * x101;
	const FLT x103 = x93 * x33;
	const FLT x104 =
		(1. / (x48 * sqrt(x48))) * ((x90 * x46) + (x101 * x103) + (-1 * x98 * x103) + (-1 * x99 * x39) + (x36 * x102) +
									(-1 * x99 * x36) + (x92 * x46) + (-1 * x97 * x96) + (x39 * x102) + (x91 * x46));
	const FLT x105 = x50 * x104;
	const FLT x106 = x1 * x34;
	const FLT x107 = x105 * x106;
	const FLT x108 = 1.0 / 2.0 * x47;
	const FLT x109 = x108 * x104;
	const FLT x110 = x93 * x43 * x100;
	const FLT x111 = x49 * x110;
	const FLT x112 = x1 * x37;
	const FLT x113 = x54 * x49;
	const FLT x114 = 0.25 * x96;
	const FLT x115 = x73 * x94;
	const FLT x116 = x1 * x30;
	const FLT x117 = x29 * x111;
	const FLT x118 = x57 * x105;
	const FLT x119 = x29 * x104;
	const FLT x120 = x50 * x119;
	const FLT x121 = x94 * x37;
	const FLT x122 = x106 * x111;
	const FLT x123 = (-1 * x60 * x122) + (x78 * x121) + x59 + (-1 * x57 * x111 * x112) + (-1 * x54 * x109) +
					 (-1 * x60 * x107) + x62 + (x67 * x95) + (-1 * x53) + (x116 * x117) + (-1 * x113 * x114) +
					 (-1 * x30 * x115) + (-1 * x112 * x118) + (x116 * x120);
	const FLT x124 = x110 * x113;
	const FLT x125 = x94 * x30;
	const FLT x126 = x49 * x114;
	const FLT x127 = x111 * x116;
	const FLT x128 = x54 * x105;
	const FLT x129 = (-1 * x57 * x126) + (-1 * x57 * x109) + (-1 * x60 * x105 * x116) + (x112 * x124) + (x112 * x128) +
					 x76 + (-1 * x106 * x117) + (-1 * x106 * x120) + (x34 * x115) + (-1 * x56 * x121) + x79 +
					 (x67 * x125) + (-1 * x60 * x127) + (-1 * x77);
	const FLT x130 = (-1 * x73 * x121) + (x118 * x116) + (x112 * x117) + (-1 * x60 * x126) + (-1 * x56 * x95) +
					 (-1 * x78 * x125) + (-1 * x60 * x109) + (-1 * x64) + (-1 * x69) + (x106 * x128) + (-1 * x66) +
					 (x112 * x120) + (x106 * x124) + (x57 * x127);
	const FLT x131 = x60 * x112;
	const FLT x132 = (x57 * x122) + (-1 * x108 * x119) + (x57 * x107) + x72 + (-1 * x78 * x95) + (-1 * x116 * x124) +
					 (x56 * x125) + (-1 * x105 * x131) + (-1 * x111 * x131) + (-1 * x29 * x126) + (x67 * x121) +
					 (-1 * x74) + (-1 * x116 * x128) + x71;
	const FLT x133 = (x132 * (*_x0).Pose.Rot[2]) + (x123 * (*_x0).Pose.Rot[1]) + (x130 * (*_x0).Pose.Rot[0]) +
					 (x129 * (*_x0).Pose.Rot[3]);
	const FLT x134 = (x129 * (*_x0).Pose.Rot[1]) + (-1 * x130 * (*_x0).Pose.Rot[2]) + (-1 * x123 * (*_x0).Pose.Rot[3]) +
					 (x132 * (*_x0).Pose.Rot[0]);
	const FLT x135 = (x123 * (*_x0).Pose.Rot[0]) + (-1 * x129 * (*_x0).Pose.Rot[2]) + (-1 * x130 * (*_x0).Pose.Rot[1]) +
					 (x132 * (*_x0).Pose.Rot[3]);
	const FLT x136 = (-1 * x130 * (*_x0).Pose.Rot[3]) + (-1 * x132 * (*_x0).Pose.Rot[1]) + (x123 * (*_x0).Pose.Rot[2]) +
					 (x129 * (*_x0).Pose.Rot[0]);
	const FLT x137 = -4 * x81 * x134;
	const FLT x138 = 1 + (-2 * (x82 + (x86 * x86)));
	const FLT x139 = x138 * x138;
	const FLT x140 = (x86 * x87) + (x81 * x83);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 0, (x0 * x4) + (*error_model).Velocity.Pos[0] + (*_x0).Velocity.Pos[0] + (x0 * x2));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 0, (x4 * x5) + (x2 * x5) + (*error_model).Velocity.Pos[1] + (*_x0).Velocity.Pos[1]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 0, (x2 * x6) + (*error_model).Velocity.Pos[2] + (x4 * x6) + (*_x0).Velocity.Pos[2]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT), 0,
						x85 * (1. / (x85 + (4 * (x88 * x88)))) *
							((-2 * x88 * (1. / x85) * ((-4 * x83 * x135) + x137)) +
							 (2 * ((x81 * x136) + (x87 * x135) + (x83 * x133) + (x86 * x134)) * (1. / x84))));
	cnMatrixOptionalSet(
		Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT), 0,
		2 * ((-1 * x83 * x136) + (x81 * x133) + (-1 * x86 * x135) + (x87 * x134)) *
			(1. / sqrt(1 + (-4 * (((x81 * x87) + (-1 * x83 * x86)) * ((x81 * x87) + (-1 * x83 * x86)))))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT), 0,
						x139 * (1. / (x139 + (4 * (x140 * x140)))) *
							((-2 * (1. / x139) * x140 * (x137 + (-4 * x86 * x136))) +
							 (2 * ((x81 * x135) + (x83 * x134) + (x87 * x136) + (x86 * x133)) * (1. / x138))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), 0, x0);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), 0, x5);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), 0, x6);
}

// Full version Jacobian of SurviveKalmanModelErrorPredict wrt [t]
// Jacobian of SurviveKalmanModelErrorPredict wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModelErrorPredict_jac_x0(CnMat* Hx, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = fabs(t) * x0;
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = cos(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x8 = sin(x7);
	const FLT x9 = x6 * x8;
	const FLT x10 = sin(x3);
	const FLT x11 = cos(x7);
	const FLT x12 = cos(x5);
	const FLT x13 = x12 * x11;
	const FLT x14 = (x13 * x10) + (-1 * x4 * x9);
	const FLT x15 = (x4 * x13) + (x9 * x10);
	const FLT x16 = x8 * x12;
	const FLT x17 = x6 * x11;
	const FLT x18 = (x4 * x17) + (x10 * x16);
	const FLT x19 = (x4 * x16) + (-1 * x10 * x17);
	const FLT x20 = 1. / sqrt((x19 * x19) + (x18 * x18) + (x14 * x14) + (x15 * x15));
	const FLT x21 = x20 * x14;
	const FLT x22 = x20 * x18;
	const FLT x23 = x20 * (*_x0).Pose.Rot[0];
	const FLT x24 = x20 * (*_x0).Pose.Rot[1];
	const FLT x25 = (-1 * x24 * x19) + (x23 * x15) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x26 = t * t;
	const FLT x27 = x2 * x2;
	const FLT x28 = x26 * x27;
	const FLT x29 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x30 = x29 * x29;
	const FLT x31 = x30 * x26;
	const FLT x32 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x33 = x32 * x32;
	const FLT x34 = x33 * x26;
	const FLT x35 = 1e-10 + x34 + x28 + x31;
	const FLT x36 = sqrt(x35);
	const FLT x37 = 0.5 * x36;
	const FLT x38 = sin(x37);
	const FLT x39 = x38 * x38;
	const FLT x40 = 1. / x35;
	const FLT x41 = x40 * x39;
	const FLT x42 = cos(x37);
	const FLT x43 = (x42 * x42) + (x41 * x28) + (x41 * x31) + (x41 * x34);
	const FLT x44 = 1. / sqrt(x43);
	const FLT x45 = x44 * x38;
	const FLT x46 = 1. / x36;
	const FLT x47 = t * x46;
	const FLT x48 = x45 * x47;
	const FLT x49 = x48 * x25;
	const FLT x50 = x2 * x49;
	const FLT x51 = (x24 * x15) + (x21 * (*_x0).Pose.Rot[2]) + (-1 * x22 * (*_x0).Pose.Rot[3]) + (x23 * x19);
	const FLT x52 = x51 * x45;
	const FLT x53 = x52 * x47;
	const FLT x54 = x53 * x32;
	const FLT x55 = x20 * x15;
	const FLT x56 = x20 * x19;
	const FLT x57 = (x24 * x18) + (x55 * (*_x0).Pose.Rot[3]) + (x23 * x14) + (-1 * x56 * (*_x0).Pose.Rot[2]);
	const FLT x58 = x42 * x44;
	const FLT x59 = x58 * x57;
	const FLT x60 = (x56 * (*_x0).Pose.Rot[3]) + (x55 * (*_x0).Pose.Rot[2]) + (-1 * x24 * x14) + (x23 * x18);
	const FLT x61 = x60 * x48;
	const FLT x62 = x61 * x29;
	const FLT x63 = x62 + x59 + x50 + (-1 * x54);
	const FLT x64 = x49 * x32;
	const FLT x65 = x2 * x53;
	const FLT x66 = x60 * x58;
	const FLT x67 = x57 * x48;
	const FLT x68 = x67 * x29;
	const FLT x69 = x66 + (-1 * x68) + x64 + x65;
	const FLT x70 = x2 * x67;
	const FLT x71 = x61 * x32;
	const FLT x72 = x58 * x25;
	const FLT x73 = x53 * x29;
	const FLT x74 = (-1 * x73) + x72 + (-1 * x70) + (-1 * x71);
	const FLT x75 = x2 * x61;
	const FLT x76 = x51 * x58;
	const FLT x77 = x67 * x32;
	const FLT x78 = x49 * x29;
	const FLT x79 = x78 + x77 + (-1 * x75) + x76;
	const FLT x80 = (x79 * (*_x0).Pose.Rot[1]) + (x74 * (*_x0).Pose.Rot[0]) + (x63 * (*_x0).Pose.Rot[3]) +
					(x69 * (*_x0).Pose.Rot[2]);
	const FLT x81 = x48 * x32;
	const FLT x82 = x81 * x55;
	const FLT x83 = x2 * x48;
	const FLT x84 = x83 * x56;
	const FLT x85 = x48 * x21;
	const FLT x86 = -1 * x85 * x29;
	const FLT x87 = x58 * x22;
	const FLT x88 = x87 + x86;
	const FLT x89 = x88 + x82 + x84;
	const FLT x90 = x55 * x48;
	const FLT x91 = x2 * x90;
	const FLT x92 = x48 * x29;
	const FLT x93 = x92 * x22;
	const FLT x94 = x58 * x21;
	const FLT x95 = -1 * x81 * x56;
	const FLT x96 = x95 + x94;
	const FLT x97 = x96 + x91 + x93;
	const FLT x98 = x56 * x92;
	const FLT x99 = -1 * x98;
	const FLT x100 = x2 * x85;
	const FLT x101 = -1 * x100;
	const FLT x102 = x58 * x55;
	const FLT x103 = x81 * x22;
	const FLT x104 = (-1 * x103) + x102;
	const FLT x105 = x104 + x99 + x101;
	const FLT x106 = x81 * x21;
	const FLT x107 = x58 * x56;
	const FLT x108 = x90 * x29;
	const FLT x109 = -1 * x83 * x22;
	const FLT x110 = x109 + x108;
	const FLT x111 = x110 + x106 + x107;
	const FLT x112 = x79 + (-1 * x105 * (*_x0).Pose.Rot[1]) + (x111 * (*_x0).Pose.Rot[0]) + (x89 * (*_x0).Pose.Rot[3]) +
					 (-1 * x97 * (*_x0).Pose.Rot[2]);
	const FLT x113 = (x111 * (*_x0).Pose.Rot[1]) + (x105 * (*_x0).Pose.Rot[0]) + (x97 * (*_x0).Pose.Rot[3]) + x74 +
					 (x89 * (*_x0).Pose.Rot[2]);
	const FLT x114 = (-1 * x74 * (*_x0).Pose.Rot[1]) + (x69 * (*_x0).Pose.Rot[3]) + (-1 * x63 * (*_x0).Pose.Rot[2]) +
					 (x79 * (*_x0).Pose.Rot[0]);
	const FLT x115 = (x63 * (*_x0).Pose.Rot[0]) + (-1 * x74 * (*_x0).Pose.Rot[3]) + (-1 * x69 * (*_x0).Pose.Rot[1]) +
					 (x79 * (*_x0).Pose.Rot[2]);
	const FLT x116 = x69 + (x89 * (*_x0).Pose.Rot[0]) + (-1 * x111 * (*_x0).Pose.Rot[3]) + (x97 * (*_x0).Pose.Rot[1]) +
					 (-1 * x105 * (*_x0).Pose.Rot[2]);
	const FLT x117 = (x63 * (*_x0).Pose.Rot[1]) + (x69 * (*_x0).Pose.Rot[0]) + (-1 * x79 * (*_x0).Pose.Rot[3]) +
					 (-1 * x74 * (*_x0).Pose.Rot[2]);
	const FLT x118 = (x111 * (*_x0).Pose.Rot[2]) + (-1 * x89 * (*_x0).Pose.Rot[1]) + x63 + (x97 * (*_x0).Pose.Rot[0]) +
					 (-1 * x105 * (*_x0).Pose.Rot[3]);
	const FLT x119 = x117 * x117;
	const FLT x120 = 1 + (-2 * ((x114 * x114) + x119));
	const FLT x121 = 2 * (1. / x120);
	const FLT x122 = 4 * x117;
	const FLT x123 = -1 * x116 * x122;
	const FLT x124 = 4 * x114;
	const FLT x125 = x120 * x120;
	const FLT x126 = (x80 * x114) + (x115 * x117);
	const FLT x127 = 2 * x126 * (1. / x125);
	const FLT x128 = x125 * (1. / (x125 + (4 * (x126 * x126))));
	const FLT x129 = -1 * x84;
	const FLT x130 = -1 * x82;
	const FLT x131 = x88 + x129 + x130;
	const FLT x132 = -1 * x107;
	const FLT x133 = (-1 * x108) + x109;
	const FLT x134 = x133 + x106 + x132;
	const FLT x135 = -1 * x93;
	const FLT x136 = (-1 * x94) + x95;
	const FLT x137 = x136 + x91 + x135;
	const FLT x138 = x103 + x102;
	const FLT x139 = x138 + x100 + x99;
	const FLT x140 = x73 + x71 + x70 + (-1 * x72);
	const FLT x141 = x140 + (x139 * (*_x0).Pose.Rot[0]) + (x137 * (*_x0).Pose.Rot[3]) +
					 (-1 * x131 * (*_x0).Pose.Rot[2]) + (-1 * x134 * (*_x0).Pose.Rot[1]);
	const FLT x142 = (x134 * (*_x0).Pose.Rot[0]) + x79 + (x131 * (*_x0).Pose.Rot[3]) + (x139 * (*_x0).Pose.Rot[1]) +
					 (x137 * (*_x0).Pose.Rot[2]);
	const FLT x143 = x63 + (x131 * (*_x0).Pose.Rot[1]) + (x137 * (*_x0).Pose.Rot[0]) +
					 (-1 * x134 * (*_x0).Pose.Rot[2]) + (-1 * x139 * (*_x0).Pose.Rot[3]);
	const FLT x144 = (x131 * (*_x0).Pose.Rot[0]) + x68 + (-1 * x65) + (-1 * x64) + (-1 * x66) +
					 (x139 * (*_x0).Pose.Rot[2]) + (-1 * x137 * (*_x0).Pose.Rot[1]) + (-1 * x134 * (*_x0).Pose.Rot[3]);
	const FLT x145 = -1 * x122 * x143;
	const FLT x146 = (-1 * x87) + x86;
	const FLT x147 = x146 + x84 + x130;
	const FLT x148 = x104 + x98 + x100;
	const FLT x149 = -1 * x91;
	const FLT x150 = x96 + x135 + x149;
	const FLT x151 = -1 * x106;
	const FLT x152 = x110 + x132 + x151;
	const FLT x153 = (-1 * x152 * (*_x0).Pose.Rot[2]) + (x148 * (*_x0).Pose.Rot[3]) + (-1 * x147 * (*_x0).Pose.Rot[1]) +
					 (-1 * x50) + (x150 * (*_x0).Pose.Rot[0]) + x54 + (-1 * x62) + (-1 * x59);
	const FLT x154 = x140 + (x152 * (*_x0).Pose.Rot[1]) + (x148 * (*_x0).Pose.Rot[0]) +
					 (-1 * x150 * (*_x0).Pose.Rot[3]) + (-1 * x147 * (*_x0).Pose.Rot[2]);
	const FLT x155 = x69 + (x148 * (*_x0).Pose.Rot[2]) + (x152 * (*_x0).Pose.Rot[3]) + (x150 * (*_x0).Pose.Rot[1]) +
					 (x147 * (*_x0).Pose.Rot[0]);
	const FLT x156 = x79 + (x150 * (*_x0).Pose.Rot[2]) + (-1 * x147 * (*_x0).Pose.Rot[3]) +
					 (-1 * x148 * (*_x0).Pose.Rot[1]) + (x152 * (*_x0).Pose.Rot[0]);
	const FLT x157 = -1 * x122 * x154;
	const FLT x158 = x136 + x93 + x149;
	const FLT x159 = x133 + x107 + x151;
	const FLT x160 = x82 + x146 + x129;
	const FLT x161 = x138 + x98 + x101;
	const FLT x162 = x69 + (-1 * x161 * (*_x0).Pose.Rot[2]) + (x160 * (*_x0).Pose.Rot[0]) +
					 (-1 * x158 * (*_x0).Pose.Rot[1]) + (x159 * (*_x0).Pose.Rot[3]);
	const FLT x163 = (x161 * (*_x0).Pose.Rot[3]) + (x160 * (*_x0).Pose.Rot[1]) + x63 + (x159 * (*_x0).Pose.Rot[2]) +
					 (x158 * (*_x0).Pose.Rot[0]);
	const FLT x164 = x75 + (-1 * x160 * (*_x0).Pose.Rot[3]) + (x159 * (*_x0).Pose.Rot[0]) +
					 (-1 * x158 * (*_x0).Pose.Rot[2]) + (-1 * x77) + (-1 * x78) + (x161 * (*_x0).Pose.Rot[1]) +
					 (-1 * x76);
	const FLT x165 = (-1 * x158 * (*_x0).Pose.Rot[3]) + (-1 * x159 * (*_x0).Pose.Rot[1]) + x140 +
					 (x161 * (*_x0).Pose.Rot[0]) + (x160 * (*_x0).Pose.Rot[2]);
	const FLT x166 = -1 * x122 * x164;
	const FLT x167 = -1 * x53;
	const FLT x168 = t * t * t;
	const FLT x169 = 1. / (x35 * sqrt(x35));
	const FLT x170 = x169 * x168;
	const FLT x171 = x45 * x170;
	const FLT x172 = x60 * x171;
	const FLT x173 = x29 * x172;
	const FLT x174 = x32 * x173;
	const FLT x175 = t * t * t * t;
	const FLT x176 = (x29 * x29 * x29) * x175;
	const FLT x177 = 1.0 * x42 * x38;
	const FLT x178 = x169 * x177;
	const FLT x179 = (1. / (x35 * x35)) * x39;
	const FLT x180 = 2 * x179;
	const FLT x181 = x27 * x175;
	const FLT x182 = x178 * x181;
	const FLT x183 = x41 * x26;
	const FLT x184 = 2 * x183;
	const FLT x185 = x178 * x175;
	const FLT x186 = x33 * x185;
	const FLT x187 = x175 * x180;
	const FLT x188 = x46 * x26;
	const FLT x189 = x29 * x188;
	const FLT x190 = x33 * x187;
	const FLT x191 = (-1 * x29 * x190) + (-1 * x177 * x189) + (-1 * x176 * x180) + (x178 * x176) + (x29 * x186) +
					 (x29 * x182) + (-1 * x29 * x27 * x187) + (x29 * x184);
	const FLT x192 = 1. / (x43 * sqrt(x43));
	const FLT x193 = x191 * x192;
	const FLT x194 = x0 * x46 * x38;
	const FLT x195 = x29 * x194;
	const FLT x196 = x51 * x195;
	const FLT x197 = x2 * x57;
	const FLT x198 = x197 * x194;
	const FLT x199 = 0.5 * x40 * x168;
	const FLT x200 = x66 * x199;
	const FLT x201 = x32 * x29;
	const FLT x202 = x200 * x201;
	const FLT x203 = x45 * x25;
	const FLT x204 = 0.5 * x203;
	const FLT x205 = x52 * x170;
	const FLT x206 = x60 * x192;
	const FLT x207 = x206 * x191;
	const FLT x208 = x32 * x194;
	const FLT x209 = 1.0 / 2.0 * x42;
	const FLT x210 = x209 * x192;
	const FLT x211 = x25 * x210;
	const FLT x212 = x76 * x199;
	const FLT x213 = x57 * x171;
	const FLT x214 = x29 * x213;
	const FLT x215 = x59 * x199;
	const FLT x216 = x2 * x29;
	const FLT x217 = (-1 * x215 * x216) + (x2 * x214);
	const FLT x218 = (-1 * x30 * x212) + (-1 * x211 * x191) + (x208 * x207) + (x30 * x205) + x217 + (-1 * x204 * x189) +
					 (x196 * x193) + x174 + x167 + (x198 * x193) + (-1 * x202);
	const FLT x219 = -1 * x67;
	const FLT x220 = x212 * x216;
	const FLT x221 = x25 * x193;
	const FLT x222 = x29 * x205;
	const FLT x223 = x2 * x222;
	const FLT x224 = x2 * x194;
	const FLT x225 = x51 * x224;
	const FLT x226 = 0.5 * x189;
	const FLT x227 = x45 * x226;
	const FLT x228 = x57 * x195;
	const FLT x229 = x203 * x170;
	const FLT x230 = x29 * x229;
	const FLT x231 = x72 * x199;
	const FLT x232 = (x231 * x201) + (-1 * x32 * x230);
	const FLT x233 = (x228 * x193) + (-1 * x60 * x227) + (-1 * x225 * x193) + (-1 * x30 * x215) + x220 +
					 (-1 * x209 * x207) + (-1 * x208 * x221) + x232 + x219 + (x30 * x213) + (-1 * x223);
	const FLT x234 = x51 * x208;
	const FLT x235 = x57 * x210;
	const FLT x236 = (-1 * x2 * x230) + (x216 * x231);
	const FLT x237 = (x32 * x222) + (-1 * x212 * x201);
	const FLT x238 = x236 + (-1 * x235 * x191) + x237 + (-1 * x207 * x195) + (-1 * x224 * x221) + x61 + (x234 * x193) +
					 (-1 * x30 * x172) + (x30 * x200) + (-1 * x57 * x227);
	const FLT x239 = x215 * x201;
	const FLT x240 = x57 * x32;
	const FLT x241 = x240 * x194;
	const FLT x242 = x32 * x214;
	const FLT x243 = x51 * x210;
	const FLT x244 = x2 * x173;
	const FLT x245 = x216 * x200;
	const FLT x246 = x239 + x244 + x49 + (-1 * x52 * x226) + (-1 * x241 * x193) + (-1 * x242) + (-1 * x243 * x191) +
					 (-1 * x30 * x229) + (-1 * x221 * x195) + (x30 * x231) + (x207 * x224) + (-1 * x245);
	const FLT x247 = (x246 * (*_x0).Pose.Rot[0]) + (-1 * x218 * (*_x0).Pose.Rot[1]) + (-1 * x238 * (*_x0).Pose.Rot[2]) +
					 (x233 * (*_x0).Pose.Rot[3]);
	const FLT x248 = (-1 * x246 * (*_x0).Pose.Rot[3]) + (x238 * (*_x0).Pose.Rot[1]) + (-1 * x218 * (*_x0).Pose.Rot[2]) +
					 (x233 * (*_x0).Pose.Rot[0]);
	const FLT x249 = (x233 * (*_x0).Pose.Rot[2]) + (x238 * (*_x0).Pose.Rot[3]) + (x218 * (*_x0).Pose.Rot[0]) +
					 (x246 * (*_x0).Pose.Rot[1]);
	const FLT x250 = (x246 * (*_x0).Pose.Rot[2]) + (x238 * (*_x0).Pose.Rot[0]) + (-1 * x233 * (*_x0).Pose.Rot[1]) +
					 (-1 * x218 * (*_x0).Pose.Rot[3]);
	const FLT x251 = -1 * x248 * x122;
	const FLT x252 = -1 * x61;
	const FLT x253 = x30 * x175;
	const FLT x254 = x253 * x178;
	const FLT x255 = x177 * x188;
	const FLT x256 = 2 * x32;
	const FLT x257 = x256 * x179;
	const FLT x258 = x32 * x32 * x32;
	const FLT x259 = (-1 * x253 * x257) + (x32 * x182) + (-1 * x32 * x255) + (-1 * x257 * x181) + (x258 * x185) +
					 (-1 * x258 * x187) + (x32 * x254) + (x256 * x183);
	const FLT x260 = x259 * x192;
	const FLT x261 = x51 * x260;
	const FLT x262 = x2 * x32;
	const FLT x263 = x215 * x262;
	const FLT x264 = x213 * x262;
	const FLT x265 = x206 * x259;
	const FLT x266 = x204 * x188;
	const FLT x267 = x237 + (-1 * x32 * x266) + (-1 * x211 * x259) + (x208 * x265) + (-1 * x263) + (x33 * x172) + x264 +
					 x252 + (x260 * x198) + (-1 * x33 * x200) + (x261 * x195);
	const FLT x268 = x25 * x260;
	const FLT x269 = 0.5 * x188;
	const FLT x270 = x45 * x269;
	const FLT x271 = (x231 * x262) + (-1 * x262 * x229);
	const FLT x272 = x202 + (-1 * x265 * x195) + (-1 * x270 * x240) + (-1 * x235 * x259) + x271 + (x208 * x261) +
					 (-1 * x33 * x212) + (-1 * x174) + x167 + (-1 * x268 * x224) + (x33 * x205);
	const FLT x273 = x52 * x269;
	const FLT x274 = (-1 * x200 * x262) + (x262 * x172);
	const FLT x275 = x232 + x274 + (x33 * x215) + (-1 * x32 * x273) + (x265 * x224) + (-1 * x268 * x195) +
					 (-1 * x259 * x243) + x67 + (-1 * x33 * x213) + (-1 * x260 * x241);
	const FLT x276 = x205 * x262;
	const FLT x277 = x212 * x262;
	const FLT x278 = x209 * x206;
	const FLT x279 = x60 * x270;
	const FLT x280 = (-1 * x33 * x229) + (-1 * x276) + (-1 * x208 * x268) + (-1 * x32 * x279) + (x33 * x231) + x49 +
					 x277 + (-1 * x261 * x224) + (x260 * x228) + (-1 * x239) + x242 + (-1 * x278 * x259);
	const FLT x281 = (x280 * (*_x0).Pose.Rot[2]) + (x275 * (*_x0).Pose.Rot[1]) + (x267 * (*_x0).Pose.Rot[0]) +
					 (x272 * (*_x0).Pose.Rot[3]);
	const FLT x282 = (x275 * (*_x0).Pose.Rot[0]) + (-1 * x272 * (*_x0).Pose.Rot[2]) + (-1 * x267 * (*_x0).Pose.Rot[1]) +
					 (x280 * (*_x0).Pose.Rot[3]);
	const FLT x283 = (-1 * x267 * (*_x0).Pose.Rot[2]) + (-1 * x275 * (*_x0).Pose.Rot[3]) + (x272 * (*_x0).Pose.Rot[1]) +
					 (x280 * (*_x0).Pose.Rot[0]);
	const FLT x284 = (x275 * (*_x0).Pose.Rot[2]) + (-1 * x280 * (*_x0).Pose.Rot[1]) + (x272 * (*_x0).Pose.Rot[0]) +
					 (-1 * x267 * (*_x0).Pose.Rot[3]);
	const FLT x285 = -1 * x283 * x122;
	const FLT x286 = x2 * x2 * x2;
	const FLT x287 = (x2 * x186) + (x2 * x184) + (-1 * x2 * x255) + (x2 * x254) + (-1 * x2 * x190) + (x286 * x185) +
					 (-1 * x286 * x187) + (-1 * x2 * x30 * x187);
	const FLT x288 = x27 * x170;
	const FLT x289 = x45 * x288;
	const FLT x290 = x287 * x192;
	const FLT x291 = x206 * x287;
	const FLT x292 = (-1 * x220) + x219 + x223 + (-1 * x2 * x266) + (-1 * x211 * x287) + (x290 * x196) + (x57 * x289) +
					 (-1 * x27 * x215) + (x208 * x291) + x274 + (x290 * x198);
	const FLT x293 = x25 * x290;
	const FLT x294 = x236 + x263 + (-1 * x290 * x241) + (x291 * x224) + (-1 * x287 * x243) + (x60 * x289) +
					 (-1 * x264) + (-1 * x2 * x273) + (-1 * x293 * x195) + x252 + (-1 * x27 * x200);
	const FLT x295 = x245 + x49 + (-1 * x235 * x287) + (-1 * x244) + (-1 * x291 * x195) + (-1 * x277) +
					 (-1 * x203 * x288) + (-1 * x270 * x197) + (-1 * x293 * x224) + (x27 * x231) + x276 + (x234 * x290);
	const FLT x296 = (x290 * x228) + (-1 * x278 * x287) + (-1 * x290 * x225) + (-1 * x52 * x288) + x271 +
					 (-1 * x2 * x279) + x53 + (-1 * x208 * x293) + x217 + (x27 * x212);
	const FLT x297 = (x296 * (*_x0).Pose.Rot[2]) + (x292 * (*_x0).Pose.Rot[0]) + (x295 * (*_x0).Pose.Rot[3]) +
					 (x294 * (*_x0).Pose.Rot[1]);
	const FLT x298 = (x296 * (*_x0).Pose.Rot[3]) + (x294 * (*_x0).Pose.Rot[0]) + (-1 * x292 * (*_x0).Pose.Rot[1]) +
					 (-1 * x295 * (*_x0).Pose.Rot[2]);
	const FLT x299 = (-1 * x292 * (*_x0).Pose.Rot[2]) + (-1 * x294 * (*_x0).Pose.Rot[3]) + (x295 * (*_x0).Pose.Rot[1]) +
					 (x296 * (*_x0).Pose.Rot[0]);
	const FLT x300 = (x294 * (*_x0).Pose.Rot[2]) + (-1 * x292 * (*_x0).Pose.Rot[3]) + (-1 * x296 * (*_x0).Pose.Rot[1]) +
					 (x295 * (*_x0).Pose.Rot[0]);
	const FLT x301 = -1 * x299 * x122;
	const FLT x302 =
		2 * (1. / sqrt(1 + (-4 * (((x80 * x117) + (-1 * x114 * x115)) * ((x80 * x117) + (-1 * x114 * x115))))));
	const FLT x303 = 1 + (-2 * (x119 + (x115 * x115)));
	const FLT x304 = 2 * (1. / x303);
	const FLT x305 = 4 * x115;
	const FLT x306 = x303 * x303;
	const FLT x307 = (x80 * x115) + (x114 * x117);
	const FLT x308 = 2 * x307 * (1. / x306);
	const FLT x309 = x306 * (1. / (x306 + (4 * (x307 * x307))));
	const FLT x310 = 0.5 * (*error_model).IMUBias.IMUCorrection[0];
	const FLT x311 = sin(x310);
	const FLT x312 = 0.5 * (*error_model).IMUBias.IMUCorrection[1];
	const FLT x313 = sin(x312);
	const FLT x314 = 0.5 * (*error_model).IMUBias.IMUCorrection[2];
	const FLT x315 = cos(x314);
	const FLT x316 = x313 * x315;
	const FLT x317 = cos(x310);
	const FLT x318 = sin(x314);
	const FLT x319 = cos(x312);
	const FLT x320 = x319 * x318;
	const FLT x321 = (x320 * x317) + (-1 * x311 * x316);
	const FLT x322 = (x317 * x316) + (x311 * x320);
	const FLT x323 = x313 * x318;
	const FLT x324 = x315 * x319;
	const FLT x325 = (x324 * x317) + (x311 * x323);
	const FLT x326 = (x311 * x324) + (-1 * x323 * x317);
	const FLT x327 = 1. / sqrt((x325 * x325) + (x326 * x326) + (x321 * x321) + (x322 * x322));
	const FLT x328 = x327 * x325;
	const FLT x329 = x328 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x330 = x327 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x331 = x326 * x330;
	const FLT x332 = x327 * x322;
	const FLT x333 = x332 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x334 = x328 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x335 = x327 * x321;
	const FLT x336 = x335 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x337 = (-1 * x336) + x334 + x331 + x333;
	const FLT x338 = x326 * x327;
	const FLT x339 = x338 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x340 = x325 * x330;
	const FLT x341 = x335 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x342 = x332 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x343 = x342 + x341 + (-1 * x339) + x340;
	const FLT x344 = x322 * x330;
	const FLT x345 = x335 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x346 = x338 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x347 = x328 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x348 = x347 + (-1 * x344) + x346 + x345;
	const FLT x349 = x321 * x330;
	const FLT x350 = x332 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x351 = x338 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x352 = (-1 * x351) + x329 + (-1 * x349) + (-1 * x350);
	const FLT x353 = (x348 * (*_x0).IMUBias.IMUCorrection[0]) + (x337 * (*_x0).IMUBias.IMUCorrection[3]) +
					 (-1 * x352 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x343 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x354 = 2 * x353;
	const FLT x355 = (x352 * (*_x0).IMUBias.IMUCorrection[0]) + (x348 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x337 * (*_x0).IMUBias.IMUCorrection[2]) + (x343 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x356 = 2 * x355;
	const FLT x357 = (x343 * (*_x0).IMUBias.IMUCorrection[1]) + (x337 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x348 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x352 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x358 = 2 * x357;
	const FLT x359 = (x343 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x337 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (-1 * x352 * (*_x0).IMUBias.IMUCorrection[3]) + (x348 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x360 = 2 * x359;
	const FLT x361 = x357 * x357;
	const FLT x362 = 1 + (-2 * ((x353 * x353) + x361));
	const FLT x363 = 2 * (1. / x362);
	const FLT x364 = 8 * x357;
	const FLT x365 = -1 * x364 * x333;
	const FLT x366 = 8 * x353;
	const FLT x367 = x362 * x362;
	const FLT x368 = (x353 * x355) + (x359 * x357);
	const FLT x369 = 2 * (1. / x367) * x368;
	const FLT x370 = x367 * (1. / (x367 + (4 * (x368 * x368))));
	const FLT x371 = -1 * x364 * x342;
	const FLT x372 = -1 * x364 * x350;
	const FLT x373 = -1 * x364 * x344;
	const FLT x374 =
		2 * (1. / sqrt(1 + (-4 * (((x355 * x357) + (-1 * x359 * x353)) * ((x355 * x357) + (-1 * x359 * x353))))));
	const FLT x375 = 1 + (-2 * (x361 + (x359 * x359)));
	const FLT x376 = 2 * (1. / x375);
	const FLT x377 = 8 * x359;
	const FLT x378 = x375 * x375;
	const FLT x379 = (x359 * x355) + (x353 * x357);
	const FLT x380 = 2 * x379 * (1. / x378);
	const FLT x381 = x378 * (1. / (x378 + (4 * (x379 * x379))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x112 * x124) + x123)) +
								(x121 * ((x118 * x117) + (x115 * x116) + (x80 * x112) + (x113 * x114)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x124 * x141) + x145)) +
								(x121 * ((x115 * x143) + (x80 * x141) + (x117 * x144) + (x114 * x142)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x124 * x153) + x157)) +
								(x121 * ((x117 * x156) + (x114 * x155) + (x80 * x153) + (x115 * x154)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x124 * x162) + x166)) +
								(x121 * ((x117 * x165) + (x80 * x162) + (x115 * x164) + (x114 * x163)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x247 * x124) + x251)) +
								(x121 * ((x250 * x117) + (x80 * x247) + (x249 * x114) + (x248 * x115)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x282 * x124) + x285)) +
								(x121 * ((x284 * x117) + (x281 * x114) + (x283 * x115) + (x80 * x282)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x128 * ((-1 * x127 * ((-1 * x298 * x124) + x301)) +
								(x121 * ((x300 * x117) + (x299 * x115) + (x297 * x114) + (x80 * x298)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x302 * ((-1 * x118 * x114) + (-1 * x112 * x115) + (x113 * x117) + (x80 * x116)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x302 * ((x80 * x143) + (-1 * x114 * x144) + (x117 * x142) + (-1 * x115 * x141)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x302 * ((-1 * x115 * x153) + (-1 * x114 * x156) + (x117 * x155) + (x80 * x154)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x302 * ((-1 * x114 * x165) + (-1 * x115 * x162) + (x117 * x163) + (x80 * x164)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x302 * ((-1 * x250 * x114) + (x80 * x248) + (x249 * x117) + (-1 * x247 * x115)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x302 * ((-1 * x282 * x115) + (-1 * x284 * x114) + (x281 * x117) + (x80 * x283)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x302 * ((-1 * x300 * x114) + (-1 * x298 * x115) + (x297 * x117) + (x80 * x299)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x123 + (-1 * x305 * x118))) +
								(x304 * ((x112 * x117) + (x80 * x118) + (x114 * x116) + (x113 * x115)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x145 + (-1 * x305 * x144))) +
								(x304 * ((x117 * x141) + (x114 * x143) + (x80 * x144) + (x115 * x142)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x157 + (-1 * x305 * x156))) +
								(x304 * ((x117 * x153) + (x114 * x154) + (x80 * x156) + (x115 * x155)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x166 + (-1 * x305 * x165))) +
								(x304 * ((x114 * x164) + (x80 * x165) + (x117 * x162) + (x115 * x163)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x251 + (-1 * x250 * x305))) +
								(x304 * ((x80 * x250) + (x249 * x115) + (x247 * x117) + (x248 * x114)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x285 + (-1 * x284 * x305))) +
								(x304 * ((x282 * x117) + (x283 * x114) + (x80 * x284) + (x281 * x115)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x309 * ((-1 * x308 * (x301 + (-1 * x300 * x305))) +
								(x304 * ((x299 * x114) + (x80 * x300) + (x298 * x117) + (x297 * x115)))));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x370 * ((-1 * x369 * ((-1 * x366 * x346) + x365)) +
								(((x360 * x333) + (x354 * x329) + (x358 * x341) + (x356 * x346)) * x363)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x370 * ((-1 * x369 * ((-1 * x366 * x351) + x371)) +
								(((x358 * x336) + (x354 * x347) + (x360 * x342) + (x351 * x356)) * x363)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x370 * ((-1 * x369 * ((-1 * x366 * x339) + x372)) +
								(((x350 * x360) + (x358 * x345) + (x354 * x334) + (x356 * x339)) * x363)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x370 * ((-1 * x369 * ((-1 * x366 * x331) + x373)) +
								(((x360 * x344) + (x358 * x349) + (x354 * x340) + (x356 * x331)) * x363)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						((-1 * x354 * x341) + (-1 * x360 * x346) + (x356 * x333) + (x358 * x329)) * x374);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						((-1 * x354 * x336) + (x356 * x342) + (x358 * x347) + (-1 * x360 * x351)) * x374);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((-1 * x354 * x345) + (x350 * x356) + (-1 * x360 * x339) + (x358 * x334)) * x374);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						((-1 * x354 * x349) + (x358 * x340) + (x356 * x344) + (-1 * x360 * x331)) * x374);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x381 * ((-1 * x380 * (x365 + (-1 * x377 * x341))) +
								(((x358 * x346) + (x356 * x341) + (x354 * x333) + (x360 * x329)) * x376)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x381 * ((-1 * x380 * (x371 + (-1 * x377 * x336))) +
								(((x356 * x336) + (x354 * x342) + (x360 * x347) + (x351 * x358)) * x376)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x381 * ((-1 * x380 * (x372 + (-1 * x377 * x345))) +
								(((x350 * x354) + (x358 * x339) + (x356 * x345) + (x360 * x334)) * x376)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x381 * ((-1 * x380 * (x373 + (-1 * x377 * x349))) +
								(((x354 * x344) + (x358 * x331) + (x356 * x349) + (x360 * x340)) * x376)));
}

// Full version Jacobian of SurviveKalmanModelErrorPredict wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]] Jacobian of SurviveKalmanModelErrorPredict
// wrt [(*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0],
// (*error_model).IMUBias.AccBias[1], (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0],
// (*error_model).IMUBias.AccScale[1], (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0],
// (*error_model).IMUBias.GyroBias[1], (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0],
// (*error_model).IMUBias.IMUCorrection[1], (*error_model).IMUBias.IMUCorrection[2],
// (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1], (*error_model).Pose.AxisAngleRot[2],
// (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1], (*error_model).Pose.Pos[2],
// (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void SurviveKalmanModelErrorPredict_jac_error_model(CnMat* Hx, const FLT t, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model) {
	const FLT x0 = 1.0/2.0 * t;
	const FLT x1 = fabs(t) * x0;
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x7 = sin(x6);
	const FLT x8 = x5 * x7;
	const FLT x9 = x3 * x8;
	const FLT x10 = cos(x2);
	const FLT x11 = cos(x4);
	const FLT x12 = cos(x6);
	const FLT x13 = x12 * x11;
	const FLT x14 = x13 * x10;
	const FLT x15 = x14 + x9;
	const FLT x16 = 0.5 * x14;
	const FLT x17 = 0.5 * x9;
	const FLT x18 = x17 + x16;
	const FLT x19 = x7 * x11;
	const FLT x20 = x3 * x19;
	const FLT x21 = x5 * x12;
	const FLT x22 = x21 * x10;
	const FLT x23 = x22 + (-1 * x20);
	const FLT x24 = 2 * x23;
	const FLT x25 = x8 * x10;
	const FLT x26 = 0.5 * x25;
	const FLT x27 = -1 * x26;
	const FLT x28 = x3 * x13;
	const FLT x29 = 0.5 * x28;
	const FLT x30 = x29 + x27;
	const FLT x31 = x3 * x21;
	const FLT x32 = x10 * x19;
	const FLT x33 = x32 + x31;
	const FLT x34 = 2 * x33;
	const FLT x35 = 0.5 * x31;
	const FLT x36 = -0.5 * x32;
	const FLT x37 = x36 + (-1 * x35);
	const FLT x38 = x28 + (-1 * x25);
	const FLT x39 = 2 * x38;
	const FLT x40 = 0.5 * x22;
	const FLT x41 = -1 * x40;
	const FLT x42 = 0.5 * x20;
	const FLT x43 = x42 + x41;
	const FLT x44 = 2 * x15;
	const FLT x45 = (x23 * x23) + (x33 * x33) + (x38 * x38) + (x15 * x15);
	const FLT x46 = 1.0 / 2.0 * (1. / (x45 * sqrt(x45)));
	const FLT x47 = ((x43 * x44) + (x24 * x18) + (x37 * x39) + (x30 * x34)) * x46;
	const FLT x48 = x47 * x15;
	const FLT x49 = x47 * (*_x0).Pose.Rot[2];
	const FLT x50 = 1. / sqrt(x45);
	const FLT x51 = x50 * (*_x0).Pose.Rot[1];
	const FLT x52 = x50 * (*_x0).Pose.Rot[2];
	const FLT x53 = x52 * x37;
	const FLT x54 = x47 * x33;
	const FLT x55 = x50 * (*_x0).Pose.Rot[3];
	const FLT x56 = x50 * (*_x0).Pose.Rot[0];
	const FLT x57 = x56 * x18;
	const FLT x58 = x47 * x23;
	const FLT x59 = (-1 * x58 * (*_x0).Pose.Rot[0]) + x57 + (-1 * x49 * x38) + (-1 * x48 * (*_x0).Pose.Rot[1]) +
					(-1 * x55 * x30) + (x51 * x43) + x53 + (x54 * (*_x0).Pose.Rot[3]);
	const FLT x60 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x61 = t * t;
	const FLT x62 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x63 = x62 * x62;
	const FLT x64 = x63 * x61;
	const FLT x65 = x60 * x60;
	const FLT x66 = x61 * x65;
	const FLT x67 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x68 = x67 * x67;
	const FLT x69 = x61 * x68;
	const FLT x70 = 1e-10 + x69 + x64 + x66;
	const FLT x71 = sqrt(x70);
	const FLT x72 = 0.5 * x71;
	const FLT x73 = sin(x72);
	const FLT x74 = x73 * x73;
	const FLT x75 = 1. / x70;
	const FLT x76 = x75 * x74;
	const FLT x77 = cos(x72);
	const FLT x78 = (x76 * x66) + (x76 * x64) + (x77 * x77) + (x76 * x69);
	const FLT x79 = 1. / sqrt(x78);
	const FLT x80 = (1. / x71) * x73;
	const FLT x81 = t * x80;
	const FLT x82 = x81 * x79;
	const FLT x83 = x82 * x60;
	const FLT x84 = -1 * x51 * x18;
	const FLT x85 = x55 * x37;
	const FLT x86 = x47 * x38;
	const FLT x87 = (-1 * x52 * x30) + x84 + (x58 * (*_x0).Pose.Rot[1]) + (-1 * x48 * (*_x0).Pose.Rot[0]) +
					(x56 * x43) + (x86 * (*_x0).Pose.Rot[3]) + (x49 * x33) + (-1 * x85);
	const FLT x88 = x79 * x77;
	const FLT x89 = x52 * x18;
	const FLT x90 = x56 * x37;
	const FLT x91 = (-1 * x89) + (-1 * x48 * (*_x0).Pose.Rot[3]) + (x55 * x43) + x90 + (-1 * x54 * (*_x0).Pose.Rot[1]) +
					(x49 * x23) + (x51 * x30) + (-1 * x86 * (*_x0).Pose.Rot[0]);
	const FLT x92 = x82 * x62;
	const FLT x93 = -1 * x51 * x37;
	const FLT x94 = x55 * x18;
	const FLT x95 = x94 + (x56 * x30) + (-1 * x54 * (*_x0).Pose.Rot[0]) + (-1 * x58 * (*_x0).Pose.Rot[3]) +
					(x86 * (*_x0).Pose.Rot[1]) + x93 + (-1 * x49 * x15) + (x52 * x43);
	const FLT x96 = x82 * x67;
	const FLT x97 = (-1 * x96 * x95) + (-1 * x92 * x91) + (-1 * x83 * x59) + (x88 * x87);
	const FLT x98 = (-1 * x59 * x96) + (x87 * x92) + (x83 * x95) + (x88 * x91);
	const FLT x99 = (x59 * x92) + (x87 * x96) + (-1 * x83 * x91) + (x88 * x95);
	const FLT x100 = (x88 * x59) + (x83 * x87) + (x91 * x96) + (-1 * x92 * x95);
	const FLT x101 = (-1 * x97 * (*_x0).Pose.Rot[1]) + (x100 * (*_x0).Pose.Rot[0]) + (x99 * (*_x0).Pose.Rot[3]) +
					 (-1 * x98 * (*_x0).Pose.Rot[2]);
	const FLT x102 = (x56 * x15) + (-1 * x55 * x38) + (-1 * x51 * x23) + (-1 * x52 * x33);
	const FLT x103 = x82 * x102;
	const FLT x104 = (x51 * x15) + (x52 * x38) + (-1 * x55 * x33) + (x56 * x23);
	const FLT x105 = x82 * x104;
	const FLT x106 = (x51 * x33) + (x56 * x38) + (x55 * x15) + (-1 * x52 * x23);
	const FLT x107 = x88 * x106;
	const FLT x108 = (x52 * x15) + (-1 * x51 * x38) + (x55 * x23) + (x56 * x33);
	const FLT x109 = x82 * x108;
	const FLT x110 = x107 + (x62 * x103) + (x60 * x109) + (-1 * x67 * x105);
	const FLT x111 = x88 * x108;
	const FLT x112 = x79 * x106;
	const FLT x113 = x81 * x112;
	const FLT x114 = x111 + (-1 * x60 * x113) + (x67 * x103) + (x62 * x105);
	const FLT x115 = x88 * x102;
	const FLT x116 = (-1 * x60 * x105) + x115 + (-1 * x62 * x113) + (-1 * x67 * x109);
	const FLT x117 = x88 * x104;
	const FLT x118 = (x60 * x103) + (x67 * x113) + (-1 * x62 * x109) + x117;
	const FLT x119 = (x118 * (*_x0).Pose.Rot[1]) + (x116 * (*_x0).Pose.Rot[0]) + (x110 * (*_x0).Pose.Rot[3]) +
					 (x114 * (*_x0).Pose.Rot[2]);
	const FLT x120 = (x98 * (*_x0).Pose.Rot[3]) + (x100 * (*_x0).Pose.Rot[1]) + (x99 * (*_x0).Pose.Rot[2]) +
					 (x97 * (*_x0).Pose.Rot[0]);
	const FLT x121 = (-1 * x116 * (*_x0).Pose.Rot[1]) + (x114 * (*_x0).Pose.Rot[3]) + (-1 * x110 * (*_x0).Pose.Rot[2]) +
					 (x118 * (*_x0).Pose.Rot[0]);
	const FLT x122 = (-1 * x97 * (*_x0).Pose.Rot[2]) + (x99 * (*_x0).Pose.Rot[0]) + (x98 * (*_x0).Pose.Rot[1]) +
					 (-1 * x100 * (*_x0).Pose.Rot[3]);
	const FLT x123 = (-1 * x114 * (*_x0).Pose.Rot[1]) + (x110 * (*_x0).Pose.Rot[0]) + (-1 * x116 * (*_x0).Pose.Rot[3]) +
					 (x118 * (*_x0).Pose.Rot[2]);
	const FLT x124 = (x100 * (*_x0).Pose.Rot[2]) + (-1 * x97 * (*_x0).Pose.Rot[3]) + (-1 * x99 * (*_x0).Pose.Rot[1]) +
					 (x98 * (*_x0).Pose.Rot[0]);
	const FLT x125 = (x114 * (*_x0).Pose.Rot[0]) + (-1 * x118 * (*_x0).Pose.Rot[3]) + (x110 * (*_x0).Pose.Rot[1]) +
					 (-1 * x116 * (*_x0).Pose.Rot[2]);
	const FLT x126 = x125 * x125;
	const FLT x127 = 1 + (-2 * ((x121 * x121) + x126));
	const FLT x128 = 2 * (1. / x127);
	const FLT x129 = 4 * x125;
	const FLT x130 = -1 * x122 * x129;
	const FLT x131 = 4 * x121;
	const FLT x132 = x127 * x127;
	const FLT x133 = (x119 * x121) + (x123 * x125);
	const FLT x134 = 2 * x133 * (1. / x132);
	const FLT x135 = x132 * (1. / (x132 + (4 * (x133 * x133))));
	const FLT x136 = -1 * x29;
	const FLT x137 = x136 + x27;
	const FLT x138 = (-1 * x17) + x16;
	const FLT x139 = -1 * x42;
	const FLT x140 = x41 + x139;
	const FLT x141 = x35 + x36;
	const FLT x142 = ((x44 * x141) + (x39 * x140) + (x24 * x137) + (x34 * x138)) * x46;
	const FLT x143 = x33 * x142;
	const FLT x144 = x38 * x142;
	const FLT x145 = x15 * x142;
	const FLT x146 = x23 * x142;
	const FLT x147 = (x146 * (*_x0).Pose.Rot[2]) + (x51 * x138) + (x56 * x140) + (-1 * x143 * (*_x0).Pose.Rot[1]) +
					 (-1 * x144 * (*_x0).Pose.Rot[0]) + (-1 * x145 * (*_x0).Pose.Rot[3]) + (x55 * x141) +
					 (-1 * x52 * x137);
	const FLT x148 = (x55 * x137) + (x52 * x141) + (-1 * x146 * (*_x0).Pose.Rot[3]) + (x56 * x138) +
					 (x144 * (*_x0).Pose.Rot[1]) + (-1 * x145 * (*_x0).Pose.Rot[2]) + (-1 * x143 * (*_x0).Pose.Rot[0]) +
					 (-1 * x51 * x140);
	const FLT x149 = (x56 * x141) + (-1 * x55 * x140) + (x143 * (*_x0).Pose.Rot[2]) + (x144 * (*_x0).Pose.Rot[3]) +
					 (-1 * x51 * x137) + (-1 * x145 * (*_x0).Pose.Rot[0]) + (x146 * (*_x0).Pose.Rot[1]) +
					 (-1 * x52 * x138);
	const FLT x150 = (-1 * x145 * (*_x0).Pose.Rot[1]) + (-1 * x146 * (*_x0).Pose.Rot[0]) + (x52 * x140) +
					 (-1 * x144 * (*_x0).Pose.Rot[2]) + (x51 * x141) + (x143 * (*_x0).Pose.Rot[3]) + (x56 * x137) +
					 (-1 * x55 * x138);
	const FLT x151 = (x96 * x149) + (x92 * x150) + (-1 * x83 * x147) + (x88 * x148);
	const FLT x152 = (x88 * x147) + (-1 * x96 * x150) + (x83 * x148) + (x92 * x149);
	const FLT x153 = (-1 * x92 * x147) + (-1 * x96 * x148) + (-1 * x83 * x150) + (x88 * x149);
	const FLT x154 = (-1 * x92 * x148) + (x83 * x149) + (x88 * x150) + (x96 * x147);
	const FLT x155 = (-1 * x153 * (*_x0).Pose.Rot[1]) + (x151 * (*_x0).Pose.Rot[3]) + (x154 * (*_x0).Pose.Rot[0]) +
					 (-1 * x152 * (*_x0).Pose.Rot[2]);
	const FLT x156 = (x151 * (*_x0).Pose.Rot[2]) + (x154 * (*_x0).Pose.Rot[1]) + (x153 * (*_x0).Pose.Rot[0]) +
					 (x152 * (*_x0).Pose.Rot[3]);
	const FLT x157 = (-1 * x154 * (*_x0).Pose.Rot[3]) + (x152 * (*_x0).Pose.Rot[1]) + (-1 * x153 * (*_x0).Pose.Rot[2]) +
					 (x151 * (*_x0).Pose.Rot[0]);
	const FLT x158 = (-1 * x153 * (*_x0).Pose.Rot[3]) + (x154 * (*_x0).Pose.Rot[2]) + (-1 * x151 * (*_x0).Pose.Rot[1]) +
					 (x152 * (*_x0).Pose.Rot[0]);
	const FLT x159 = -1 * x129 * x157;
	const FLT x160 = x40 + x139;
	const FLT x161 = x26 + x136;
	const FLT x162 = ((x34 * x160) + (x37 * x24) + (x44 * x161) + (x39 * x18)) * x46;
	const FLT x163 = x38 * x162;
	const FLT x164 = x33 * x162;
	const FLT x165 = x162 * (*_x0).Pose.Rot[3];
	const FLT x166 = x23 * x162;
	const FLT x167 = (x166 * (*_x0).Pose.Rot[2]) + (-1 * x15 * x165) + x57 + (-1 * x163 * (*_x0).Pose.Rot[0]) +
					 (-1 * x53) + (x55 * x161) + (-1 * x164 * (*_x0).Pose.Rot[1]) + (x51 * x160);
	const FLT x168 = x15 * x162;
	const FLT x169 = (-1 * x164 * (*_x0).Pose.Rot[0]) + (x163 * (*_x0).Pose.Rot[1]) + (-1 * x23 * x165) + x85 +
					 (x56 * x160) + (x52 * x161) + x84 + (-1 * x168 * (*_x0).Pose.Rot[2]);
	const FLT x170 = (x56 * x161) + (x164 * (*_x0).Pose.Rot[2]) + (-1 * x94) + (-1 * x168 * (*_x0).Pose.Rot[0]) + x93 +
					 (x163 * (*_x0).Pose.Rot[3]) + (-1 * x52 * x160) + (x166 * (*_x0).Pose.Rot[1]);
	const FLT x171 = (x51 * x161) + (-1 * x166 * (*_x0).Pose.Rot[0]) + (-1 * x163 * (*_x0).Pose.Rot[2]) +
					 (-1 * x168 * (*_x0).Pose.Rot[1]) + x89 + (x33 * x165) + (-1 * x55 * x160) + x90;
	const FLT x172 = (x92 * x171) + (x96 * x170) + (-1 * x83 * x167) + (x88 * x169);
	const FLT x173 = (-1 * x96 * x171) + (x92 * x170) + (x83 * x169) + (x88 * x167);
	const FLT x174 = (-1 * x96 * x169) + (x88 * x170) + (-1 * x83 * x171) + (-1 * x92 * x167);
	const FLT x175 = (x88 * x171) + (-1 * x92 * x169) + (x83 * x170) + (x96 * x167);
	const FLT x176 = (-1 * x174 * (*_x0).Pose.Rot[1]) + (x172 * (*_x0).Pose.Rot[3]) + (x175 * (*_x0).Pose.Rot[0]) +
					 (-1 * x173 * (*_x0).Pose.Rot[2]);
	const FLT x177 = (x172 * (*_x0).Pose.Rot[2]) + (x173 * (*_x0).Pose.Rot[3]) + (x174 * (*_x0).Pose.Rot[0]) +
					 (x175 * (*_x0).Pose.Rot[1]);
	const FLT x178 = (x173 * (*_x0).Pose.Rot[1]) + (-1 * x174 * (*_x0).Pose.Rot[2]) + (x172 * (*_x0).Pose.Rot[0]) +
					 (-1 * x175 * (*_x0).Pose.Rot[3]);
	const FLT x179 = (x175 * (*_x0).Pose.Rot[2]) + (-1 * x172 * (*_x0).Pose.Rot[1]) + (x173 * (*_x0).Pose.Rot[0]) +
					 (-1 * x174 * (*_x0).Pose.Rot[3]);
	const FLT x180 = -1 * x129 * x178;
	const FLT x181 = -1 * x105;
	const FLT x182 = x79 * x108;
	const FLT x183 = t * t * t;
	const FLT x184 = (1. / (x70 * sqrt(x70))) * x73;
	const FLT x185 = x183 * x184;
	const FLT x186 = x67 * x185;
	const FLT x187 = x60 * x186;
	const FLT x188 = x187 * x182;
	const FLT x189 = t * t * t * t;
	const FLT x190 = (x60 * x60 * x60) * x189;
	const FLT x191 = 1.0 * x77;
	const FLT x192 = x184 * x191;
	const FLT x193 = 2 * (1. / (x70 * x70)) * x74;
	const FLT x194 = x189 * x192;
	const FLT x195 = x60 * x194;
	const FLT x196 = x60 * x61;
	const FLT x197 = 2 * x76;
	const FLT x198 = x189 * x193;
	const FLT x199 = x60 * x198;
	const FLT x200 = x80 * x196;
	const FLT x201 = (-1 * x68 * x199) + (-1 * x200 * x191) + (-1 * x190 * x193) + (x190 * x192) + (-1 * x63 * x199) +
					 (x196 * x197) + (x63 * x195) + (x68 * x195);
	const FLT x202 = x0 * x80;
	const FLT x203 = x201 * x202;
	const FLT x204 = 1. / (x78 * sqrt(x78));
	const FLT x205 = x204 * x104;
	const FLT x206 = x203 * x205;
	const FLT x207 = x204 * x106;
	const FLT x208 = x62 * x203;
	const FLT x209 = x60 * x111;
	const FLT x210 = 0.5 * x75;
	const FLT x211 = x210 * x183;
	const FLT x212 = x67 * x211;
	const FLT x213 = x212 * x209;
	const FLT x214 = x79 * x102;
	const FLT x215 = 0.5 * x214;
	const FLT x216 = x65 * x185;
	const FLT x217 = x79 * x104;
	const FLT x218 = x204 * x108;
	const FLT x219 = x218 * x203;
	const FLT x220 = 1.0 / 2.0 * x77;
	const FLT x221 = x204 * x220;
	const FLT x222 = x221 * x102;
	const FLT x223 = x65 * x211;
	const FLT x224 = x62 * x211;
	const FLT x225 = x60 * x107;
	const FLT x226 = x60 * x112;
	const FLT x227 = x62 * x185;
	const FLT x228 = (x227 * x226) + (-1 * x224 * x225);
	const FLT x229 = x228 + (-1 * x223 * x117) + (-1 * x201 * x222) + (x67 * x219) + (x217 * x216) + (x208 * x207) +
					 x181 + x188 + (x60 * x206) + (-1 * x215 * x200) + (-1 * x213);
	const FLT x230 = -1 * x113;
	const FLT x231 = x60 * x117;
	const FLT x232 = x231 * x224;
	const FLT x233 = x204 * x102;
	const FLT x234 = x60 * x217;
	const FLT x235 = x234 * x227;
	const FLT x236 = x218 * x220;
	const FLT x237 = 0.5 * x182;
	const FLT x238 = x60 * x203;
	const FLT x239 = x60 * x115;
	const FLT x240 = (x212 * x239) + (-1 * x214 * x187);
	const FLT x241 = (x238 * x207) + (-1 * x237 * x200) + (-1 * x62 * x206) + x232 + (-1 * x67 * x233 * x203) +
					 (-1 * x236 * x201) + x230 + (-1 * x223 * x107) + (x216 * x112) + x240 + (-1 * x235);
	const FLT x242 = 0.5 * x112;
	const FLT x243 = x221 * x106;
	const FLT x244 = (x234 * x186) + (-1 * x212 * x231);
	const FLT x245 = x62 * x214;
	const FLT x246 = (-1 * x60 * x245 * x185) + (x239 * x224);
	const FLT x247 = x246 + x244 + (-1 * x216 * x182) + (-1 * x201 * x243) + (-1 * x60 * x219) + (x223 * x111) +
					 (-1 * x200 * x242) + x109 + (-1 * x233 * x208) + (x67 * x206);
	const FLT x248 = 0.5 * x217;
	const FLT x249 = x212 * x225;
	const FLT x250 = x67 * x207;
	const FLT x251 = x226 * x186;
	const FLT x252 = x221 * x104;
	const FLT x253 = x60 * x227 * x182;
	const FLT x254 = x209 * x224;
	const FLT x255 = (-1 * x214 * x216) + (-1 * x254) + x249 + x103 + (x223 * x115) + (-1 * x200 * x248) +
					 (x62 * x219) + (-1 * x203 * x250) + (-1 * x251) + (-1 * x201 * x252) + (-1 * x233 * x238) + x253;
	const FLT x256 = (x255 * (*_x0).Pose.Rot[0]) + (-1 * x247 * (*_x0).Pose.Rot[2]) + (-1 * x229 * (*_x0).Pose.Rot[1]) +
					 (x241 * (*_x0).Pose.Rot[3]);
	const FLT x257 = (-1 * x229 * (*_x0).Pose.Rot[2]) + (-1 * x255 * (*_x0).Pose.Rot[3]) + (x247 * (*_x0).Pose.Rot[1]) +
					 (x241 * (*_x0).Pose.Rot[0]);
	const FLT x258 = (x241 * (*_x0).Pose.Rot[2]) + (x247 * (*_x0).Pose.Rot[3]) + (x229 * (*_x0).Pose.Rot[0]) +
					 (x255 * (*_x0).Pose.Rot[1]);
	const FLT x259 = (x247 * (*_x0).Pose.Rot[0]) + (-1 * x241 * (*_x0).Pose.Rot[1]) + (x255 * (*_x0).Pose.Rot[2]) +
					 (-1 * x229 * (*_x0).Pose.Rot[3]);
	const FLT x260 = -1 * x257 * x129;
	const FLT x261 = x68 * x211;
	const FLT x262 = -1 * x109;
	const FLT x263 = x67 * x191;
	const FLT x264 = x263 * x189 * x184;
	const FLT x265 = x80 * x61;
	const FLT x266 = x61 * x197;
	const FLT x267 = x65 * x198;
	const FLT x268 = x67 * x67 * x67;
	const FLT x269 = (x268 * x194) + (-1 * x268 * x198) + (-1 * x67 * x267) + (x65 * x264) + (x67 * x266) +
					 (-1 * x265 * x263) + (x63 * x264) + (-1 * x63 * x67 * x198);
	const FLT x270 = x202 * x269;
	const FLT x271 = x60 * x270;
	const FLT x272 = x68 * x185;
	const FLT x273 = x207 * x270;
	const FLT x274 = x67 * x224;
	const FLT x275 = x274 * x107;
	const FLT x276 = x62 * x186;
	const FLT x277 = x276 * x112;
	const FLT x278 = x67 * x270;
	const FLT x279 = x67 * x265;
	const FLT x280 = x244 + (x218 * x278) + (-1 * x215 * x279) + (-1 * x275) + x262 + (-1 * x269 * x222) +
					 (x62 * x273) + (x205 * x271) + x277 + (-1 * x261 * x111) + (x272 * x182);
	const FLT x281 = x62 * x270;
	const FLT x282 = (x274 * x115) + (-1 * x245 * x186);
	const FLT x283 = (-1 * x188) + x213 + (-1 * x218 * x271) + (x217 * x272) + (-1 * x261 * x117) + (-1 * x269 * x243) +
					 (x205 * x278) + (-1 * x279 * x242) + (-1 * x233 * x281) + x282 + x181;
	const FLT x284 = (x276 * x182) + (-1 * x274 * x111);
	const FLT x285 = x284 + (x218 * x281) + (-1 * x233 * x271) + (-1 * x272 * x112) + x240 + (-1 * x269 * x252) +
					 (x261 * x107) + (-1 * x279 * x248) + x113 + (-1 * x270 * x250);
	const FLT x286 = x217 * x276;
	const FLT x287 = x274 * x117;
	const FLT x288 = (-1 * x237 * x279) + (x261 * x115) + (-1 * x233 * x278) + (-1 * x249) + (-1 * x286) +
					 (-1 * x214 * x272) + x103 + (-1 * x236 * x269) + x287 + (-1 * x205 * x281) + (x60 * x273) + x251;
	const FLT x289 = (x288 * (*_x0).Pose.Rot[2]) + (x280 * (*_x0).Pose.Rot[0]) + (x285 * (*_x0).Pose.Rot[1]) +
					 (x283 * (*_x0).Pose.Rot[3]);
	const FLT x290 = (x285 * (*_x0).Pose.Rot[0]) + (-1 * x283 * (*_x0).Pose.Rot[2]) + (-1 * x280 * (*_x0).Pose.Rot[1]) +
					 (x288 * (*_x0).Pose.Rot[3]);
	const FLT x291 = (-1 * x280 * (*_x0).Pose.Rot[2]) + (-1 * x285 * (*_x0).Pose.Rot[3]) + (x283 * (*_x0).Pose.Rot[1]) +
					 (x288 * (*_x0).Pose.Rot[0]);
	const FLT x292 = (-1 * x288 * (*_x0).Pose.Rot[1]) + (x285 * (*_x0).Pose.Rot[2]) + (x283 * (*_x0).Pose.Rot[0]) +
					 (-1 * x280 * (*_x0).Pose.Rot[3]);
	const FLT x293 = -1 * x291 * x129;
	const FLT x294 = x62 * x265;
	const FLT x295 = x62 * x62 * x62;
	const FLT x296 = x62 * x68;
	const FLT x297 = (x296 * x194) + (x62 * x266) + (-1 * x294 * x191) + (-1 * x296 * x198) + (x62 * x65 * x194) +
					 (x295 * x194) + (-1 * x62 * x267) + (-1 * x295 * x198);
	const FLT x298 = x63 * x183;
	const FLT x299 = x210 * x298;
	const FLT x300 = x298 * x184;
	const FLT x301 = x202 * x297;
	const FLT x302 = x62 * x301;
	const FLT x303 = x218 * x297;
	const FLT x304 = x202 * x303;
	const FLT x305 = x60 * x301;
	const FLT x306 = x284 + x235 + (-1 * x232) + (x67 * x304) + (x205 * x305) + (-1 * x215 * x294) + (x300 * x112) +
					 (-1 * x297 * x222) + x230 + (-1 * x299 * x107) + (x207 * x302);
	const FLT x307 = (x62 * x304) + x246 + (-1 * x277) + x275 + (-1 * x294 * x248) + (-1 * x250 * x301) +
					 (-1 * x233 * x305) + (-1 * x297 * x252) + (x300 * x182) + x262 + (-1 * x299 * x111);
	const FLT x308 = x67 * x301;
	const FLT x309 = x254 + (-1 * x297 * x243) + (-1 * x253) + (-1 * x233 * x302) + x103 + (-1 * x60 * x304) + x286 +
					 (-1 * x214 * x300) + (x205 * x308) + (-1 * x287) + (x299 * x115) + (-1 * x294 * x242);
	const FLT x310 = x228 + x282 + (x207 * x305) + x105 + (-1 * x220 * x303) + (-1 * x233 * x308) + (-1 * x205 * x302) +
					 (-1 * x237 * x294) + (x299 * x117) + (-1 * x217 * x300);
	const FLT x311 = (x310 * (*_x0).Pose.Rot[2]) + (x309 * (*_x0).Pose.Rot[3]) + (x306 * (*_x0).Pose.Rot[0]) +
					 (x307 * (*_x0).Pose.Rot[1]);
	const FLT x312 = (x307 * (*_x0).Pose.Rot[0]) + (x310 * (*_x0).Pose.Rot[3]) + (-1 * x306 * (*_x0).Pose.Rot[1]) +
					 (-1 * x309 * (*_x0).Pose.Rot[2]);
	const FLT x313 = (-1 * x307 * (*_x0).Pose.Rot[3]) + (x309 * (*_x0).Pose.Rot[1]) + (-1 * x306 * (*_x0).Pose.Rot[2]) +
					 (x310 * (*_x0).Pose.Rot[0]);
	const FLT x314 = (x307 * (*_x0).Pose.Rot[2]) + (-1 * x310 * (*_x0).Pose.Rot[1]) + (-1 * x306 * (*_x0).Pose.Rot[3]) +
					 (x309 * (*_x0).Pose.Rot[0]);
	const FLT x315 = -1 * x313 * x129;
	const FLT x316 =
		2 * (1. / sqrt(1 + (-4 * (((x119 * x125) + (-1 * x123 * x121)) * ((x119 * x125) + (-1 * x123 * x121))))));
	const FLT x317 = 1 + (-2 * (x126 + (x123 * x123)));
	const FLT x318 = 2 * (1. / x317);
	const FLT x319 = 4 * x123;
	const FLT x320 = x317 * x317;
	const FLT x321 = (x119 * x123) + (x121 * x125);
	const FLT x322 = 2 * (1. / x320) * x321;
	const FLT x323 = x320 * (1. / (x320 + (4 * (x321 * x321))));
	const FLT x324 = 0.5 * (*error_model).IMUBias.IMUCorrection[0];
	const FLT x325 = cos(x324);
	const FLT x326 = 0.5 * (*error_model).IMUBias.IMUCorrection[2];
	const FLT x327 = cos(x326);
	const FLT x328 = 0.5 * (*error_model).IMUBias.IMUCorrection[1];
	const FLT x329 = cos(x328);
	const FLT x330 = x327 * x329;
	const FLT x331 = x325 * x330;
	const FLT x332 = 0.5 * x331;
	const FLT x333 = sin(x324);
	const FLT x334 = sin(x328);
	const FLT x335 = sin(x326);
	const FLT x336 = x335 * x334;
	const FLT x337 = x336 * x333;
	const FLT x338 = 0.5 * x337;
	const FLT x339 = x338 + x332;
	const FLT x340 = x336 * x325;
	const FLT x341 = x333 * x330;
	const FLT x342 = x341 + (-1 * x340);
	const FLT x343 = 2 * x342;
	const FLT x344 = 0.5 * x341;
	const FLT x345 = -1 * x344;
	const FLT x346 = 0.5 * x340;
	const FLT x347 = x346 + x345;
	const FLT x348 = x331 + x337;
	const FLT x349 = 2 * x348;
	const FLT x350 = x329 * x335;
	const FLT x351 = x350 * x333;
	const FLT x352 = 0.5 * x351;
	const FLT x353 = x327 * x334;
	const FLT x354 = x353 * x325;
	const FLT x355 = -0.5 * x354;
	const FLT x356 = x355 + (-1 * x352);
	const FLT x357 = x353 * x333;
	const FLT x358 = x350 * x325;
	const FLT x359 = x358 + (-1 * x357);
	const FLT x360 = 2 * x359;
	const FLT x361 = 0.5 * x357;
	const FLT x362 = -1 * x361;
	const FLT x363 = 0.5 * x358;
	const FLT x364 = x363 + x362;
	const FLT x365 = x354 + x351;
	const FLT x366 = 2 * x365;
	const FLT x367 = (x364 * x366) + (x360 * x356) + (x339 * x343) + (x349 * x347);
	const FLT x368 = (x348 * x348) + (x342 * x342) + (x359 * x359) + (x365 * x365);
	const FLT x369 = 1.0 / 2.0 * (1. / (x368 * sqrt(x368)));
	const FLT x370 = x369 * x342;
	const FLT x371 = x367 * x370;
	const FLT x372 = x369 * x365;
	const FLT x373 = x372 * x367;
	const FLT x374 = x369 * x348;
	const FLT x375 = x367 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x376 = 1. / sqrt(x368);
	const FLT x377 = x376 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x378 = x377 * x356;
	const FLT x379 = x376 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x380 = x376 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x381 = x369 * x359;
	const FLT x382 = x367 * x381;
	const FLT x383 = x376 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x384 = x383 * x339;
	const FLT x385 = x384 + (-1 * x382 * (*_x0).IMUBias.IMUCorrection[2]) + (x380 * x347) +
					 (x373 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x371 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x374 * x375) + (-1 * x379 * x364) + x378;
	const FLT x386 = x374 * x367;
	const FLT x387 = -1 * x380 * x339;
	const FLT x388 = x379 * x356;
	const FLT x389 = (x383 * x347) + (-1 * x377 * x364) + (-1 * x386 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x388) +
					 (x373 * (*_x0).IMUBias.IMUCorrection[2]) + (x375 * x370) +
					 (x382 * (*_x0).IMUBias.IMUCorrection[3]) + x387;
	const FLT x390 = -1 * x356 * x380;
	const FLT x391 = x379 * x339;
	const FLT x392 = (x364 * x383) + (x377 * x347) + x390 + (-1 * x373 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x386 * (*_x0).IMUBias.IMUCorrection[2]) + (x375 * x381) +
					 (-1 * x371 * (*_x0).IMUBias.IMUCorrection[3]) + x391;
	const FLT x393 = x377 * x339;
	const FLT x394 = x383 * x356;
	const FLT x395 = x394 + (-1 * x386 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x393) +
					 (-1 * x382 * (*_x0).IMUBias.IMUCorrection[0]) + (x371 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (x379 * x347) + (-1 * x372 * x375) + (x364 * x380);
	const FLT x396 = (-1 * x395 * (*_x0).IMUBias.IMUCorrection[2]) + (x392 * (*_x0).IMUBias.IMUCorrection[3]) +
					 (x385 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x389 * (*_x0).IMUBias.IMUCorrection[1]);
	const FLT x397 = (-1 * x359 * x380) + (x377 * x348) + (x379 * x342) + (x365 * x383);
	const FLT x398 = (x383 * x359) + (x365 * x380) + (-1 * x377 * x342) + (x379 * x348);
	const FLT x399 = (-1 * x380 * x342) + (x383 * x348) + (-1 * x379 * x359) + (-1 * x377 * x365);
	const FLT x400 = (x380 * x348) + (x383 * x342) + (-1 * x379 * x365) + (x377 * x359);
	const FLT x401 = (x400 * (*_x0).IMUBias.IMUCorrection[1]) + (x397 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (x399 * (*_x0).IMUBias.IMUCorrection[0]) + (x398 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x402 = (x395 * (*_x0).IMUBias.IMUCorrection[3]) + (x392 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (x389 * (*_x0).IMUBias.IMUCorrection[0]) + (x385 * (*_x0).IMUBias.IMUCorrection[1]);
	const FLT x403 = (x400 * (*_x0).IMUBias.IMUCorrection[0]) + (x397 * (*_x0).IMUBias.IMUCorrection[3]) +
					 (-1 * x399 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x398 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x404 = (-1 * x389 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x392 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x385 * (*_x0).IMUBias.IMUCorrection[2]) + (x395 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x405 = (x398 * (*_x0).IMUBias.IMUCorrection[1]) + (x397 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x400 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x399 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x406 = (-1 * x389 * (*_x0).IMUBias.IMUCorrection[2]) + (x395 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (-1 * x385 * (*_x0).IMUBias.IMUCorrection[3]) + (x392 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x407 = (x398 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x397 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (-1 * x399 * (*_x0).IMUBias.IMUCorrection[3]) + (x400 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x408 = x405 * x405;
	const FLT x409 = 1 + (-2 * ((x403 * x403) + x408));
	const FLT x410 = 2 * (1. / x409);
	const FLT x411 = 4 * x405;
	const FLT x412 = -1 * x406 * x411;
	const FLT x413 = 4 * x403;
	const FLT x414 = x409 * x409;
	const FLT x415 = (x401 * x403) + (x405 * x407);
	const FLT x416 = 2 * (1. / x414) * x415;
	const FLT x417 = x414 * (1. / (x414 + (4 * (x415 * x415))));
	const FLT x418 = -1 * x363;
	const FLT x419 = x418 + x362;
	const FLT x420 = x352 + x355;
	const FLT x421 = -1 * x346;
	const FLT x422 = x345 + x421;
	const FLT x423 = (-1 * x338) + x332;
	const FLT x424 = (x423 * x366) + (x422 * x360) + (x419 * x343) + (x420 * x349);
	const FLT x425 = x424 * x374;
	const FLT x426 = x424 * x370;
	const FLT x427 = x420 * x376;
	const FLT x428 = x424 * x372;
	const FLT x429 = x424 * x381;
	const FLT x430 = (x422 * x377) + (-1 * x429 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (-1 * x426 * (*_x0).IMUBias.IMUCorrection[0]) + (x419 * x383) + (-1 * x423 * x379) +
					 (-1 * x425 * (*_x0).IMUBias.IMUCorrection[1]) + (x427 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x428 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x431 = (x420 * x383) + (-1 * x423 * x377) + (x428 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (-1 * x419 * x380) + (x426 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x422 * x379) +
					 (-1 * x425 * (*_x0).IMUBias.IMUCorrection[0]) + (x429 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x432 = (-1 * x428 * (*_x0).IMUBias.IMUCorrection[0]) + (x420 * x377) + (-1 * x422 * x380) +
					 (-1 * x426 * (*_x0).IMUBias.IMUCorrection[3]) + (x429 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x419 * x379) + (-1 * x425 * (*_x0).IMUBias.IMUCorrection[2]) + (x423 * x383);
	const FLT x433 = (-1 * x429 * (*_x0).IMUBias.IMUCorrection[0]) + (x426 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (-1 * x428 * (*_x0).IMUBias.IMUCorrection[1]) + (x422 * x383) +
					 (-1 * x425 * (*_x0).IMUBias.IMUCorrection[3]) + (x423 * x380) +
					 (x427 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x419 * x377);
	const FLT x434 = (x433 * (*_x0).IMUBias.IMUCorrection[3]) + (x432 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (x430 * (*_x0).IMUBias.IMUCorrection[1]) + (x431 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x435 = (-1 * x433 * (*_x0).IMUBias.IMUCorrection[2]) + (x430 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x431 * (*_x0).IMUBias.IMUCorrection[1]) + (x432 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x436 = (x430 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x431 * (*_x0).IMUBias.IMUCorrection[3]) +
					 (-1 * x432 * (*_x0).IMUBias.IMUCorrection[1]) + (x433 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x437 = (-1 * x431 * (*_x0).IMUBias.IMUCorrection[2]) + (x433 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x432 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x430 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x438 = -1 * x411 * x437;
	const FLT x439 = x361 + x418;
	const FLT x440 = x344 + x421;
	const FLT x441 = (x440 * x366) + (x360 * x339) + (x356 * x343) + (x439 * x349);
	const FLT x442 = x441 * x370;
	const FLT x443 = x441 * x374;
	const FLT x444 = x441 * x381;
	const FLT x445 = x441 * x372;
	const FLT x446 = (x439 * x383) + x390 + (x442 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x445 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x443 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (x444 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x440 * x377) + (-1 * x391);
	const FLT x447 = (x439 * x377) + (-1 * x445 * (*_x0).IMUBias.IMUCorrection[0]) + x388 +
					 (-1 * x442 * (*_x0).IMUBias.IMUCorrection[3]) + x387 + (x444 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (-1 * x443 * (*_x0).IMUBias.IMUCorrection[2]) + (x440 * x383);
	const FLT x448 = x393 + (-1 * x440 * x379) + (x439 * x380) + (-1 * x442 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x443 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x444 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (x445 * (*_x0).IMUBias.IMUCorrection[3]) + x394;
	const FLT x449 = (-1 * x443 * (*_x0).IMUBias.IMUCorrection[3]) + x384 + (x440 * x380) + (-1 * x378) +
					 (-1 * x445 * (*_x0).IMUBias.IMUCorrection[1]) + (x439 * x379) +
					 (-1 * x444 * (*_x0).IMUBias.IMUCorrection[0]) + (x442 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x450 = (x449 * (*_x0).IMUBias.IMUCorrection[3]) + (x448 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x446 * (*_x0).IMUBias.IMUCorrection[0]) + (x447 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x451 = (-1 * x449 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x446 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (x448 * (*_x0).IMUBias.IMUCorrection[0]) + (x447 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x452 = (x448 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x446 * (*_x0).IMUBias.IMUCorrection[3]) +
					 (-1 * x447 * (*_x0).IMUBias.IMUCorrection[1]) + (x449 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x453 = (-1 * x446 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x448 * (*_x0).IMUBias.IMUCorrection[3]) +
					 (x449 * (*_x0).IMUBias.IMUCorrection[1]) + (x447 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x454 = -1 * x453 * x411;
	const FLT x455 =
		2 * (1. / sqrt(1 + (-4 * (((x401 * x405) + (-1 * x403 * x407)) * ((x401 * x405) + (-1 * x403 * x407))))));
	const FLT x456 = 1 + (-2 * (x408 + (x407 * x407)));
	const FLT x457 = 2 * (1. / x456);
	const FLT x458 = 4 * x407;
	const FLT x459 = x456 * x456;
	const FLT x460 = (x401 * x407) + (x405 * x403);
	const FLT x461 = 2 * (1. / x459) * x460;
	const FLT x462 = x459 * (1. / (x459 + (4 * (x460 * x460))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), x1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x135 * ((-1 * x134 * ((-1 * x101 * x131) + x130)) +
								(((x124 * x125) + (x123 * x122) + (x101 * x119) + (x120 * x121)) * x128)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x135 * ((-1 * x134 * ((-1 * x131 * x155) + x159)) +
								(((x125 * x158) + (x123 * x157) + (x119 * x155) + (x121 * x156)) * x128)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x135 * ((-1 * x134 * ((-1 * x176 * x131) + x180)) +
								(((x123 * x178) + (x119 * x176) + (x125 * x179) + (x121 * x177)) * x128)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x135 * ((-1 * x134 * ((-1 * x256 * x131) + x260)) +
								(((x258 * x121) + (x256 * x119) + (x259 * x125) + (x257 * x123)) * x128)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x135 * ((-1 * x134 * ((-1 * x290 * x131) + x293)) +
								(((x292 * x125) + (x291 * x123) + (x289 * x121) + (x290 * x119)) * x128)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x135 * ((-1 * x134 * ((-1 * x312 * x131) + x315)) +
								(((x313 * x123) + (x314 * x125) + (x311 * x121) + (x312 * x119)) * x128)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						((-1 * x101 * x123) + (x120 * x125) + (-1 * x124 * x121) + (x119 * x122)) * x316);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						((-1 * x121 * x158) + (-1 * x123 * x155) + (x125 * x156) + (x119 * x157)) * x316);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						((-1 * x121 * x179) + (-1 * x123 * x176) + (x125 * x177) + (x119 * x178)) * x316);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						((-1 * x259 * x121) + (x257 * x119) + (x258 * x125) + (-1 * x256 * x123)) * x316);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						((-1 * x292 * x121) + (-1 * x290 * x123) + (x289 * x125) + (x291 * x119)) * x316);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						((-1 * x314 * x121) + (-1 * x312 * x123) + (x311 * x125) + (x313 * x119)) * x316);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x323 * ((-1 * x322 * (x130 + (-1 * x319 * x124))) +
								(((x101 * x125) + (x122 * x121) + (x119 * x124) + (x120 * x123)) * x318)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x323 * ((-1 * x322 * (x159 + (-1 * x319 * x158))) +
								(((x125 * x155) + (x121 * x157) + (x119 * x158) + (x123 * x156)) * x318)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x323 * ((-1 * x322 * (x180 + (-1 * x319 * x179))) +
								(((x121 * x178) + (x125 * x176) + (x119 * x179) + (x123 * x177)) * x318)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x323 * ((-1 * x322 * (x260 + (-1 * x259 * x319))) +
								(((x259 * x119) + (x256 * x125) + (x258 * x123) + (x257 * x121)) * x318)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x323 * ((-1 * x322 * (x293 + (-1 * x292 * x319))) +
								(((x290 * x125) + (x292 * x119) + (x291 * x121) + (x289 * x123)) * x318)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x323 * ((-1 * x322 * (x315 + (-1 * x314 * x319))) +
								(((x312 * x125) + (x313 * x121) + (x314 * x119) + (x311 * x123)) * x318)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), t);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Acc[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x417 * ((-1 * x416 * ((-1 * x413 * x396) + x412)) +
								(((x405 * x404) + (x401 * x396) + (x406 * x407) + (x402 * x403)) * x410)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x417 * ((-1 * x416 * ((-1 * x413 * x435) + x438)) +
								(((x407 * x437) + (x405 * x436) + (x403 * x434) + (x401 * x435)) * x410)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x417 * ((-1 * x416 * ((-1 * x451 * x413) + x454)) +
								(((x453 * x407) + (x452 * x405) + (x450 * x403) + (x451 * x401)) * x410)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						((-1 * x404 * x403) + (-1 * x407 * x396) + (x401 * x406) + (x402 * x405)) * x455);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						((-1 * x403 * x436) + (-1 * x407 * x435) + (x401 * x437) + (x405 * x434)) * x455);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((-1 * x452 * x403) + (-1 * x451 * x407) + (x453 * x401) + (x450 * x405)) * x455);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x462 * ((-1 * x461 * (x412 + (-1 * x458 * x404))) +
								(((x406 * x403) + (x402 * x407) + (x401 * x404) + (x405 * x396)) * x457)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x462 * ((-1 * x461 * (x438 + (-1 * x458 * x436))) +
								(((x403 * x437) + (x405 * x435) + (x401 * x436) + (x407 * x434)) * x457)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x462 * ((-1 * x461 * (x454 + (-1 * x452 * x458))) +
								(((x451 * x405) + (x453 * x403) + (x452 * x401) + (x450 * x407)) * x457)));
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
}

// Full version Jacobian of SurviveKalmanModelErrorPredict wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void SurviveObsErrorModelNoFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = sqrt(1e-10 + ((*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2]) + ((*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1]));
	const FLT x1 = 2 * (1. / x0) * atan2(x0, (*_x0).Pose.Rot[0]);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]);
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]);
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]);
	out->AxisAngleRot[0]=(x1 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	out->AxisAngleRot[1]=(x1 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	out->AxisAngleRot[2]=(x1 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
}

// Jacobian of SurviveObsErrorModelNoFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).IMUBias.AccBias[0],
// (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0], (*_x0).IMUBias.AccScale[1],
// (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1], (*_x0).IMUBias.GyroBias[2],
// (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1], (*_x0).IMUBias.IMUCorrection[2],
// (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2]]
static inline void SurviveObsErrorModelNoFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = (*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3];
	const FLT x1 = (*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1];
	const FLT x2 = (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2];
	const FLT x3 = 1e-10 + x2 + x0 + x1;
	const FLT x4 = 2 * (1. / (x3 + ((*_x0).Pose.Rot[0] * (*_x0).Pose.Rot[0])));
	const FLT x5 = (1. / x3) * (*_x0).Pose.Rot[0];
	const FLT x6 = x4 * x5;
	const FLT x7 = sqrt(x3);
	const FLT x8 = 2 * atan2(x7, (*_x0).Pose.Rot[0]);
	const FLT x9 = x8 * (1. / x7);
	const FLT x10 = (1. / (x3 * sqrt(x3))) * x8;
	const FLT x11 = x4 * (*_x0).Pose.Rot[2];
	const FLT x12 = x5 * (*_x0).Pose.Rot[1];
	const FLT x13 = (x12 * x11) + (-1 * x10 * (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[1]);
	const FLT x14 = x10 * (*_x0).Pose.Rot[3];
	const FLT x15 = x4 * (*_x0).Pose.Rot[3];
	const FLT x16 = (x15 * x12) + (-1 * x14 * (*_x0).Pose.Rot[1]);
	const FLT x17 = (x5 * x15 * (*_x0).Pose.Rot[2]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), -1 * x4 * (*_x0).Pose.Rot[1]);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (-1 * x1 * x10) + (x1 * x6) + x9);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x13);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x16);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), -1 * x11);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x13);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (-1 * x2 * x10) + (x2 * x6) + x9);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x17);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), -1 * x15);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x16);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x17);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (x0 * x6) + (-1 * x0 * x10) + x9);
}

// Full version Jacobian of SurviveObsErrorModelNoFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]] Jacobian of SurviveObsErrorModelNoFlip wrt
// [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorModelNoFlip_jac_Z(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), -1);
}

// Full version Jacobian of SurviveObsErrorModelNoFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorModelFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = sqrt(1e-10 + ((*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2]) + ((*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1]));
	const FLT x1 = 2 * (1. / x0) * atan2(x0, (*_x0).Pose.Rot[0]);
	const FLT x2 = (x1 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x3 = (x1 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x4 = (x1 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x5 = sqrt(1e-10 + (x4 * x4) + (x3 * x3) + (x2 * x2));
	const FLT x6 = (1. / x5) * (-6.28318530717959 + x5);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]);
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]);
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]);
	out->AxisAngleRot[0]=x2 * x6;
	out->AxisAngleRot[1]=x4 * x6;
	out->AxisAngleRot[2]=x3 * x6;
}

// Jacobian of SurviveObsErrorModelFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).IMUBias.AccBias[0],
// (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0], (*_x0).IMUBias.AccScale[1],
// (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1], (*_x0).IMUBias.GyroBias[2],
// (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1], (*_x0).IMUBias.IMUCorrection[2],
// (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2]]
static inline void SurviveObsErrorModelFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = (*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3];
	const FLT x1 = (*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1];
	const FLT x2 = (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2];
	const FLT x3 = 1e-10 + x2 + x0 + x1;
	const FLT x4 = sqrt(x3);
	const FLT x5 = 2 * atan2(x4, (*_x0).Pose.Rot[0]);
	const FLT x6 = (1. / x4) * x5;
	const FLT x7 = (x6 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x8 = 1. / (x3 + ((*_x0).Pose.Rot[0] * (*_x0).Pose.Rot[0]));
	const FLT x9 = 4 * x8;
	const FLT x10 = (x6 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x11 = (x6 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x12 = (-1 * x9 * x11 * (*_x0).Pose.Rot[1]) + (-1 * x7 * x9 * (*_x0).Pose.Rot[2]) + (-1 * x9 * x10 * (*_x0).Pose.Rot[3]);
	const FLT x13 = 1e-10 + (x10 * x10) + (x7 * x7) + (x11 * x11);
	const FLT x14 = 1.0/2.0 * (1. / x13);
	const FLT x15 = x14 * x11;
	const FLT x16 = sqrt(x13);
	const FLT x17 = -6.28318530717959 + x16;
	const FLT x18 = 1.0/2.0 * (1. / (x13 * sqrt(x13))) * x17;
	const FLT x19 = x11 * x18;
	const FLT x20 = x17 * (1. / x16);
	const FLT x21 = 2 * x8;
	const FLT x22 = x20 * x21;
	const FLT x23 = (1. / (x3 * sqrt(x3))) * x5;
	const FLT x24 = (*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[1];
	const FLT x25 = (1. / x3) * x21 * (*_x0).Pose.Rot[0];
	const FLT x26 = (x24 * x25) + (-1 * x24 * x23);
	const FLT x27 = 2 * x7;
	const FLT x28 = x23 * (*_x0).Pose.Rot[3];
	const FLT x29 = x25 * (*_x0).Pose.Rot[3];
	const FLT x30 = (x29 * (*_x0).Pose.Rot[1]) + (-1 * x28 * (*_x0).Pose.Rot[1]);
	const FLT x31 = 2 * x10;
	const FLT x32 = (-1 * x1 * x23) + (x1 * x25) + x6;
	const FLT x33 = 2 * x11;
	const FLT x34 = (x32 * x33) + (x26 * x27) + (x30 * x31);
	const FLT x35 = (-1 * x2 * x23) + (x2 * x25) + x6;
	const FLT x36 = (x29 * (*_x0).Pose.Rot[2]) + (-1 * x28 * (*_x0).Pose.Rot[2]);
	const FLT x37 = (x33 * x26) + (x35 * x27) + (x31 * x36);
	const FLT x38 = x20 * x26;
	const FLT x39 = (-1 * x0 * x23) + (x0 * x25) + x6;
	const FLT x40 = (x30 * x33) + (x36 * x27) + (x31 * x39);
	const FLT x41 = x30 * x20;
	const FLT x42 = x7 * x14;
	const FLT x43 = x7 * x18;
	const FLT x44 = x36 * x20;
	const FLT x45 = x14 * x10;
	const FLT x46 = x10 * x18;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), (-1 * x22 * (*_x0).Pose.Rot[1]) + (x15 * x12) + (-1 * x12 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (x32 * x20) + (x34 * x15) + (-1 * x34 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x38 + (x37 * x15) + (-1 * x37 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x41 + (x40 * x15) + (-1 * x40 * x19));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), (-1 * x22 * (*_x0).Pose.Rot[2]) + (x42 * x12) + (-1 * x43 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (x42 * x34) + x38 + (-1 * x43 * x34));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (x35 * x20) + (x42 * x37) + (-1 * x43 * x37));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x44 + (x40 * x42) + (-1 * x40 * x43));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), (-1 * x22 * (*_x0).Pose.Rot[3]) + (x45 * x12) + (-1 * x46 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x41 + (x45 * x34) + (-1 * x46 * x34));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (x45 * x37) + x44 + (-1 * x46 * x37));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (x40 * x45) + (x39 * x20) + (-1 * x40 * x46));
}

// Full version Jacobian of SurviveObsErrorModelFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]] Jacobian of SurviveObsErrorModelFlip wrt
// [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorModelFlip_jac_Z(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveAxisAnglePose* Z) {
	const FLT x0 = sqrt(1e-10 + ((*_x0).Pose.Rot[2] * (*_x0).Pose.Rot[2]) + ((*_x0).Pose.Rot[3] * (*_x0).Pose.Rot[3]) + ((*_x0).Pose.Rot[1] * (*_x0).Pose.Rot[1]));
	const FLT x1 = 2 * (1. / x0) * atan2(x0, (*_x0).Pose.Rot[0]);
	const FLT x2 = (x1 * (*_x0).Pose.Rot[3]) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x3 = x2 * x2;
	const FLT x4 = (x1 * (*_x0).Pose.Rot[1]) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x5 = x4 * x4;
	const FLT x6 = (x1 * (*_x0).Pose.Rot[2]) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x7 = x6 * x6;
	const FLT x8 = 1e-10 + x7 + x3 + x5;
	const FLT x9 = 1. / x8;
	const FLT x10 = sqrt(x8);
	const FLT x11 = -6.28318530717959 + x10;
	const FLT x12 = (1. / (x8 * sqrt(x8))) * x11;
	const FLT x13 = -1 * x11 * (1. / x10);
	const FLT x14 = x4 * x6;
	const FLT x15 = (x14 * x12) + (-1 * x9 * x14);
	const FLT x16 = x2 * x9;
	const FLT x17 = x2 * x12;
	const FLT x18 = (x4 * x17) + (-1 * x4 * x16);
	const FLT x19 = (x6 * x17) + (-1 * x6 * x16);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), (-1 * x5 * x9) + x13 + (x5 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), x15);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), x15);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), x13 + (-1 * x7 * x9) + (x7 * x12));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), x18);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), x19);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), (-1 * x3 * x9) + x13 + (x3 * x12));
}

// Full version Jacobian of SurviveObsErrorModelFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelNoFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x5 * x9;
	const FLT x14 = x3 * x8;
	const FLT x15 = (x1 * x14) + (-1 * x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x11 * x17;
	const FLT x19 = x17 * (*_x0).Pose.Rot[2];
	const FLT x20 = x17 * x16;
	const FLT x21 = x12 * x17;
	const FLT x22 =
		(x20 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x18 * (*_x0).Pose.Rot[3]) + (x15 * x19);
	const FLT x23 = x15 * x17;
	const FLT x24 =
		(x18 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[0]) + (-1 * x19 * x16) + (x21 * (*_x0).Pose.Rot[3]);
	const FLT x25 =
		(-1 * x23 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[3]) + (x12 * x19);
	const FLT x26 = sqrt(1e-10 + (x24 * x24) + (x25 * x25) + (x22 * x22));
	const FLT x27 = 2 * (1. / x26) *
					atan2(x26, (-1 * x20 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[0]) +
								   (-1 * x23 * (*_x0).Pose.Rot[3]) + (-1 * x11 * x19));
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]) + (*err).Pose.Pos[0];
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]) + (*err).Pose.Pos[1];
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]) + (*err).Pose.Pos[2];
	out->AxisAngleRot[0] = (x22 * x27) + (-1 * (*Z).AxisAngleRot[0]);
	out->AxisAngleRot[1] = (x25 * x27) + (-1 * (*Z).AxisAngleRot[1]);
	out->AxisAngleRot[2] = (x24 * x27) + (-1 * (*Z).AxisAngleRot[2]);
}

// Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveObsErrorStateErrorModelNoFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x5 * x9;
	const FLT x14 = x3 * x8;
	const FLT x15 = (x1 * x14) + (-1 * x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x17 * x16;
	const FLT x19 = x12 * x17;
	const FLT x20 = x11 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[3]) +
					(x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = 2 * x20;
	const FLT x24 = (x21 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (-1 * x18 * (*_x0).Pose.Rot[2]) +
					(x19 * (*_x0).Pose.Rot[3]);
	const FLT x25 = 2 * x21;
	const FLT x26 = (x19 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(x21 * (*_x0).Pose.Rot[2]);
	const FLT x27 = 2 * x26;
	const FLT x28 = (x27 * x18) + (x22 * x23) + (x24 * x25);
	const FLT x29 = 1e-10 + (x22 * x22) + (x24 * x24) + (x26 * x26);
	const FLT x30 = sqrt(x29);
	const FLT x31 = (x19 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (-1 * x18 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x32 = atan2(x30, x31);
	const FLT x33 = x32 * (1. / (x29 * sqrt(x29)));
	const FLT x34 = x33 * x26;
	const FLT x35 = 1. / x30;
	const FLT x36 = 1.0 / 2.0 * (1. / x31) * x35;
	const FLT x37 = x31 * x31;
	const FLT x38 = x30 * (1. / x37);
	const FLT x39 = (1. / (x29 + x37)) * x35 * x37;
	const FLT x40 = ((-1 * x38 * x19) + (x36 * x28)) * x39;
	const FLT x41 = 2 * x18;
	const FLT x42 = x32 * x35;
	const FLT x43 = x41 * x42;
	const FLT x44 = 2 * x19;
	const FLT x45 = (x44 * x26) + (-1 * x25 * x22) + (x24 * x23);
	const FLT x46 = (x38 * x18) + (x45 * x36);
	const FLT x47 = x39 * x27;
	const FLT x48 = x42 * x44;
	const FLT x49 = (x21 * x27) + (x44 * x22) + (-1 * x41 * x24);
	const FLT x50 = (x38 * x20) + (x49 * x36);
	const FLT x51 = x42 * x25;
	const FLT x52 = (-1 * x23 * x26) + (x41 * x22) + (x44 * x24);
	const FLT x53 = x52 * x33;
	const FLT x54 = (x38 * x21) + (x52 * x36);
	const FLT x55 = x42 * x23;
	const FLT x56 = x33 * x22;
	const FLT x57 = 2 * x40;
	const FLT x58 = 2 * x39;
	const FLT x59 = x58 * x22;
	const FLT x60 = x33 * x24;
	const FLT x61 = x58 * x24;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x43 + (-1 * x34 * x28) + (x40 * x27));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x48 + (-1 * x45 * x34) + (x46 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), (-1 * x49 * x34) + x51 + (x50 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(-1 * x55) + (-1 * x53 * x26) + (x54 * x47));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x55 + (-1 * x56 * x28) + (x57 * x22));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x51) + (x59 * x46) + (-1 * x56 * x45));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x48 + (-1 * x56 * x49) + (x50 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x43 + (-1 * x53 * x22) + (x54 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x51 + (-1 * x60 * x28) + (x57 * x24));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), (-1 * x60 * x45) + x55 + (x61 * x46));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(-1 * x43) + (x61 * x50) + (-1 * x60 * x49));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x48 + (-1 * x53 * x24) + (x61 * x54));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]] Jacobian of
// SurviveObsErrorStateErrorModelNoFlip wrt [(*err).Acc[0], (*err).Acc[1], (*err).Acc[2], (*err).IMUBias.AccBias[0],
// (*err).IMUBias.AccBias[1], (*err).IMUBias.AccBias[2], (*err).IMUBias.AccScale[0], (*err).IMUBias.AccScale[1],
// (*err).IMUBias.AccScale[2], (*err).IMUBias.GyroBias[0], (*err).IMUBias.GyroBias[1], (*err).IMUBias.GyroBias[2],
// (*err).IMUBias.IMUCorrection[0], (*err).IMUBias.IMUCorrection[1], (*err).IMUBias.IMUCorrection[2],
// (*err).Pose.AxisAngleRot[0], (*err).Pose.AxisAngleRot[1], (*err).Pose.AxisAngleRot[2], (*err).Pose.Pos[0],
// (*err).Pose.Pos[1], (*err).Pose.Pos[2], (*err).Velocity.AxisAngleRot[0], (*err).Velocity.AxisAngleRot[1],
// (*err).Velocity.AxisAngleRot[2], (*err).Velocity.Pos[0], (*err).Velocity.Pos[1], (*err).Velocity.Pos[2]]
static inline void SurviveObsErrorStateErrorModelNoFlip_jac_err(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = sin(x0);
	const FLT x9 = cos(x4);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + x7;
	const FLT x14 = x6 * x8;
	const FLT x15 = x1 * x11;
	const FLT x16 = x15 + x14;
	const FLT x17 = x5 * x10;
	const FLT x18 = x8 * x17;
	const FLT x19 = x3 * x9;
	const FLT x20 = x1 * x19;
	const FLT x21 = x20 + (-1 * x18);
	const FLT x22 = x8 * x19;
	const FLT x23 = x1 * x17;
	const FLT x24 = x23 + (-1 * x22);
	const FLT x25 = (x24 * x24) + (x13 * x13) + (x21 * x21) + (x16 * x16);
	const FLT x26 = 1.0 / 2.0 * (1. / (x25 * sqrt(x25)));
	const FLT x27 = x26 * (*_x0).Pose.Rot[1];
	const FLT x28 = 0.5 * x15;
	const FLT x29 = 0.5 * x14;
	const FLT x30 = x29 + x28;
	const FLT x31 = 2 * x24;
	const FLT x32 = 0.5 * x7;
	const FLT x33 = -0.5 * x12;
	const FLT x34 = x33 + (-1 * x32);
	const FLT x35 = 2 * x21;
	const FLT x36 = 0.5 * x18;
	const FLT x37 = -1 * x36;
	const FLT x38 = 0.5 * x20;
	const FLT x39 = x38 + x37;
	const FLT x40 = 2 * x13;
	const FLT x41 = 0.5 * x23;
	const FLT x42 = -1 * x41;
	const FLT x43 = 0.5 * x22;
	const FLT x44 = x43 + x42;
	const FLT x45 = 2 * x16;
	const FLT x46 = (x44 * x45) + (x30 * x31) + (x40 * x39) + (x34 * x35);
	const FLT x47 = x46 * x16;
	const FLT x48 = 1. / sqrt(x25);
	const FLT x49 = x48 * (*_x0).Pose.Rot[1];
	const FLT x50 = x26 * (*_x0).Pose.Rot[0];
	const FLT x51 = x50 * x46;
	const FLT x52 = x26 * x13;
	const FLT x53 = x52 * x46;
	const FLT x54 = x48 * (*_x0).Pose.Rot[3];
	const FLT x55 = x48 * (*_x0).Pose.Rot[0];
	const FLT x56 = x55 * x30;
	const FLT x57 = x48 * (*_x0).Pose.Rot[2];
	const FLT x58 = x57 * x34;
	const FLT x59 = x26 * (*_x0).Pose.Rot[2];
	const FLT x60 = x46 * x21;
	const FLT x61 = (-1 * x60 * x59) + x58 + x56 + (x44 * x49) + (-1 * x47 * x27) + (-1 * x51 * x24) +
					(x53 * (*_x0).Pose.Rot[3]) + (-1 * x54 * x39);
	const FLT x62 = x48 * x21;
	const FLT x63 = (x49 * x13) + (x62 * (*_x0).Pose.Rot[0]) + (-1 * x57 * x24) + (x54 * x16);
	const FLT x64 = (-1 * x54 * x13) + (x49 * x16) + (x55 * x24) + (x62 * (*_x0).Pose.Rot[2]);
	const FLT x65 = (-1 * x62 * (*_x0).Pose.Rot[1]) + (x55 * x13) + (x54 * x24) + (x57 * x16);
	const FLT x66 = 1e-10 + (x65 * x65) + (x63 * x63) + (x64 * x64);
	const FLT x67 = sqrt(x66);
	const FLT x68 = (-1 * x49 * x24) + (x55 * x16) + (-1 * x54 * x21) + (-1 * x57 * x13);
	const FLT x69 = atan2(x67, x68);
	const FLT x70 = 1. / x67;
	const FLT x71 = 2 * x70 * x69;
	const FLT x72 = -1 * x49 * x34;
	const FLT x73 = x60 * x26;
	const FLT x74 = x46 * x24;
	const FLT x75 = x26 * (*_x0).Pose.Rot[3];
	const FLT x76 = x54 * x30;
	const FLT x77 = (-1 * x51 * x13) + (x57 * x44) + (x73 * (*_x0).Pose.Rot[1]) + (x55 * x39) + x76 + (-1 * x75 * x74) +
					x72 + (-1 * x59 * x47);
	const FLT x78 = 2 * x65;
	const FLT x79 = x52 * (*_x0).Pose.Rot[1];
	const FLT x80 = x57 * x30;
	const FLT x81 = x55 * x34;
	const FLT x82 = x81 + (x74 * x59) + (-1 * x75 * x47) + (-1 * x79 * x46) + (x54 * x44) + (-1 * x80) +
					(-1 * x51 * x21) + (x49 * x39);
	const FLT x83 = 2 * x63;
	const FLT x84 = 2 * x64;
	const FLT x85 = (x78 * x77) + (x84 * x61) + (x82 * x83);
	const FLT x86 = (1. / (x66 * sqrt(x66))) * x69;
	const FLT x87 = x85 * x86;
	const FLT x88 = 1.0 / 2.0 * x70 * (1. / x68);
	const FLT x89 = -1 * x49 * x30;
	const FLT x90 = x54 * x34;
	const FLT x91 = x68 * x68;
	const FLT x92 = x67 * (1. / x91);
	const FLT x93 = (1. / (x66 + x91)) * x70 * x91;
	const FLT x94 = x93 * ((-1 *
							((x55 * x44) + (x53 * (*_x0).Pose.Rot[2]) + (-1 * x90) + x89 + (-1 * x51 * x16) +
							 (x74 * x27) + (x73 * (*_x0).Pose.Rot[3]) + (-1 * x57 * x39)) *
							x92) +
						   (x88 * x85));
	const FLT x95 = (-1 * x29) + x28;
	const FLT x96 = -1 * x38;
	const FLT x97 = x96 + x37;
	const FLT x98 = -1 * x43;
	const FLT x99 = x42 + x98;
	const FLT x100 = x32 + x33;
	const FLT x101 = (x45 * x100) + (x95 * x40) + (x97 * x31) + (x99 * x35);
	const FLT x102 = x24 * x101;
	const FLT x103 = x99 * x48;
	const FLT x104 = x21 * x101;
	const FLT x105 = x97 * x48;
	const FLT x106 = x16 * x101;
	const FLT x107 = x26 * x106;
	const FLT x108 = (-1 * x107 * (*_x0).Pose.Rot[3]) + (x54 * x100) + (-1 * x105 * (*_x0).Pose.Rot[2]) +
					 (-1 * x79 * x101) + (x95 * x49) + (x103 * (*_x0).Pose.Rot[0]) + (x59 * x102) + (-1 * x50 * x104);
	const FLT x109 = x75 * x101;
	const FLT x110 = x50 * x13;
	const FLT x111 = (x57 * x100) + (-1 * x101 * x110) + (-1 * x24 * x109) + (x27 * x104) + (x55 * x95) +
					 (-1 * x59 * x106) + (-1 * x103 * (*_x0).Pose.Rot[1]) + (x54 * x97);
	const FLT x112 = x52 * x101;
	const FLT x113 = (x105 * (*_x0).Pose.Rot[0]) + (x103 * (*_x0).Pose.Rot[2]) + (-1 * x59 * x104) + (x49 * x100) +
					 (-1 * x107 * (*_x0).Pose.Rot[1]) + (x112 * (*_x0).Pose.Rot[3]) + (-1 * x54 * x95) +
					 (-1 * x50 * x102);
	const FLT x114 = (x84 * x113) + (x83 * x108) + (x78 * x111);
	const FLT x115 = x86 * x114;
	const FLT x116 =
		x93 * ((-1 *
				((x55 * x100) + (x112 * (*_x0).Pose.Rot[2]) + (-1 * x57 * x95) + (-1 * x105 * (*_x0).Pose.Rot[1]) +
				 (x27 * x102) + (-1 * x50 * x106) + (x21 * x109) + (-1 * x54 * x99)) *
				x92) +
			   (x88 * x114));
	const FLT x117 = x41 + x98;
	const FLT x118 = x36 + x96;
	const FLT x119 = (x45 * x118) + (x40 * x117) + (x31 * x34) + (x30 * x35);
	const FLT x120 = x24 * x119;
	const FLT x121 = x21 * x119;
	const FLT x122 = x26 * x121;
	const FLT x123 = x16 * x119;
	const FLT x124 = (-1 * x59 * x123) + (x122 * (*_x0).Pose.Rot[1]) + x89 + (-1 * x75 * x120) + x90 +
					 (-1 * x110 * x119) + (x57 * x118) + (x55 * x117);
	const FLT x125 = x56 + (-1 * x58) + (x54 * x118) + (x49 * x117) + (-1 * x50 * x121) + (-1 * x75 * x123) +
					 (-1 * x79 * x119) + (x59 * x120);
	const FLT x126 = x52 * x119;
	const FLT x127 = x80 + (-1 * x54 * x117) + (-1 * x27 * x123) + (x49 * x118) + x81 + (-1 * x50 * x120) +
					 (-1 * x122 * (*_x0).Pose.Rot[2]) + (x126 * (*_x0).Pose.Rot[3]);
	const FLT x128 = (x84 * x127) + (x78 * x124) + (x83 * x125);
	const FLT x129 = x86 * x128;
	const FLT x130 = x93 * ((-1 *
							 ((-1 * x57 * x117) + (x27 * x120) + (-1 * x50 * x123) + x72 + (x126 * (*_x0).Pose.Rot[2]) +
							  (x55 * x118) + (x122 * (*_x0).Pose.Rot[3]) + (-1 * x76)) *
							 x92) +
							(x88 * x128));
	const FLT x131 = x86 * x65;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x71 * x61) + (x84 * x94) + (-1 * x87 * x64));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x64 * x115) + (x71 * x113) + (x84 * x116));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x71 * x127) + (-1 * x64 * x129) + (x84 * x130));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x71 * x77) + (-1 * x85 * x131) + (x78 * x94));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x71 * x111) + (-1 * x114 * x131) + (x78 * x116));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x128 * x131) + (x71 * x124) + (x78 * x130));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x83 * x94) + (x82 * x71) + (-1 * x87 * x63));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x71 * x108) + (-1 * x63 * x115) + (x83 * x116));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x71 * x125) + (-1 * x63 * x129) + (x83 * x130));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*err).Acc[0], (*err).Acc[1], (*err).Acc[2],
// (*err).IMUBias.AccBias[0], (*err).IMUBias.AccBias[1], (*err).IMUBias.AccBias[2], (*err).IMUBias.AccScale[0],
// (*err).IMUBias.AccScale[1], (*err).IMUBias.AccScale[2], (*err).IMUBias.GyroBias[0], (*err).IMUBias.GyroBias[1],
// (*err).IMUBias.GyroBias[2], (*err).IMUBias.IMUCorrection[0], (*err).IMUBias.IMUCorrection[1],
// (*err).IMUBias.IMUCorrection[2], (*err).Pose.AxisAngleRot[0], (*err).Pose.AxisAngleRot[1],
// (*err).Pose.AxisAngleRot[2], (*err).Pose.Pos[0], (*err).Pose.Pos[1], (*err).Pose.Pos[2],
// (*err).Velocity.AxisAngleRot[0], (*err).Velocity.AxisAngleRot[1], (*err).Velocity.AxisAngleRot[2],
// (*err).Velocity.Pos[0], (*err).Velocity.Pos[1], (*err).Velocity.Pos[2]] Jacobian of
// SurviveObsErrorStateErrorModelNoFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2],
// (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelNoFlip_jac_Z(CnMat *Hx, const SurviveKalmanModel *_x0,
															  const SurviveKalmanErrorModel *err,
															  const SurviveAxisAnglePose *Z) {
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[0]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[1]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, Pos[2]) / sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, AxisAngleRot[2])/sizeof(FLT), -1);
}

// Full version Jacobian of SurviveObsErrorStateErrorModelNoFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelFlip(SurviveAxisAnglePose* out, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x1 * x8;
	const FLT x13 = x5 * x7;
	const FLT x14 = (x9 * x13) + (x3 * x12);
	const FLT x15 = (x1 * x13) + (-1 * x3 * x10);
	const FLT x16 = (x6 * x9) + (-1 * x7 * x12);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * x16;
	const FLT x21 = x14 * x17;
	const FLT x22 =
		(x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x11 * x18) + (x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 =
		(x19 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[2]) + (x23 * (*_x0).Pose.Rot[1]) + (x14 * x18);
	const FLT x25 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[3]) +
					(x21 * (*_x0).Pose.Rot[2]);
	const FLT x26 = sqrt(1e-10 + (x24 * x24) + (x25 * x25) + (x22 * x22));
	const FLT x27 = 2 * (1. / x26) *
					atan2(x26, (x21 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[1]) +
								   (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x23 * (*_x0).Pose.Rot[2]));
	const FLT x28 = (x22 * x27) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x29 = (x24 * x27) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x30 = (x25 * x27) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x31 = sqrt(1e-10 + (x30 * x30) + (x29 * x29) + (x28 * x28));
	const FLT x32 = (1. / x31) * (-6.28318530717959 + x31);
	out->Pos[0]=(*_x0).Pose.Pos[0] + (-1 * (*Z).Pos[0]) + (*err).Pose.Pos[0];
	out->Pos[1]=(*_x0).Pose.Pos[1] + (-1 * (*Z).Pos[1]) + (*err).Pose.Pos[1];
	out->Pos[2]=(*_x0).Pose.Pos[2] + (-1 * (*Z).Pos[2]) + (*err).Pose.Pos[2];
	out->AxisAngleRot[0] = x32 * x28;
	out->AxisAngleRot[1] = x30 * x32;
	out->AxisAngleRot[2] = x32 * x29;
}

// Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveObsErrorStateErrorModelFlip_jac_x0(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x5 = cos(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x2);
	const FLT x8 = sin(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x1 * x8;
	const FLT x13 = x5 * x7;
	const FLT x14 = (x9 * x13) + (x3 * x12);
	const FLT x15 = (x6 * x9) + (-1 * x7 * x12);
	const FLT x16 = (x1 * x13) + (-1 * x3 * x10);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x14 * x14));
	const FLT x18 = x17 * x16;
	const FLT x19 = x14 * x17;
	const FLT x20 = x17 * (*_x0).Pose.Rot[0];
	const FLT x21 = x15 * x17;
	const FLT x22 =
		(x20 * x11) + (-1 * x21 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[3]) + (x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x11 * x17;
	const FLT x24 = 2 * x23;
	const FLT x25 = x17 * (*_x0).Pose.Rot[1];
	const FLT x26 =
		(x25 * x11) + (x21 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[2]) + (x19 * (*_x0).Pose.Rot[3]);
	const FLT x27 = 2 * x26;
	const FLT x28 =
		(x19 * (*_x0).Pose.Rot[1]) + (x20 * x16) + (-1 * x23 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[2]);
	const FLT x29 = 2 * x28;
	const FLT x30 = (x29 * x18) + (x24 * x22) + (x21 * x27);
	const FLT x31 = 1e-10 + (x22 * x22) + (x26 * x26) + (x28 * x28);
	const FLT x32 = 1. / (x31 * sqrt(x31));
	const FLT x33 = sqrt(x31);
	const FLT x34 = (-1 * x25 * x16) + (x20 * x14) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (-1 * x23 * (*_x0).Pose.Rot[2]);
	const FLT x35 = atan2(x33, x34);
	const FLT x36 = x35 * x28;
	const FLT x37 = x32 * x36;
	const FLT x38 = 1. / x33;
	const FLT x39 = 1.0 / 2.0 * (1. / x34) * x38;
	const FLT x40 = x34 * x34;
	const FLT x41 = (1. / x40) * x33;
	const FLT x42 = (-1 * x41 * x19) + (x30 * x39);
	const FLT x43 = (1. / (x31 + x40)) * x40;
	const FLT x44 = x38 * x29;
	const FLT x45 = x43 * x44;
	const FLT x46 = 2 * x38;
	const FLT x47 = x46 * x35;
	const FLT x48 = x47 * x18;
	const FLT x49 = x48 + (-1 * x30 * x37) + (x42 * x45);
	const FLT x50 = x35 * x26;
	const FLT x51 = (x50 * x46) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x52 = x35 * x38;
	const FLT x53 = (x52 * x29) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x54 = x35 * x22;
	const FLT x55 = (x54 * x46) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x56 = 1e-10 + (x55 * x55) + (x51 * x51) + (x53 * x53);
	const FLT x57 = sqrt(x56);
	const FLT x58 = -6.28318530717959 + x57;
	const FLT x59 = x58 * (1. / x57);
	const FLT x60 = x54 * x32;
	const FLT x61 = x43 * x46;
	const FLT x62 = x61 * x22;
	const FLT x63 = x52 * x24;
	const FLT x64 = x63 + (-1 * x60 * x30) + (x62 * x42);
	const FLT x65 = 2 * x55;
	const FLT x66 = x50 * x32;
	const FLT x67 = x61 * x26;
	const FLT x68 = x47 * x21;
	const FLT x69 = x68 + (-1 * x66 * x30) + (x67 * x42);
	const FLT x70 = 2 * x51;
	const FLT x71 = 2 * x53;
	const FLT x72 = (x71 * x49) + (x64 * x65) + (x70 * x69);
	const FLT x73 = 1.0 / 2.0 * x58 * (1. / (x56 * sqrt(x56)));
	const FLT x74 = x73 * x53;
	const FLT x75 = 1.0 / 2.0 * (1. / x56);
	const FLT x76 = x75 * x53;
	const FLT x77 = 2 * x22;
	const FLT x78 = (x29 * x19) + (-1 * x77 * x21) + (x24 * x26);
	const FLT x79 = (x41 * x18) + (x78 * x39);
	const FLT x80 = 2 * x19;
	const FLT x81 = x80 * x52;
	const FLT x82 = (-1 * x78 * x37) + x81 + (x79 * x45);
	const FLT x83 = (x79 * x62) + (-1 * x68) + (-1 * x78 * x60);
	const FLT x84 = x63 + (-1 * x78 * x66) + (x79 * x67);
	const FLT x85 = (x82 * x71) + (x83 * x65) + (x84 * x70);
	const FLT x86 = (x21 * x29) + (x80 * x22) + (-1 * x27 * x18);
	const FLT x87 = (x41 * x23) + (x86 * x39);
	const FLT x88 = x68 + (-1 * x86 * x37) + (x87 * x45);
	const FLT x89 = (-1 * x48) + (x87 * x67) + (-1 * x86 * x66);
	const FLT x90 = x81 + (-1 * x86 * x60) + (x87 * x62);
	const FLT x91 = (x88 * x71) + (x89 * x70) + (x65 * x90);
	const FLT x92 = x73 * x91;
	const FLT x93 = (-1 * x23 * x29) + (x77 * x18) + (x80 * x26);
	const FLT x94 = x93 * x32;
	const FLT x95 = ((x41 * x21) + (x93 * x39)) * x43;
	const FLT x96 = (-1 * x63) + (-1 * x94 * x36) + (x95 * x44);
	const FLT x97 = x95 * x46;
	const FLT x98 = x48 + (-1 * x54 * x94) + (x97 * x22);
	const FLT x99 = x81 + (-1 * x50 * x94) + (x97 * x26);
	const FLT x100 = (x71 * x96) + (x65 * x98) + (x70 * x99);
	const FLT x101 = x75 * x55;
	const FLT x102 = x73 * x55;
	const FLT x103 = x75 * x51;
	const FLT x104 = x73 * x51;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x72 * x76) + (x59 * x49) + (-1 * x72 * x74));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x85 * x76) + (x82 * x59) + (-1 * x85 * x74));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x76 * x91) + (x88 * x59) + (-1 * x53 * x92));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x76 * x100) + (x59 * x96) + (-1 * x74 * x100));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x72 * x101) + (-1 * x72 * x102) + (x64 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x85 * x102) + (x85 * x101) + (x83 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(-1 * x55 * x92) + (x91 * x101) + (x59 * x90));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(-1 * x100 * x102) + (x101 * x100) + (x59 * x98));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x72 * x103) + (-1 * x72 * x104) + (x69 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x85 * x104) + (x85 * x103) + (x84 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x91 * x103) + (-1 * x91 * x104) + (x89 * x59));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(-1 * x100 * x104) + (x100 * x103) + (x59 * x99));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]] Jacobian of
// SurviveObsErrorStateErrorModelFlip wrt [(*err).Acc[0], (*err).Acc[1], (*err).Acc[2], (*err).IMUBias.AccBias[0],
// (*err).IMUBias.AccBias[1], (*err).IMUBias.AccBias[2], (*err).IMUBias.AccScale[0], (*err).IMUBias.AccScale[1],
// (*err).IMUBias.AccScale[2], (*err).IMUBias.GyroBias[0], (*err).IMUBias.GyroBias[1], (*err).IMUBias.GyroBias[2],
// (*err).IMUBias.IMUCorrection[0], (*err).IMUBias.IMUCorrection[1], (*err).IMUBias.IMUCorrection[2],
// (*err).Pose.AxisAngleRot[0], (*err).Pose.AxisAngleRot[1], (*err).Pose.AxisAngleRot[2], (*err).Pose.Pos[0],
// (*err).Pose.Pos[1], (*err).Pose.Pos[2], (*err).Velocity.AxisAngleRot[0], (*err).Velocity.AxisAngleRot[1],
// (*err).Velocity.AxisAngleRot[2], (*err).Velocity.Pos[0], (*err).Velocity.Pos[1], (*err).Velocity.Pos[2]]
static inline void SurviveObsErrorStateErrorModelFlip_jac_err(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = x1 * x6;
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x0);
	const FLT x10 = cos(x2);
	const FLT x11 = x9 * x10;
	const FLT x12 = x8 * x11;
	const FLT x13 = x12 + x7;
	const FLT x14 = x6 * x9;
	const FLT x15 = x1 * x10;
	const FLT x16 = x8 * x15;
	const FLT x17 = x16 + (-1 * x14);
	const FLT x18 = 0.5 * x12;
	const FLT x19 = 0.5 * x7;
	const FLT x20 = x19 + x18;
	const FLT x21 = 2 * x20;
	const FLT x22 = x5 * x15;
	const FLT x23 = x3 * x8;
	const FLT x24 = x9 * x23;
	const FLT x25 = x24 + (-1 * x22);
	const FLT x26 = x1 * x23;
	const FLT x27 = 0.5 * x26;
	const FLT x28 = x5 * x11;
	const FLT x29 = -0.5 * x28;
	const FLT x30 = x29 + (-1 * x27);
	const FLT x31 = 2 * x30;
	const FLT x32 = 0.5 * x22;
	const FLT x33 = -1 * x32;
	const FLT x34 = 0.5 * x24;
	const FLT x35 = x34 + x33;
	const FLT x36 = x28 + x26;
	const FLT x37 = 2 * x36;
	const FLT x38 = 0.5 * x16;
	const FLT x39 = -1 * x38;
	const FLT x40 = 0.5 * x14;
	const FLT x41 = x40 + x39;
	const FLT x42 = 2 * x13;
	const FLT x43 = (x35 * x37) + (x41 * x42) + (x21 * x17) + (x31 * x25);
	const FLT x44 = (x25 * x25) + (x36 * x36) + (x17 * x17) + (x13 * x13);
	const FLT x45 = 1.0 / 2.0 * (1. / (x44 * sqrt(x44)));
	const FLT x46 = x45 * (*_x0).Pose.Rot[1];
	const FLT x47 = x43 * x46;
	const FLT x48 = 1. / sqrt(x44);
	const FLT x49 = x48 * (*_x0).Pose.Rot[1];
	const FLT x50 = x45 * (*_x0).Pose.Rot[0];
	const FLT x51 = x43 * x17;
	const FLT x52 = x45 * (*_x0).Pose.Rot[3];
	const FLT x53 = x43 * x36;
	const FLT x54 = x48 * (*_x0).Pose.Rot[3];
	const FLT x55 = x48 * (*_x0).Pose.Rot[0];
	const FLT x56 = x55 * x20;
	const FLT x57 = x48 * (*_x0).Pose.Rot[2];
	const FLT x58 = x57 * x30;
	const FLT x59 = x45 * (*_x0).Pose.Rot[2];
	const FLT x60 = x43 * x25;
	const FLT x61 = (-1 * x60 * x59) + x58 + x56 + (x41 * x49) + (x53 * x52) + (-1 * x50 * x51) + (-1 * x47 * x13) +
					(-1 * x54 * x35);
	const FLT x62 = x48 * x25;
	const FLT x63 = (x62 * (*_x0).Pose.Rot[0]) + (-1 * x57 * x17) + (x49 * x36) + (x54 * x13);
	const FLT x64 = x48 * x17;
	const FLT x65 = (x64 * (*_x0).Pose.Rot[0]) + (x49 * x13) + (-1 * x54 * x36) + (x57 * x25);
	const FLT x66 = (-1 * x62 * (*_x0).Pose.Rot[1]) + (x55 * x36) + (x64 * (*_x0).Pose.Rot[3]) + (x57 * x13);
	const FLT x67 = 1e-10 + (x66 * x66) + (x63 * x63) + (x65 * x65);
	const FLT x68 = sqrt(x67);
	const FLT x69 = 1. / x68;
	const FLT x70 = (x55 * x13) + (-1 * x64 * (*_x0).Pose.Rot[1]) + (-1 * x62 * (*_x0).Pose.Rot[3]) + (-1 * x57 * x36);
	const FLT x71 = atan2(x68, x70);
	const FLT x72 = x71 * x69;
	const FLT x73 = 2 * x72;
	const FLT x74 = -1 * x49 * x30;
	const FLT x75 = x50 * x36;
	const FLT x76 = x43 * x13;
	const FLT x77 = x54 * x20;
	const FLT x78 =
		(x55 * x35) + (-1 * x75 * x43) + (x47 * x25) + x74 + (-1 * x52 * x51) + (x57 * x41) + x77 + (-1 * x76 * x59);
	const FLT x79 = 2 * x66;
	const FLT x80 = x57 * x20;
	const FLT x81 = x55 * x30;
	const FLT x82 = x81 + (x51 * x59) + (-1 * x76 * x52) + (-1 * x47 * x36) + (x54 * x41) + (-1 * x60 * x50) +
					(-1 * x80) + (x49 * x35);
	const FLT x83 = 2 * x63;
	const FLT x84 = 2 * x65;
	const FLT x85 = (x79 * x78) + (x84 * x61) + (x82 * x83);
	const FLT x86 = x71 * (1. / (x67 * sqrt(x67)));
	const FLT x87 = x86 * x65;
	const FLT x88 = 1.0 / 2.0 * (1. / x70) * x69;
	const FLT x89 = -1 * x49 * x20;
	const FLT x90 = x54 * x30;
	const FLT x91 = x70 * x70;
	const FLT x92 = x68 * (1. / x91);
	const FLT x93 = (-1 *
					 ((x53 * x59) + (-1 * x90) + (x47 * x17) + (-1 * x76 * x50) + (x55 * x41) + x89 + (x60 * x52) +
					  (-1 * x57 * x35)) *
					 x92) +
					(x88 * x85);
	const FLT x94 = (1. / (x67 + x91)) * x69 * x91;
	const FLT x95 = x84 * x94;
	const FLT x96 = (x93 * x95) + (x73 * x61) + (-1 * x85 * x87);
	const FLT x97 = (x83 * x72) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x98 = (x84 * x72) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x99 = (x72 * x79) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x100 = 1e-10 + (x99 * x99) + (x97 * x97) + (x98 * x98);
	const FLT x101 = sqrt(x100);
	const FLT x102 = -6.28318530717959 + x101;
	const FLT x103 = (1. / x101) * x102;
	const FLT x104 = x86 * x66;
	const FLT x105 = x79 * x94;
	const FLT x106 = (x73 * x78) + (-1 * x85 * x104) + (x93 * x105);
	const FLT x107 = 2 * x99;
	const FLT x108 = x86 * x63;
	const FLT x109 = x83 * x94;
	const FLT x110 = (x93 * x109) + (x82 * x73) + (-1 * x85 * x108);
	const FLT x111 = 2 * x97;
	const FLT x112 = 2 * x98;
	const FLT x113 = (x96 * x112) + (x107 * x106) + (x110 * x111);
	const FLT x114 = 1.0 / 2.0 * (1. / (x100 * sqrt(x100))) * x102;
	const FLT x115 = x113 * x114;
	const FLT x116 = 1.0 / 2.0 * (1. / x100);
	const FLT x117 = x113 * x116;
	const FLT x118 = (-1 * x19) + x18;
	const FLT x119 = -1 * x34;
	const FLT x120 = x119 + x33;
	const FLT x121 = -1 * x40;
	const FLT x122 = x39 + x121;
	const FLT x123 = x27 + x29;
	const FLT x124 = (x42 * x123) + (x37 * x118) + (2 * x17 * x120) + (2 * x25 * x122);
	const FLT x125 = x36 * x124;
	const FLT x126 = x17 * x124;
	const FLT x127 = x45 * x126;
	const FLT x128 = x25 * x124;
	const FLT x129 = x13 * x124;
	const FLT x130 = (-1 * x52 * x129) + (x54 * x123) + (-1 * x57 * x120) + (-1 * x46 * x125) + (x49 * x118) +
					 (x55 * x122) + (x127 * (*_x0).Pose.Rot[2]) + (-1 * x50 * x128);
	const FLT x131 = x45 * x128;
	const FLT x132 = (x55 * x118) + (x57 * x123) + (-1 * x75 * x124) + (-1 * x127 * (*_x0).Pose.Rot[3]) +
					 (x131 * (*_x0).Pose.Rot[1]) + (-1 * x49 * x122) + (-1 * x59 * x129) + (x54 * x120);
	const FLT x133 = (x55 * x120) + (-1 * x131 * (*_x0).Pose.Rot[2]) + (x49 * x123) + (-1 * x46 * x129) +
					 (-1 * x54 * x118) + (x52 * x125) + (x57 * x122) + (-1 * x50 * x126);
	const FLT x134 = (x83 * x130) + (x84 * x133) + (x79 * x132);
	const FLT x135 =
		(-1 *
		 ((x55 * x123) + (x59 * x125) + (-1 * x57 * x118) + (-1 * x49 * x120) + (x127 * (*_x0).Pose.Rot[1]) +
		  (x131 * (*_x0).Pose.Rot[3]) + (-1 * x50 * x129) + (-1 * x54 * x122)) *
		 x92) +
		(x88 * x134);
	const FLT x136 = (x73 * x132) + (-1 * x104 * x134) + (x105 * x135);
	const FLT x137 = (-1 * x108 * x134) + (x73 * x130) + (x109 * x135);
	const FLT x138 = (x73 * x133) + (-1 * x87 * x134) + (x95 * x135);
	const FLT x139 = (x112 * x138) + (x107 * x136) + (x111 * x137);
	const FLT x140 = x114 * x139;
	const FLT x141 = x116 * x139;
	const FLT x142 = x38 + x121;
	const FLT x143 = x32 + x119;
	const FLT x144 = (x42 * x143) + (x37 * x142) + (x31 * x17) + (x25 * x21);
	const FLT x145 = x17 * x144;
	const FLT x146 = x50 * x144;
	const FLT x147 = x25 * x144;
	const FLT x148 = x13 * x144;
	const FLT x149 = (x46 * x147) + (x57 * x143) + (-1 * x52 * x145) + x89 + (-1 * x59 * x148) + x90 +
					 (-1 * x36 * x146) + (x55 * x142);
	const FLT x150 = x36 * x144;
	const FLT x151 = x56 + (-1 * x58) + (x54 * x143) + (x49 * x142) + (-1 * x46 * x150) + (x59 * x145) +
					 (-1 * x25 * x146) + (-1 * x52 * x148);
	const FLT x152 = x80 + (x49 * x143) + (-1 * x46 * x148) + (-1 * x54 * x142) + x81 + (-1 * x17 * x146) +
					 (-1 * x59 * x147) + (x52 * x150);
	const FLT x153 = (x84 * x152) + (x79 * x149) + (x83 * x151);
	const FLT x154 = (-1 *
					  ((x55 * x143) + (-1 * x57 * x142) + (x46 * x145) + (-1 * x13 * x146) + (x52 * x147) + x74 +
					   (x59 * x150) + (-1 * x77)) *
					  x92) +
					 (x88 * x153);
	const FLT x155 = (x73 * x152) + (-1 * x87 * x153) + (x95 * x154);
	const FLT x156 = (x73 * x149) + (-1 * x104 * x153) + (x105 * x154);
	const FLT x157 = (-1 * x108 * x153) + (x73 * x151) + (x109 * x154);
	const FLT x158 = (x112 * x155) + (x107 * x156) + (x111 * x157);
	const FLT x159 = x114 * x158;
	const FLT x160 = x116 * x158;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[0])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[1])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveKalmanErrorModel, Pose.Pos[2])/sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x98 * x117) + (x96 * x103) + (-1 * x98 * x115));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x98 * x141) + (-1 * x98 * x140) + (x103 * x138));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x98 * x160) + (x103 * x155) + (-1 * x98 * x159));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x99 * x115) + (x99 * x117) + (x103 * x106));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x99 * x140) + (x103 * x136) + (x99 * x141));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(-1 * x99 * x159) + (x99 * x160) + (x103 * x156));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x97 * x115) + (x97 * x117) + (x103 * x110));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(-1 * x97 * x140) + (x97 * x141) + (x103 * x137));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x103 * x157) + (-1 * x97 * x159) + (x97 * x160));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*err).Acc[0], (*err).Acc[1], (*err).Acc[2],
// (*err).IMUBias.AccBias[0], (*err).IMUBias.AccBias[1], (*err).IMUBias.AccBias[2], (*err).IMUBias.AccScale[0],
// (*err).IMUBias.AccScale[1], (*err).IMUBias.AccScale[2], (*err).IMUBias.GyroBias[0], (*err).IMUBias.GyroBias[1],
// (*err).IMUBias.GyroBias[2], (*err).IMUBias.IMUCorrection[0], (*err).IMUBias.IMUCorrection[1],
// (*err).IMUBias.IMUCorrection[2], (*err).Pose.AxisAngleRot[0], (*err).Pose.AxisAngleRot[1],
// (*err).Pose.AxisAngleRot[2], (*err).Pose.Pos[0], (*err).Pose.Pos[1], (*err).Pose.Pos[2],
// (*err).Velocity.AxisAngleRot[0], (*err).Velocity.AxisAngleRot[1], (*err).Velocity.AxisAngleRot[2],
// (*err).Velocity.Pos[0], (*err).Velocity.Pos[1], (*err).Velocity.Pos[2]] Jacobian of
// SurviveObsErrorStateErrorModelFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2],
// (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline void SurviveObsErrorStateErrorModelFlip_jac_Z(CnMat* Hx, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* err, const SurviveAxisAnglePose* Z) {
	const FLT x0 = 0.5 * (*err).Pose.AxisAngleRot[1];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*err).Pose.AxisAngleRot[2];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*err).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x4);
	const FLT x8 = cos(x2);
	const FLT x9 = sin(x0);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = x1 * x7;
	const FLT x13 = (x8 * x12) + (x6 * x9);
	const FLT x14 = (x3 * x12) + (-1 * x5 * x10);
	const FLT x15 = (x1 * x5 * x8) + (-1 * x3 * x7 * x9);
	const FLT x16 = 1. / sqrt((x15 * x15) + (x14 * x14) + (x11 * x11) + (x13 * x13));
	const FLT x17 = x15 * x16;
	const FLT x18 = x13 * x16;
	const FLT x19 = x14 * x16;
	const FLT x20 = x11 * x16;
	const FLT x21 = (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x17 * (*_x0).Pose.Rot[2]) +
					(x18 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x18 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(x19 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[3]) +
					(x18 * (*_x0).Pose.Rot[2]);
	const FLT x24 = sqrt(1e-10 + (x23 * x23) + (x21 * x21) + (x22 * x22));
	const FLT x25 = 2 * (1. / x24) *
					atan2(x24, (-1 * x17 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) +
								   (-1 * x19 * (*_x0).Pose.Rot[3]) + (-1 * x20 * (*_x0).Pose.Rot[2]));
	const FLT x26 = (x25 * x21) + (-1 * (*Z).AxisAngleRot[2]);
	const FLT x27 = x26 * x26;
	const FLT x28 = (x25 * x22) + (-1 * (*Z).AxisAngleRot[0]);
	const FLT x29 = x28 * x28;
	const FLT x30 = (x25 * x23) + (-1 * (*Z).AxisAngleRot[1]);
	const FLT x31 = x30 * x30;
	const FLT x32 = 1e-10 + x27 + x31 + x29;
	const FLT x33 = sqrt(x32);
	const FLT x34 = -6.28318530717959 + x33;
	const FLT x35 = -1 * x34 * (1. / x33);
	const FLT x36 = (1. / (x32 * sqrt(x32))) * x34;
	const FLT x37 = 1. / x32;
	const FLT x38 = x30 * x37;
	const FLT x39 = x30 * x36;
	const FLT x40 = (x39 * x28) + (-1 * x38 * x28);
	const FLT x41 = x28 * x26;
	const FLT x42 = (x41 * x36) + (-1 * x41 * x37);
	const FLT x43 = (x39 * x26) + (-1 * x38 * x26);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[0])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[1])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), offsetof(SurviveAxisAnglePose, Pos[2])/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						(-1 * x37 * x29) + x35 + (x36 * x29));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), x40);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT), x42);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), x40);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						(x31 * x36) + x35 + (-1 * x31 * x37));
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT), x43);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[0]) / sizeof(FLT), x42);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[1]) / sizeof(FLT), x43);
	cnMatrixOptionalSet(Hx, offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						offsetof(SurviveAxisAnglePose, AxisAngleRot[2]) / sizeof(FLT),
						(x36 * x27) + x35 + (-1 * x37 * x27));
}

// Full version Jacobian of SurviveObsErrorStateErrorModelFlip wrt [(*Z).AxisAngleRot[0], (*Z).AxisAngleRot[1], (*Z).AxisAngleRot[2], (*Z).Pos[0], (*Z).Pos[1], (*Z).Pos[2]]
static inline FLT SurviveKalmanModel_LightMeas_x_gen1(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x26 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[1]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]);
	const FLT x29 = x25 + (*lh_p).Pos[1] + (2 * ((x28 * (*lh_p).Rot[3]) + (-1 * x27 * (*lh_p).Rot[1])));
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[1]) + (x25 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[3]);
	const FLT x31 = x23 + (2 * ((x30 * (*lh_p).Rot[1]) + (-1 * x28 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = x26 + (2 * ((x27 * (*lh_p).Rot[2]) + (-1 * x30 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x33 = -1 * x31;
	const FLT x34 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x32 * x32) + (x31 * x31))) * x29 * (*bsc0).tilt)) + (-1 * atan2(x32, x33));
	return x34 + (-1 * cos(1.5707963267949 + x34 + (*bsc0).gibpha) * (*bsc0).gibmag) + ((atan2(x29, x33) * atan2(x29, x33)) * (*bsc0).curve);
}

// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[3];
	const FLT x4 = x3 * (*lh_p).Rot[0];
	const FLT x5 = x4 + x2;
	const FLT x6 = 1.0/2.0 * x0;
	const FLT x7 = dt * dt;
	const FLT x8 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x9 = x8 * x7;
	const FLT x10 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x11 = x7 * x10;
	const FLT x12 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x13 = x7 * x12;
	const FLT x14 = 1e-10 + x9 + x11 + x13;
	const FLT x15 = sqrt(x14);
	const FLT x16 = 0.5 * x15;
	const FLT x17 = sin(x16);
	const FLT x18 = x17 * x17;
	const FLT x19 = 1. / x14;
	const FLT x20 = x19 * x18;
	const FLT x21 = cos(x16);
	const FLT x22 = (x20 * x13) + (x20 * x11) + (x9 * x20) + (x21 * x21);
	const FLT x23 = 1. / sqrt(x22);
	const FLT x24 = (1. / x15) * x17;
	const FLT x25 = dt * x24;
	const FLT x26 = x25 * x23;
	const FLT x27 = x26 * (*_x0).Pose.Rot[0];
	const FLT x28 = x23 * x21;
	const FLT x29 = x28 * (*_x0).Pose.Rot[2];
	const FLT x30 = x26 * (*_x0).Pose.Rot[1];
	const FLT x31 = x23 * (*_x0).Pose.Rot[3];
	const FLT x32 = x31 * x25;
	const FLT x33 = (-1 * x32 * (*_x0).Velocity.AxisAngleRot[0]) + (x30 * (*_x0).Velocity.AxisAngleRot[2]) + (x27 * (*_x0).Velocity.AxisAngleRot[1]) + x29;
	const FLT x34 = x26 * (*_x0).Pose.Rot[2];
	const FLT x35 = x28 * (*_x0).Pose.Rot[0];
	const FLT x36 = (-1 * x30 * (*_x0).Velocity.AxisAngleRot[0]) + x35 + (-1 * x32 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x37 = x28 * (*_x0).Pose.Rot[3];
	const FLT x38 = (x34 * (*_x0).Velocity.AxisAngleRot[0]) + x37 + (x27 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x39 = (-1 * x38 * sensor_pt[1]) + (x33 * sensor_pt[2]) + (x36 * sensor_pt[0]);
	const FLT x40 = x28 * (*_x0).Pose.Rot[1];
	const FLT x41 = (x27 * (*_x0).Velocity.AxisAngleRot[0]) + x40 + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[2]) + (x32 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x42 = (-1 * x41 * sensor_pt[2]) + (x38 * sensor_pt[0]) + (x36 * sensor_pt[1]);
	const FLT x43 = (2 * ((x41 * x42) + (-1 * x33 * x39))) + sensor_pt[2] + (x6 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x44 = (-1 * x33 * sensor_pt[0]) + (x36 * sensor_pt[2]) + (x41 * sensor_pt[1]);
	const FLT x45 = (2 * ((x44 * x33) + (-1 * x42 * x38))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x6 * (*_x0).Acc[0]);
	const FLT x46 = sensor_pt[1] + (2 * ((x38 * x39) + (-1 * x41 * x44))) + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x6 * (*_x0).Acc[1]);
	const FLT x47 = (-1 * x46 * (*lh_p).Rot[3]) + (x43 * (*lh_p).Rot[2]) + (x45 * (*lh_p).Rot[0]);
	const FLT x48 = (x46 * (*lh_p).Rot[0]) + (-1 * x43 * (*lh_p).Rot[1]) + (x45 * (*lh_p).Rot[3]);
	const FLT x49 = (2 * ((x48 * (*lh_p).Rot[1]) + (-1 * x47 * (*lh_p).Rot[2]))) + x43 + (*lh_p).Pos[2];
	const FLT x50 = 1. / x49;
	const FLT x51 = x0 * (*lh_p).Rot[2] * (*lh_p).Rot[0];
	const FLT x52 = x1 * (*lh_p).Rot[3];
	const FLT x53 = x52 + (-1 * x51);
	const FLT x54 = x49 * x49;
	const FLT x55 = 1. / x54;
	const FLT x56 = (x43 * (*lh_p).Rot[0]) + (-1 * x45 * (*lh_p).Rot[2]) + (x46 * (*lh_p).Rot[1]);
	const FLT x57 = (*lh_p).Pos[1] + x46 + (2 * ((x47 * (*lh_p).Rot[3]) + (-1 * x56 * (*lh_p).Rot[1])));
	const FLT x58 = x57 * x55;
	const FLT x59 = x57 * x57;
	const FLT x60 = -1 * x49;
	const FLT x61 = 2 * (1. / (x54 + x59)) * x54 * atan2(x57, x60) * (*bsc0).curve;
	const FLT x62 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x63 = -1 * x0 * x62;
	const FLT x64 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x65 = -1 * x0 * x64;
	const FLT x66 = x65 + x6 + x63;
	const FLT x67 = x45 + (2 * ((x56 * (*lh_p).Rot[2]) + (-1 * x48 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x68 = x67 * x55;
	const FLT x69 = x54 + (x67 * x67);
	const FLT x70 = 1. / x69;
	const FLT x71 = x70 * x54;
	const FLT x72 = 1. / sqrt(1 + (-1 * x70 * x59 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x73 = 2 * x67;
	const FLT x74 = 2 * x49;
	const FLT x75 = 1.0/2.0 * (1. / (x69 * sqrt(x69))) * x57 * (*bsc0).tilt;
	const FLT x76 = (1. / sqrt(x69)) * (*bsc0).tilt;
	const FLT x77 = (-1 * x72 * ((x5 * x76) + (-1 * ((x74 * x53) + (x73 * x66)) * x75))) + (-1 * ((x68 * x53) + (-1 * x66 * x50)) * x71);
	const FLT x78 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * asin(x76 * x57)) + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * atan2(x67, x60)));
	const FLT x79 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x80 = (-1 * x0 * x79) + x6;
	const FLT x81 = x80 + x65;
	const FLT x82 = x3 * (*lh_p).Rot[2];
	const FLT x83 = x1 * (*lh_p).Rot[0];
	const FLT x84 = x83 + x82;
	const FLT x85 = x2 + (-1 * x4);
	const FLT x86 = (-1 * x72 * ((x81 * x76) + (-1 * ((x84 * x74) + (x85 * x73)) * x75))) + (-1 * ((x84 * x68) + (-1 * x85 * x50)) * x71);
	const FLT x87 = x82 + (-1 * x83);
	const FLT x88 = x80 + x63;
	const FLT x89 = x51 + x52;
	const FLT x90 = (-1 * x72 * ((x87 * x76) + (-1 * ((x88 * x74) + (x89 * x73)) * x75))) + (-1 * ((x88 * x68) + (-1 * x89 * x50)) * x71);
	const FLT x91 = 2 * (*lh_p).Rot[1];
	const FLT x92 = x91 * (*lh_p).Rot[2];
	const FLT x93 = 2 * (*lh_p).Rot[3];
	const FLT x94 = x93 * (*lh_p).Rot[0];
	const FLT x95 = x94 + x92;
	const FLT x96 = 2 * (*lh_p).Rot[2];
	const FLT x97 = x96 * (*lh_p).Rot[0];
	const FLT x98 = x91 * (*lh_p).Rot[3];
	const FLT x99 = x98 + (-1 * x97);
	const FLT x100 = 2 * x62;
	const FLT x101 = -1 * x100;
	const FLT x102 = 2 * x64;
	const FLT x103 = 1 + (-1 * x102);
	const FLT x104 = x103 + x101;
	const FLT x105 = (-1 * x72 * ((x76 * x95) + (-1 * x75 * ((x74 * x99) + (x73 * x104))))) + (-1 * x71 * ((x68 * x99) + (-1 * x50 * x104)));
	const FLT x106 = 2 * x79;
	const FLT x107 = -1 * x106;
	const FLT x108 = x103 + x107;
	const FLT x109 = x93 * (*lh_p).Rot[2];
	const FLT x110 = x91 * (*lh_p).Rot[0];
	const FLT x111 = x110 + x109;
	const FLT x112 = x92 + (-1 * x94);
	const FLT x113 = (-1 * x72 * ((x76 * x108) + (-1 * ((x74 * x111) + (x73 * x112)) * x75))) + (-1 * ((x68 * x111) + (-1 * x50 * x112)) * x71);
	const FLT x114 = x109 + (-1 * x110);
	const FLT x115 = 1 + x107 + x101;
	const FLT x116 = x97 + x98;
	const FLT x117 = (-1 * x72 * ((x76 * x114) + (-1 * ((x74 * x115) + (x73 * x116)) * x75))) + (-1 * ((x68 * x115) + (-1 * x50 * x116)) * x71);
	const FLT x118 = x26 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x119 = -1 * x118 * sensor_pt[2];
	const FLT x120 = x26 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x121 = x120 * sensor_pt[0];
	const FLT x122 = x28 * sensor_pt[1];
	const FLT x123 = x122 + x119 + x121;
	const FLT x124 = 2 * x38;
	const FLT x125 = 2 * x42;
	const FLT x126 = -1 * x120 * x125;
	const FLT x127 = x118 * sensor_pt[1];
	const FLT x128 = x26 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x129 = -1 * x128 * sensor_pt[0];
	const FLT x130 = x28 * sensor_pt[2];
	const FLT x131 = x130 + x129;
	const FLT x132 = x131 + x127;
	const FLT x133 = 2 * x33;
	const FLT x134 = 2 * x44;
	const FLT x135 = x128 * x134;
	const FLT x136 = x135 + (-1 * x124 * x123) + (x133 * x132) + x126;
	const FLT x137 = x128 * sensor_pt[2];
	const FLT x138 = x28 * sensor_pt[0];
	const FLT x139 = -1 * x120 * sensor_pt[1];
	const FLT x140 = x139 + x138;
	const FLT x141 = x140 + x137;
	const FLT x142 = x118 * x125;
	const FLT x143 = 2 * x39;
	const FLT x144 = -1 * x128 * x143;
	const FLT x145 = 2 * x41;
	const FLT x146 = x144 + (-1 * x133 * x141) + (x123 * x145) + x142;
	const FLT x147 = x120 * x143;
	const FLT x148 = -1 * x118 * x134;
	const FLT x149 = x148 + x147 + (-1 * x132 * x145) + (x124 * x141);
	const FLT x150 = (x149 * (*lh_p).Rot[1]) + (-1 * x136 * (*lh_p).Rot[2]) + (x146 * (*lh_p).Rot[0]);
	const FLT x151 = (-1 * x149 * (*lh_p).Rot[3]) + (x136 * (*lh_p).Rot[0]) + (x146 * (*lh_p).Rot[2]);
	const FLT x152 = x149 + (-1 * x91 * x150) + (x93 * x151);
	const FLT x153 = (x136 * (*lh_p).Rot[3]) + (-1 * x146 * (*lh_p).Rot[1]) + (x149 * (*lh_p).Rot[0]);
	const FLT x154 = x146 + (-1 * x96 * x151) + (x91 * x153);
	const FLT x155 = x136 + (-1 * x93 * x153) + (x96 * x150);
	const FLT x156 = (-1 * x72 * ((x76 * x152) + (-1 * ((x74 * x154) + (x73 * x155)) * x75))) + (-1 * ((x68 * x154) + (-1 * x50 * x155)) * x71);
	const FLT x157 = x120 * x134;
	const FLT x158 = -1 * x127;
	const FLT x159 = x158 + (-1 * x130) + x129;
	const FLT x160 = x128 * x125;
	const FLT x161 = (-1 * x121) + x119;
	const FLT x162 = x161 + x122;
	const FLT x163 = (x162 * x133) + x160 + x157 + (-1 * x124 * x159);
	const FLT x164 = x128 * sensor_pt[1];
	const FLT x165 = x120 * sensor_pt[2];
	const FLT x166 = x118 * sensor_pt[0];
	const FLT x167 = (-1 * x166) + x164 + x165;
	const FLT x168 = x28 * x125;
	const FLT x169 = (-1 * x147) + x168 + (-1 * x167 * x133) + (x145 * x159);
	const FLT x170 = x28 * x134;
	const FLT x171 = x144 + (-1 * x170) + (-1 * x162 * x145) + (x124 * x167);
	const FLT x172 = (x171 * (*lh_p).Rot[1]) + (-1 * x163 * (*lh_p).Rot[2]) + (x169 * (*lh_p).Rot[0]);
	const FLT x173 = 2 * ((-1 * x171 * (*lh_p).Rot[3]) + (x163 * (*lh_p).Rot[0]) + (x169 * (*lh_p).Rot[2]));
	const FLT x174 = x171 + (-1 * x91 * x172) + (x173 * (*lh_p).Rot[3]);
	const FLT x175 = (x163 * (*lh_p).Rot[3]) + (-1 * x169 * (*lh_p).Rot[1]) + (x171 * (*lh_p).Rot[0]);
	const FLT x176 = x169 + (-1 * x173 * (*lh_p).Rot[2]) + (x91 * x175);
	const FLT x177 = x163 + (-1 * x93 * x175) + (x96 * x172);
	const FLT x178 = (-1 * x72 * ((x76 * x174) + (-1 * ((x74 * x176) + (x73 * x177)) * x75))) + (-1 * ((x68 * x176) + (-1 * x50 * x177)) * x71);
	const FLT x179 = -1 * x137;
	const FLT x180 = x139 + (-1 * x138) + x179;
	const FLT x181 = x131 + x158;
	const FLT x182 = x118 * x143;
	const FLT x183 = x182 + (x124 * x181) + (-1 * x180 * x145) + x157;
	const FLT x184 = x28 * x143;
	const FLT x185 = 2 * ((-1 * x164) + x165 + x166);
	const FLT x186 = x126 + (x41 * x185) + (-1 * x181 * x133) + (-1 * x184);
	const FLT x187 = (x180 * x133) + x170 + (-1 * x142) + (-1 * x38 * x185);
	const FLT x188 = (x187 * (*lh_p).Rot[3]) + (x183 * (*lh_p).Rot[0]) + (-1 * x186 * (*lh_p).Rot[1]);
	const FLT x189 = (x183 * (*lh_p).Rot[1]) + (x186 * (*lh_p).Rot[0]) + (-1 * x187 * (*lh_p).Rot[2]);
	const FLT x190 = (-1 * x93 * x188) + x187 + (x96 * x189);
	const FLT x191 = (x187 * (*lh_p).Rot[0]) + (-1 * x183 * (*lh_p).Rot[3]) + (x186 * (*lh_p).Rot[2]);
	const FLT x192 = x186 + (-1 * x96 * x191) + (x91 * x188);
	const FLT x193 = (-1 * x91 * x189) + x183 + (x93 * x191);
	const FLT x194 = (-1 * x72 * ((x76 * x193) + (-1 * ((x74 * x192) + (x73 * x190)) * x75))) + (-1 * ((x68 * x192) + (-1 * x50 * x190)) * x71);
	const FLT x195 = x161 + (-1 * x122);
	const FLT x196 = x140 + x179;
	const FLT x197 = x160 + (x196 * x145) + (-1 * x195 * x133) + x182;
	const FLT x198 = 2 * (x164 + x166 + (-1 * x165));
	const FLT x199 = (-1 * x135) + x184 + (-1 * x41 * x198) + (x124 * x195);
	const FLT x200 = (-1 * x168) + x148 + (x33 * x198) + (-1 * x124 * x196);
	const FLT x201 = (-1 * x197 * (*lh_p).Rot[1]) + (x200 * (*lh_p).Rot[3]) + (x199 * (*lh_p).Rot[0]);
	const FLT x202 = (x199 * (*lh_p).Rot[1]) + (-1 * x200 * (*lh_p).Rot[2]) + (x197 * (*lh_p).Rot[0]);
	const FLT x203 = (-1 * x93 * x201) + x200 + (x96 * x202);
	const FLT x204 = (x200 * (*lh_p).Rot[0]) + (-1 * x199 * (*lh_p).Rot[3]) + (x197 * (*lh_p).Rot[2]);
	const FLT x205 = x197 + (-1 * x96 * x204) + (x91 * x201);
	const FLT x206 = x199 + (x93 * x204) + (-1 * x91 * x202);
	const FLT x207 = (-1 * x72 * ((x76 * x206) + (-1 * ((x74 * x205) + (x73 * x203)) * x75))) + (-1 * ((x68 * x205) + (-1 * x50 * x203)) * x71);
	const FLT x208 = -1 * x32;
	const FLT x209 = x23 * (*_x0).Pose.Rot[2];
	const FLT x210 = x7 * x24;
	const FLT x211 = 0.5 * x210;
	const FLT x212 = x211 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x213 = 0.5 * x19;
	const FLT x214 = dt * dt * dt;
	const FLT x215 = x12 * x214;
	const FLT x216 = x213 * x215;
	const FLT x217 = 1.0/2.0 * (1. / (x22 * sqrt(x22)));
	const FLT x218 = x25 * x217;
	const FLT x219 = x218 * (*_x0).Pose.Rot[3];
	const FLT x220 = dt * dt * dt * dt;
	const FLT x221 = x220 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x222 = (1. / (x14 * x14)) * x18;
	const FLT x223 = 2 * x222;
	const FLT x224 = 1.0 * x21;
	const FLT x225 = (1. / (x14 * sqrt(x14))) * x17;
	const FLT x226 = x224 * x225;
	const FLT x227 = x220 * x226;
	const FLT x228 = 2 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x229 = x222 * x228;
	const FLT x230 = x8 * x220;
	const FLT x231 = x210 * x224;
	const FLT x232 = x7 * x20;
	const FLT x233 = x10 * x220;
	const FLT x234 = x233 * x226;
	const FLT x235 = (-1 * x233 * x229) + (x234 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x223 * x221) + (x232 * x228) + (x8 * x227 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x230 * x229) + (x221 * x226) + (-1 * x231 * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x236 = x235 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x237 = x21 * x217;
	const FLT x238 = x237 * x235;
	const FLT x239 = x235 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x240 = x218 * x239;
	const FLT x241 = x23 * (*_x0).Pose.Rot[1];
	const FLT x242 = x214 * x225;
	const FLT x243 = x242 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x244 = x243 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x245 = x241 * x244;
	const FLT x246 = x214 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x247 = x213 * x246 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x248 = x40 * x247;
	const FLT x249 = x218 * (*_x0).Pose.Rot[1];
	const FLT x250 = x235 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x251 = x12 * x242;
	const FLT x252 = x214 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x253 = x35 * x213;
	const FLT x254 = x253 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x255 = x23 * (*_x0).Pose.Rot[0];
	const FLT x256 = x255 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x257 = x242 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x258 = (-1 * x256 * x257) + (x252 * x254);
	const FLT x259 = (x31 * x251) + x258 + (-1 * x250 * x249) + x248 + (-1 * x245) + (-1 * x212 * x209) + (-1 * x240 * (*_x0).Pose.Rot[0]) + (-1 * x37 * x216) + (x219 * x236) + x208 + (-1 * x238 * (*_x0).Pose.Rot[2]);
	const FLT x260 = x213 * x252;
	const FLT x261 = x260 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x262 = x37 * x261;
	const FLT x263 = x257 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x264 = x31 * x263;
	const FLT x265 = x29 * x247;
	const FLT x266 = x209 * x244;
	const FLT x267 = x218 * (*_x0).Pose.Rot[2];
	const FLT x268 = x218 * (*_x0).Pose.Rot[0];
	const FLT x269 = (-1 * x236 * x268) + x27 + (-1 * x264) + (x215 * x253) + (-1 * x238 * (*_x0).Pose.Rot[1]) + x266 + (-1 * x219 * x239) + x262 + (-1 * x212 * x241) + (-1 * x265) + (x267 * x250) + (-1 * x251 * x255);
	const FLT x270 = x31 * x211;
	const FLT x271 = x255 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x272 = (x254 * x246) + (-1 * x271 * x243);
	const FLT x273 = (-1 * x40 * x261) + (x263 * x241);
	const FLT x274 = x272 + x273 + (-1 * x236 * x267) + (x29 * x216) + (-1 * x270 * (*_x0).Velocity.AxisAngleRot[0]) + x34 + (-1 * x209 * x251) + (-1 * x238 * (*_x0).Pose.Rot[3]) + (-1 * x268 * x250) + (x239 * x249);
	const FLT x275 = -1 * x30;
	const FLT x276 = x29 * x260;
	const FLT x277 = x276 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x278 = x209 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x279 = x278 * x257;
	const FLT x280 = (x31 * x244) + (-1 * x37 * x247);
	const FLT x281 = x280 + (x251 * x241) + (-1 * x40 * x216) + (-1 * x211 * x271) + (x219 * x250) + (-1 * x277) + (x240 * (*_x0).Pose.Rot[2]) + x275 + (-1 * x238 * (*_x0).Pose.Rot[0]) + (x236 * x249) + x279;
	const FLT x282 = (x281 * sensor_pt[1]) + (-1 * x269 * sensor_pt[2]) + (x274 * sensor_pt[0]);
	const FLT x283 = (x269 * sensor_pt[1]) + (-1 * x259 * sensor_pt[0]) + (x281 * sensor_pt[2]);
	const FLT x284 = (x283 * x133) + (-1 * x274 * x125) + (x259 * x134) + (-1 * x282 * x124);
	const FLT x285 = (-1 * x274 * sensor_pt[1]) + (x281 * sensor_pt[0]) + (x259 * sensor_pt[2]);
	const FLT x286 = 2 * x269;
	const FLT x287 = (x282 * x145) + (-1 * x285 * x133) + (x42 * x286) + (-1 * x259 * x143);
	const FLT x288 = (x285 * x124) + (-1 * x44 * x286) + (-1 * x283 * x145) + (x274 * x143);
	const FLT x289 = (x288 * (*lh_p).Rot[1]) + (-1 * x284 * (*lh_p).Rot[2]) + (x287 * (*lh_p).Rot[0]);
	const FLT x290 = (x284 * (*lh_p).Rot[0]) + (x287 * (*lh_p).Rot[2]) + (-1 * x288 * (*lh_p).Rot[3]);
	const FLT x291 = x288 + (-1 * x91 * x289) + (x93 * x290);
	const FLT x292 = (x284 * (*lh_p).Rot[3]) + (-1 * x287 * (*lh_p).Rot[1]) + (x288 * (*lh_p).Rot[0]);
	const FLT x293 = (-1 * x96 * x290) + x287 + (x91 * x292);
	const FLT x294 = x284 + (-1 * x93 * x292) + (x96 * x289);
	const FLT x295 = (-1 * x72 * ((x76 * x291) + (-1 * ((x74 * x293) + (x73 * x294)) * x75))) + (-1 * ((x68 * x293) + (-1 * x50 * x294)) * x71);
	const FLT x296 = x220 * x223;
	const FLT x297 = x296 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x298 = 2 * x232;
	const FLT x299 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x300 = (x299 * x227) + (-1 * x10 * x297) + (-1 * x231 * (*_x0).Velocity.AxisAngleRot[1]) + (x234 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x12 * x297) + (x298 * (*_x0).Velocity.AxisAngleRot[1]) + (x12 * x227 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x296 * x299);
	const FLT x301 = x300 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x302 = x218 * x301;
	const FLT x303 = x8 * x242;
	const FLT x304 = x300 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x305 = x300 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x306 = x8 * x214;
	const FLT x307 = x213 * x306;
	const FLT x308 = x237 * x300;
	const FLT x309 = x211 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x310 = (x278 * x243) + (-1 * x276 * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x311 = (-1 * x241 * x309) + x32 + (-1 * x31 * x303) + (x37 * x307) + (-1 * x302 * (*_x0).Pose.Rot[0]) + (-1 * x308 * (*_x0).Pose.Rot[1]) + (-1 * x219 * x305) + x258 + x310 + (x267 * x304);
	const FLT x312 = (x252 * x253 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x256 * x243);
	const FLT x313 = x277 + (-1 * x270 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x279) + (-1 * x268 * x304) + (x249 * x305) + x312 + (-1 * x302 * (*_x0).Pose.Rot[2]) + x275 + (-1 * x40 * x307) + (x241 * x303) + (-1 * x308 * (*_x0).Pose.Rot[3]);
	const FLT x314 = -1 * x34;
	const FLT x315 = x260 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x316 = x37 * x315;
	const FLT x317 = x243 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x318 = x31 * x317;
	const FLT x319 = x273 + x318 + (-1 * x308 * (*_x0).Pose.Rot[0]) + (-1 * x211 * x256) + (x219 * x304) + (x267 * x305) + x314 + (-1 * x316) + (x249 * x301) + (x209 * x303) + (-1 * x29 * x307);
	const FLT x320 = (x319 * sensor_pt[1]) + (-1 * x311 * sensor_pt[2]) + (x313 * sensor_pt[0]);
	const FLT x321 = x241 * x317;
	const FLT x322 = x40 * x315;
	const FLT x323 = x264 + x27 + (-1 * x308 * (*_x0).Pose.Rot[2]) + (x302 * (*_x0).Pose.Rot[3]) + (-1 * x262) + (-1 * x255 * x303) + (-1 * x249 * x304) + (x253 * x306) + (-1 * x268 * x305) + (-1 * x209 * x309) + (-1 * x321) + x322;
	const FLT x324 = (x311 * sensor_pt[1]) + (-1 * x323 * sensor_pt[0]) + (x319 * sensor_pt[2]);
	const FLT x325 = (-1 * x313 * x125) + (x323 * x134) + (-1 * x320 * x124) + (x324 * x133);
	const FLT x326 = (-1 * x313 * sensor_pt[1]) + (x319 * sensor_pt[0]) + (x323 * sensor_pt[2]);
	const FLT x327 = (x320 * x145) + (-1 * x323 * x143) + (-1 * x326 * x133) + (x311 * x125);
	const FLT x328 = (x313 * x143) + (x326 * x124) + (-1 * x324 * x145) + (-1 * x311 * x134);
	const FLT x329 = (x328 * (*lh_p).Rot[1]) + (-1 * x325 * (*lh_p).Rot[2]) + (x327 * (*lh_p).Rot[0]);
	const FLT x330 = (-1 * x328 * (*lh_p).Rot[3]) + (x325 * (*lh_p).Rot[0]) + (x327 * (*lh_p).Rot[2]);
	const FLT x331 = x328 + (-1 * x91 * x329) + (x93 * x330);
	const FLT x332 = (x325 * (*lh_p).Rot[3]) + (-1 * x327 * (*lh_p).Rot[1]) + (x328 * (*lh_p).Rot[0]);
	const FLT x333 = x327 + (-1 * x96 * x330) + (x91 * x332);
	const FLT x334 = (-1 * x93 * x332) + x325 + (x96 * x329);
	const FLT x335 = (-1 * x72 * ((x76 * x331) + (-1 * ((x74 * x333) + (x73 * x334)) * x75))) + (-1 * ((x68 * x333) + (-1 * x50 * x334)) * x71);
	const FLT x336 = x296 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x337 = x224 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x338 = x225 * x337;
	const FLT x339 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x340 = (-1 * x296 * x339) + (x298 * (*_x0).Velocity.AxisAngleRot[2]) + (x12 * x220 * x338) + (x230 * x338) + (-1 * x8 * x336) + (-1 * x12 * x336) + (x227 * x339) + (-1 * x210 * x337);
	const FLT x341 = x340 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x342 = x10 * x214;
	const FLT x343 = x225 * x342;
	const FLT x344 = x23 * x343;
	const FLT x345 = x340 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x346 = x340 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x347 = x237 * x340;
	const FLT x348 = x211 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x349 = x213 * x342;
	const FLT x350 = x272 + (-1 * x29 * x349) + (-1 * x241 * x348) + (-1 * x268 * x346) + (-1 * x219 * x345) + (x267 * x341) + (-1 * x318) + (-1 * x347 * (*_x0).Pose.Rot[1]) + x316 + x314 + (x344 * (*_x0).Pose.Rot[2]);
	const FLT x351 = x267 * x340;
	const FLT x352 = (-1 * x266) + x27 + (-1 * x351 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x347 * (*_x0).Pose.Rot[3]) + (-1 * x268 * x341) + (-1 * x322) + x321 + (x253 * x342) + (x249 * x345) + x265 + (-1 * x344 * (*_x0).Pose.Rot[0]) + (-1 * x270 * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x353 = (-1 * x255 * x348) + (-1 * x347 * (*_x0).Pose.Rot[0]) + x310 + (x219 * x341) + (-1 * x248) + (-1 * x37 * x349) + (x351 * (*_x0).Velocity.AxisAngleRot[1]) + (x249 * x346) + x245 + x208 + (x31 * x343);
	const FLT x354 = (x353 * sensor_pt[1]) + (-1 * x350 * sensor_pt[2]) + (x352 * sensor_pt[0]);
	const FLT x355 = x280 + (-1 * x249 * x341) + (-1 * x241 * x343) + x312 + (-1 * x209 * x348) + (x219 * x346) + (-1 * x268 * x345) + (-1 * x347 * (*_x0).Pose.Rot[2]) + x30 + (x40 * x349);
	const FLT x356 = (x350 * sensor_pt[1]) + (-1 * x355 * sensor_pt[0]) + (x353 * sensor_pt[2]);
	const FLT x357 = (x356 * x133) + (-1 * x354 * x124) + (-1 * x352 * x125) + (x355 * x134);
	const FLT x358 = (x353 * sensor_pt[0]) + (-1 * x352 * sensor_pt[1]) + (x355 * sensor_pt[2]);
	const FLT x359 = 2 * x350;
	const FLT x360 = (x42 * x359) + (-1 * x358 * x133) + (-1 * x355 * x143) + (x354 * x145);
	const FLT x361 = (-1 * x44 * x359) + (x358 * x124) + (-1 * x356 * x145) + (x352 * x143);
	const FLT x362 = (-1 * x357 * (*lh_p).Rot[2]) + (x361 * (*lh_p).Rot[1]) + (x360 * (*lh_p).Rot[0]);
	const FLT x363 = (-1 * x361 * (*lh_p).Rot[3]) + (x357 * (*lh_p).Rot[0]) + (x360 * (*lh_p).Rot[2]);
	const FLT x364 = x361 + (-1 * x91 * x362) + (x93 * x363);
	const FLT x365 = (x357 * (*lh_p).Rot[3]) + (-1 * x360 * (*lh_p).Rot[1]) + (x361 * (*lh_p).Rot[0]);
	const FLT x366 = x360 + (x91 * x365) + (-1 * x96 * x363);
	const FLT x367 = x357 + (-1 * x93 * x365) + (x96 * x362);
	const FLT x368 = (-1 * x72 * ((x76 * x364) + (-1 * ((x74 * x366) + (x73 * x367)) * x75))) + (-1 * ((x68 * x366) + (-1 * x50 * x367)) * x71);
	const FLT x369 = dt * x92;
	const FLT x370 = dt * x94;
	const FLT x371 = x370 + x369;
	const FLT x372 = dt * x97;
	const FLT x373 = dt * x98;
	const FLT x374 = x373 + (-1 * x372);
	const FLT x375 = -1 * dt * x102;
	const FLT x376 = (-1 * dt * x100) + dt;
	const FLT x377 = x376 + x375;
	const FLT x378 = (-1 * x72 * ((x76 * x371) + (-1 * ((x74 * x374) + (x73 * x377)) * x75))) + (-1 * ((x68 * x374) + (-1 * x50 * x377)) * x71);
	const FLT x379 = -1 * dt * x106;
	const FLT x380 = x379 + x375 + dt;
	const FLT x381 = dt * x109;
	const FLT x382 = dt * x110;
	const FLT x383 = x382 + x381;
	const FLT x384 = x369 + (-1 * x370);
	const FLT x385 = (-1 * x72 * ((x76 * x380) + (-1 * ((x74 * x383) + (x73 * x384)) * x75))) + (-1 * ((x68 * x383) + (-1 * x50 * x384)) * x71);
	const FLT x386 = x381 + (-1 * x382);
	const FLT x387 = x376 + x379;
	const FLT x388 = x372 + x373;
	const FLT x389 = (-1 * x72 * ((x76 * x386) + (-1 * ((x74 * x387) + (x73 * x388)) * x75))) + (-1 * ((x68 * x387) + (-1 * x50 * x388)) * x71);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x77 + (x61 * ((x53 * x58) + (-1 * x5 * x50))) + (x78 * x77));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), (((x84 * x58) + (-1 * x81 * x50)) * x61) + x86 + (x86 * x78));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), (((x88 * x58) + (-1 * x87 * x50)) * x61) + x90 + (x78 * x90));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x105 + (((x58 * x99) + (-1 * x50 * x95)) * x61) + (x78 * x105));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x113 + (((x58 * x111) + (-1 * x50 * x108)) * x61) + (x78 * x113));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x117 + (((x58 * x115) + (-1 * x50 * x114)) * x61) + (x78 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x156 + (((x58 * x154) + (-1 * x50 * x152)) * x61) + (x78 * x156));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (((x58 * x176) + (-1 * x50 * x174)) * x61) + x178 + (x78 * x178));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x194 + (x78 * x194) + (((x58 * x192) + (-1 * x50 * x193)) * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x207 + (x78 * x207) + (((x58 * x205) + (-1 * x50 * x206)) * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x295 + (((x58 * x293) + (-1 * x50 * x291)) * x61) + (x78 * x295));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x335 + (((x58 * x333) + (-1 * x50 * x331)) * x61) + (x78 * x335));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x368 + (((x58 * x366) + (-1 * x50 * x364)) * x61) + (x78 * x368));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x378 + (((x58 * x374) + (-1 * x50 * x371)) * x61) + (x78 * x378));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x385 + (((x58 * x383) + (-1 * x50 * x380)) * x61) + (x78 * x385));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), (((x58 * x387) + (-1 * x50 * x386)) * x61) + x389 + (x78 * x389));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * dt;
	const FLT x1 = x0 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x2 = x0 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x3 = x0 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x4 = 1e-10 + x3 + x1 + x2;
	const FLT x5 = sqrt(x4);
	const FLT x6 = 0.5 * x5;
	const FLT x7 = cos(x6);
	const FLT x8 = sin(x6);
	const FLT x9 = (1. / x4) * (x8 * x8);
	const FLT x10 = 1. / sqrt((x2 * x9) + (x1 * x9) + (x3 * x9) + (x7 * x7));
	const FLT x11 = x7 * x10;
	const FLT x12 = x11 * (*_x0).Pose.Rot[2];
	const FLT x13 = (1. / x5) * x8 * dt * x10;
	const FLT x14 = x13 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x14 * (*_x0).Pose.Rot[0];
	const FLT x16 = x13 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = x16 * (*_x0).Pose.Rot[3];
	const FLT x18 = x13 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x19 = x18 * (*_x0).Pose.Rot[1];
	const FLT x20 = (-1 * x19) + x17 + (-1 * x12) + (-1 * x15);
	const FLT x21 = x18 * (*_x0).Pose.Rot[2];
	const FLT x22 = x14 * (*_x0).Pose.Rot[3];
	const FLT x23 = x11 * (*_x0).Pose.Rot[1];
	const FLT x24 = x16 * (*_x0).Pose.Rot[0];
	const FLT x25 = x23 + x24 + (-1 * x21) + x22;
	const FLT x26 = 2 * x25;
	const FLT x27 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x11 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[3]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x28 = x18 * (*_x0).Pose.Rot[0];
	const FLT x29 = x14 * (*_x0).Pose.Rot[1];
	const FLT x30 = x11 * (*_x0).Pose.Rot[3];
	const FLT x31 = x16 * (*_x0).Pose.Rot[2];
	const FLT x32 = x30 + x28 + x31 + (-1 * x29);
	const FLT x33 = 2 * x32;
	const FLT x34 = x33 * x27;
	const FLT x35 = x34 + (-1 * x20 * x26);
	const FLT x36 = (-1 * x17) + x19 + x15 + x12;
	const FLT x37 = 2 * x36;
	const FLT x38 = x37 * x27;
	const FLT x39 = (x33 * x25) + (-1 * x38);
	const FLT x40 = 1 + (x37 * x20) + (-2 * (x32 * x32));
	const FLT x41 = (x40 * (*lh_p).Rot[0]) + (-1 * x35 * (*lh_p).Rot[3]) + (x39 * (*lh_p).Rot[2]);
	const FLT x42 = 2 * (*lh_p).Rot[3];
	const FLT x43 = (x35 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]) + (x39 * (*lh_p).Rot[0]);
	const FLT x44 = 2 * (*lh_p).Rot[1];
	const FLT x45 = x35 + (x41 * x42) + (-1 * x43 * x44);
	const FLT x46 = 1.0/2.0 * dt * fabs(dt);
	const FLT x47 = (-1 * x32 * sensor_pt[1]) + (x36 * sensor_pt[2]) + (x27 * sensor_pt[0]);
	const FLT x48 = (-1 * x25 * sensor_pt[2]) + (x32 * sensor_pt[0]) + (x27 * sensor_pt[1]);
	const FLT x49 = (2 * ((x48 * x25) + (-1 * x47 * x36))) + sensor_pt[2] + (x46 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x50 = (-1 * x36 * sensor_pt[0]) + (x27 * sensor_pt[2]) + (x25 * sensor_pt[1]);
	const FLT x51 = (2 * ((x50 * x36) + (-1 * x48 * x32))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x46 * (*_x0).Acc[0]);
	const FLT x52 = (2 * ((x47 * x32) + (-1 * x50 * x25))) + (dt * (*_x0).Velocity.Pos[1]) + (*_x0).Pose.Pos[1] + sensor_pt[1] + (x46 * (*_x0).Acc[1]);
	const FLT x53 = (-1 * x52 * (*lh_p).Rot[3]) + (x49 * (*lh_p).Rot[2]) + (x51 * (*lh_p).Rot[0]);
	const FLT x54 = (-1 * x49 * (*lh_p).Rot[1]) + (x52 * (*lh_p).Rot[0]) + (x51 * (*lh_p).Rot[3]);
	const FLT x55 = x49 + (2 * ((x54 * (*lh_p).Rot[1]) + (-1 * x53 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x56 = 1. / x55;
	const FLT x57 = (x40 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1]) + (x35 * (*lh_p).Rot[0]);
	const FLT x58 = 2 * (*lh_p).Rot[2];
	const FLT x59 = x39 + (x57 * x44) + (-1 * x58 * x41);
	const FLT x60 = x55 * x55;
	const FLT x61 = 1. / x60;
	const FLT x62 = (-1 * x51 * (*lh_p).Rot[2]) + (x49 * (*lh_p).Rot[0]) + (x52 * (*lh_p).Rot[1]);
	const FLT x63 = x52 + (*lh_p).Pos[1] + (2 * ((x53 * (*lh_p).Rot[3]) + (-1 * x62 * (*lh_p).Rot[1])));
	const FLT x64 = x63 * x61;
	const FLT x65 = x63 * x63;
	const FLT x66 = -1 * x55;
	const FLT x67 = 2 * (1. / (x60 + x65)) * x60 * atan2(x63, x66) * (*bsc0).curve;
	const FLT x68 = (x58 * x43) + x40 + (-1 * x57 * x42);
	const FLT x69 = x51 + (2 * ((x62 * (*lh_p).Rot[2]) + (-1 * x54 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x70 = x61 * x69;
	const FLT x71 = x60 + (x69 * x69);
	const FLT x72 = 1. / x71;
	const FLT x73 = x72 * x60;
	const FLT x74 = 1. / sqrt(1 + (-1 * x72 * x65 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x75 = 2 * x69;
	const FLT x76 = 2 * x55;
	const FLT x77 = 1.0/2.0 * (1. / (x71 * sqrt(x71))) * x63 * (*bsc0).tilt;
	const FLT x78 = (1. / sqrt(x71)) * (*bsc0).tilt;
	const FLT x79 = (-1 * x74 * ((x78 * x45) + (-1 * ((x76 * x59) + (x75 * x68)) * x77))) + (-1 * ((x70 * x59) + (-1 * x68 * x56)) * x73);
	const FLT x80 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x78 * x63)) + (-1 * atan2(x69, x66)));
	const FLT x81 = (-1 * x30) + (-1 * x31) + x29 + (-1 * x28);
	const FLT x82 = x26 * x27;
	const FLT x83 = x82 + (-1 * x81 * x37);
	const FLT x84 = 1 + (x81 * x33) + (-2 * (x25 * x25));
	const FLT x85 = (x37 * x25) + (-1 * x34);
	const FLT x86 = 2 * ((x85 * (*lh_p).Rot[0]) + (x83 * (*lh_p).Rot[2]) + (-1 * x84 * (*lh_p).Rot[3]));
	const FLT x87 = 2 * ((x84 * (*lh_p).Rot[1]) + (x83 * (*lh_p).Rot[0]) + (-1 * x85 * (*lh_p).Rot[2]));
	const FLT x88 = x84 + (x86 * (*lh_p).Rot[3]) + (-1 * x87 * (*lh_p).Rot[1]);
	const FLT x89 = 2 * ((x85 * (*lh_p).Rot[3]) + (-1 * x83 * (*lh_p).Rot[1]) + (x84 * (*lh_p).Rot[0]));
	const FLT x90 = x83 + (x89 * (*lh_p).Rot[1]) + (-1 * x86 * (*lh_p).Rot[2]);
	const FLT x91 = x85 + (x87 * (*lh_p).Rot[2]) + (-1 * x89 * (*lh_p).Rot[3]);
	const FLT x92 = (-1 * x74 * ((x88 * x78) + (-1 * ((x76 * x90) + (x75 * x91)) * x77))) + (-1 * ((x70 * x90) + (-1 * x56 * x91)) * x73);
	const FLT x93 = (x32 * x37) + (-1 * x82);
	const FLT x94 = x21 + (-1 * x24) + (-1 * x22) + (-1 * x23);
	const FLT x95 = 1 + (x94 * x26) + (-2 * (x36 * x36));
	const FLT x96 = x38 + (-1 * x94 * x33);
	const FLT x97 = (x96 * (*lh_p).Rot[0]) + (-1 * x93 * (*lh_p).Rot[3]) + (x95 * (*lh_p).Rot[2]);
	const FLT x98 = (x93 * (*lh_p).Rot[1]) + (-1 * x96 * (*lh_p).Rot[2]) + (x95 * (*lh_p).Rot[0]);
	const FLT x99 = x93 + (x97 * x42) + (-1 * x98 * x44);
	const FLT x100 = (x96 * (*lh_p).Rot[3]) + (-1 * x95 * (*lh_p).Rot[1]) + (x93 * (*lh_p).Rot[0]);
	const FLT x101 = x95 + (x44 * x100) + (-1 * x58 * x97);
	const FLT x102 = x96 + (x58 * x98) + (-1 * x42 * x100);
	const FLT x103 = (-1 * x74 * ((x78 * x99) + (-1 * ((x76 * x101) + (x75 * x102)) * x77))) + (-1 * ((x70 * x101) + (-1 * x56 * x102)) * x73);
	cnMatrixOptionalSet(Hx, 0, 0, x79 + (((x64 * x59) + (-1 * x56 * x45)) * x67) + (x80 * x79));
	cnMatrixOptionalSet(Hx, 0, 1, x92 + (((x64 * x90) + (-1 * x88 * x56)) * x67) + (x80 * x92));
	cnMatrixOptionalSet(Hx, 0, 2, x103 + (x67 * ((x64 * x101) + (-1 * x56 * x99))) + (x80 * x103));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * (*_x0).Velocity.Pos[2];
	const FLT x1 = 1.0/2.0 * dt * fabs(dt);
	const FLT x2 = x1 * (*_x0).Acc[2];
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = x14 * (*_x0).Pose.Rot[2];
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x20 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x22 = (x20 * (*_x0).Velocity.AxisAngleRot[0]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x23 = (x19 * sensor_pt[2]) + (-1 * x22 * sensor_pt[1]) + (x21 * sensor_pt[0]);
	const FLT x24 = (-1 * x20 * (*_x0).Velocity.AxisAngleRot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x25 = (x22 * sensor_pt[0]) + (-1 * x24 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x26 = 2 * ((x24 * x25) + (-1 * x23 * x19));
	const FLT x27 = sensor_pt[2] + x2 + x0 + x26 + (*_x0).Pose.Pos[2];
	const FLT x28 = x27 * (*lh_p).Rot[2];
	const FLT x29 = dt * (*_x0).Velocity.Pos[0];
	const FLT x30 = x1 * (*_x0).Acc[0];
	const FLT x31 = (-1 * x19 * sensor_pt[0]) + (x21 * sensor_pt[2]) + (x24 * sensor_pt[1]);
	const FLT x32 = 2 * ((x31 * x19) + (-1 * x25 * x22));
	const FLT x33 = x32 + (*_x0).Pose.Pos[0] + x29 + sensor_pt[0] + x30;
	const FLT x34 = x33 * (*lh_p).Rot[0];
	const FLT x35 = x1 * (*_x0).Acc[1];
	const FLT x36 = dt * (*_x0).Velocity.Pos[1];
	const FLT x37 = 2 * ((x22 * x23) + (-1 * x31 * x24));
	const FLT x38 = x37 + x36 + (*_x0).Pose.Pos[1] + sensor_pt[1] + x35;
	const FLT x39 = x38 * (*lh_p).Rot[3];
	const FLT x40 = (-1 * x39) + x28 + x34;
	const FLT x41 = x38 * (*lh_p).Rot[0];
	const FLT x42 = x33 * (*lh_p).Rot[3];
	const FLT x43 = x27 * (*lh_p).Rot[1];
	const FLT x44 = (-1 * x43) + x41 + x42;
	const FLT x45 = (2 * ((x44 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]))) + x27 + (*lh_p).Pos[2];
	const FLT x46 = x27 * (*lh_p).Rot[0];
	const FLT x47 = x38 * (*lh_p).Rot[1];
	const FLT x48 = x33 * (*lh_p).Rot[2];
	const FLT x49 = (-1 * x48) + x46 + x47;
	const FLT x50 = x33 + (2 * ((x49 * (*lh_p).Rot[2]) + (-1 * x44 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x51 = x45 * x45;
	const FLT x52 = x51 + (x50 * x50);
	const FLT x53 = 1. / x52;
	const FLT x54 = (*lh_p).Pos[1] + x38 + (2 * ((x40 * (*lh_p).Rot[3]) + (-1 * x49 * (*lh_p).Rot[1])));
	const FLT x55 = x54 * x54;
	const FLT x56 = 1. / sqrt(1 + (-1 * x53 * x55 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x57 = x54 * (1. / (x52 * sqrt(x52))) * (*bsc0).tilt;
	const FLT x58 = x57 * x56;
	const FLT x59 = (x50 * x58) + (x53 * x45);
	const FLT x60 = (1. / sqrt(x52)) * (*bsc0).tilt;
	const FLT x61 = -1 * x45;
	const FLT x62 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x60 * x54)) + (-1 * atan2(x50, x61)));
	const FLT x63 = 2 * x45;
	const FLT x64 = (1. / (x51 + x55)) * atan2(x54, x61) * (*bsc0).curve;
	const FLT x65 = x60 * x56;
	const FLT x66 = 2 * x64;
	const FLT x67 = (x58 * x45) + (-1 * x50 * x53);
	const FLT x68 = 1. / x45;
	const FLT x69 = 2 * x43;
	const FLT x70 = (2 * x42) + (-1 * x69);
	const FLT x71 = 2 * x48;
	const FLT x72 = (2 * x47) + (-1 * x71);
	const FLT x73 = 1. / x51;
	const FLT x74 = x73 * x54;
	const FLT x75 = x66 * x51;
	const FLT x76 = 2 * x39;
	const FLT x77 = (2 * x28) + (-1 * x76);
	const FLT x78 = x73 * x50;
	const FLT x79 = x53 * x51;
	const FLT x80 = 2 * x50;
	const FLT x81 = 1.0/2.0 * x57;
	const FLT x82 = (-1 * x56 * ((x70 * x60) + (-1 * ((x72 * x63) + (x80 * x77)) * x81))) + (-1 * ((x72 * x78) + (-1 * x77 * x68)) * x79);
	const FLT x83 = 2 * x46;
	const FLT x84 = (-1 * x83) + (-4 * x47) + x71;
	const FLT x85 = (-1 * sensor_pt[2]) + (-1 * x2) + (-1 * x26) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x0);
	const FLT x86 = 2 * (*lh_p).Rot[1];
	const FLT x87 = 2 * x41;
	const FLT x88 = x70 + (x85 * x86) + x87;
	const FLT x89 = 2 * (*lh_p).Rot[3];
	const FLT x90 = 2 * (*lh_p).Rot[2];
	const FLT x91 = (x90 * x38) + (-1 * x89 * x85);
	const FLT x92 = (-1 * x56 * ((x84 * x60) + (-1 * ((x88 * x63) + (x80 * x91)) * x81))) + (-1 * ((x88 * x78) + (-1 * x68 * x91)) * x79);
	const FLT x93 = 2 * ((-1 * (*_x0).Pose.Pos[0]) + (-1 * x32) + (-1 * x29) + (-1 * x30) + (-1 * sensor_pt[0]));
	const FLT x94 = (x89 * x27) + (-1 * x93 * (*lh_p).Rot[1]);
	const FLT x95 = 2 * x34;
	const FLT x96 = (-1 * x95) + (-4 * x28) + x76;
	const FLT x97 = x72 + x83 + (x93 * (*lh_p).Rot[2]);
	const FLT x98 = (-1 * x56 * ((x60 * x94) + (-1 * ((x63 * x96) + (x80 * x97)) * x81))) + (-1 * ((x78 * x96) + (-1 * x68 * x97)) * x79);
	const FLT x99 = (-1 * x37) + (-1 * x36) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x35) + (-1 * sensor_pt[1]);
	const FLT x100 = x77 + (x89 * x99) + x95;
	const FLT x101 = (x86 * x33) + (-1 * x90 * x99);
	const FLT x102 = (-1 * x87) + x69 + (-4 * x42);
	const FLT x103 = (-1 * x56 * ((x60 * x100) + (-1 * ((x63 * x101) + (x80 * x102)) * x81))) + (-1 * ((x78 * x101) + (-1 * x68 * x102)) * x79);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), x59 + (x62 * x59));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), (-1 * x65) + (-1 * x63 * x64) + (-1 * x62 * x65));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x67 + (x66 * x54) + (x62 * x67));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x82 + (((x72 * x74) + (-1 * x70 * x68)) * x75) + (x82 * x62));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), x92 + (((x88 * x74) + (-1 * x84 * x68)) * x75) + (x62 * x92));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x98 + (((x74 * x96) + (-1 * x68 * x94)) * x75) + (x62 * x98));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), x103 + (((x74 * x101) + (-1 * x68 * x100)) * x75) + (x62 * x103));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f019302d280>,
// <cnkalman.codegen.WrapMember object at 0x7f019302d460>, <cnkalman.codegen.WrapMember object at 0x7f019302d370>,
// <cnkalman.codegen.WrapMember object at 0x7f019302d520>, <cnkalman.codegen.WrapMember object at 0x7f019302d4c0>,
// <cnkalman.codegen.WrapMember object at 0x7f019302a040>, <cnkalman.codegen.WrapMember object at 0x7f019302d250>]
static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x26 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[1]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]);
	const FLT x29 = x25 + (*lh_p).Pos[1] + (2 * ((x28 * (*lh_p).Rot[3]) + (-1 * x27 * (*lh_p).Rot[1])));
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[1]) + (x25 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[3]);
	const FLT x31 = x23 + (2 * ((x30 * (*lh_p).Rot[1]) + (-1 * x28 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = -1 * x31;
	const FLT x33 = x26 + (2 * ((x27 * (*lh_p).Rot[2]) + (-1 * x30 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x34 = (x33 * x33) + (x31 * x31);
	const FLT x35 = (1. / sqrt(x34)) * x29;
	const FLT x36 = 1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x35 * (*bsc0).tilt)) + (-1 * atan2(x33, x32));
	const FLT x37 = sin(x36) * (*bsc0).gibmag;
	const FLT x38 = x35 * (1. / sqrt(1 + (-1 * (1. / x34) * (x29 * x29) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), atan2(x29, x32) * atan2(x29, x32));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), -1 * cos(x36));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x37);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1 + (-1 * x37));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x38 * x37) + (-1 * x38));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f019302d280>, <cnkalman.codegen.WrapMember object at 0x7f019302d460>, <cnkalman.codegen.WrapMember object at
// 0x7f019302d370>, <cnkalman.codegen.WrapMember object at 0x7f019302d520>, <cnkalman.codegen.WrapMember object at
// 0x7f019302d4c0>, <cnkalman.codegen.WrapMember object at 0x7f019302a040>, <cnkalman.codegen.WrapMember object at
// 0x7f019302d250>]

static inline void SurviveKalmanModel_LightMeas_x_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen1_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanModel_LightMeas_y_gen1(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x14 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x11 * x10;
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[3]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (x15 * (*_x0).Pose.Rot[1]) + (x16 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[2]) + (x14 * (*_x0).Pose.Rot[3]);
	const FLT x19 = (x13 * (*_x0).Pose.Rot[1]) + (-1 * x16 * (*_x0).Pose.Rot[3]) + (x14 * (*_x0).Pose.Rot[0]) + (x15 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (-1 * x19 * sensor_pt[0]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[2]) + (x15 * (*_x0).Pose.Rot[3]) + (x13 * (*_x0).Pose.Rot[0]) + (-1 * x14 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x17 * sensor_pt[0]);
	const FLT x23 = (dt * (*_x0).Velocity.Pos[1]) + (2 * ((x22 * x21) + (-1 * x20 * x18))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x24 = (-1 * x18 * sensor_pt[2]) + (x21 * sensor_pt[0]) + (x17 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = sensor_pt[2] + (2 * ((x24 * x18) + (-1 * x22 * x19))) + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[1]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]) + (x23 * (*lh_p).Rot[1]);
	const FLT x29 = (2 * ((x28 * (*lh_p).Rot[2]) + (-1 * x27 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[3]) + (x26 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x31 = x26 + (2 * ((x27 * (*lh_p).Rot[1]) + (-1 * x30 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = -1 * x31;
	const FLT x33 = x23 + (*lh_p).Pos[1] + (2 * ((x30 * (*lh_p).Rot[3]) + (-1 * x28 * (*lh_p).Rot[1])));
	const FLT x34 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x33 * x33) + (x31 * x31))) * x29 * (*bsc0).tilt)) + (-1 * atan2(-1 * x33, x32));
	return ((atan2(x29, x32) * atan2(x29, x32)) * (*bsc0).curve) + x34 + (-1 * cos(1.5707963267949 + x34 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x1 = dt * fabs(dt);
	const FLT x2 = -1 * x0 * x1;
	const FLT x3 = 1.0/2.0 * x1;
	const FLT x4 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x5 = (-1 * x1 * x4) + x3;
	const FLT x6 = x5 + x2;
	const FLT x7 = dt * dt;
	const FLT x8 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x9 = x8 * x7;
	const FLT x10 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x11 = x7 * x10;
	const FLT x12 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x13 = x7 * x12;
	const FLT x14 = 1e-10 + x9 + x11 + x13;
	const FLT x15 = sqrt(x14);
	const FLT x16 = 0.5 * x15;
	const FLT x17 = sin(x16);
	const FLT x18 = x17 * x17;
	const FLT x19 = 1. / x14;
	const FLT x20 = x19 * x18;
	const FLT x21 = cos(x16);
	const FLT x22 = (x20 * x13) + (x20 * x11) + (x9 * x20) + (x21 * x21);
	const FLT x23 = 1. / sqrt(x22);
	const FLT x24 = x23 * x17;
	const FLT x25 = 1. / x15;
	const FLT x26 = dt * x25;
	const FLT x27 = x24 * x26;
	const FLT x28 = x27 * (*_x0).Pose.Rot[0];
	const FLT x29 = x23 * x21;
	const FLT x30 = x29 * (*_x0).Pose.Rot[2];
	const FLT x31 = x27 * (*_x0).Pose.Rot[1];
	const FLT x32 = x24 * (*_x0).Pose.Rot[3];
	const FLT x33 = x32 * x26;
	const FLT x34 = (-1 * x33 * (*_x0).Velocity.AxisAngleRot[0]) + (x31 * (*_x0).Velocity.AxisAngleRot[2]) + (x28 * (*_x0).Velocity.AxisAngleRot[1]) + x30;
	const FLT x35 = x27 * (*_x0).Pose.Rot[2];
	const FLT x36 = x29 * (*_x0).Pose.Rot[0];
	const FLT x37 = (-1 * x31 * (*_x0).Velocity.AxisAngleRot[0]) + x36 + (-1 * x33 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x35 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x38 = x29 * (*_x0).Pose.Rot[3];
	const FLT x39 = (x35 * (*_x0).Velocity.AxisAngleRot[0]) + x38 + (x28 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x31 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x40 = (-1 * x39 * sensor_pt[1]) + (x34 * sensor_pt[2]) + (x37 * sensor_pt[0]);
	const FLT x41 = x29 * (*_x0).Pose.Rot[1];
	const FLT x42 = (x28 * (*_x0).Velocity.AxisAngleRot[0]) + x41 + (-1 * x35 * (*_x0).Velocity.AxisAngleRot[2]) + (x33 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x43 = (-1 * x42 * sensor_pt[2]) + (x39 * sensor_pt[0]) + (x37 * sensor_pt[1]);
	const FLT x44 = sensor_pt[2] + (x3 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (2 * ((x42 * x43) + (-1 * x40 * x34))) + (*_x0).Pose.Pos[2];
	const FLT x45 = (-1 * x34 * sensor_pt[0]) + (x37 * sensor_pt[2]) + (x42 * sensor_pt[1]);
	const FLT x46 = (*_x0).Pose.Pos[0] + sensor_pt[0] + (2 * ((x45 * x34) + (-1 * x43 * x39))) + (dt * (*_x0).Velocity.Pos[0]) + (x3 * (*_x0).Acc[0]);
	const FLT x47 = (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (2 * ((x40 * x39) + (-1 * x42 * x45))) + (*_x0).Pose.Pos[1] + (x3 * (*_x0).Acc[1]);
	const FLT x48 = (x44 * (*lh_p).Rot[2]) + (-1 * x47 * (*lh_p).Rot[3]) + (x46 * (*lh_p).Rot[0]);
	const FLT x49 = (-1 * x44 * (*lh_p).Rot[1]) + (x47 * (*lh_p).Rot[0]) + (x46 * (*lh_p).Rot[3]);
	const FLT x50 = x44 + (2 * ((x49 * (*lh_p).Rot[1]) + (-1 * x48 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x51 = 1. / x50;
	const FLT x52 = x1 * (*lh_p).Rot[0];
	const FLT x53 = x52 * (*lh_p).Rot[2];
	const FLT x54 = x1 * (*lh_p).Rot[3];
	const FLT x55 = x54 * (*lh_p).Rot[1];
	const FLT x56 = x55 + (-1 * x53);
	const FLT x57 = x50 * x50;
	const FLT x58 = 1. / x57;
	const FLT x59 = (x44 * (*lh_p).Rot[0]) + (-1 * x46 * (*lh_p).Rot[2]) + (x47 * (*lh_p).Rot[1]);
	const FLT x60 = x46 + (2 * ((x59 * (*lh_p).Rot[2]) + (-1 * x49 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x61 = x60 * x58;
	const FLT x62 = -1 * x50;
	const FLT x63 = x60 * x60;
	const FLT x64 = 2 * (1. / (x57 + x63)) * x57 * atan2(x60, x62) * (*bsc0).curve;
	const FLT x65 = x1 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x66 = x54 * (*lh_p).Rot[0];
	const FLT x67 = x66 + x65;
	const FLT x68 = (*lh_p).Pos[1] + x47 + (2 * ((x48 * (*lh_p).Rot[3]) + (-1 * x59 * (*lh_p).Rot[1])));
	const FLT x69 = x68 * x58;
	const FLT x70 = (x68 * x68) + x57;
	const FLT x71 = 1. / x70;
	const FLT x72 = x71 * x57;
	const FLT x73 = 1. / sqrt(1 + (-1 * x71 * x63 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x74 = (1. / sqrt(x70)) * (*bsc0).tilt;
	const FLT x75 = 2 * x68;
	const FLT x76 = 2 * x50;
	const FLT x77 = 1.0/2.0 * (1. / (x70 * sqrt(x70))) * x60 * (*bsc0).tilt;
	const FLT x78 = (-1 * x73 * ((-1 * ((x76 * x56) + (x75 * x67)) * x77) + (x6 * x74))) + (-1 * ((-1 * x69 * x56) + (x67 * x51)) * x72);
	const FLT x79 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x74 * x60)) + (-1 * atan2(-1 * x68, x62)));
	const FLT x80 = x65 + (-1 * x66);
	const FLT x81 = x54 * (*lh_p).Rot[2];
	const FLT x82 = x52 * (*lh_p).Rot[1];
	const FLT x83 = x82 + x81;
	const FLT x84 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x85 = -1 * x1 * x84;
	const FLT x86 = x85 + x2 + x3;
	const FLT x87 = (-1 * x73 * ((-1 * ((x83 * x76) + (x86 * x75)) * x77) + (x80 * x74))) + (-1 * ((-1 * x83 * x69) + (x86 * x51)) * x72);
	const FLT x88 = x53 + x55;
	const FLT x89 = x5 + x85;
	const FLT x90 = x81 + (-1 * x82);
	const FLT x91 = (-1 * x73 * ((-1 * ((x89 * x76) + (x75 * x90)) * x77) + (x88 * x74))) + (-1 * ((-1 * x89 * x69) + (x51 * x90)) * x72);
	const FLT x92 = 2 * x4;
	const FLT x93 = -1 * x92;
	const FLT x94 = 2 * x0;
	const FLT x95 = 1 + (-1 * x94);
	const FLT x96 = x95 + x93;
	const FLT x97 = 2 * (*lh_p).Rot[2];
	const FLT x98 = x97 * (*lh_p).Rot[0];
	const FLT x99 = 2 * (*lh_p).Rot[1];
	const FLT x100 = x99 * (*lh_p).Rot[3];
	const FLT x101 = x100 + (-1 * x98);
	const FLT x102 = x97 * (*lh_p).Rot[1];
	const FLT x103 = 2 * (*lh_p).Rot[3];
	const FLT x104 = x103 * (*lh_p).Rot[0];
	const FLT x105 = x104 + x102;
	const FLT x106 = (-1 * x73 * ((-1 * ((x76 * x101) + (x75 * x105)) * x77) + (x74 * x96))) + (-1 * ((-1 * x69 * x101) + (x51 * x105)) * x72);
	const FLT x107 = x102 + (-1 * x104);
	const FLT x108 = x97 * (*lh_p).Rot[3];
	const FLT x109 = x99 * (*lh_p).Rot[0];
	const FLT x110 = x109 + x108;
	const FLT x111 = 2 * x84;
	const FLT x112 = -1 * x111;
	const FLT x113 = x95 + x112;
	const FLT x114 = (-1 * x73 * ((-1 * ((x76 * x110) + (x75 * x113)) * x77) + (x74 * x107))) + (-1 * ((-1 * x69 * x110) + (x51 * x113)) * x72);
	const FLT x115 = x98 + x100;
	const FLT x116 = 1 + x112 + x93;
	const FLT x117 = x108 + (-1 * x109);
	const FLT x118 = (-1 * x73 * ((-1 * ((x76 * x116) + (x75 * x117)) * x77) + (x74 * x115))) + (-1 * ((-1 * x69 * x116) + (x51 * x117)) * x72);
	const FLT x119 = x27 * sensor_pt[2];
	const FLT x120 = x119 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x121 = x29 * sensor_pt[0];
	const FLT x122 = x27 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x123 = -1 * x122 * sensor_pt[1];
	const FLT x124 = x123 + x121;
	const FLT x125 = x124 + x120;
	const FLT x126 = 2 * x34;
	const FLT x127 = 2 * x43;
	const FLT x128 = x27 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x129 = x128 * x127;
	const FLT x130 = 2 * x40;
	const FLT x131 = x27 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x132 = -1 * x130 * x131;
	const FLT x133 = x122 * sensor_pt[0];
	const FLT x134 = -1 * x119 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x135 = x29 * sensor_pt[1];
	const FLT x136 = x135 + x134;
	const FLT x137 = x136 + x133;
	const FLT x138 = 2 * x42;
	const FLT x139 = (x137 * x138) + x132 + (-1 * x126 * x125) + x129;
	const FLT x140 = -1 * x131 * sensor_pt[0];
	const FLT x141 = x29 * sensor_pt[2];
	const FLT x142 = x128 * sensor_pt[1];
	const FLT x143 = x142 + x140 + x141;
	const FLT x144 = 2 * x39;
	const FLT x145 = x122 * x130;
	const FLT x146 = 2 * x45;
	const FLT x147 = -1 * x128 * x146;
	const FLT x148 = x145 + (-1 * x138 * x143) + x147 + (x125 * x144);
	const FLT x149 = -1 * x122 * x127;
	const FLT x150 = x131 * x146;
	const FLT x151 = x150 + (-1 * x137 * x144) + (x126 * x143) + x149;
	const FLT x152 = (x151 * (*lh_p).Rot[3]) + (-1 * x139 * (*lh_p).Rot[1]) + (x148 * (*lh_p).Rot[0]);
	const FLT x153 = (x148 * (*lh_p).Rot[1]) + (-1 * x151 * (*lh_p).Rot[2]) + (x139 * (*lh_p).Rot[0]);
	const FLT x154 = x151 + (-1 * x103 * x152) + (x97 * x153);
	const FLT x155 = (x151 * (*lh_p).Rot[0]) + (-1 * x148 * (*lh_p).Rot[3]) + (x139 * (*lh_p).Rot[2]);
	const FLT x156 = x139 + (-1 * x97 * x155) + (x99 * x152);
	const FLT x157 = (-1 * x99 * x153) + x148 + (x103 * x155);
	const FLT x158 = (-1 * x73 * ((-1 * ((x76 * x156) + (x75 * x157)) * x77) + (x74 * x154))) + (-1 * ((-1 * x69 * x156) + (x51 * x157)) * x72);
	const FLT x159 = x131 * sensor_pt[1];
	const FLT x160 = x119 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x161 = x128 * sensor_pt[0];
	const FLT x162 = (-1 * x161) + x159 + x160;
	const FLT x163 = (-1 * x142) + x140;
	const FLT x164 = x163 + (-1 * x141);
	const FLT x165 = x29 * x127;
	const FLT x166 = (-1 * x126 * x162) + (-1 * x145) + x165 + (x164 * x138);
	const FLT x167 = -1 * x133;
	const FLT x168 = x136 + x167;
	const FLT x169 = x29 * x146;
	const FLT x170 = (-1 * x169) + x132 + (-1 * x168 * x138) + (x162 * x144);
	const FLT x171 = x122 * x146;
	const FLT x172 = x127 * x131;
	const FLT x173 = (x126 * x168) + x172 + x171 + (-1 * x164 * x144);
	const FLT x174 = (x173 * (*lh_p).Rot[3]) + (-1 * x166 * (*lh_p).Rot[1]) + (x170 * (*lh_p).Rot[0]);
	const FLT x175 = 2 * ((-1 * x173 * (*lh_p).Rot[2]) + (x170 * (*lh_p).Rot[1]) + (x166 * (*lh_p).Rot[0]));
	const FLT x176 = x173 + (-1 * x103 * x174) + (x175 * (*lh_p).Rot[2]);
	const FLT x177 = 2 * ((x173 * (*lh_p).Rot[0]) + (-1 * x170 * (*lh_p).Rot[3]) + (x166 * (*lh_p).Rot[2]));
	const FLT x178 = x166 + (-1 * x177 * (*lh_p).Rot[2]) + (x99 * x174);
	const FLT x179 = x170 + (-1 * x175 * (*lh_p).Rot[1]) + (x177 * (*lh_p).Rot[3]);
	const FLT x180 = (-1 * x73 * ((-1 * ((x76 * x178) + (x75 * x179)) * x77) + (x74 * x176))) + (-1 * ((-1 * x69 * x178) + (x51 * x179)) * x72);
	const FLT x181 = -1 * x120;
	const FLT x182 = x123 + (-1 * x121) + x181;
	const FLT x183 = x163 + x141;
	const FLT x184 = x128 * x130;
	const FLT x185 = (-1 * x182 * x138) + x184 + (x183 * x144) + x171;
	const FLT x186 = x29 * x130;
	const FLT x187 = (-1 * x159) + x160 + x161;
	const FLT x188 = x149 + (x187 * x138) + (-1 * x126 * x183) + (-1 * x186);
	const FLT x189 = (x126 * x182) + x169 + (-1 * x129) + (-1 * x187 * x144);
	const FLT x190 = (x189 * (*lh_p).Rot[3]) + (x185 * (*lh_p).Rot[0]) + (-1 * x188 * (*lh_p).Rot[1]);
	const FLT x191 = (x185 * (*lh_p).Rot[1]) + (x188 * (*lh_p).Rot[0]) + (-1 * x189 * (*lh_p).Rot[2]);
	const FLT x192 = x189 + (-1 * x103 * x190) + (x97 * x191);
	const FLT x193 = (-1 * x185 * (*lh_p).Rot[3]) + (x189 * (*lh_p).Rot[0]) + (x188 * (*lh_p).Rot[2]);
	const FLT x194 = x188 + (-1 * x97 * x193) + (x99 * x190);
	const FLT x195 = x185 + (-1 * x99 * x191) + (x103 * x193);
	const FLT x196 = (-1 * x73 * ((-1 * ((x76 * x194) + (x75 * x195)) * x77) + (x74 * x192))) + (-1 * ((-1 * x69 * x194) + (x51 * x195)) * x72);
	const FLT x197 = x167 + (-1 * x135) + x134;
	const FLT x198 = x124 + x181;
	const FLT x199 = (x198 * x138) + (-1 * x126 * x197) + x172 + x184;
	const FLT x200 = x161 + x159 + (-1 * x160);
	const FLT x201 = (-1 * x150) + x186 + (-1 * x200 * x138) + (x197 * x144);
	const FLT x202 = x147 + (x200 * x126) + (-1 * x165) + (-1 * x198 * x144);
	const FLT x203 = (x202 * (*lh_p).Rot[3]) + (-1 * x199 * (*lh_p).Rot[1]) + (x201 * (*lh_p).Rot[0]);
	const FLT x204 = (x201 * (*lh_p).Rot[1]) + (-1 * x202 * (*lh_p).Rot[2]) + (x199 * (*lh_p).Rot[0]);
	const FLT x205 = x202 + (-1 * x203 * x103) + (x97 * x204);
	const FLT x206 = (x202 * (*lh_p).Rot[0]) + (-1 * x201 * (*lh_p).Rot[3]) + (x199 * (*lh_p).Rot[2]);
	const FLT x207 = (-1 * x97 * x206) + x199 + (x99 * x203);
	const FLT x208 = x201 + (x206 * x103) + (-1 * x99 * x204);
	const FLT x209 = (-1 * x73 * ((-1 * ((x76 * x207) + (x75 * x208)) * x77) + (x74 * x205))) + (-1 * ((-1 * x69 * x207) + (x51 * x208)) * x72);
	const FLT x210 = dt * dt * dt;
	const FLT x211 = 0.5 * x19 * x210;
	const FLT x212 = x12 * x211;
	const FLT x213 = 1.0/2.0 * (1. / (x22 * sqrt(x22)));
	const FLT x214 = x26 * x17 * x213;
	const FLT x215 = x214 * (*_x0).Pose.Rot[0];
	const FLT x216 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x217 = dt * dt * dt * dt;
	const FLT x218 = 2 * (1. / (x14 * x14)) * x18;
	const FLT x219 = x218 * x217;
	const FLT x220 = x8 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x221 = 1. / (x14 * sqrt(x14));
	const FLT x222 = 1.0 * x21 * x17;
	const FLT x223 = x221 * x222;
	const FLT x224 = x217 * x223;
	const FLT x225 = x25 * x222;
	const FLT x226 = x7 * x225;
	const FLT x227 = 2 * x20;
	const FLT x228 = x7 * x227;
	const FLT x229 = x10 * x224;
	const FLT x230 = x10 * x219;
	const FLT x231 = (-1 * x230 * (*_x0).Velocity.AxisAngleRot[0]) + (x229 * (*_x0).Velocity.AxisAngleRot[0]) + (x220 * x224) + (-1 * x219 * x216) + (-1 * x219 * x220) + (x216 * x224) + (x228 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x226 * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x232 = x231 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x233 = x210 * x221;
	const FLT x234 = x12 * x233;
	const FLT x235 = x24 * (*_x0).Pose.Rot[2];
	const FLT x236 = x21 * x213;
	const FLT x237 = x231 * x236;
	const FLT x238 = x231 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x239 = x214 * x238;
	const FLT x240 = 0.5 * x25;
	const FLT x241 = x7 * x240;
	const FLT x242 = x241 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x243 = x214 * (*_x0).Pose.Rot[2];
	const FLT x244 = x231 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x245 = x211 * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x246 = x24 * (*_x0).Pose.Rot[0];
	const FLT x247 = x233 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x248 = x247 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x249 = (-1 * x246 * x248) + (x36 * x245);
	const FLT x250 = x24 * (*_x0).Pose.Rot[1];
	const FLT x251 = x247 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x252 = x211 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x253 = x252 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x254 = (-1 * x41 * x253) + (x250 * x251);
	const FLT x255 = x249 + (-1 * x243 * x244) + x254 + (-1 * x32 * x242) + x35 + (-1 * x215 * x232) + (x30 * x212) + (-1 * x234 * x235) + (-1 * x237 * (*_x0).Pose.Rot[3]) + (x239 * (*_x0).Pose.Rot[1]);
	const FLT x256 = -1 * x33;
	const FLT x257 = x214 * (*_x0).Pose.Rot[3];
	const FLT x258 = x250 * x248;
	const FLT x259 = x41 * x245;
	const FLT x260 = x214 * (*_x0).Pose.Rot[1];
	const FLT x261 = (-1 * x251 * x246) + (x36 * x253);
	const FLT x262 = x261 + (-1 * x232 * x260) + (-1 * x258) + (-1 * x239 * (*_x0).Pose.Rot[0]) + x256 + (-1 * x235 * x242) + (-1 * x237 * (*_x0).Pose.Rot[2]) + (-1 * x38 * x212) + (x32 * x234) + x259 + (x257 * x244);
	const FLT x263 = x30 * x253;
	const FLT x264 = x235 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x265 = x264 * x247;
	const FLT x266 = -1 * x31;
	const FLT x267 = (-1 * x38 * x245) + (x32 * x248);
	const FLT x268 = x267 + (x234 * x250) + (-1 * x41 * x212) + (-1 * x237 * (*_x0).Pose.Rot[0]) + x266 + (x239 * (*_x0).Pose.Rot[2]) + (-1 * x263) + (x232 * x257) + (x260 * x244) + (-1 * x242 * x246) + x265;
	const FLT x269 = (x268 * sensor_pt[0]) + (-1 * x255 * sensor_pt[1]) + (x262 * sensor_pt[2]);
	const FLT x270 = x38 * x253;
	const FLT x271 = x32 * x251;
	const FLT x272 = x30 * x245;
	const FLT x273 = x235 * x248;
	const FLT x274 = (-1 * x215 * x244) + x28 + (-1 * x234 * x246) + (-1 * x272) + (x232 * x243) + x270 + (-1 * x271) + (-1 * x250 * x242) + x273 + (-1 * x237 * (*_x0).Pose.Rot[1]) + (-1 * x238 * x257) + (x36 * x212);
	const FLT x275 = (x268 * sensor_pt[1]) + (-1 * x274 * sensor_pt[2]) + (x255 * sensor_pt[0]);
	const FLT x276 = 2 * x274;
	const FLT x277 = (x43 * x276) + (x275 * x138) + (-1 * x269 * x126) + (-1 * x262 * x130);
	const FLT x278 = (x274 * sensor_pt[1]) + (-1 * x262 * sensor_pt[0]) + (x268 * sensor_pt[2]);
	const FLT x279 = (x269 * x144) + (-1 * x278 * x138) + (-1 * x45 * x276) + (x255 * x130);
	const FLT x280 = (x278 * x126) + (x262 * x146) + (-1 * x255 * x127) + (-1 * x275 * x144);
	const FLT x281 = 2 * ((x280 * (*lh_p).Rot[3]) + (-1 * x277 * (*lh_p).Rot[1]) + (x279 * (*lh_p).Rot[0]));
	const FLT x282 = 2 * ((x279 * (*lh_p).Rot[1]) + (-1 * x280 * (*lh_p).Rot[2]) + (x277 * (*lh_p).Rot[0]));
	const FLT x283 = (-1 * x281 * (*lh_p).Rot[3]) + x280 + (x282 * (*lh_p).Rot[2]);
	const FLT x284 = 2 * ((x280 * (*lh_p).Rot[0]) + (x277 * (*lh_p).Rot[2]) + (-1 * x279 * (*lh_p).Rot[3]));
	const FLT x285 = x277 + (-1 * x284 * (*lh_p).Rot[2]) + (x281 * (*lh_p).Rot[1]);
	const FLT x286 = x279 + (-1 * x282 * (*lh_p).Rot[1]) + (x284 * (*lh_p).Rot[3]);
	const FLT x287 = (-1 * x73 * ((-1 * ((x76 * x285) + (x75 * x286)) * x77) + (x74 * x283))) + (-1 * ((-1 * x69 * x285) + (x51 * x286)) * x72);
	const FLT x288 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x289 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x290 = (-1 * x230 * (*_x0).Velocity.AxisAngleRot[1]) + (x229 * (*_x0).Velocity.AxisAngleRot[1]) + (x289 * x224) + (-1 * x226 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x219 * x288) + (x288 * x224) + (x228 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x219 * x289);
	const FLT x291 = x214 * x290;
	const FLT x292 = x291 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x293 = x291 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x294 = x8 * x233;
	const FLT x295 = x236 * x290;
	const FLT x296 = x291 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x297 = x8 * x211;
	const FLT x298 = x241 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x299 = x246 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x300 = x233 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x301 = x252 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x302 = (x36 * x301) + (-1 * x299 * x300);
	const FLT x303 = x263 + (-1 * x32 * x298) + x302 + (-1 * x265) + (-1 * x296 * (*_x0).Pose.Rot[0]) + (-1 * x292 * (*_x0).Pose.Rot[2]) + (x294 * x250) + (x293 * (*_x0).Pose.Rot[1]) + (-1 * x41 * x297) + x266 + (-1 * x295 * (*_x0).Pose.Rot[3]);
	const FLT x304 = x300 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x305 = x250 * x304;
	const FLT x306 = x41 * x301;
	const FLT x307 = (-1 * x293 * (*_x0).Pose.Rot[0]) + (-1 * x264 * x241) + (-1 * x294 * x246) + (-1 * x270) + (x292 * (*_x0).Pose.Rot[3]) + (-1 * x295 * (*_x0).Pose.Rot[2]) + x28 + (-1 * x305) + (-1 * x296 * (*_x0).Pose.Rot[1]) + x271 + (x36 * x297) + x306;
	const FLT x308 = -1 * x35;
	const FLT x309 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Pose.Rot[2];
	const FLT x310 = x38 * x301;
	const FLT x311 = x32 * x304;
	const FLT x312 = x254 + (x235 * x294) + (-1 * x299 * x241) + x311 + (x291 * x309) + (-1 * x295 * (*_x0).Pose.Rot[0]) + x308 + (-1 * x30 * x297) + (-1 * x310) + (x296 * (*_x0).Pose.Rot[3]) + (x292 * (*_x0).Pose.Rot[1]);
	const FLT x313 = (x312 * sensor_pt[0]) + (-1 * x303 * sensor_pt[1]) + (x307 * sensor_pt[2]);
	const FLT x314 = (-1 * x30 * x301) + (x264 * x300);
	const FLT x315 = (-1 * x295 * (*_x0).Pose.Rot[1]) + (x38 * x297) + x33 + x314 + (-1 * x293 * (*_x0).Pose.Rot[3]) + x261 + (-1 * x298 * x250) + (x296 * (*_x0).Pose.Rot[2]) + (-1 * x292 * (*_x0).Pose.Rot[0]) + (-1 * x32 * x294);
	const FLT x316 = (x312 * sensor_pt[1]) + (-1 * x315 * sensor_pt[2]) + (x303 * sensor_pt[0]);
	const FLT x317 = (x316 * x138) + (-1 * x307 * x130) + (-1 * x313 * x126) + (x315 * x127);
	const FLT x318 = (x315 * sensor_pt[1]) + (-1 * x307 * sensor_pt[0]) + (x312 * sensor_pt[2]);
	const FLT x319 = (x303 * x130) + (x313 * x144) + (-1 * x318 * x138) + (-1 * x315 * x146);
	const FLT x320 = (-1 * x316 * x144) + (-1 * x303 * x127) + (x307 * x146) + (x318 * x126);
	const FLT x321 = (-1 * x317 * (*lh_p).Rot[1]) + (x320 * (*lh_p).Rot[3]) + (x319 * (*lh_p).Rot[0]);
	const FLT x322 = (x319 * (*lh_p).Rot[1]) + (-1 * x320 * (*lh_p).Rot[2]) + (x317 * (*lh_p).Rot[0]);
	const FLT x323 = x320 + (-1 * x321 * x103) + (x97 * x322);
	const FLT x324 = (-1 * x319 * (*lh_p).Rot[3]) + (x320 * (*lh_p).Rot[0]) + (x317 * (*lh_p).Rot[2]);
	const FLT x325 = (-1 * x97 * x324) + x317 + (x99 * x321);
	const FLT x326 = x319 + (-1 * x99 * x322) + (x324 * x103);
	const FLT x327 = (-1 * x73 * ((-1 * ((x76 * x325) + (x75 * x326)) * x77) + (x74 * x323))) + (-1 * ((-1 * x69 * x325) + (x51 * x326)) * x72);
	const FLT x328 = x10 * x211;
	const FLT x329 = x219 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x330 = x224 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x331 = x217 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x332 = x7 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x333 = (-1 * x218 * x331) + (x227 * x332) + (x12 * x330) + (-1 * x8 * x329) + (-1 * x12 * x329) + (x223 * x331) + (x8 * x330) + (-1 * x225 * x332);
	const FLT x334 = x333 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x335 = x333 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x336 = x214 * x335;
	const FLT x337 = x10 * x233;
	const FLT x338 = x236 * x333;
	const FLT x339 = x333 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x340 = x240 * x332;
	const FLT x341 = (-1 * x273) + (-1 * x336 * (*_x0).Pose.Rot[2]) + (-1 * x215 * x339) + (x260 * x334) + (-1 * x306) + x305 + x28 + (-1 * x338 * (*_x0).Pose.Rot[3]) + (-1 * x246 * x337) + (x36 * x328) + (-1 * x32 * x340) + x272;
	const FLT x342 = x267 + x31 + (-1 * x250 * x337) + (x257 * x335) + (-1 * x260 * x339) + (-1 * x215 * x334) + (-1 * x338 * (*_x0).Pose.Rot[2]) + x302 + (-1 * x235 * x340) + (x41 * x328);
	const FLT x343 = x214 * x333;
	const FLT x344 = x314 + (-1 * x338 * (*_x0).Pose.Rot[0]) + (x257 * x339) + (-1 * x246 * x340) + (x32 * x337) + (x260 * x335) + (-1 * x38 * x328) + x256 + x258 + (-1 * x259) + (x309 * x343);
	const FLT x345 = (x344 * sensor_pt[0]) + (-1 * x341 * sensor_pt[1]) + (x342 * sensor_pt[2]);
	const FLT x346 = x249 + (-1 * x250 * x340) + (-1 * x338 * (*_x0).Pose.Rot[1]) + (-1 * x336 * (*_x0).Pose.Rot[0]) + (-1 * x311) + (-1 * x30 * x328) + x310 + (-1 * x257 * x334) + (x235 * x337) + (x343 * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Pose.Rot[2]) + x308;
	const FLT x347 = (-1 * x346 * sensor_pt[2]) + (x344 * sensor_pt[1]) + (x341 * sensor_pt[0]);
	const FLT x348 = 2 * x342;
	const FLT x349 = 2 * x346;
	const FLT x350 = (x43 * x349) + (-1 * x40 * x348) + (-1 * x345 * x126) + (x347 * x138);
	const FLT x351 = (x346 * sensor_pt[1]) + (-1 * x342 * sensor_pt[0]) + (x344 * sensor_pt[2]);
	const FLT x352 = 2 * x341;
	const FLT x353 = (-1 * x45 * x349) + (x345 * x144) + (-1 * x351 * x138) + (x40 * x352);
	const FLT x354 = (x351 * x126) + (-1 * x43 * x352) + (-1 * x347 * x144) + (x45 * x348);
	const FLT x355 = (x354 * (*lh_p).Rot[3]) + (-1 * x350 * (*lh_p).Rot[1]) + (x353 * (*lh_p).Rot[0]);
	const FLT x356 = (-1 * x354 * (*lh_p).Rot[2]) + (x353 * (*lh_p).Rot[1]) + (x350 * (*lh_p).Rot[0]);
	const FLT x357 = x354 + (-1 * x355 * x103) + (x97 * x356);
	const FLT x358 = (x354 * (*lh_p).Rot[0]) + (-1 * x353 * (*lh_p).Rot[3]) + (x350 * (*lh_p).Rot[2]);
	const FLT x359 = x350 + (x99 * x355) + (-1 * x97 * x358);
	const FLT x360 = x353 + (-1 * x99 * x356) + (x358 * x103);
	const FLT x361 = (-1 * x73 * ((-1 * ((x76 * x359) + (x75 * x360)) * x77) + (x74 * x357))) + (-1 * ((-1 * x69 * x359) + (x51 * x360)) * x72);
	const FLT x362 = -1 * dt * x92;
	const FLT x363 = (-1 * dt * x94) + dt;
	const FLT x364 = x363 + x362;
	const FLT x365 = dt * x98;
	const FLT x366 = dt * x100;
	const FLT x367 = x366 + (-1 * x365);
	const FLT x368 = dt * x102;
	const FLT x369 = dt * x104;
	const FLT x370 = x369 + x368;
	const FLT x371 = (-1 * x73 * ((-1 * ((x76 * x367) + (x75 * x370)) * x77) + (x74 * x364))) + (-1 * ((-1 * x69 * x367) + (x51 * x370)) * x72);
	const FLT x372 = x368 + (-1 * x369);
	const FLT x373 = dt * x108;
	const FLT x374 = dt * x109;
	const FLT x375 = x374 + x373;
	const FLT x376 = -1 * dt * x111;
	const FLT x377 = x363 + x376;
	const FLT x378 = (-1 * x73 * ((-1 * ((x76 * x375) + (x75 * x377)) * x77) + (x74 * x372))) + (-1 * ((-1 * x69 * x375) + (x51 * x377)) * x72);
	const FLT x379 = x365 + x366;
	const FLT x380 = x362 + dt + x376;
	const FLT x381 = x373 + (-1 * x374);
	const FLT x382 = (-1 * x73 * ((-1 * ((x76 * x380) + (x75 * x381)) * x77) + (x74 * x379))) + (-1 * ((-1 * x69 * x380) + (x51 * x381)) * x72);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x78 + (x64 * ((x61 * x56) + (-1 * x6 * x51))) + (x79 * x78));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x87 + (((x83 * x61) + (-1 * x80 * x51)) * x64) + (x87 * x79));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x91 + (((x89 * x61) + (-1 * x88 * x51)) * x64) + (x79 * x91));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x106 + (x64 * ((x61 * x101) + (-1 * x51 * x96))) + (x79 * x106));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x114 + (((x61 * x110) + (-1 * x51 * x107)) * x64) + (x79 * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x118 + (((x61 * x116) + (-1 * x51 * x115)) * x64) + (x79 * x118));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x158 + (((x61 * x156) + (-1 * x51 * x154)) * x64) + (x79 * x158));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x180 + (((x61 * x178) + (-1 * x51 * x176)) * x64) + (x79 * x180));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), (((x61 * x194) + (-1 * x51 * x192)) * x64) + x196 + (x79 * x196));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x209 + (((x61 * x207) + (-1 * x51 * x205)) * x64) + (x79 * x209));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x287 + (((x61 * x285) + (-1 * x51 * x283)) * x64) + (x79 * x287));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x327 + (((x61 * x325) + (-1 * x51 * x323)) * x64) + (x79 * x327));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x361 + (((x61 * x359) + (-1 * x51 * x357)) * x64) + (x79 * x361));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x371 + (((x61 * x367) + (-1 * x51 * x364)) * x64) + (x79 * x371));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x378 + (((x61 * x375) + (-1 * x51 * x372)) * x64) + (x79 * x378));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), x382 + (((x61 * x380) + (-1 * x51 * x379)) * x64) + (x79 * x382));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * dt;
	const FLT x1 = x0 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x2 = x0 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x3 = x0 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x4 = 1e-10 + x1 + x2 + x3;
	const FLT x5 = sqrt(x4);
	const FLT x6 = 0.5 * x5;
	const FLT x7 = sin(x6);
	const FLT x8 = (1. / x4) * (x7 * x7);
	const FLT x9 = cos(x6);
	const FLT x10 = 1. / sqrt((x3 * x8) + (x1 * x8) + (x2 * x8) + (x9 * x9));
	const FLT x11 = (1. / x5) * x7 * dt * x10;
	const FLT x12 = x11 * (*_x0).Pose.Rot[0];
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x14 = x11 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x14 * (*_x0).Pose.Rot[1];
	const FLT x16 = x9 * x10;
	const FLT x17 = x16 * (*_x0).Pose.Rot[3];
	const FLT x18 = x11 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = x18 * (*_x0).Pose.Rot[2];
	const FLT x20 = x17 + x19 + x13 + (-1 * x15);
	const FLT x21 = x16 * (*_x0).Pose.Rot[2];
	const FLT x22 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x23 = x18 * (*_x0).Pose.Rot[3];
	const FLT x24 = x11 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x25 = x24 * (*_x0).Pose.Rot[1];
	const FLT x26 = (-1 * x25) + x23 + (-1 * x21) + (-1 * x22);
	const FLT x27 = (-1 * x23) + x25 + x22 + x21;
	const FLT x28 = 2 * x27;
	const FLT x29 = 1 + (x28 * x26) + (-2 * (x20 * x20));
	const FLT x30 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x24 * (*_x0).Pose.Rot[3]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x31 = 2 * x30;
	const FLT x32 = x31 * x27;
	const FLT x33 = x24 * (*_x0).Pose.Rot[2];
	const FLT x34 = x14 * (*_x0).Pose.Rot[3];
	const FLT x35 = x16 * (*_x0).Pose.Rot[1];
	const FLT x36 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x37 = x36 + x35 + (-1 * x33) + x34;
	const FLT x38 = 2 * x20;
	const FLT x39 = (x38 * x37) + (-1 * x32);
	const FLT x40 = 2 * x37;
	const FLT x41 = x31 * x20;
	const FLT x42 = x41 + (-1 * x40 * x26);
	const FLT x43 = (x42 * (*lh_p).Rot[1]) + (-1 * x29 * (*lh_p).Rot[2]) + (x39 * (*lh_p).Rot[0]);
	const FLT x44 = 2 * (*lh_p).Rot[2];
	const FLT x45 = (x29 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1]) + (x42 * (*lh_p).Rot[0]);
	const FLT x46 = 2 * (*lh_p).Rot[3];
	const FLT x47 = x29 + (x43 * x44) + (-1 * x45 * x46);
	const FLT x48 = 1.0/2.0 * dt * fabs(dt);
	const FLT x49 = (-1 * x20 * sensor_pt[1]) + (x27 * sensor_pt[2]) + (x30 * sensor_pt[0]);
	const FLT x50 = (-1 * x37 * sensor_pt[2]) + (x20 * sensor_pt[0]) + (x30 * sensor_pt[1]);
	const FLT x51 = sensor_pt[2] + (x48 * (*_x0).Acc[2]) + (2 * ((x50 * x37) + (-1 * x49 * x27))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x52 = (-1 * x27 * sensor_pt[0]) + (x30 * sensor_pt[2]) + (x37 * sensor_pt[1]);
	const FLT x53 = (*_x0).Pose.Pos[0] + sensor_pt[0] + (2 * ((x52 * x27) + (-1 * x50 * x20))) + (dt * (*_x0).Velocity.Pos[0]) + (x48 * (*_x0).Acc[0]);
	const FLT x54 = (2 * ((x49 * x20) + (-1 * x52 * x37))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x48 * (*_x0).Acc[1]);
	const FLT x55 = (-1 * x54 * (*lh_p).Rot[3]) + (x51 * (*lh_p).Rot[2]) + (x53 * (*lh_p).Rot[0]);
	const FLT x56 = (-1 * x51 * (*lh_p).Rot[1]) + (x54 * (*lh_p).Rot[0]) + (x53 * (*lh_p).Rot[3]);
	const FLT x57 = (2 * ((x56 * (*lh_p).Rot[1]) + (-1 * x55 * (*lh_p).Rot[2]))) + x51 + (*lh_p).Pos[2];
	const FLT x58 = 1. / x57;
	const FLT x59 = 2 * (*lh_p).Rot[1];
	const FLT x60 = (x29 * (*lh_p).Rot[0]) + (-1 * x42 * (*lh_p).Rot[3]) + (x39 * (*lh_p).Rot[2]);
	const FLT x61 = x39 + (x59 * x45) + (-1 * x60 * x44);
	const FLT x62 = x57 * x57;
	const FLT x63 = 1. / x62;
	const FLT x64 = (-1 * x53 * (*lh_p).Rot[2]) + (x51 * (*lh_p).Rot[0]) + (x54 * (*lh_p).Rot[1]);
	const FLT x65 = x53 + (2 * ((x64 * (*lh_p).Rot[2]) + (-1 * x56 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x66 = x63 * x65;
	const FLT x67 = -1 * x57;
	const FLT x68 = x65 * x65;
	const FLT x69 = 2 * (1. / (x62 + x68)) * x62 * atan2(x65, x67) * (*bsc0).curve;
	const FLT x70 = x42 + (x60 * x46) + (-1 * x59 * x43);
	const FLT x71 = x54 + (*lh_p).Pos[1] + (2 * ((x55 * (*lh_p).Rot[3]) + (-1 * x64 * (*lh_p).Rot[1])));
	const FLT x72 = x71 * x63;
	const FLT x73 = x62 + (x71 * x71);
	const FLT x74 = 1. / x73;
	const FLT x75 = x74 * x62;
	const FLT x76 = 1. / sqrt(1 + (-1 * x74 * x68 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x77 = (1. / sqrt(x73)) * (*bsc0).tilt;
	const FLT x78 = 2 * x71;
	const FLT x79 = 2 * x57;
	const FLT x80 = 1.0/2.0 * (1. / (x73 * sqrt(x73))) * x65 * (*bsc0).tilt;
	const FLT x81 = (-1 * x76 * ((-1 * ((x79 * x61) + (x70 * x78)) * x80) + (x77 * x47))) + (-1 * ((-1 * x72 * x61) + (x70 * x58)) * x75);
	const FLT x82 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x77 * x65)) + (-1 * atan2(-1 * x71, x67)));
	const FLT x83 = (-1 * x17) + x15 + (-1 * x19) + (-1 * x13);
	const FLT x84 = x31 * x37;
	const FLT x85 = x84 + (-1 * x83 * x28);
	const FLT x86 = (x40 * x27) + (-1 * x41);
	const FLT x87 = 1 + (x83 * x38) + (-2 * (x37 * x37));
	const FLT x88 = 2 * ((x87 * (*lh_p).Rot[1]) + (x85 * (*lh_p).Rot[0]) + (-1 * x86 * (*lh_p).Rot[2]));
	const FLT x89 = 2 * ((x86 * (*lh_p).Rot[3]) + (-1 * x85 * (*lh_p).Rot[1]) + (x87 * (*lh_p).Rot[0]));
	const FLT x90 = x86 + (x88 * (*lh_p).Rot[2]) + (-1 * x89 * (*lh_p).Rot[3]);
	const FLT x91 = 2 * ((x86 * (*lh_p).Rot[0]) + (x85 * (*lh_p).Rot[2]) + (-1 * x87 * (*lh_p).Rot[3]));
	const FLT x92 = x85 + (x89 * (*lh_p).Rot[1]) + (-1 * x91 * (*lh_p).Rot[2]);
	const FLT x93 = (x91 * (*lh_p).Rot[3]) + x87 + (-1 * x88 * (*lh_p).Rot[1]);
	const FLT x94 = (-1 * x76 * ((-1 * ((x79 * x92) + (x78 * x93)) * x80) + (x77 * x90))) + (-1 * ((-1 * x72 * x92) + (x58 * x93)) * x75);
	const FLT x95 = x33 + (-1 * x36) + (-1 * x34) + (-1 * x35);
	const FLT x96 = x32 + (-1 * x95 * x38);
	const FLT x97 = 1 + (x95 * x40) + (-2 * (x27 * x27));
	const FLT x98 = (x38 * x27) + (-1 * x84);
	const FLT x99 = (-1 * x96 * (*lh_p).Rot[2]) + (x98 * (*lh_p).Rot[1]) + (x97 * (*lh_p).Rot[0]);
	const FLT x100 = (x96 * (*lh_p).Rot[3]) + (-1 * x97 * (*lh_p).Rot[1]) + (x98 * (*lh_p).Rot[0]);
	const FLT x101 = x96 + (x99 * x44) + (-1 * x46 * x100);
	const FLT x102 = (x96 * (*lh_p).Rot[0]) + (-1 * x98 * (*lh_p).Rot[3]) + (x97 * (*lh_p).Rot[2]);
	const FLT x103 = x97 + (x59 * x100) + (-1 * x44 * x102);
	const FLT x104 = (x46 * x102) + x98 + (-1 * x59 * x99);
	const FLT x105 = (-1 * x76 * ((-1 * ((x79 * x103) + (x78 * x104)) * x80) + (x77 * x101))) + (-1 * ((-1 * x72 * x103) + (x58 * x104)) * x75);
	cnMatrixOptionalSet(Hx, 0, 0, x81 + (((x61 * x66) + (-1 * x58 * x47)) * x69) + (x81 * x82));
	cnMatrixOptionalSet(Hx, 0, 1, (((x66 * x92) + (-1 * x58 * x90)) * x69) + x94 + (x82 * x94));
	cnMatrixOptionalSet(Hx, 0, 2, x105 + (((x66 * x103) + (-1 * x58 * x101)) * x69) + (x82 * x105));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * (*_x0).Velocity.Pos[2];
	const FLT x1 = 1.0/2.0 * dt * fabs(dt);
	const FLT x2 = x1 * (*_x0).Acc[2];
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x15 * (*_x0).Pose.Rot[2]);
	const FLT x21 = (x18 * (*_x0).Pose.Rot[2]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x20 * sensor_pt[0]);
	const FLT x23 = (-1 * x17 * (*_x0).Pose.Rot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x24 = (x21 * sensor_pt[0]) + (-1 * x23 * sensor_pt[2]) + (x20 * sensor_pt[1]);
	const FLT x25 = 2 * ((x24 * x23) + (-1 * x22 * x19));
	const FLT x26 = x25 + sensor_pt[2] + x2 + x0 + (*_x0).Pose.Pos[2];
	const FLT x27 = x26 * (*lh_p).Rot[2];
	const FLT x28 = dt * (*_x0).Velocity.Pos[0];
	const FLT x29 = x1 * (*_x0).Acc[0];
	const FLT x30 = (x20 * sensor_pt[2]) + (-1 * x19 * sensor_pt[0]) + (x23 * sensor_pt[1]);
	const FLT x31 = 2 * ((x30 * x19) + (-1 * x24 * x21));
	const FLT x32 = (*_x0).Pose.Pos[0] + sensor_pt[0] + x28 + x31 + x29;
	const FLT x33 = x32 * (*lh_p).Rot[0];
	const FLT x34 = x1 * (*_x0).Acc[1];
	const FLT x35 = dt * (*_x0).Velocity.Pos[1];
	const FLT x36 = 2 * ((x22 * x21) + (-1 * x30 * x23));
	const FLT x37 = x35 + sensor_pt[1] + x36 + (*_x0).Pose.Pos[1] + x34;
	const FLT x38 = x37 * (*lh_p).Rot[3];
	const FLT x39 = (-1 * x38) + x27 + x33;
	const FLT x40 = x37 * (*lh_p).Rot[0];
	const FLT x41 = x32 * (*lh_p).Rot[3];
	const FLT x42 = x26 * (*lh_p).Rot[1];
	const FLT x43 = (-1 * x42) + x40 + x41;
	const FLT x44 = x26 + (2 * ((x43 * (*lh_p).Rot[1]) + (-1 * x39 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x45 = x44 * x44;
	const FLT x46 = x26 * (*lh_p).Rot[0];
	const FLT x47 = x37 * (*lh_p).Rot[1];
	const FLT x48 = x32 * (*lh_p).Rot[2];
	const FLT x49 = (-1 * x48) + x46 + x47;
	const FLT x50 = x37 + (*lh_p).Pos[1] + (2 * ((x39 * (*lh_p).Rot[3]) + (-1 * x49 * (*lh_p).Rot[1])));
	const FLT x51 = (x50 * x50) + x45;
	const FLT x52 = 1. / x51;
	const FLT x53 = x32 + (2 * ((x49 * (*lh_p).Rot[2]) + (-1 * x43 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x54 = x53 * x53;
	const FLT x55 = 1. / sqrt(1 + (-1 * x54 * x52 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x56 = (1. / sqrt(x51)) * (*bsc0).tilt;
	const FLT x57 = x56 * x55;
	const FLT x58 = 2 * x44;
	const FLT x59 = -1 * x44;
	const FLT x60 = (1. / (x45 + x54)) * atan2(x53, x59) * (*bsc0).curve;
	const FLT x61 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x53 * x56)) + (-1 * atan2(-1 * x50, x59)));
	const FLT x62 = x53 * (1. / (x51 * sqrt(x51))) * (*bsc0).tilt;
	const FLT x63 = x62 * x55;
	const FLT x64 = (x63 * x50) + (-1 * x52 * x44);
	const FLT x65 = 2 * x60;
	const FLT x66 = (x63 * x44) + (x50 * x52);
	const FLT x67 = 2 * x38;
	const FLT x68 = (2 * x27) + (-1 * x67);
	const FLT x69 = 1. / x44;
	const FLT x70 = 2 * x48;
	const FLT x71 = (2 * x47) + (-1 * x70);
	const FLT x72 = 1. / x45;
	const FLT x73 = x72 * x53;
	const FLT x74 = x65 * x45;
	const FLT x75 = 2 * x42;
	const FLT x76 = (2 * x41) + (-1 * x75);
	const FLT x77 = x72 * x50;
	const FLT x78 = x52 * x45;
	const FLT x79 = 2 * x50;
	const FLT x80 = 1.0/2.0 * x62;
	const FLT x81 = (-1 * x55 * ((-1 * ((x71 * x58) + (x79 * x76)) * x80) + (x68 * x56))) + (-1 * ((-1 * x71 * x77) + (x76 * x69)) * x78);
	const FLT x82 = (-1 * sensor_pt[2]) + (-1 * x2) + (-1 * x25) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x0);
	const FLT x83 = 2 * (*lh_p).Rot[3];
	const FLT x84 = 2 * (*lh_p).Rot[2];
	const FLT x85 = (x84 * x37) + (-1 * x82 * x83);
	const FLT x86 = 2 * (*lh_p).Rot[1];
	const FLT x87 = 2 * x40;
	const FLT x88 = x76 + (x82 * x86) + x87;
	const FLT x89 = 2 * x46;
	const FLT x90 = (-4 * x47) + (-1 * x89) + x70;
	const FLT x91 = (-1 * x55 * ((-1 * ((x88 * x58) + (x79 * x90)) * x80) + (x85 * x56))) + (-1 * ((-1 * x88 * x77) + (x69 * x90)) * x78);
	const FLT x92 = (-1 * (*_x0).Pose.Pos[0]) + (-1 * x28) + (-1 * x31) + (-1 * x29) + (-1 * sensor_pt[0]);
	const FLT x93 = x71 + x89 + (x84 * x92);
	const FLT x94 = 2 * x33;
	const FLT x95 = (-1 * x94) + (-4 * x27) + x67;
	const FLT x96 = (x83 * x26) + (-1 * x86 * x92);
	const FLT x97 = (-1 * x55 * ((-1 * ((x58 * x95) + (x79 * x96)) * x80) + (x56 * x93))) + (-1 * ((-1 * x77 * x95) + (x69 * x96)) * x78);
	const FLT x98 = (-1 * x87) + x75 + (-4 * x41);
	const FLT x99 = (-1 * x36) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x34) + (-1 * x35) + (-1 * sensor_pt[1]);
	const FLT x100 = (x86 * x32) + (-1 * x84 * x99);
	const FLT x101 = x68 + (x83 * x99) + x94;
	const FLT x102 = (-1 * x55 * ((-1 * ((x58 * x100) + (x79 * x101)) * x80) + (x56 * x98))) + (-1 * ((-1 * x77 * x100) + (x69 * x101)) * x78);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), (-1 * x61 * x57) + (-1 * x57) + (-1 * x60 * x58));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), x64 + (x64 * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x66 + (x65 * x53) + (x61 * x66));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x81 + (((x71 * x73) + (-1 * x68 * x69)) * x74) + (x81 * x61));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), (((x88 * x73) + (-1 * x85 * x69)) * x74) + x91 + (x61 * x91));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x97 + (((x73 * x95) + (-1 * x69 * x93)) * x74) + (x61 * x97));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), (x74 * ((x73 * x100) + (-1 * x69 * x98))) + x102 + (x61 * x102));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f019301a340>,
// <cnkalman.codegen.WrapMember object at 0x7f019301a430>, <cnkalman.codegen.WrapMember object at 0x7f019301a3d0>,
// <cnkalman.codegen.WrapMember object at 0x7f019301a1f0>, <cnkalman.codegen.WrapMember object at 0x7f019301a490>,
// <cnkalman.codegen.WrapMember object at 0x7f019301a760>, <cnkalman.codegen.WrapMember object at 0x7f019301a610>]
static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x14 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x15 = x11 * x10;
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[3]) + (-1 * x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (x15 * (*_x0).Pose.Rot[1]) + (x16 * (*_x0).Pose.Rot[0]) + (-1 * x13 * (*_x0).Pose.Rot[2]) + (x14 * (*_x0).Pose.Rot[3]);
	const FLT x19 = (x13 * (*_x0).Pose.Rot[1]) + (-1 * x16 * (*_x0).Pose.Rot[3]) + (x14 * (*_x0).Pose.Rot[0]) + (x15 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (-1 * x19 * sensor_pt[0]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[2]) + (x15 * (*_x0).Pose.Rot[3]) + (x13 * (*_x0).Pose.Rot[0]) + (-1 * x14 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x17 * sensor_pt[0]);
	const FLT x23 = (dt * (*_x0).Velocity.Pos[1]) + (2 * ((x22 * x21) + (-1 * x20 * x18))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x24 = (-1 * x18 * sensor_pt[2]) + (x21 * sensor_pt[0]) + (x17 * sensor_pt[1]);
	const FLT x25 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = sensor_pt[2] + (2 * ((x24 * x18) + (-1 * x22 * x19))) + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[1]) + (x23 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x28 = (-1 * x25 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]) + (x23 * (*lh_p).Rot[1]);
	const FLT x29 = (2 * ((x28 * (*lh_p).Rot[2]) + (-1 * x27 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x30 = (-1 * x23 * (*lh_p).Rot[3]) + (x26 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x31 = x26 + (2 * ((x27 * (*lh_p).Rot[1]) + (-1 * x30 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x32 = -1 * x31;
	const FLT x33 = x23 + (*lh_p).Pos[1] + (2 * ((x30 * (*lh_p).Rot[3]) + (-1 * x28 * (*lh_p).Rot[1])));
	const FLT x34 = (x33 * x33) + (x31 * x31);
	const FLT x35 = (1. / sqrt(x34)) * x29;
	const FLT x36 = 1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x35 * (*bsc0).tilt)) + (-1 * atan2(-1 * x33, x32));
	const FLT x37 = sin(x36) * (*bsc0).gibmag;
	const FLT x38 = x35 * (1. / sqrt(1 + (-1 * (1. / x34) * (x29 * x29) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), atan2(x29, x32) * atan2(x29, x32));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), -1 * cos(x36));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x37);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1 + (-1 * x37));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x38 * x37) + (-1 * x38));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f019301a340>, <cnkalman.codegen.WrapMember object at 0x7f019301a430>, <cnkalman.codegen.WrapMember object at
// 0x7f019301a3d0>, <cnkalman.codegen.WrapMember object at 0x7f019301a1f0>, <cnkalman.codegen.WrapMember object at
// 0x7f019301a490>, <cnkalman.codegen.WrapMember object at 0x7f019301a760>, <cnkalman.codegen.WrapMember object at
// 0x7f019301a610>]

static inline void SurviveKalmanModel_LightMeas_y_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen1(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen1_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanModel_LightMeas_x_gen2(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x28 = (-1 * x23 * (*lh_p).Rot[1]) + (x26 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x29 = x23 + (2 * ((x28 * (*lh_p).Rot[1]) + (-1 * x27 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x30 = (-1 * x25 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[1]);
	const FLT x31 = (2 * ((x30 * (*lh_p).Rot[2]) + (-1 * x28 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x32 = atan2(-1 * x29, x31);
	const FLT x33 = (*lh_p).Pos[1] + x26 + (2 * ((x27 * (*lh_p).Rot[3]) + (-1 * x30 * (*lh_p).Rot[1])));
	const FLT x34 = (x31 * x31) + (x29 * x29);
	const FLT x35 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x36 = cos(x35);
	const FLT x37 = asin(x33 * (1. / x36) * (1. / sqrt(x34 + (x33 * x33))));
	const FLT x38 = (1. / sqrt(x34)) * x33 * tan(x35);
	const FLT x39 = ((*bsc0).ogeemag * sin(x32 + (-1 * asin(x38)) + (*bsc0).ogeephase)) + (*bsc0).curve;
	const FLT x40 = 0.0028679863 + (x37 * (-8.0108022e-06 + (-8.0108022e-06 * x37)));
	const FLT x41 = 5.3685255e-06 + (x40 * x37);
	const FLT x42 = 0.0076069798 + (x41 * x37);
	const FLT x43 = (-1 * asin(x38 + (x42 * (x37 * x37) * x39 * (1. / (x36 + (-1 * x39 * sin(x35) * ((x37 * (x42 + (x37 * (x41 + (x37 * (x40 + (x37 * (-8.0108022e-06 + (-1.60216044e-05 * x37))))))))) + (x42 * x37)))))))) + x32;
	return -1.5707963267949 + x43 + (-1 * (*bsc0).phase) + (sin(x43 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x2 = x0 * (*lh_p).Rot[3];
	const FLT x3 = x2 * (*lh_p).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = 1.0/2.0 * x0;
	const FLT x6 = dt * dt;
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x8 = x6 * x7;
	const FLT x9 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x10 = x6 * x9;
	const FLT x11 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x12 = x6 * x11;
	const FLT x13 = 1e-10 + x8 + x10 + x12;
	const FLT x14 = sqrt(x13);
	const FLT x15 = 0.5 * x14;
	const FLT x16 = sin(x15);
	const FLT x17 = x16 * x16;
	const FLT x18 = 1. / x13;
	const FLT x19 = x18 * x17;
	const FLT x20 = cos(x15);
	const FLT x21 = (x10 * x19) + (x8 * x19) + (x12 * x19) + (x20 * x20);
	const FLT x22 = 1. / sqrt(x21);
	const FLT x23 = x22 * x16;
	const FLT x24 = 1. / x14;
	const FLT x25 = dt * x24;
	const FLT x26 = x25 * x23;
	const FLT x27 = x26 * (*_x0).Pose.Rot[0];
	const FLT x28 = x22 * x20;
	const FLT x29 = x28 * (*_x0).Pose.Rot[2];
	const FLT x30 = x26 * (*_x0).Pose.Rot[1];
	const FLT x31 = x23 * (*_x0).Pose.Rot[3];
	const FLT x32 = x31 * x25;
	const FLT x33 = (-1 * x32 * (*_x0).Velocity.AxisAngleRot[0]) + (x30 * (*_x0).Velocity.AxisAngleRot[2]) + (x27 * (*_x0).Velocity.AxisAngleRot[1]) + x29;
	const FLT x34 = x26 * (*_x0).Pose.Rot[2];
	const FLT x35 = x28 * (*_x0).Pose.Rot[0];
	const FLT x36 = (-1 * x30 * (*_x0).Velocity.AxisAngleRot[0]) + x35 + (-1 * x32 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x37 = x28 * (*_x0).Pose.Rot[3];
	const FLT x38 = (x34 * (*_x0).Velocity.AxisAngleRot[0]) + x37 + (x27 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x39 = (-1 * x38 * sensor_pt[1]) + (x33 * sensor_pt[2]) + (x36 * sensor_pt[0]);
	const FLT x40 = x28 * (*_x0).Pose.Rot[1];
	const FLT x41 = (x27 * (*_x0).Velocity.AxisAngleRot[0]) + x40 + (-1 * x34 * (*_x0).Velocity.AxisAngleRot[2]) + (x32 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x42 = (-1 * x41 * sensor_pt[2]) + (x38 * sensor_pt[0]) + (x36 * sensor_pt[1]);
	const FLT x43 = (2 * ((x41 * x42) + (-1 * x33 * x39))) + sensor_pt[2] + (x5 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x44 = (-1 * x33 * sensor_pt[0]) + (x36 * sensor_pt[2]) + (x41 * sensor_pt[1]);
	const FLT x45 = (dt * (*_x0).Velocity.Pos[1]) + (2 * ((x38 * x39) + (-1 * x41 * x44))) + (*_x0).Pose.Pos[1] + sensor_pt[1] + (x5 * (*_x0).Acc[1]);
	const FLT x46 = (2 * ((x44 * x33) + (-1 * x42 * x38))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x5 * (*_x0).Acc[0]);
	const FLT x47 = (-1 * x46 * (*lh_p).Rot[2]) + (x43 * (*lh_p).Rot[0]) + (x45 * (*lh_p).Rot[1]);
	const FLT x48 = (-1 * x45 * (*lh_p).Rot[3]) + (x43 * (*lh_p).Rot[2]) + (x46 * (*lh_p).Rot[0]);
	const FLT x49 = x45 + (*lh_p).Pos[1] + (2 * ((x48 * (*lh_p).Rot[3]) + (-1 * x47 * (*lh_p).Rot[1])));
	const FLT x50 = x49 * x49;
	const FLT x51 = (x45 * (*lh_p).Rot[0]) + (-1 * x43 * (*lh_p).Rot[1]) + (x46 * (*lh_p).Rot[3]);
	const FLT x52 = (2 * ((x51 * (*lh_p).Rot[1]) + (-1 * x48 * (*lh_p).Rot[2]))) + x43 + (*lh_p).Pos[2];
	const FLT x53 = x46 + (2 * ((x47 * (*lh_p).Rot[2]) + (-1 * x51 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x54 = x53 * x53;
	const FLT x55 = x54 + (x52 * x52);
	const FLT x56 = x55 + x50;
	const FLT x57 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x58 = cos(x57);
	const FLT x59 = 1. / x58;
	const FLT x60 = (1. / sqrt(x56)) * x59;
	const FLT x61 = 2 * x49;
	const FLT x62 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x63 = -1 * x0 * x62;
	const FLT x64 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x65 = x5 + (-1 * x0 * x64);
	const FLT x66 = x65 + x63;
	const FLT x67 = 2 * x53;
	const FLT x68 = x0 * (*lh_p).Rot[0];
	const FLT x69 = x68 * (*lh_p).Rot[2];
	const FLT x70 = x2 * (*lh_p).Rot[1];
	const FLT x71 = x70 + (-1 * x69);
	const FLT x72 = 2 * x52;
	const FLT x73 = (x71 * x72) + (x67 * x66);
	const FLT x74 = 1.0/2.0 * x49;
	const FLT x75 = x74 * (1. / (x56 * sqrt(x56))) * x59;
	const FLT x76 = (-1 * x75 * (x73 + (x4 * x61))) + (x4 * x60);
	const FLT x77 = 1. / sqrt(1 + (-1 * x50 * (1. / (x58 * x58)) * (1. / x56)));
	const FLT x78 = atan2(-1 * x52, x53);
	const FLT x79 = tan(x57);
	const FLT x80 = x79 * (1. / sqrt(x55));
	const FLT x81 = x80 * x49;
	const FLT x82 = (-1 * asin(x81)) + x78 + (*bsc0).ogeephase;
	const FLT x83 = (sin(x82) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x84 = asin(x60 * x49);
	const FLT x85 = 8.0108022e-06 * x84;
	const FLT x86 = -8.0108022e-06 + (-1 * x85);
	const FLT x87 = 0.0028679863 + (x84 * x86);
	const FLT x88 = 5.3685255e-06 + (x84 * x87);
	const FLT x89 = 0.0076069798 + (x88 * x84);
	const FLT x90 = x89 * x84;
	const FLT x91 = -8.0108022e-06 + (-1.60216044e-05 * x84);
	const FLT x92 = x87 + (x84 * x91);
	const FLT x93 = x88 + (x84 * x92);
	const FLT x94 = x89 + (x84 * x93);
	const FLT x95 = (x84 * x94) + x90;
	const FLT x96 = sin(x57);
	const FLT x97 = x83 * x96;
	const FLT x98 = x58 + (-1 * x97 * x95);
	const FLT x99 = 1. / x98;
	const FLT x100 = 2 * x83 * x90 * x99;
	const FLT x101 = x77 * x100;
	const FLT x102 = x87 * x77;
	const FLT x103 = x86 * x77;
	const FLT x104 = x76 * x103;
	const FLT x105 = x85 * x77;
	const FLT x106 = (x84 * ((-1 * x76 * x105) + x104)) + (x76 * x102);
	const FLT x107 = x88 * x77;
	const FLT x108 = (x76 * x107) + (x84 * x106);
	const FLT x109 = x84 * x84;
	const FLT x110 = x83 * x109;
	const FLT x111 = x99 * x110;
	const FLT x112 = 1. / x55;
	const FLT x113 = 1. / sqrt(1 + (-1 * (x79 * x79) * x50 * x112));
	const FLT x114 = x79 * x74 * (1. / (x55 * sqrt(x55)));
	const FLT x115 = (x4 * x80) + (-1 * x73 * x114);
	const FLT x116 = (1. / x54) * x52;
	const FLT x117 = 1. / x53;
	const FLT x118 = x54 * x112;
	const FLT x119 = ((-1 * x71 * x117) + (x66 * x116)) * x118;
	const FLT x120 = x119 + (-1 * x113 * x115);
	const FLT x121 = cos(x82) * (*bsc0).ogeemag;
	const FLT x122 = x96 * x95;
	const FLT x123 = x122 * x121;
	const FLT x124 = x77 * x94;
	const FLT x125 = 2.40324066e-05 * x84;
	const FLT x126 = x77 * x125;
	const FLT x127 = x77 * x91;
	const FLT x128 = x77 * x92;
	const FLT x129 = x77 * x93;
	const FLT x130 = x89 * x77;
	const FLT x131 = x89 * (1. / (x98 * x98)) * x110;
	const FLT x132 = x89 * x99 * x109;
	const FLT x133 = x121 * x132;
	const FLT x134 = x81 + (x89 * x111);
	const FLT x135 = 1. / sqrt(1 + (-1 * (x134 * x134)));
	const FLT x136 = x119 + (-1 * x135 * (x115 + (-1 * x131 * ((-1 * x97 * ((x76 * x130) + (x84 * x108) + (x76 * x124) + (x84 * (x108 + (x84 * (x106 + (x84 * ((x76 * x127) + x104 + (-1 * x76 * x126))) + (x76 * x128))) + (x76 * x129))))) + (-1 * x120 * x123))) + (x76 * x101) + (x120 * x133) + (x108 * x111)));
	const FLT x137 = cos((-1 * asin(x134)) + (*bsc0).gibpha + x78) * (*bsc0).gibmag;
	const FLT x138 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x139 = -1 * x0 * x138;
	const FLT x140 = x65 + x139;
	const FLT x141 = x1 + (-1 * x3);
	const FLT x142 = x2 * (*lh_p).Rot[2];
	const FLT x143 = x68 * (*lh_p).Rot[1];
	const FLT x144 = x143 + x142;
	const FLT x145 = (x72 * x144) + (x67 * x141);
	const FLT x146 = (-1 * x75 * (x145 + (x61 * x140))) + (x60 * x140);
	const FLT x147 = x103 * x146;
	const FLT x148 = (x84 * ((-1 * x105 * x146) + x147)) + (x102 * x146);
	const FLT x149 = (x107 * x146) + (x84 * x148);
	const FLT x150 = (x80 * x140) + (-1 * x114 * x145);
	const FLT x151 = ((-1 * x117 * x144) + (x116 * x141)) * x118;
	const FLT x152 = x121 * (x151 + (-1 * x113 * x150));
	const FLT x153 = x151 + (-1 * x135 * ((x132 * x152) + (x101 * x146) + x150 + (x111 * x149) + (-1 * x131 * ((-1 * x97 * ((x130 * x146) + (x84 * x149) + (x124 * x146) + (x84 * (x149 + (x84 * (x148 + (x84 * ((x127 * x146) + x147 + (-1 * x126 * x146))) + (x128 * x146))) + (x129 * x146))))) + (-1 * x122 * x152)))));
	const FLT x154 = x69 + x70;
	const FLT x155 = x63 + x5 + x139;
	const FLT x156 = (x72 * x155) + (x67 * x154);
	const FLT x157 = x142 + (-1 * x143);
	const FLT x158 = (x80 * x157) + (-1 * x114 * x156);
	const FLT x159 = ((-1 * x117 * x155) + (x116 * x154)) * x118;
	const FLT x160 = x159 + (-1 * x113 * x158);
	const FLT x161 = (-1 * x75 * (x156 + (x61 * x157))) + (x60 * x157);
	const FLT x162 = x103 * x161;
	const FLT x163 = (x84 * ((-1 * x105 * x161) + x162)) + (x102 * x161);
	const FLT x164 = (x107 * x161) + (x84 * x163);
	const FLT x165 = x159 + (-1 * x135 * ((x160 * x133) + (x101 * x161) + (-1 * x131 * ((-1 * x97 * ((x161 * x130) + (x124 * x161) + (x84 * (x164 + (x84 * (x163 + (x84 * ((x127 * x161) + x162 + (-1 * x126 * x161))) + (x128 * x161))) + (x129 * x161))) + (x84 * x164))) + (-1 * x123 * x160))) + x158 + (x111 * x164)));
	const FLT x166 = 2 * (*lh_p).Rot[1];
	const FLT x167 = x166 * (*lh_p).Rot[2];
	const FLT x168 = 2 * (*lh_p).Rot[3];
	const FLT x169 = x168 * (*lh_p).Rot[0];
	const FLT x170 = x169 + x167;
	const FLT x171 = 2 * x62;
	const FLT x172 = -1 * x171;
	const FLT x173 = 2 * x64;
	const FLT x174 = 1 + (-1 * x173);
	const FLT x175 = x174 + x172;
	const FLT x176 = 2 * (*lh_p).Rot[2];
	const FLT x177 = x176 * (*lh_p).Rot[0];
	const FLT x178 = x166 * (*lh_p).Rot[3];
	const FLT x179 = x178 + (-1 * x177);
	const FLT x180 = (x72 * x179) + (x67 * x175);
	const FLT x181 = (-1 * x75 * (x180 + (x61 * x170))) + (x60 * x170);
	const FLT x182 = x103 * x181;
	const FLT x183 = (x84 * ((-1 * x105 * x181) + x182)) + (x102 * x181);
	const FLT x184 = (x107 * x181) + (x84 * x183);
	const FLT x185 = (x80 * x170) + (-1 * x114 * x180);
	const FLT x186 = ((-1 * x117 * x179) + (x116 * x175)) * x118;
	const FLT x187 = x186 + (-1 * x113 * x185);
	const FLT x188 = x186 + (-1 * x135 * (x185 + (x187 * x133) + (-1 * x131 * ((-1 * x97 * ((x181 * x130) + (x84 * x184) + (x124 * x181) + (x84 * ((x84 * (x183 + (x84 * ((x127 * x181) + (-1 * x126 * x181) + x182)) + (x128 * x181))) + x184 + (x129 * x181))))) + (-1 * x123 * x187))) + (x101 * x181) + (x111 * x184)));
	const FLT x189 = 2 * x138;
	const FLT x190 = -1 * x189;
	const FLT x191 = x174 + x190;
	const FLT x192 = x167 + (-1 * x169);
	const FLT x193 = x176 * (*lh_p).Rot[3];
	const FLT x194 = x166 * (*lh_p).Rot[0];
	const FLT x195 = x194 + x193;
	const FLT x196 = (x72 * x195) + (x67 * x192);
	const FLT x197 = (-1 * x75 * (x196 + (x61 * x191))) + (x60 * x191);
	const FLT x198 = (x80 * x191) + (-1 * x114 * x196);
	const FLT x199 = ((-1 * x117 * x195) + (x116 * x192)) * x118;
	const FLT x200 = x199 + (-1 * x113 * x198);
	const FLT x201 = x103 * x197;
	const FLT x202 = (x84 * ((-1 * x105 * x197) + x201)) + (x102 * x197);
	const FLT x203 = (x107 * x197) + (x84 * x202);
	const FLT x204 = x199 + (-1 * x135 * (x198 + (x203 * x111) + (x200 * x133) + (x101 * x197) + (-1 * x131 * ((-1 * x97 * ((x197 * x130) + (x124 * x197) + (x84 * (x203 + (x84 * (x202 + (x84 * ((x127 * x197) + x201 + (-1 * x126 * x197))) + (x128 * x197))) + (x129 * x197))) + (x84 * x203))) + (-1 * x200 * x123)))));
	const FLT x205 = x193 + (-1 * x194);
	const FLT x206 = x177 + x178;
	const FLT x207 = 1 + x190 + x172;
	const FLT x208 = (x72 * x207) + (x67 * x206);
	const FLT x209 = (-1 * x75 * (x208 + (x61 * x205))) + (x60 * x205);
	const FLT x210 = x209 * x103;
	const FLT x211 = (x84 * ((-1 * x209 * x105) + x210)) + (x209 * x102);
	const FLT x212 = (x209 * x107) + (x84 * x211);
	const FLT x213 = (x80 * x205) + (-1 * x208 * x114);
	const FLT x214 = ((-1 * x207 * x117) + (x206 * x116)) * x118;
	const FLT x215 = x214 + (-1 * x213 * x113);
	const FLT x216 = x214 + (-1 * x135 * (x213 + (x215 * x133) + (x209 * x101) + (x212 * x111) + (-1 * x131 * ((-1 * x97 * ((x209 * x130) + (x209 * x124) + (x84 * (x212 + (x84 * (x211 + (x84 * ((x209 * x127) + x210 + (-1 * x209 * x126))) + (x209 * x128))) + (x209 * x129))) + (x84 * x212))) + (-1 * x215 * x123)))));
	const FLT x217 = x26 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x218 = x217 * sensor_pt[2];
	const FLT x219 = x28 * sensor_pt[0];
	const FLT x220 = x26 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x221 = -1 * x220 * sensor_pt[1];
	const FLT x222 = x221 + x219;
	const FLT x223 = x222 + x218;
	const FLT x224 = 2 * x33;
	const FLT x225 = 2 * x42;
	const FLT x226 = x26 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x227 = x225 * x226;
	const FLT x228 = 2 * x39;
	const FLT x229 = -1 * x217 * x228;
	const FLT x230 = -1 * x226 * sensor_pt[2];
	const FLT x231 = x220 * sensor_pt[0];
	const FLT x232 = x28 * sensor_pt[1];
	const FLT x233 = x232 + x230 + x231;
	const FLT x234 = 2 * x41;
	const FLT x235 = x229 + (x234 * x233) + (-1 * x223 * x224) + x227;
	const FLT x236 = x226 * sensor_pt[1];
	const FLT x237 = -1 * x217 * sensor_pt[0];
	const FLT x238 = x28 * sensor_pt[2];
	const FLT x239 = x238 + x237;
	const FLT x240 = x239 + x236;
	const FLT x241 = 2 * x38;
	const FLT x242 = x220 * x228;
	const FLT x243 = 2 * x44;
	const FLT x244 = -1 * x226 * x243;
	const FLT x245 = x244 + x242 + (-1 * x234 * x240) + (x223 * x241);
	const FLT x246 = -1 * x220 * x225;
	const FLT x247 = x217 * x243;
	const FLT x248 = x247 + (x224 * x240) + (-1 * x233 * x241) + x246;
	const FLT x249 = (x248 * (*lh_p).Rot[3]) + (-1 * x235 * (*lh_p).Rot[1]) + (x245 * (*lh_p).Rot[0]);
	const FLT x250 = (x245 * (*lh_p).Rot[1]) + (-1 * x248 * (*lh_p).Rot[2]) + (x235 * (*lh_p).Rot[0]);
	const FLT x251 = x248 + (-1 * x249 * x168) + (x250 * x176);
	const FLT x252 = (x248 * (*lh_p).Rot[0]) + (-1 * x245 * (*lh_p).Rot[3]) + (x235 * (*lh_p).Rot[2]);
	const FLT x253 = (-1 * x252 * x176) + x235 + (x249 * x166);
	const FLT x254 = (x72 * x253) + (x67 * x251);
	const FLT x255 = x245 + (-1 * x250 * x166) + (x252 * x168);
	const FLT x256 = (x80 * x255) + (-1 * x254 * x114);
	const FLT x257 = ((-1 * x253 * x117) + (x251 * x116)) * x118;
	const FLT x258 = x257 + (-1 * x256 * x113);
	const FLT x259 = (-1 * x75 * (x254 + (x61 * x255))) + (x60 * x255);
	const FLT x260 = x259 * x103;
	const FLT x261 = (x84 * ((-1 * x259 * x105) + x260)) + (x259 * x102);
	const FLT x262 = (x259 * x107) + (x84 * x261);
	const FLT x263 = x257 + (-1 * x135 * ((x258 * x133) + x256 + (x262 * x111) + (-1 * x131 * ((-1 * x97 * ((x259 * x130) + (x84 * x262) + (x259 * x124) + (x84 * (x262 + (x84 * ((x84 * ((x259 * x127) + (-1 * x259 * x126) + x260)) + x261 + (x259 * x128))) + (x259 * x129))))) + (-1 * x258 * x123))) + (x259 * x101)));
	const FLT x264 = x217 * sensor_pt[1];
	const FLT x265 = x220 * sensor_pt[2];
	const FLT x266 = x226 * sensor_pt[0];
	const FLT x267 = (-1 * x266) + x264 + x265;
	const FLT x268 = -1 * x236;
	const FLT x269 = x268 + (-1 * x238) + x237;
	const FLT x270 = x28 * x225;
	const FLT x271 = (-1 * x242) + x270 + (-1 * x267 * x224) + (x234 * x269);
	const FLT x272 = (-1 * x231) + x230;
	const FLT x273 = x272 + x232;
	const FLT x274 = x28 * x243;
	const FLT x275 = x229 + (-1 * x274) + (-1 * x234 * x273) + (x267 * x241);
	const FLT x276 = x220 * x243;
	const FLT x277 = x217 * x225;
	const FLT x278 = (x273 * x224) + x277 + x276 + (-1 * x269 * x241);
	const FLT x279 = (x278 * (*lh_p).Rot[3]) + (-1 * x271 * (*lh_p).Rot[1]) + (x275 * (*lh_p).Rot[0]);
	const FLT x280 = (-1 * x278 * (*lh_p).Rot[2]) + (x275 * (*lh_p).Rot[1]) + (x271 * (*lh_p).Rot[0]);
	const FLT x281 = x278 + (-1 * x279 * x168) + (x280 * x176);
	const FLT x282 = (-1 * x275 * (*lh_p).Rot[3]) + (x278 * (*lh_p).Rot[0]) + (x271 * (*lh_p).Rot[2]);
	const FLT x283 = x271 + (-1 * x282 * x176) + (x279 * x166);
	const FLT x284 = (x72 * x283) + (x67 * x281);
	const FLT x285 = x275 + (-1 * x280 * x166) + (x282 * x168);
	const FLT x286 = (x80 * x285) + (-1 * x284 * x114);
	const FLT x287 = ((-1 * x283 * x117) + (x281 * x116)) * x118;
	const FLT x288 = x287 + (-1 * x286 * x113);
	const FLT x289 = (-1 * x75 * (x284 + (x61 * x285))) + (x60 * x285);
	const FLT x290 = x289 * x103;
	const FLT x291 = (x84 * ((-1 * x289 * x105) + x290)) + (x289 * x102);
	const FLT x292 = (x289 * x107) + (x84 * x291);
	const FLT x293 = x77 * x289;
	const FLT x294 = x287 + (-1 * x135 * (x286 + (x288 * x133) + (x293 * x100) + (-1 * x131 * ((-1 * x97 * ((x289 * x130) + (x84 * (x292 + (x84 * (x291 + (x84 * (x290 + (x289 * x127) + (-1 * x293 * x125))) + (x289 * x128))) + (x289 * x129))) + (x289 * x124) + (x84 * x292))) + (-1 * x288 * x123))) + (x292 * x111)));
	const FLT x295 = x239 + x268;
	const FLT x296 = x28 * x228;
	const FLT x297 = (-1 * x264) + x265 + x266;
	const FLT x298 = x246 + (x234 * x297) + (-1 * x295 * x224) + (-1 * x296);
	const FLT x299 = -1 * x218;
	const FLT x300 = x221 + (-1 * x219) + x299;
	const FLT x301 = (x224 * x300) + x274 + (-1 * x227) + (-1 * x297 * x241);
	const FLT x302 = x228 * x226;
	const FLT x303 = x302 + (x295 * x241) + (-1 * x234 * x300) + x276;
	const FLT x304 = (x303 * (*lh_p).Rot[1]) + (x298 * (*lh_p).Rot[0]) + (-1 * x301 * (*lh_p).Rot[2]);
	const FLT x305 = (x301 * (*lh_p).Rot[0]) + (-1 * x303 * (*lh_p).Rot[3]) + (x298 * (*lh_p).Rot[2]);
	const FLT x306 = x303 + (-1 * x304 * x166) + (x305 * x168);
	const FLT x307 = (x301 * (*lh_p).Rot[3]) + (x303 * (*lh_p).Rot[0]) + (-1 * x298 * (*lh_p).Rot[1]);
	const FLT x308 = (-1 * x307 * x168) + x301 + (x304 * x176);
	const FLT x309 = x298 + (-1 * x305 * x176) + (x307 * x166);
	const FLT x310 = (x72 * x309) + (x67 * x308);
	const FLT x311 = x77 * ((-1 * x75 * (x310 + (x61 * x306))) + (x60 * x306));
	const FLT x312 = x86 * x311;
	const FLT x313 = (x84 * ((-1 * x85 * x311) + x312)) + (x87 * x311);
	const FLT x314 = (x88 * x311) + (x84 * x313);
	const FLT x315 = (x80 * x306) + (-1 * x310 * x114);
	const FLT x316 = ((-1 * x309 * x117) + (x308 * x116)) * x118;
	const FLT x317 = x316 + (-1 * x315 * x113);
	const FLT x318 = x316 + (-1 * x135 * (x315 + (-1 * x131 * ((-1 * x97 * ((x89 * x311) + (x84 * x314) + (x94 * x311) + (x84 * ((x84 * (x313 + (x84 * ((x91 * x311) + x312 + (-1 * x311 * x125))) + (x92 * x311))) + x314 + (x93 * x311))))) + (-1 * x317 * x123))) + (x314 * x111) + (x317 * x133) + (x311 * x100)));
	const FLT x319 = x272 + (-1 * x232);
	const FLT x320 = x222 + x299;
	const FLT x321 = (x234 * x320) + x277 + (-1 * x224 * x319) + x302;
	const FLT x322 = x264 + x266 + (-1 * x265);
	const FLT x323 = (-1 * x247) + x296 + (-1 * x234 * x322) + (x241 * x319);
	const FLT x324 = x244 + (-1 * x270) + (x224 * x322) + (-1 * x241 * x320);
	const FLT x325 = (x324 * (*lh_p).Rot[3]) + (-1 * x321 * (*lh_p).Rot[1]) + (x323 * (*lh_p).Rot[0]);
	const FLT x326 = (x323 * (*lh_p).Rot[1]) + (-1 * x324 * (*lh_p).Rot[2]) + (x321 * (*lh_p).Rot[0]);
	const FLT x327 = x324 + (-1 * x325 * x168) + (x326 * x176);
	const FLT x328 = (x324 * (*lh_p).Rot[0]) + (-1 * x323 * (*lh_p).Rot[3]) + (x321 * (*lh_p).Rot[2]);
	const FLT x329 = x321 + (-1 * x328 * x176) + (x325 * x166);
	const FLT x330 = (x72 * x329) + (x67 * x327);
	const FLT x331 = (x328 * x168) + x323 + (-1 * x326 * x166);
	const FLT x332 = (x80 * x331) + (-1 * x330 * x114);
	const FLT x333 = ((-1 * x329 * x117) + (x327 * x116)) * x118;
	const FLT x334 = x333 + (-1 * x332 * x113);
	const FLT x335 = (-1 * x75 * (x330 + (x61 * x331))) + (x60 * x331);
	const FLT x336 = x335 * x103;
	const FLT x337 = (x84 * ((-1 * x335 * x105) + x336)) + (x335 * x102);
	const FLT x338 = (x335 * x107) + (x84 * x337);
	const FLT x339 = x333 + (-1 * x135 * ((x334 * x133) + x332 + (x338 * x111) + (-1 * x131 * ((-1 * x97 * ((x84 * (x338 + (x84 * (x337 + (x84 * ((x335 * x127) + x336 + (-1 * x335 * x126))) + (x335 * x128))) + (x335 * x129))) + (x335 * x130) + (x84 * x338) + (x335 * x124))) + (-1 * x334 * x123))) + (x335 * x101)));
	const FLT x340 = -1 * x32;
	const FLT x341 = x23 * (*_x0).Pose.Rot[2];
	const FLT x342 = x6 * x24;
	const FLT x343 = x342 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x344 = 0.5 * x343;
	const FLT x345 = dt * dt * dt;
	const FLT x346 = 0.5 * x18 * x345;
	const FLT x347 = x11 * x346;
	const FLT x348 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x349 = dt * dt * dt * dt;
	const FLT x350 = 2 * (1. / (x13 * x13)) * x17;
	const FLT x351 = x350 * x349;
	const FLT x352 = x7 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x353 = 1. / (x13 * sqrt(x13));
	const FLT x354 = 1.0 * x20 * x16;
	const FLT x355 = x354 * x353;
	const FLT x356 = x355 * x349;
	const FLT x357 = 2 * x19;
	const FLT x358 = x6 * x357;
	const FLT x359 = x9 * x351;
	const FLT x360 = (-1 * x359 * (*_x0).Velocity.AxisAngleRot[0]) + (x9 * x356 * (*_x0).Velocity.AxisAngleRot[0]) + (x358 * (*_x0).Velocity.AxisAngleRot[0]) + (x352 * x356) + (-1 * x351 * x348) + (-1 * x354 * x343) + (-1 * x352 * x351) + (x356 * x348);
	const FLT x361 = 1.0/2.0 * (1. / (x21 * sqrt(x21)));
	const FLT x362 = x25 * x16 * x361;
	const FLT x363 = x362 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x364 = x363 * x360;
	const FLT x365 = x20 * x361;
	const FLT x366 = x365 * x360;
	const FLT x367 = x362 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x368 = x367 * x360;
	const FLT x369 = x23 * (*_x0).Pose.Rot[1];
	const FLT x370 = x353 * x345;
	const FLT x371 = x370 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x372 = x371 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x373 = x372 * x369;
	const FLT x374 = x346 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x375 = x374 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x376 = x40 * x375;
	const FLT x377 = x362 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x378 = x377 * x360;
	const FLT x379 = x11 * x370;
	const FLT x380 = x374 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x381 = x23 * (*_x0).Pose.Rot[0];
	const FLT x382 = x381 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x383 = x370 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x384 = (-1 * x383 * x382) + (x35 * x380);
	const FLT x385 = x384 + (x31 * x379) + x376 + (-1 * x373) + (-1 * x344 * x341) + (-1 * x37 * x347) + (-1 * x378 * (*_x0).Pose.Rot[1]) + (-1 * x368 * (*_x0).Pose.Rot[0]) + (x364 * (*_x0).Pose.Rot[3]) + x340 + (-1 * x366 * (*_x0).Pose.Rot[2]);
	const FLT x386 = x37 * x380;
	const FLT x387 = x31 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x388 = x383 * x387;
	const FLT x389 = x29 * x375;
	const FLT x390 = x372 * x341;
	const FLT x391 = x377 * (*_x0).Pose.Rot[2];
	const FLT x392 = (-1 * x364 * (*_x0).Pose.Rot[0]) + (-1 * x366 * (*_x0).Pose.Rot[1]) + (-1 * x379 * x381) + x27 + x386 + (x391 * x360) + (-1 * x389) + (-1 * x388) + x390 + (-1 * x369 * x344) + (-1 * x368 * (*_x0).Pose.Rot[3]) + (x35 * x347);
	const FLT x393 = x363 * (*_x0).Pose.Rot[2];
	const FLT x394 = x369 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x395 = (-1 * x40 * x380) + (x394 * x383);
	const FLT x396 = (-1 * x372 * x381) + (x35 * x375);
	const FLT x397 = x396 + (-1 * x393 * x360) + x395 + (-1 * x31 * x344) + x34 + (-1 * x378 * (*_x0).Pose.Rot[0]) + (-1 * x379 * x341) + (x29 * x347) + (x368 * (*_x0).Pose.Rot[1]) + (-1 * x366 * (*_x0).Pose.Rot[3]);
	const FLT x398 = x29 * x380;
	const FLT x399 = x341 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x400 = x399 * x383;
	const FLT x401 = -1 * x30;
	const FLT x402 = (-1 * x37 * x375) + (x31 * x372);
	const FLT x403 = (x379 * x369) + x401 + (-1 * x40 * x347) + (-1 * x366 * (*_x0).Pose.Rot[0]) + (-1 * x381 * x344) + (x368 * (*_x0).Pose.Rot[2]) + x402 + (x378 * (*_x0).Pose.Rot[3]) + (-1 * x398) + (x364 * (*_x0).Pose.Rot[1]) + x400;
	const FLT x404 = (-1 * x392 * sensor_pt[2]) + (x403 * sensor_pt[1]) + (x397 * sensor_pt[0]);
	const FLT x405 = (x392 * sensor_pt[1]) + (-1 * x385 * sensor_pt[0]) + (x403 * sensor_pt[2]);
	const FLT x406 = (x405 * x224) + (-1 * x225 * x397) + (x243 * x385) + (-1 * x404 * x241);
	const FLT x407 = 2 * ((x403 * sensor_pt[0]) + (-1 * x397 * sensor_pt[1]) + (x385 * sensor_pt[2]));
	const FLT x408 = (x404 * x234) + (-1 * x33 * x407) + (x225 * x392) + (-1 * x228 * x385);
	const FLT x409 = (x38 * x407) + (-1 * x243 * x392) + (-1 * x405 * x234) + (x228 * x397);
	const FLT x410 = (x409 * (*lh_p).Rot[1]) + (-1 * x406 * (*lh_p).Rot[2]) + (x408 * (*lh_p).Rot[0]);
	const FLT x411 = (x406 * (*lh_p).Rot[0]) + (x408 * (*lh_p).Rot[2]) + (-1 * x409 * (*lh_p).Rot[3]);
	const FLT x412 = x409 + (-1 * x410 * x166) + (x411 * x168);
	const FLT x413 = (x406 * (*lh_p).Rot[3]) + (-1 * x408 * (*lh_p).Rot[1]) + (x409 * (*lh_p).Rot[0]);
	const FLT x414 = x406 + (-1 * x413 * x168) + (x410 * x176);
	const FLT x415 = x408 + (-1 * x411 * x176) + (x413 * x166);
	const FLT x416 = (x72 * x415) + (x67 * x414);
	const FLT x417 = (-1 * x75 * (x416 + (x61 * x412))) + (x60 * x412);
	const FLT x418 = (x80 * x412) + (-1 * x416 * x114);
	const FLT x419 = ((-1 * x415 * x117) + (x414 * x116)) * x118;
	const FLT x420 = x419 + (-1 * x418 * x113);
	const FLT x421 = x417 * x103;
	const FLT x422 = (x84 * ((-1 * x417 * x105) + x421)) + (x417 * x102);
	const FLT x423 = (x417 * x107) + (x84 * x422);
	const FLT x424 = x419 + (-1 * x135 * (x418 + (x420 * x133) + (x423 * x111) + (x417 * x101) + (-1 * x131 * ((-1 * x97 * ((x84 * x423) + (x417 * x130) + (x417 * x124) + (x84 * (x423 + (x84 * (x422 + (x84 * ((x417 * x127) + x421 + (-1 * x417 * x126))) + (x417 * x128))) + (x417 * x129))))) + (-1 * x420 * x123)))));
	const FLT x425 = x11 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x426 = x354 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x427 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x428 = (x427 * x356) + (-1 * x359 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x426 * x342) + (x9 * x426 * x353 * x349) + (-1 * x425 * x351) + (-1 * x427 * x351) + (x425 * x356) + (x358 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x429 = x363 * (*_x0).Pose.Rot[0];
	const FLT x430 = x7 * x370;
	const FLT x431 = x428 * (*_x0).Pose.Rot[3];
	const FLT x432 = x7 * x346;
	const FLT x433 = x428 * x365;
	const FLT x434 = 0.5 * x342;
	const FLT x435 = x346 * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x436 = (-1 * x29 * x435) + (x371 * x399);
	const FLT x437 = x384 + x436 + (-1 * x433 * (*_x0).Pose.Rot[1]) + (-1 * x434 * x394) + x32 + (-1 * x429 * x428) + (x37 * x432) + (-1 * x31 * x430) + (-1 * x431 * x367) + (x428 * x391);
	const FLT x438 = x428 * x367;
	const FLT x439 = x23 * x430;
	const FLT x440 = x428 * x377;
	const FLT x441 = (x35 * x435) + (-1 * x371 * x382);
	const FLT x442 = (-1 * x434 * x387) + x441 + x398 + (-1 * x400) + (-1 * x440 * (*_x0).Pose.Rot[0]) + (-1 * x40 * x432) + x401 + (-1 * x428 * x393) + (x439 * (*_x0).Pose.Rot[1]) + (x438 * (*_x0).Pose.Rot[1]) + (-1 * x433 * (*_x0).Pose.Rot[3]);
	const FLT x443 = x37 * x435;
	const FLT x444 = x363 * (*_x0).Pose.Rot[1];
	const FLT x445 = x371 * x387;
	const FLT x446 = -1 * x34;
	const FLT x447 = x395 + (x439 * (*_x0).Pose.Rot[2]) + (-1 * x434 * x382) + (-1 * x433 * (*_x0).Pose.Rot[0]) + (-1 * x443) + (-1 * x29 * x432) + x445 + (x438 * (*_x0).Pose.Rot[2]) + x446 + (x428 * x444) + (x431 * x377);
	const FLT x448 = (x447 * sensor_pt[1]) + (-1 * x437 * sensor_pt[2]) + (x442 * sensor_pt[0]);
	const FLT x449 = x371 * x394;
	const FLT x450 = x40 * x435;
	const FLT x451 = x27 + (-1 * x438 * (*_x0).Pose.Rot[0]) + (x35 * x432) + (-1 * x430 * x381) + (x431 * x363) + (-1 * x440 * (*_x0).Pose.Rot[1]) + x388 + (-1 * x434 * x399) + (-1 * x386) + (-1 * x433 * (*_x0).Pose.Rot[2]) + (-1 * x449) + x450;
	const FLT x452 = (x437 * sensor_pt[1]) + (-1 * x451 * sensor_pt[0]) + (x447 * sensor_pt[2]);
	const FLT x453 = (-1 * x442 * x225) + (x451 * x243) + (-1 * x448 * x241) + (x452 * x224);
	const FLT x454 = 2 * ((-1 * x442 * sensor_pt[1]) + (x447 * sensor_pt[0]) + (x451 * sensor_pt[2]));
	const FLT x455 = (x448 * x234) + (-1 * x451 * x228) + (-1 * x33 * x454) + (x437 * x225);
	const FLT x456 = (x38 * x454) + (-1 * x452 * x234) + (x442 * x228) + (-1 * x437 * x243);
	const FLT x457 = (x456 * (*lh_p).Rot[1]) + (-1 * x453 * (*lh_p).Rot[2]) + (x455 * (*lh_p).Rot[0]);
	const FLT x458 = (x453 * (*lh_p).Rot[0]) + (-1 * x456 * (*lh_p).Rot[3]) + (x455 * (*lh_p).Rot[2]);
	const FLT x459 = x456 + (-1 * x457 * x166) + (x458 * x168);
	const FLT x460 = (x453 * (*lh_p).Rot[3]) + (-1 * x455 * (*lh_p).Rot[1]) + (x456 * (*lh_p).Rot[0]);
	const FLT x461 = x453 + (-1 * x460 * x168) + (x457 * x176);
	const FLT x462 = x455 + (-1 * x458 * x176) + (x460 * x166);
	const FLT x463 = (x72 * x462) + (x67 * x461);
	const FLT x464 = (-1 * x75 * (x463 + (x61 * x459))) + (x60 * x459);
	const FLT x465 = x464 * x103;
	const FLT x466 = (x84 * ((-1 * x464 * x105) + x465)) + (x464 * x102);
	const FLT x467 = (x464 * x107) + (x84 * x466);
	const FLT x468 = (x80 * x459) + (-1 * x463 * x114);
	const FLT x469 = ((-1 * x462 * x117) + (x461 * x116)) * x118;
	const FLT x470 = x469 + (-1 * x468 * x113);
	const FLT x471 = x469 + (-1 * x135 * (x468 + (x464 * x101) + (x467 * x111) + (x470 * x133) + (-1 * x131 * ((-1 * x97 * ((x84 * x467) + (x464 * x124) + (x464 * x130) + (x84 * (x467 + (x84 * (x466 + (x84 * ((x464 * x127) + x465 + (-1 * x464 * x126))) + (x464 * x128))) + (x464 * x129))))) + (-1 * x470 * x123)))));
	const FLT x472 = x351 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x473 = x356 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x474 = x349 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x475 = x6 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x476 = x24 * x475;
	const FLT x477 = (-1 * x7 * x472) + (x475 * x357) + (x7 * x473) + (-1 * x11 * x472) + (x11 * x473) + (x474 * x355) + (-1 * x474 * x350) + (-1 * x476 * x354);
	const FLT x478 = x9 * x370;
	const FLT x479 = x477 * (*_x0).Pose.Rot[3];
	const FLT x480 = x477 * x365;
	const FLT x481 = 0.5 * x476;
	const FLT x482 = x9 * x346;
	const FLT x483 = x396 + (-1 * x29 * x482) + (-1 * x477 * x429) + (-1 * x479 * x367) + x446 + (x477 * x391) + (-1 * x481 * x369) + x443 + (-1 * x480 * (*_x0).Pose.Rot[1]) + (-1 * x445) + (x478 * x341);
	const FLT x484 = x477 * x367;
	const FLT x485 = x477 * x377;
	const FLT x486 = (-1 * x390) + (-1 * x477 * x393) + (x35 * x482) + x449 + (x484 * (*_x0).Pose.Rot[1]) + x27 + (-1 * x480 * (*_x0).Pose.Rot[3]) + x389 + (-1 * x478 * x381) + (-1 * x450) + (-1 * x485 * (*_x0).Pose.Rot[0]) + (-1 * x31 * x481);
	const FLT x487 = x436 + (-1 * x480 * (*_x0).Pose.Rot[0]) + x340 + (-1 * x376) + (x485 * (*_x0).Pose.Rot[3]) + (-1 * x481 * x381) + (-1 * x37 * x482) + (x31 * x478) + x373 + (x477 * x444) + (x484 * (*_x0).Pose.Rot[2]);
	const FLT x488 = (x487 * sensor_pt[1]) + (-1 * x483 * sensor_pt[2]) + (x486 * sensor_pt[0]);
	const FLT x489 = x441 + x402 + (-1 * x485 * (*_x0).Pose.Rot[1]) + (-1 * x481 * x341) + (x479 * x363) + (-1 * x484 * (*_x0).Pose.Rot[0]) + (-1 * x480 * (*_x0).Pose.Rot[2]) + x30 + (-1 * x478 * x369) + (x40 * x482);
	const FLT x490 = (x483 * sensor_pt[1]) + (-1 * x489 * sensor_pt[0]) + (x487 * sensor_pt[2]);
	const FLT x491 = (-1 * x486 * x225) + (-1 * x488 * x241) + (x490 * x224) + (x489 * x243);
	const FLT x492 = (-1 * x486 * sensor_pt[1]) + (x487 * sensor_pt[0]) + (x489 * sensor_pt[2]);
	const FLT x493 = (x483 * x225) + (-1 * x489 * x228) + (-1 * x492 * x224) + (x488 * x234);
	const FLT x494 = (x492 * x241) + (-1 * x483 * x243) + (-1 * x490 * x234) + (x486 * x228);
	const FLT x495 = (x494 * (*lh_p).Rot[1]) + (-1 * x491 * (*lh_p).Rot[2]) + (x493 * (*lh_p).Rot[0]);
	const FLT x496 = (-1 * x494 * (*lh_p).Rot[3]) + (x491 * (*lh_p).Rot[0]) + (x493 * (*lh_p).Rot[2]);
	const FLT x497 = x494 + (-1 * x495 * x166) + (x496 * x168);
	const FLT x498 = (-1 * x493 * (*lh_p).Rot[1]) + (x491 * (*lh_p).Rot[3]) + (x494 * (*lh_p).Rot[0]);
	const FLT x499 = x491 + (-1 * x498 * x168) + (x495 * x176);
	const FLT x500 = (x498 * x166) + x493 + (-1 * x496 * x176);
	const FLT x501 = (x72 * x500) + (x67 * x499);
	const FLT x502 = (-1 * x75 * (x501 + (x61 * x497))) + (x60 * x497);
	const FLT x503 = x502 * x103;
	const FLT x504 = (x84 * ((-1 * x502 * x105) + x503)) + (x502 * x102);
	const FLT x505 = (x502 * x107) + (x84 * x504);
	const FLT x506 = (x80 * x497) + (-1 * x501 * x114);
	const FLT x507 = ((-1 * x500 * x117) + (x499 * x116)) * x118;
	const FLT x508 = x507 + (-1 * x506 * x113);
	const FLT x509 = x507 + (-1 * x135 * (x506 + (-1 * x131 * ((-1 * x97 * ((x502 * x130) + (x84 * x505) + (x502 * x124) + (x84 * (x505 + (x84 * ((x84 * ((x502 * x127) + x503 + (-1 * x502 * x126))) + x504 + (x502 * x128))) + (x502 * x129))))) + (-1 * x508 * x123))) + (x508 * x133) + (x502 * x101) + (x505 * x111)));
	const FLT x510 = dt * x167;
	const FLT x511 = dt * x169;
	const FLT x512 = x511 + x510;
	const FLT x513 = -1 * dt * x171;
	const FLT x514 = -1 * dt * x173;
	const FLT x515 = x514 + dt + x513;
	const FLT x516 = dt * x177;
	const FLT x517 = dt * x178;
	const FLT x518 = x517 + (-1 * x516);
	const FLT x519 = (x72 * x518) + (x67 * x515);
	const FLT x520 = x77 * ((-1 * x75 * (x519 + (x61 * x512))) + (x60 * x512));
	const FLT x521 = x86 * x520;
	const FLT x522 = (x84 * ((-1 * x85 * x520) + x521)) + (x87 * x520);
	const FLT x523 = (x88 * x520) + (x84 * x522);
	const FLT x524 = (x80 * x512) + (-1 * x519 * x114);
	const FLT x525 = ((-1 * x518 * x117) + (x515 * x116)) * x118;
	const FLT x526 = x525 + (-1 * x524 * x113);
	const FLT x527 = x525 + (-1 * x135 * (x524 + (-1 * x131 * ((-1 * x97 * ((x84 * (x523 + (x84 * (x522 + (x84 * ((x91 * x520) + x521 + (-1 * x520 * x125))) + (x92 * x520))) + (x93 * x520))) + (x89 * x520) + (x94 * x520) + (x84 * x523))) + (-1 * x526 * x123))) + (x526 * x133) + (x520 * x100) + (x523 * x111)));
	const FLT x528 = (-1 * dt * x189) + dt;
	const FLT x529 = x528 + x514;
	const FLT x530 = x510 + (-1 * x511);
	const FLT x531 = dt * x193;
	const FLT x532 = dt * x194;
	const FLT x533 = x532 + x531;
	const FLT x534 = (x72 * x533) + (x67 * x530);
	const FLT x535 = (-1 * x75 * (x534 + (x61 * x529))) + (x60 * x529);
	const FLT x536 = x77 * x535;
	const FLT x537 = x86 * x536;
	const FLT x538 = (x84 * ((-1 * x85 * x536) + x537)) + (x87 * x536);
	const FLT x539 = (x88 * x536) + (x84 * x538);
	const FLT x540 = (x80 * x529) + (-1 * x534 * x114);
	const FLT x541 = ((-1 * x533 * x117) + (x530 * x116)) * x118;
	const FLT x542 = x541 + (-1 * x540 * x113);
	const FLT x543 = x541 + (-1 * x135 * ((x542 * x133) + (x539 * x111) + x540 + (x536 * x100) + (-1 * x131 * ((-1 * x97 * ((x94 * x536) + (x535 * x130) + (x84 * x539) + (x84 * (x539 + (x84 * (x538 + (x84 * ((x535 * x127) + x537 + (-1 * x536 * x125))) + (x92 * x536))) + (x535 * x129))))) + (-1 * x542 * x123)))));
	const FLT x544 = x531 + (-1 * x532);
	const FLT x545 = x516 + x517;
	const FLT x546 = x528 + x513;
	const FLT x547 = (x72 * x546) + (x67 * x545);
	const FLT x548 = (-1 * x75 * (x547 + (x61 * x544))) + (x60 * x544);
	const FLT x549 = x548 * x103;
	const FLT x550 = (x84 * ((-1 * x548 * x105) + x549)) + (x548 * x102);
	const FLT x551 = (x548 * x107) + (x84 * x550);
	const FLT x552 = (x80 * x544) + (-1 * x547 * x114);
	const FLT x553 = ((-1 * x546 * x117) + (x545 * x116)) * x118;
	const FLT x554 = x553 + (-1 * x552 * x113);
	const FLT x555 = x553 + (-1 * x135 * ((x554 * x133) + (-1 * x131 * ((-1 * x97 * ((x84 * x551) + (x84 * (x551 + (x84 * ((x84 * ((x548 * x127) + x549 + (-1 * x548 * x126))) + x550 + (x548 * x128))) + (x548 * x129))) + (x548 * x130) + (x548 * x124))) + (-1 * x554 * x123))) + (x551 * x111) + x552 + (x548 * x101)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x136 + (x137 * x136));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x153 + (x137 * x153));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x165 + (x165 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x188 + (x188 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x204 + (x204 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x216 + (x216 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x263 + (x263 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), x294 + (x294 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x318 + (x318 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), x339 + (x339 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), x424 + (x424 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x471 + (x471 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x509 + (x509 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x527 + (x527 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x543 + (x543 * x137));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), x555 + (x555 * x137));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x13 * (*_x0).Pose.Rot[0];
	const FLT x15 = x11 * x10;
	const FLT x16 = x15 * (*_x0).Pose.Rot[2];
	const FLT x17 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x17 * (*_x0).Pose.Rot[1];
	const FLT x19 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x20 = x19 * (*_x0).Pose.Rot[3];
	const FLT x21 = x18 + x14 + (-1 * x20) + x16;
	const FLT x22 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x17 * (*_x0).Pose.Rot[0];
	const FLT x24 = x13 * (*_x0).Pose.Rot[1];
	const FLT x25 = x15 * (*_x0).Pose.Rot[3];
	const FLT x26 = x19 * (*_x0).Pose.Rot[2];
	const FLT x27 = x26 + x25 + x23 + (-1 * x24);
	const FLT x28 = (x21 * sensor_pt[2]) + (-1 * x27 * sensor_pt[1]) + (x22 * sensor_pt[0]);
	const FLT x29 = x17 * (*_x0).Pose.Rot[2];
	const FLT x30 = x13 * (*_x0).Pose.Rot[3];
	const FLT x31 = x15 * (*_x0).Pose.Rot[1];
	const FLT x32 = x19 * (*_x0).Pose.Rot[0];
	const FLT x33 = x32 + x31 + (-1 * x29) + x30;
	const FLT x34 = (-1 * x33 * sensor_pt[2]) + (x27 * sensor_pt[0]) + (x22 * sensor_pt[1]);
	const FLT x35 = sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (2 * ((x34 * x33) + (-1 * x21 * x28))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x36 = (-1 * x21 * sensor_pt[0]) + (x22 * sensor_pt[2]) + (x33 * sensor_pt[1]);
	const FLT x37 = (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (2 * ((x28 * x27) + (-1 * x33 * x36))) + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x38 = (2 * ((x36 * x21) + (-1 * x34 * x27))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x39 = (x35 * (*lh_p).Rot[0]) + (-1 * x38 * (*lh_p).Rot[2]) + (x37 * (*lh_p).Rot[1]);
	const FLT x40 = (-1 * x37 * (*lh_p).Rot[3]) + (x35 * (*lh_p).Rot[2]) + (x38 * (*lh_p).Rot[0]);
	const FLT x41 = x37 + (*lh_p).Pos[1] + (2 * ((x40 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1])));
	const FLT x42 = x41 * x41;
	const FLT x43 = (-1 * x35 * (*lh_p).Rot[1]) + (x37 * (*lh_p).Rot[0]) + (x38 * (*lh_p).Rot[3]);
	const FLT x44 = x35 + (2 * ((x43 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x45 = x38 + (2 * ((x39 * (*lh_p).Rot[2]) + (-1 * x43 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x46 = x45 * x45;
	const FLT x47 = x46 + (x44 * x44);
	const FLT x48 = x47 + x42;
	const FLT x49 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x50 = cos(x49);
	const FLT x51 = 1. / x50;
	const FLT x52 = x51 * (1. / sqrt(x48));
	const FLT x53 = asin(x52 * x41);
	const FLT x54 = 8.0108022e-06 * x53;
	const FLT x55 = -8.0108022e-06 + (-1 * x54);
	const FLT x56 = 0.0028679863 + (x53 * x55);
	const FLT x57 = 1. / sqrt(1 + (-1 * (1. / (x50 * x50)) * x42 * (1. / x48)));
	const FLT x58 = (-1 * x18) + x20 + (-1 * x16) + (-1 * x14);
	const FLT x59 = 2 * x33;
	const FLT x60 = 2 * x22;
	const FLT x61 = x60 * x27;
	const FLT x62 = x61 + (-1 * x58 * x59);
	const FLT x63 = x60 * x21;
	const FLT x64 = (x59 * x27) + (-1 * x63);
	const FLT x65 = 2 * x21;
	const FLT x66 = 1 + (x65 * x58) + (-2 * (x27 * x27));
	const FLT x67 = (x66 * (*lh_p).Rot[0]) + (-1 * x62 * (*lh_p).Rot[3]) + (x64 * (*lh_p).Rot[2]);
	const FLT x68 = 2 * (*lh_p).Rot[3];
	const FLT x69 = (-1 * x66 * (*lh_p).Rot[2]) + (x62 * (*lh_p).Rot[1]) + (x64 * (*lh_p).Rot[0]);
	const FLT x70 = 2 * (*lh_p).Rot[1];
	const FLT x71 = x62 + (x67 * x68) + (-1 * x70 * x69);
	const FLT x72 = 2 * x41;
	const FLT x73 = 2 * (*lh_p).Rot[2];
	const FLT x74 = (x66 * (*lh_p).Rot[3]) + (-1 * x64 * (*lh_p).Rot[1]) + (x62 * (*lh_p).Rot[0]);
	const FLT x75 = x66 + (x73 * x69) + (-1 * x74 * x68);
	const FLT x76 = 2 * x45;
	const FLT x77 = x64 + (x70 * x74) + (-1 * x73 * x67);
	const FLT x78 = 2 * x44;
	const FLT x79 = (x78 * x77) + (x75 * x76);
	const FLT x80 = 1.0/2.0 * x41;
	const FLT x81 = x80 * x51 * (1. / (x48 * sqrt(x48)));
	const FLT x82 = x57 * ((-1 * x81 * (x79 + (x71 * x72))) + (x71 * x52));
	const FLT x83 = x82 * x55;
	const FLT x84 = (x53 * ((-1 * x82 * x54) + x83)) + (x82 * x56);
	const FLT x85 = 5.3685255e-06 + (x53 * x56);
	const FLT x86 = (x82 * x85) + (x84 * x53);
	const FLT x87 = 0.0076069798 + (x85 * x53);
	const FLT x88 = x87 * x53;
	const FLT x89 = -8.0108022e-06 + (-1.60216044e-05 * x53);
	const FLT x90 = x56 + (x89 * x53);
	const FLT x91 = x85 + (x53 * x90);
	const FLT x92 = x87 + (x53 * x91);
	const FLT x93 = (x53 * x92) + x88;
	const FLT x94 = atan2(-1 * x44, x45);
	const FLT x95 = tan(x49);
	const FLT x96 = x95 * (1. / sqrt(x47));
	const FLT x97 = x96 * x41;
	const FLT x98 = (-1 * asin(x97)) + x94 + (*bsc0).ogeephase;
	const FLT x99 = (sin(x98) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x100 = sin(x49);
	const FLT x101 = x99 * x100;
	const FLT x102 = x50 + (-1 * x93 * x101);
	const FLT x103 = 1. / x102;
	const FLT x104 = x53 * x53;
	const FLT x105 = x99 * x104;
	const FLT x106 = x103 * x105;
	const FLT x107 = x80 * x95 * (1. / (x47 * sqrt(x47)));
	const FLT x108 = (x71 * x96) + (-1 * x79 * x107);
	const FLT x109 = 1. / x47;
	const FLT x110 = 1. / sqrt(1 + (-1 * (x95 * x95) * x42 * x109));
	const FLT x111 = x44 * (1. / x46);
	const FLT x112 = 1. / x45;
	const FLT x113 = x46 * x109;
	const FLT x114 = ((-1 * x77 * x112) + (x75 * x111)) * x113;
	const FLT x115 = cos(x98) * (*bsc0).ogeemag;
	const FLT x116 = x115 * (x114 + (-1 * x108 * x110));
	const FLT x117 = x93 * x100;
	const FLT x118 = 2.40324066e-05 * x53;
	const FLT x119 = x87 * (1. / (x102 * x102)) * x105;
	const FLT x120 = 2 * x88 * x99 * x103;
	const FLT x121 = x87 * x103 * x104;
	const FLT x122 = x97 + (x87 * x106);
	const FLT x123 = 1. / sqrt(1 + (-1 * (x122 * x122)));
	const FLT x124 = x114 + (-1 * x123 * (x108 + (x82 * x120) + (x86 * x106) + (x116 * x121) + (-1 * x119 * ((-1 * x101 * ((x82 * x87) + (x82 * x92) + (x86 * x53) + (x53 * (x86 + (x53 * (x84 + (x53 * ((x82 * x89) + x83 + (-1 * x82 * x118))) + (x82 * x90))) + (x82 * x91))))) + (-1 * x116 * x117)))));
	const FLT x125 = cos((*bsc0).gibpha + (-1 * asin(x122)) + x94) * (*bsc0).gibmag;
	const FLT x126 = 2 * ((-1 * x25) + (-1 * x26) + x24 + (-1 * x23));
	const FLT x127 = x60 * x33;
	const FLT x128 = x127 + (-1 * x21 * x126);
	const FLT x129 = 1 + (x27 * x126) + (-2 * (x33 * x33));
	const FLT x130 = (x65 * x33) + (-1 * x61);
	const FLT x131 = (x130 * (*lh_p).Rot[0]) + (x128 * (*lh_p).Rot[2]) + (-1 * x129 * (*lh_p).Rot[3]);
	const FLT x132 = (x129 * (*lh_p).Rot[1]) + (x128 * (*lh_p).Rot[0]) + (-1 * x130 * (*lh_p).Rot[2]);
	const FLT x133 = x129 + (x68 * x131) + (-1 * x70 * x132);
	const FLT x134 = 2 * ((x130 * (*lh_p).Rot[3]) + (-1 * x128 * (*lh_p).Rot[1]) + (x129 * (*lh_p).Rot[0]));
	const FLT x135 = x130 + (x73 * x132) + (-1 * x134 * (*lh_p).Rot[3]);
	const FLT x136 = x128 + (x134 * (*lh_p).Rot[1]) + (-1 * x73 * x131);
	const FLT x137 = (x78 * x136) + (x76 * x135);
	const FLT x138 = x57 * ((-1 * x81 * (x137 + (x72 * x133))) + (x52 * x133));
	const FLT x139 = x55 * x138;
	const FLT x140 = (x53 * ((-1 * x54 * x138) + x139)) + (x56 * x138);
	const FLT x141 = (x85 * x138) + (x53 * x140);
	const FLT x142 = (x96 * x133) + (-1 * x107 * x137);
	const FLT x143 = ((-1 * x112 * x136) + (x111 * x135)) * x113;
	const FLT x144 = x143 + (-1 * x110 * x142);
	const FLT x145 = x115 * x117;
	const FLT x146 = x115 * x121;
	const FLT x147 = x143 + (-1 * x123 * ((x120 * x138) + (x106 * x141) + x142 + (x144 * x146) + (-1 * x119 * ((-1 * x101 * ((x87 * x138) + (x53 * x141) + (x92 * x138) + (x53 * ((x53 * (x140 + (x53 * (x139 + (x89 * x138) + (-1 * x118 * x138))) + (x90 * x138))) + x141 + (x91 * x138))))) + (-1 * x144 * x145)))));
	const FLT x148 = (x65 * x27) + (-1 * x127);
	const FLT x149 = 2 * ((-1 * x32) + (-1 * x30) + x29 + (-1 * x31));
	const FLT x150 = 1 + (x33 * x149) + (-2 * (x21 * x21));
	const FLT x151 = x63 + (-1 * x27 * x149);
	const FLT x152 = (x151 * (*lh_p).Rot[0]) + (-1 * x148 * (*lh_p).Rot[3]) + (x150 * (*lh_p).Rot[2]);
	const FLT x153 = (x148 * (*lh_p).Rot[1]) + (-1 * x151 * (*lh_p).Rot[2]) + (x150 * (*lh_p).Rot[0]);
	const FLT x154 = x148 + (x68 * x152) + (-1 * x70 * x153);
	const FLT x155 = (x151 * (*lh_p).Rot[3]) + (-1 * x150 * (*lh_p).Rot[1]) + (x148 * (*lh_p).Rot[0]);
	const FLT x156 = x151 + (x73 * x153) + (-1 * x68 * x155);
	const FLT x157 = x150 + (x70 * x155) + (-1 * x73 * x152);
	const FLT x158 = (x78 * x157) + (x76 * x156);
	const FLT x159 = x57 * ((-1 * x81 * (x158 + (x72 * x154))) + (x52 * x154));
	const FLT x160 = x55 * x159;
	const FLT x161 = (x53 * ((-1 * x54 * x159) + x160)) + (x56 * x159);
	const FLT x162 = (x85 * x159) + (x53 * x161);
	const FLT x163 = (x96 * x154) + (-1 * x107 * x158);
	const FLT x164 = ((-1 * x112 * x157) + (x111 * x156)) * x113;
	const FLT x165 = x164 + (-1 * x110 * x163);
	const FLT x166 = x164 + (-1 * x123 * (x163 + (x165 * x146) + (-1 * x119 * ((-1 * x101 * ((x87 * x159) + (x53 * ((x53 * (x161 + (x53 * ((x89 * x159) + x160 + (-1 * x118 * x159))) + (x90 * x159))) + x162 + (x91 * x159))) + (x53 * x162) + (x92 * x159))) + (-1 * x165 * x145))) + (x106 * x162) + (x120 * x159)));
	cnMatrixOptionalSet(Hx, 0, 0, x124 + (x124 * x125));
	cnMatrixOptionalSet(Hx, 0, 1, x147 + (x125 * x147));
	cnMatrixOptionalSet(Hx, 0, 2, x166 + (x125 * x166));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = tan(x0);
	const FLT x2 = dt * (*_x0).Velocity.Pos[2];
	const FLT x3 = 1.0/2.0 * dt * fabs(dt);
	const FLT x4 = x3 * (*_x0).Acc[2];
	const FLT x5 = dt * dt;
	const FLT x6 = x5 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x7 = x5 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x8 = x5 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x9 = 1e-10 + x6 + x7 + x8;
	const FLT x10 = sqrt(x9);
	const FLT x11 = 0.5 * x10;
	const FLT x12 = sin(x11);
	const FLT x13 = (1. / x9) * (x12 * x12);
	const FLT x14 = cos(x11);
	const FLT x15 = 1. / sqrt((x7 * x13) + (x6 * x13) + (x8 * x13) + (x14 * x14));
	const FLT x16 = dt * x15 * x12 * (1. / x10);
	const FLT x17 = x16 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x18 = x15 * x14;
	const FLT x19 = x16 * (*_x0).Pose.Rot[1];
	const FLT x20 = x16 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x21 = (x19 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (x18 * (*_x0).Pose.Rot[2]);
	const FLT x22 = x16 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x23 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x18 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) + (-1 * x17 * (*_x0).Pose.Rot[2]);
	const FLT x24 = (x18 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[2]) + (x22 * (*_x0).Pose.Rot[0]) + (-1 * x19 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x25 = (-1 * x24 * sensor_pt[1]) + (x21 * sensor_pt[2]) + (x23 * sensor_pt[0]);
	const FLT x26 = (x20 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[2]) + (x18 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[3]);
	const FLT x27 = (-1 * x26 * sensor_pt[2]) + (x24 * sensor_pt[0]) + (x23 * sensor_pt[1]);
	const FLT x28 = 2 * ((x26 * x27) + (-1 * x25 * x21));
	const FLT x29 = x28 + x4 + sensor_pt[2] + x2 + (*_x0).Pose.Pos[2];
	const FLT x30 = x29 * (*lh_p).Rot[0];
	const FLT x31 = x3 * (*_x0).Acc[1];
	const FLT x32 = dt * (*_x0).Velocity.Pos[1];
	const FLT x33 = (-1 * x21 * sensor_pt[0]) + (x23 * sensor_pt[2]) + (x26 * sensor_pt[1]);
	const FLT x34 = 2 * ((x24 * x25) + (-1 * x33 * x26));
	const FLT x35 = x34 + x32 + (*_x0).Pose.Pos[1] + sensor_pt[1] + x31;
	const FLT x36 = x35 * (*lh_p).Rot[1];
	const FLT x37 = dt * (*_x0).Velocity.Pos[0];
	const FLT x38 = x3 * (*_x0).Acc[0];
	const FLT x39 = 2 * ((x33 * x21) + (-1 * x24 * x27));
	const FLT x40 = x39 + sensor_pt[0] + x37 + (*_x0).Pose.Pos[0] + x38;
	const FLT x41 = x40 * (*lh_p).Rot[2];
	const FLT x42 = (-1 * x41) + x30 + x36;
	const FLT x43 = x29 * (*lh_p).Rot[2];
	const FLT x44 = x40 * (*lh_p).Rot[0];
	const FLT x45 = x35 * (*lh_p).Rot[3];
	const FLT x46 = (-1 * x45) + x43 + x44;
	const FLT x47 = x35 + (*lh_p).Pos[1] + (2 * ((x46 * (*lh_p).Rot[3]) + (-1 * x42 * (*lh_p).Rot[1])));
	const FLT x48 = x47 * x47;
	const FLT x49 = x35 * (*lh_p).Rot[0];
	const FLT x50 = x40 * (*lh_p).Rot[3];
	const FLT x51 = x29 * (*lh_p).Rot[1];
	const FLT x52 = (-1 * x51) + x49 + x50;
	const FLT x53 = x29 + (2 * ((x52 * (*lh_p).Rot[1]) + (-1 * x46 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x54 = x40 + (2 * ((x42 * (*lh_p).Rot[2]) + (-1 * x52 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x55 = x54 * x54;
	const FLT x56 = x55 + (x53 * x53);
	const FLT x57 = 1. / x56;
	const FLT x58 = 1. / sqrt(1 + (-1 * (x1 * x1) * x57 * x48));
	const FLT x59 = x54 * x47;
	const FLT x60 = x1 * (1. / (x56 * sqrt(x56)));
	const FLT x61 = x60 * x59;
	const FLT x62 = x53 * x57;
	const FLT x63 = x62 + (x61 * x58);
	const FLT x64 = atan2(-1 * x53, x54);
	const FLT x65 = x1 * (1. / sqrt(x56));
	const FLT x66 = x65 * x47;
	const FLT x67 = (-1 * asin(x66)) + x64 + (*bsc0).ogeephase;
	const FLT x68 = cos(x67) * (*bsc0).ogeemag;
	const FLT x69 = x56 + x48;
	const FLT x70 = cos(x0);
	const FLT x71 = 1. / x70;
	const FLT x72 = x71 * (1. / sqrt(x69));
	const FLT x73 = asin(x72 * x47);
	const FLT x74 = 8.0108022e-06 * x73;
	const FLT x75 = -8.0108022e-06 + (-1 * x74);
	const FLT x76 = 0.0028679863 + (x73 * x75);
	const FLT x77 = 5.3685255e-06 + (x73 * x76);
	const FLT x78 = 0.0076069798 + (x73 * x77);
	const FLT x79 = x73 * x78;
	const FLT x80 = -8.0108022e-06 + (-1.60216044e-05 * x73);
	const FLT x81 = x76 + (x80 * x73);
	const FLT x82 = x77 + (x81 * x73);
	const FLT x83 = x78 + (x82 * x73);
	const FLT x84 = (x83 * x73) + x79;
	const FLT x85 = (sin(x67) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x86 = sin(x0);
	const FLT x87 = x85 * x86;
	const FLT x88 = x70 + (-1 * x84 * x87);
	const FLT x89 = 1. / x88;
	const FLT x90 = x73 * x73;
	const FLT x91 = x78 * x90;
	const FLT x92 = x89 * x91;
	const FLT x93 = x68 * x92;
	const FLT x94 = 2 * x54;
	const FLT x95 = 1. / sqrt(1 + (-1 * (1. / (x70 * x70)) * (1. / x69) * x48));
	const FLT x96 = x71 * (1. / (x69 * sqrt(x69)));
	const FLT x97 = x96 * x47;
	const FLT x98 = x89 * x85;
	const FLT x99 = x79 * x98;
	const FLT x100 = x99 * x97 * x95;
	const FLT x101 = x84 * x86;
	const FLT x102 = x68 * x101;
	const FLT x103 = x83 * x95;
	const FLT x104 = x59 * x96;
	const FLT x105 = x75 * x95;
	const FLT x106 = -1 * x105 * x104;
	const FLT x107 = 2.40324066e-05 * x73;
	const FLT x108 = x95 * x107;
	const FLT x109 = x80 * x95;
	const FLT x110 = x81 * x95;
	const FLT x111 = x76 * x95;
	const FLT x112 = x74 * x95;
	const FLT x113 = (x73 * ((x104 * x112) + x106)) + (-1 * x104 * x111);
	const FLT x114 = x82 * x95;
	const FLT x115 = x77 * x95;
	const FLT x116 = (-1 * x104 * x115) + (x73 * x113);
	const FLT x117 = x78 * x95;
	const FLT x118 = (1. / (x88 * x88)) * x85 * x91;
	const FLT x119 = x90 * x98;
	const FLT x120 = x66 + (x78 * x119);
	const FLT x121 = 1. / sqrt(1 + (-1 * (x120 * x120)));
	const FLT x122 = x62 + (-1 * x121 * ((-1 * x61) + (-1 * x118 * ((-1 * x87 * ((x73 * x116) + (-1 * x103 * x104) + (-1 * x104 * x117) + (x73 * (x116 + (x73 * (x113 + (x73 * (x106 + (-1 * x109 * x104) + (x108 * x104))) + (-1 * x104 * x110))) + (-1 * x104 * x114))))) + (-1 * x63 * x102))) + (x63 * x93) + (x119 * x116) + (-1 * x94 * x100)));
	const FLT x123 = cos((-1 * asin(x120)) + (*bsc0).gibpha + x64) * (*bsc0).gibmag;
	const FLT x124 = x65 * x58;
	const FLT x125 = (-1 * x96 * x48) + x72;
	const FLT x126 = x105 * x125;
	const FLT x127 = x95 * x125;
	const FLT x128 = (x73 * ((-1 * x74 * x127) + x126)) + (x111 * x125);
	const FLT x129 = (x115 * x125) + (x73 * x128);
	const FLT x130 = 2 * x99;
	const FLT x131 = x121 * ((x119 * x129) + (x127 * x130) + (-1 * x118 * ((-1 * x87 * ((x117 * x125) + (x73 * x129) + (x103 * x125) + (x73 * ((x73 * (x128 + (x73 * (x126 + (x109 * x125) + (-1 * x107 * x127))) + (x110 * x125))) + x129 + (x114 * x125))))) + (x102 * x124))) + (-1 * x93 * x124) + x65);
	const FLT x132 = x60 * x47;
	const FLT x133 = x53 * x132;
	const FLT x134 = -1 * x54 * x57;
	const FLT x135 = x68 * (x134 + (x58 * x133));
	const FLT x136 = 2 * x53;
	const FLT x137 = x53 * x97;
	const FLT x138 = -1 * x105 * x137;
	const FLT x139 = (x73 * ((x112 * x137) + x138)) + (-1 * x111 * x137);
	const FLT x140 = (-1 * x115 * x137) + (x73 * x139);
	const FLT x141 = x134 + (-1 * x121 * ((x119 * x140) + (-1 * x118 * ((-1 * x87 * ((-1 * x103 * x137) + (x73 * (x140 + (x73 * (x139 + (x73 * ((-1 * x109 * x137) + (x108 * x137) + x138)) + (-1 * x110 * x137))) + (-1 * x114 * x137))) + (-1 * x117 * x137) + (x73 * x140))) + (-1 * x101 * x135))) + (-1 * x133) + (x92 * x135) + (-1 * x100 * x136)));
	const FLT x142 = 2 * x45;
	const FLT x143 = (2 * x43) + (-1 * x142);
	const FLT x144 = 2 * x41;
	const FLT x145 = (2 * x36) + (-1 * x144);
	const FLT x146 = (x136 * x145) + (x94 * x143);
	const FLT x147 = 1.0/2.0 * x132;
	const FLT x148 = 2 * x51;
	const FLT x149 = (2 * x50) + (-1 * x148);
	const FLT x150 = (x65 * x149) + (-1 * x146 * x147);
	const FLT x151 = x53 * (1. / x55);
	const FLT x152 = 1. / x54;
	const FLT x153 = x57 * x55;
	const FLT x154 = ((-1 * x145 * x152) + (x143 * x151)) * x153;
	const FLT x155 = x154 + (-1 * x58 * x150);
	const FLT x156 = 2 * x47;
	const FLT x157 = 1.0/2.0 * x97;
	const FLT x158 = (-1 * x157 * (x146 + (x149 * x156))) + (x72 * x149);
	const FLT x159 = x95 * x158;
	const FLT x160 = x75 * x159;
	const FLT x161 = (x73 * ((-1 * x74 * x159) + x160)) + (x76 * x159);
	const FLT x162 = (x77 * x159) + (x73 * x161);
	const FLT x163 = x154 + (-1 * x121 * (x150 + (x93 * x155) + (x119 * x162) + (-1 * x118 * ((-1 * x87 * ((x78 * x159) + (x73 * x162) + (x73 * (x162 + (x73 * ((x73 * ((x109 * x158) + x160 + (-1 * x107 * x159))) + x161 + (x81 * x159))) + (x82 * x159))) + (x103 * x158))) + (-1 * x102 * x155))) + (x130 * x159)));
	const FLT x164 = (-1 * x4) + (-1 * x28) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * sensor_pt[2]) + (-1 * x2);
	const FLT x165 = 2 * (*lh_p).Rot[3];
	const FLT x166 = 2 * (*lh_p).Rot[2];
	const FLT x167 = (x35 * x166) + (-1 * x165 * x164);
	const FLT x168 = 2 * (*lh_p).Rot[1];
	const FLT x169 = 2 * x49;
	const FLT x170 = x149 + (x168 * x164) + x169;
	const FLT x171 = (x170 * x136) + (x94 * x167);
	const FLT x172 = 2 * x30;
	const FLT x173 = (-4 * x36) + (-1 * x172) + x144;
	const FLT x174 = (x65 * x173) + (-1 * x171 * x147);
	const FLT x175 = ((-1 * x170 * x152) + (x167 * x151)) * x153;
	const FLT x176 = x175 + (-1 * x58 * x174);
	const FLT x177 = (-1 * x157 * (x171 + (x173 * x156))) + (x72 * x173);
	const FLT x178 = x105 * x177;
	const FLT x179 = x95 * x177;
	const FLT x180 = (x73 * ((-1 * x74 * x179) + x178)) + (x111 * x177);
	const FLT x181 = (x115 * x177) + (x73 * x180);
	const FLT x182 = x175 + (-1 * x121 * (x174 + (x93 * x176) + (x119 * x181) + (-1 * x118 * ((-1 * x87 * ((x73 * x181) + (x103 * x177) + (x117 * x177) + (x73 * (x181 + (x73 * (x180 + (x73 * (x178 + (x109 * x177) + (-1 * x107 * x179))) + (x110 * x177))) + (x114 * x177))))) + (-1 * x102 * x176))) + (x179 * x130)));
	const FLT x183 = (-1 * x39) + (-1 * (*_x0).Pose.Pos[0]) + (-1 * x38) + (-1 * x37) + (-1 * sensor_pt[0]);
	const FLT x184 = x145 + x172 + (x166 * x183);
	const FLT x185 = 2 * x44;
	const FLT x186 = (-1 * x185) + (-4 * x43) + x142;
	const FLT x187 = (x186 * x136) + (x94 * x184);
	const FLT x188 = (x29 * x165) + (-1 * x168 * x183);
	const FLT x189 = (x65 * x188) + (-1 * x187 * x147);
	const FLT x190 = ((-1 * x186 * x152) + (x184 * x151)) * x153;
	const FLT x191 = x190 + (-1 * x58 * x189);
	const FLT x192 = (-1 * x157 * (x187 + (x188 * x156))) + (x72 * x188);
	const FLT x193 = x105 * x192;
	const FLT x194 = (x73 * ((-1 * x112 * x192) + x193)) + (x111 * x192);
	const FLT x195 = (x115 * x192) + (x73 * x194);
	const FLT x196 = x95 * x130;
	const FLT x197 = x190 + (-1 * x121 * ((x196 * x192) + (x93 * x191) + (-1 * x118 * ((-1 * x87 * ((x117 * x192) + (x73 * x195) + (x103 * x192) + (x73 * (x195 + (x73 * (x194 + (x73 * ((x109 * x192) + x193 + (-1 * x108 * x192))) + (x110 * x192))) + (x114 * x192))))) + (-1 * x102 * x191))) + x189 + (x119 * x195)));
	const FLT x198 = x148 + (-1 * x169) + (-4 * x50);
	const FLT x199 = (-1 * x34) + (-1 * x32) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x31) + (-1 * sensor_pt[1]);
	const FLT x200 = (x40 * x168) + (-1 * x166 * x199);
	const FLT x201 = (x200 * x136) + (x94 * x198);
	const FLT x202 = x143 + (x165 * x199) + x185;
	const FLT x203 = (x65 * x202) + (-1 * x201 * x147);
	const FLT x204 = ((-1 * x200 * x152) + (x198 * x151)) * x153;
	const FLT x205 = x204 + (-1 * x58 * x203);
	const FLT x206 = (-1 * x157 * (x201 + (x202 * x156))) + (x72 * x202);
	const FLT x207 = x206 * x105;
	const FLT x208 = (x73 * ((-1 * x206 * x112) + x207)) + (x206 * x111);
	const FLT x209 = (x206 * x115) + (x73 * x208);
	const FLT x210 = x204 + (-1 * x121 * (x203 + (x93 * x205) + (x209 * x119) + (-1 * x118 * ((-1 * x87 * ((x206 * x117) + (x73 * (x209 + (x73 * (x208 + (x73 * ((x206 * x109) + x207 + (-1 * x206 * x108))) + (x206 * x110))) + (x206 * x114))) + (x206 * x103) + (x73 * x209))) + (-1 * x205 * x102))) + (x206 * x196)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), x122 + (x123 * x122));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), (-1 * x123 * x131) + (-1 * x131));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x141 + (x123 * x141));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x163 + (x123 * x163));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), x182 + (x123 * x182));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x197 + (x123 * x197));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), x210 + (x210 * x123));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f0193094760>,
// <cnkalman.codegen.WrapMember object at 0x7f0193094520>, <cnkalman.codegen.WrapMember object at 0x7f0193094490>,
// <cnkalman.codegen.WrapMember object at 0x7f01930945e0>, <cnkalman.codegen.WrapMember object at 0x7f0193094580>,
// <cnkalman.codegen.WrapMember object at 0x7f01930944f0>, <cnkalman.codegen.WrapMember object at 0x7f0193094700>]
static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = cos(x0);
	const FLT x2 = 1.0/2.0 * dt * fabs(dt);
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x15 * (*_x0).Pose.Rot[2]);
	const FLT x21 = (x18 * (*_x0).Pose.Rot[2]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x22 = (-1 * x21 * sensor_pt[1]) + (x19 * sensor_pt[2]) + (x20 * sensor_pt[0]);
	const FLT x23 = (-1 * x17 * (*_x0).Pose.Rot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x24 = (x21 * sensor_pt[0]) + (-1 * x23 * sensor_pt[2]) + (x20 * sensor_pt[1]);
	const FLT x25 = sensor_pt[2] + (x2 * (*_x0).Acc[2]) + (2 * ((x24 * x23) + (-1 * x22 * x19))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x26 = (x20 * sensor_pt[2]) + (-1 * x19 * sensor_pt[0]) + (x23 * sensor_pt[1]);
	const FLT x27 = (2 * ((x22 * x21) + (-1 * x23 * x26))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x2 * (*_x0).Acc[1]);
	const FLT x28 = (*_x0).Pose.Pos[0] + sensor_pt[0] + (2 * ((x26 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[0]) + (x2 * (*_x0).Acc[0]);
	const FLT x29 = (-1 * x28 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]) + (x27 * (*lh_p).Rot[1]);
	const FLT x30 = (-1 * x27 * (*lh_p).Rot[3]) + (x25 * (*lh_p).Rot[2]) + (x28 * (*lh_p).Rot[0]);
	const FLT x31 = x27 + (*lh_p).Pos[1] + (2 * ((x30 * (*lh_p).Rot[3]) + (-1 * x29 * (*lh_p).Rot[1])));
	const FLT x32 = x31 * x31;
	const FLT x33 = (-1 * x25 * (*lh_p).Rot[1]) + (x27 * (*lh_p).Rot[0]) + (x28 * (*lh_p).Rot[3]);
	const FLT x34 = x25 + (2 * ((x33 * (*lh_p).Rot[1]) + (-1 * x30 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x35 = x28 + (2 * ((x29 * (*lh_p).Rot[2]) + (-1 * x33 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x36 = (x35 * x35) + (x34 * x34);
	const FLT x37 = x36 + x32;
	const FLT x38 = x31 * (1. / sqrt(x37));
	const FLT x39 = asin((1. / x1) * x38);
	const FLT x40 = 8.0108022e-06 * x39;
	const FLT x41 = -8.0108022e-06 + (-1 * x40);
	const FLT x42 = 0.0028679863 + (x41 * x39);
	const FLT x43 = 5.3685255e-06 + (x42 * x39);
	const FLT x44 = 0.0076069798 + (x43 * x39);
	const FLT x45 = x39 * x39;
	const FLT x46 = x44 * x39;
	const FLT x47 = -8.0108022e-06 + (-1.60216044e-05 * x39);
	const FLT x48 = x42 + (x47 * x39);
	const FLT x49 = x43 + (x48 * x39);
	const FLT x50 = x44 + (x49 * x39);
	const FLT x51 = (x50 * x39) + x46;
	const FLT x52 = atan2(-1 * x34, x35);
	const FLT x53 = tan(x0);
	const FLT x54 = x31 * (1. / sqrt(x36));
	const FLT x55 = x54 * x53;
	const FLT x56 = (-1 * asin(x55)) + x52 + (*bsc0).ogeephase;
	const FLT x57 = sin(x56);
	const FLT x58 = (x57 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x59 = sin(x0);
	const FLT x60 = x58 * x59;
	const FLT x61 = x60 * x51;
	const FLT x62 = x1 + (-1 * x61);
	const FLT x63 = 1. / x62;
	const FLT x64 = x63 * x45;
	const FLT x65 = x64 * x44;
	const FLT x66 = (1. / (x62 * x62)) * x44 * x45;
	const FLT x67 = x61 * x66;
	const FLT x68 = x55 + (x65 * x58);
	const FLT x69 = 1. / sqrt(1 + (-1 * (x68 * x68)));
	const FLT x70 = (x67 + x65) * x69;
	const FLT x71 = (-1 * asin(x68)) + (*bsc0).gibpha + x52;
	const FLT x72 = cos(x71) * (*bsc0).gibmag;
	const FLT x73 = ((x67 * x57) + (x65 * x57)) * x69;
	const FLT x74 = cos(x56) * (*bsc0).ogeemag;
	const FLT x75 = x74 * x65;
	const FLT x76 = x69 * ((x74 * x67) + x75);
	const FLT x77 = x53 * x53;
	const FLT x78 = x54 * (1 + x77);
	const FLT x79 = x78 * (1. / sqrt(1 + (-1 * x77 * x32 * (1. / x36))));
	const FLT x80 = 1. / (x1 * x1);
	const FLT x81 = x80 * x38 * (1. / sqrt(1 + (-1 * x80 * x32 * (1. / x37))));
	const FLT x82 = x81 * x59;
	const FLT x83 = x82 * x41;
	const FLT x84 = (x39 * ((-1 * x82 * x40) + x83)) + (x82 * x42);
	const FLT x85 = (x82 * x43) + (x84 * x39);
	const FLT x86 = x69 * ((-1 * x66 * x58 * ((x79 * x74 * x51 * x59) + (-1 * x1 * x51 * x58) + (-1 * x60 * ((x82 * x44) + (x85 * x39) + (x39 * (x85 + (x39 * (x84 + (x39 * (x83 + (x82 * x47) + (-2.40324066e-05 * x82 * x39))) + (x82 * x48))) + (x82 * x49))) + (x82 * x50))) + (-1 * x59))) + (x85 * x64 * x58) + x78 + (2 * x81 * x60 * x63 * x46) + (-1 * x79 * x75));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), (-1 * x70 * x72) + (-1 * x70));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), sin(x71));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x72);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag)/sizeof(FLT), (-1 * x73 * x72) + (-1 * x73));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase)/sizeof(FLT), (-1 * x72 * x76) + (-1 * x76));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x86 * x72) + (-1 * x86));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f0193094760>, <cnkalman.codegen.WrapMember object at 0x7f0193094520>, <cnkalman.codegen.WrapMember object at
// 0x7f0193094490>, <cnkalman.codegen.WrapMember object at 0x7f01930945e0>, <cnkalman.codegen.WrapMember object at
// 0x7f0193094580>, <cnkalman.codegen.WrapMember object at 0x7f01930944f0>, <cnkalman.codegen.WrapMember object at
// 0x7f0193094700>]

static inline void SurviveKalmanModel_LightMeas_x_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_x_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_x_gen2_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanModel_LightMeas_y_gen2(const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x11 * x10;
	const FLT x15 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x17 = (-1 * x16 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x13 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[2]);
	const FLT x18 = (-1 * x16 * (*_x0).Pose.Rot[1]) + (x14 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x19 = (x14 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]) + (-1 * x13 * (*_x0).Pose.Rot[1]);
	const FLT x20 = (-1 * x19 * sensor_pt[1]) + (x17 * sensor_pt[2]) + (x18 * sensor_pt[0]);
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (x14 * (*_x0).Pose.Rot[1]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x13 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x19 * sensor_pt[0]) + (-1 * x21 * sensor_pt[2]) + (x18 * sensor_pt[1]);
	const FLT x23 = (2 * ((x22 * x21) + (-1 * x20 * x17))) + sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x24 = (-1 * x17 * sensor_pt[0]) + (x18 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x25 = (*_x0).Pose.Pos[0] + (2 * ((x24 * x17) + (-1 * x22 * x19))) + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x26 = (2 * ((x20 * x19) + (-1 * x24 * x21))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x27 = (-1 * x26 * (*lh_p).Rot[3]) + (x23 * (*lh_p).Rot[2]) + (x25 * (*lh_p).Rot[0]);
	const FLT x28 = (-1 * x23 * (*lh_p).Rot[1]) + (x26 * (*lh_p).Rot[0]) + (x25 * (*lh_p).Rot[3]);
	const FLT x29 = x23 + (2 * ((x28 * (*lh_p).Rot[1]) + (-1 * x27 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x30 = (-1 * x25 * (*lh_p).Rot[2]) + (x23 * (*lh_p).Rot[0]) + (x26 * (*lh_p).Rot[1]);
	const FLT x31 = (2 * ((x30 * (*lh_p).Rot[2]) + (-1 * x28 * (*lh_p).Rot[3]))) + x25 + (*lh_p).Pos[0];
	const FLT x32 = atan2(-1 * x29, x31);
	const FLT x33 = (*lh_p).Pos[1] + x26 + (2 * ((x27 * (*lh_p).Rot[3]) + (-1 * x30 * (*lh_p).Rot[1])));
	const FLT x34 = (x31 * x31) + (x29 * x29);
	const FLT x35 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x36 = cos(x35);
	const FLT x37 = asin(x33 * (1. / x36) * (1. / sqrt(x34 + (x33 * x33))));
	const FLT x38 = -1 * (1. / sqrt(x34)) * x33 * tan(x35);
	const FLT x39 = ((*bsc0).ogeemag * sin((-1 * asin(x38)) + (*bsc0).ogeephase + x32)) + (*bsc0).curve;
	const FLT x40 = 0.0028679863 + (x37 * (-8.0108022e-06 + (-8.0108022e-06 * x37)));
	const FLT x41 = 5.3685255e-06 + (x40 * x37);
	const FLT x42 = 0.0076069798 + (x41 * x37);
	const FLT x43 = asin(x38 + (x42 * (x37 * x37) * x39 * (1. / (x36 + (x39 * sin(x35) * ((x37 * (x42 + (x37 * (x41 + (x37 * (x40 + (x37 * (-8.0108022e-06 + (-1.60216044e-05 * x37))))))))) + (x42 * x37)))))));
	return -1.5707963267949 + x32 + (-1 * (*bsc0).phase) + (-1 * x43) + (-1 * sin(x43 + (-1 * (*bsc0).gibpha) + (-1 * x32)) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = 1.0/2.0 * x0;
	const FLT x2 = dt * dt;
	const FLT x3 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x4 = x2 * x3;
	const FLT x5 = (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x6 = x2 * x5;
	const FLT x7 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x8 = x2 * x7;
	const FLT x9 = 1e-10 + x4 + x6 + x8;
	const FLT x10 = sqrt(x9);
	const FLT x11 = 0.5 * x10;
	const FLT x12 = sin(x11);
	const FLT x13 = x12 * x12;
	const FLT x14 = 1. / x9;
	const FLT x15 = x14 * x13;
	const FLT x16 = cos(x11);
	const FLT x17 = (x8 * x15) + (x6 * x15) + (x4 * x15) + (x16 * x16);
	const FLT x18 = 1. / sqrt(x17);
	const FLT x19 = x12 * x18;
	const FLT x20 = 1. / x10;
	const FLT x21 = dt * x20;
	const FLT x22 = x21 * x19;
	const FLT x23 = x22 * (*_x0).Pose.Rot[0];
	const FLT x24 = x18 * x16;
	const FLT x25 = x24 * (*_x0).Pose.Rot[2];
	const FLT x26 = x19 * (*_x0).Pose.Rot[1];
	const FLT x27 = x21 * x26;
	const FLT x28 = x22 * (*_x0).Pose.Rot[3];
	const FLT x29 = (-1 * x28 * (*_x0).Velocity.AxisAngleRot[0]) + (x27 * (*_x0).Velocity.AxisAngleRot[2]) + (x23 * (*_x0).Velocity.AxisAngleRot[1]) + x25;
	const FLT x30 = x22 * (*_x0).Pose.Rot[2];
	const FLT x31 = x24 * (*_x0).Pose.Rot[0];
	const FLT x32 = (-1 * x27 * (*_x0).Velocity.AxisAngleRot[0]) + x31 + (-1 * x28 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x33 = x24 * (*_x0).Pose.Rot[3];
	const FLT x34 = x33 + (x23 * (*_x0).Velocity.AxisAngleRot[2]) + (x30 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x27 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x35 = (-1 * x34 * sensor_pt[1]) + (x29 * sensor_pt[2]) + (x32 * sensor_pt[0]);
	const FLT x36 = x24 * (*_x0).Pose.Rot[1];
	const FLT x37 = (x23 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x30 * (*_x0).Velocity.AxisAngleRot[2]) + x36 + (x28 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x38 = (x34 * sensor_pt[0]) + (-1 * x37 * sensor_pt[2]) + (x32 * sensor_pt[1]);
	const FLT x39 = sensor_pt[2] + (x1 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (2 * ((x38 * x37) + (-1 * x35 * x29))) + (*_x0).Pose.Pos[2];
	const FLT x40 = (-1 * x29 * sensor_pt[0]) + (x32 * sensor_pt[2]) + (x37 * sensor_pt[1]);
	const FLT x41 = (2 * ((x34 * x35) + (-1 * x40 * x37))) + (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (x1 * (*_x0).Acc[1]);
	const FLT x42 = (2 * ((x40 * x29) + (-1 * x34 * x38))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x1 * (*_x0).Acc[0]);
	const FLT x43 = (-1 * x42 * (*lh_p).Rot[2]) + (x39 * (*lh_p).Rot[0]) + (x41 * (*lh_p).Rot[1]);
	const FLT x44 = (x39 * (*lh_p).Rot[2]) + (-1 * x41 * (*lh_p).Rot[3]) + (x42 * (*lh_p).Rot[0]);
	const FLT x45 = x41 + (*lh_p).Pos[1] + (2 * ((x44 * (*lh_p).Rot[3]) + (-1 * x43 * (*lh_p).Rot[1])));
	const FLT x46 = x45 * x45;
	const FLT x47 = (-1 * x39 * (*lh_p).Rot[1]) + (x41 * (*lh_p).Rot[0]) + (x42 * (*lh_p).Rot[3]);
	const FLT x48 = x39 + (2 * ((x47 * (*lh_p).Rot[1]) + (-1 * x44 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x49 = x42 + (2 * ((x43 * (*lh_p).Rot[2]) + (-1 * x47 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x50 = x49 * x49;
	const FLT x51 = x50 + (x48 * x48);
	const FLT x52 = x51 + x46;
	const FLT x53 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x54 = cos(x53);
	const FLT x55 = 1. / x54;
	const FLT x56 = (1. / sqrt(x52)) * x55;
	const FLT x57 = asin(x56 * x45);
	const FLT x58 = 8.0108022e-06 * x57;
	const FLT x59 = -8.0108022e-06 + (-1 * x58);
	const FLT x60 = 0.0028679863 + (x57 * x59);
	const FLT x61 = 5.3685255e-06 + (x60 * x57);
	const FLT x62 = 0.0076069798 + (x61 * x57);
	const FLT x63 = x62 * x57;
	const FLT x64 = -8.0108022e-06 + (-1.60216044e-05 * x57);
	const FLT x65 = x60 + (x64 * x57);
	const FLT x66 = x61 + (x65 * x57);
	const FLT x67 = x62 + (x66 * x57);
	const FLT x68 = (x67 * x57) + x63;
	const FLT x69 = sin(x53);
	const FLT x70 = atan2(-1 * x48, x49);
	const FLT x71 = tan(x53);
	const FLT x72 = x71 * (1. / sqrt(x51));
	const FLT x73 = -1 * x72 * x45;
	const FLT x74 = (-1 * asin(x73)) + (*bsc0).ogeephase + x70;
	const FLT x75 = (sin(x74) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x76 = x75 * x69;
	const FLT x77 = x54 + (x76 * x68);
	const FLT x78 = 1. / x77;
	const FLT x79 = x57 * x57;
	const FLT x80 = x79 * x75;
	const FLT x81 = x80 * x78;
	const FLT x82 = x73 + (x81 * x62);
	const FLT x83 = 1. / sqrt(1 + (-1 * (x82 * x82)));
	const FLT x84 = 1. / x51;
	const FLT x85 = 1. / sqrt(1 + (-1 * x84 * (x71 * x71) * x46));
	const FLT x86 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x87 = -1 * x0 * x86;
	const FLT x88 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x89 = x1 + (-1 * x0 * x88);
	const FLT x90 = x89 + x87;
	const FLT x91 = 2 * x49;
	const FLT x92 = x0 * (*lh_p).Rot[2] * (*lh_p).Rot[0];
	const FLT x93 = x0 * (*lh_p).Rot[3];
	const FLT x94 = x93 * (*lh_p).Rot[1];
	const FLT x95 = x94 + (-1 * x92);
	const FLT x96 = 2 * x48;
	const FLT x97 = (x96 * x95) + (x91 * x90);
	const FLT x98 = 1.0/2.0 * x45;
	const FLT x99 = x71 * (1. / (x51 * sqrt(x51))) * x98;
	const FLT x100 = x0 * (*lh_p).Rot[1];
	const FLT x101 = x100 * (*lh_p).Rot[2];
	const FLT x102 = x93 * (*lh_p).Rot[0];
	const FLT x103 = x102 + x101;
	const FLT x104 = (-1 * x72 * x103) + (x99 * x97);
	const FLT x105 = (1. / x50) * x48;
	const FLT x106 = 1. / x49;
	const FLT x107 = x84 * x50;
	const FLT x108 = ((-1 * x95 * x106) + (x90 * x105)) * x107;
	const FLT x109 = x108 + (-1 * x85 * x104);
	const FLT x110 = cos(x74) * (*bsc0).ogeemag;
	const FLT x111 = x68 * x69;
	const FLT x112 = x110 * x111;
	const FLT x113 = 1. / sqrt(1 + (-1 * (1. / (x54 * x54)) * (1. / x52) * x46));
	const FLT x114 = 2 * x45;
	const FLT x115 = (1. / (x52 * sqrt(x52))) * x55 * x98;
	const FLT x116 = (-1 * x115 * (x97 + (x103 * x114))) + (x56 * x103);
	const FLT x117 = x113 * x116;
	const FLT x118 = x59 * x117;
	const FLT x119 = 2.40324066e-05 * x57;
	const FLT x120 = x64 * x113;
	const FLT x121 = x60 * x113;
	const FLT x122 = (x57 * ((-1 * x58 * x117) + x118)) + (x116 * x121);
	const FLT x123 = x66 * x113;
	const FLT x124 = (x57 * x122) + (x61 * x117);
	const FLT x125 = x67 * x113;
	const FLT x126 = x62 * x113;
	const FLT x127 = x80 * (1. / (x77 * x77)) * x62;
	const FLT x128 = 2 * x78 * x75 * x63;
	const FLT x129 = x79 * x78 * x62;
	const FLT x130 = x110 * x129;
	const FLT x131 = x83 * ((x109 * x130) + (-1 * x127 * ((x76 * ((x116 * x126) + (x57 * (x124 + (x57 * (x122 + (x57 * ((x116 * x120) + x118 + (-1 * x119 * x117))) + (x65 * x117))) + (x116 * x123))) + (x57 * x124) + (x116 * x125))) + (x109 * x112))) + x104 + (x117 * x128) + (x81 * x124));
	const FLT x132 = cos((-1 * asin(x82)) + (*bsc0).gibpha + x70) * (*bsc0).gibmag;
	const FLT x133 = x101 + (-1 * x102);
	const FLT x134 = x93 * (*lh_p).Rot[2];
	const FLT x135 = x100 * (*lh_p).Rot[0];
	const FLT x136 = x135 + x134;
	const FLT x137 = (x96 * x136) + (x91 * x133);
	const FLT x138 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x139 = -1 * x0 * x138;
	const FLT x140 = x89 + x139;
	const FLT x141 = (-1 * x72 * x140) + (x99 * x137);
	const FLT x142 = ((-1 * x106 * x136) + (x105 * x133)) * x107;
	const FLT x143 = x142 + (-1 * x85 * x141);
	const FLT x144 = x113 * ((-1 * x115 * (x137 + (x114 * x140))) + (x56 * x140));
	const FLT x145 = x59 * x144;
	const FLT x146 = (x57 * ((-1 * x58 * x144) + x145)) + (x60 * x144);
	const FLT x147 = (x57 * x146) + (x61 * x144);
	const FLT x148 = x83 * ((-1 * x127 * ((x76 * ((x62 * x144) + (x57 * (x147 + (x57 * (x146 + (x57 * ((x64 * x144) + x145 + (-1 * x119 * x144))) + (x65 * x144))) + (x66 * x144))) + (x57 * x147) + (x67 * x144))) + (x112 * x143))) + x141 + (x130 * x143) + (x81 * x147) + (x128 * x144));
	const FLT x149 = x134 + (-1 * x135);
	const FLT x150 = x92 + x94;
	const FLT x151 = x87 + x1 + x139;
	const FLT x152 = (x96 * x151) + (x91 * x150);
	const FLT x153 = (-1 * x115 * (x152 + (x114 * x149))) + (x56 * x149);
	const FLT x154 = x61 * x113;
	const FLT x155 = x59 * x113;
	const FLT x156 = x153 * x155;
	const FLT x157 = x58 * x113;
	const FLT x158 = (x57 * ((-1 * x153 * x157) + x156)) + (x121 * x153);
	const FLT x159 = (x57 * x158) + (x153 * x154);
	const FLT x160 = x113 * x128;
	const FLT x161 = (-1 * x72 * x149) + (x99 * x152);
	const FLT x162 = ((-1 * x106 * x151) + (x105 * x150)) * x107;
	const FLT x163 = x110 * (x162 + (-1 * x85 * x161));
	const FLT x164 = x113 * x119;
	const FLT x165 = x65 * x113;
	const FLT x166 = x83 * ((x129 * x163) + (-1 * x127 * ((x76 * ((x126 * x153) + (x57 * x159) + (x57 * (x159 + (x57 * (x158 + (x57 * (x156 + (x120 * x153) + (-1 * x164 * x153))) + (x165 * x153))) + (x123 * x153))) + (x125 * x153))) + (x111 * x163))) + x161 + (x81 * x159) + (x160 * x153));
	const FLT x167 = 2 * x86;
	const FLT x168 = -1 * x167;
	const FLT x169 = 2 * x88;
	const FLT x170 = 1 + (-1 * x169);
	const FLT x171 = x170 + x168;
	const FLT x172 = 2 * (*lh_p).Rot[2];
	const FLT x173 = x172 * (*lh_p).Rot[0];
	const FLT x174 = 2 * (*lh_p).Rot[1];
	const FLT x175 = x174 * (*lh_p).Rot[3];
	const FLT x176 = x175 + (-1 * x173);
	const FLT x177 = (x96 * x176) + (x91 * x171);
	const FLT x178 = x172 * (*lh_p).Rot[1];
	const FLT x179 = 2 * (*lh_p).Rot[3];
	const FLT x180 = x179 * (*lh_p).Rot[0];
	const FLT x181 = x180 + x178;
	const FLT x182 = (-1 * x72 * x181) + (x99 * x177);
	const FLT x183 = ((-1 * x106 * x176) + (x105 * x171)) * x107;
	const FLT x184 = x183 + (-1 * x85 * x182);
	const FLT x185 = (-1 * x115 * (x177 + (x114 * x181))) + (x56 * x181);
	const FLT x186 = x113 * x185;
	const FLT x187 = x59 * x186;
	const FLT x188 = (x57 * ((-1 * x58 * x186) + x187)) + (x121 * x185);
	const FLT x189 = (x57 * x188) + (x61 * x186);
	const FLT x190 = x83 * (x182 + (x184 * x130) + (x81 * x189) + (-1 * x127 * ((x76 * ((x126 * x185) + (x57 * x189) + (x57 * (x189 + (x57 * (x188 + (x57 * (x187 + (x120 * x185) + (-1 * x119 * x186))) + (x65 * x186))) + (x123 * x185))) + (x67 * x186))) + (x112 * x184))) + (x128 * x186));
	const FLT x191 = x178 + (-1 * x180);
	const FLT x192 = x172 * (*lh_p).Rot[3];
	const FLT x193 = x174 * (*lh_p).Rot[0];
	const FLT x194 = x193 + x192;
	const FLT x195 = (x96 * x194) + (x91 * x191);
	const FLT x196 = 2 * x138;
	const FLT x197 = -1 * x196;
	const FLT x198 = x170 + x197;
	const FLT x199 = (-1 * x72 * x198) + (x99 * x195);
	const FLT x200 = ((-1 * x106 * x194) + (x105 * x191)) * x107;
	const FLT x201 = x200 + (-1 * x85 * x199);
	const FLT x202 = (-1 * x115 * (x195 + (x114 * x198))) + (x56 * x198);
	const FLT x203 = x202 * x155;
	const FLT x204 = (x57 * ((-1 * x202 * x157) + x203)) + (x202 * x121);
	const FLT x205 = (x57 * x204) + (x202 * x154);
	const FLT x206 = x83 * (x199 + (x201 * x130) + (x81 * x205) + (-1 * x127 * ((x76 * ((x57 * x205) + (x57 * (x205 + (x57 * (x204 + (x57 * ((x202 * x120) + x203 + (-1 * x202 * x164))) + (x202 * x165))) + (x202 * x123))) + (x202 * x126) + (x202 * x125))) + (x201 * x112))) + (x202 * x160));
	const FLT x207 = x192 + (-1 * x193);
	const FLT x208 = x173 + x175;
	const FLT x209 = 1 + x197 + x168;
	const FLT x210 = (x96 * x209) + (x91 * x208);
	const FLT x211 = (-1 * x115 * (x210 + (x207 * x114))) + (x56 * x207);
	const FLT x212 = x211 * x155;
	const FLT x213 = (x57 * ((-1 * x211 * x157) + x212)) + (x211 * x121);
	const FLT x214 = (x57 * x213) + (x211 * x154);
	const FLT x215 = (-1 * x72 * x207) + (x99 * x210);
	const FLT x216 = ((-1 * x209 * x106) + (x208 * x105)) * x107;
	const FLT x217 = x216 + (-1 * x85 * x215);
	const FLT x218 = x83 * ((x211 * x160) + x215 + (x81 * x214) + (x217 * x130) + (-1 * x127 * ((x76 * ((x211 * x126) + (x57 * x214) + (x57 * (x214 + (x57 * ((x57 * ((x211 * x120) + x212 + (-1 * x211 * x164))) + x213 + (x211 * x165))) + (x211 * x123))) + (x211 * x125))) + (x217 * x112))));
	const FLT x219 = x22 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x220 = -1 * x219 * sensor_pt[2];
	const FLT x221 = x22 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x222 = x221 * sensor_pt[0];
	const FLT x223 = x24 * sensor_pt[1];
	const FLT x224 = x223 + x220 + x222;
	const FLT x225 = 2 * x34;
	const FLT x226 = 2 * x38;
	const FLT x227 = -1 * x221 * x226;
	const FLT x228 = x22 * sensor_pt[1];
	const FLT x229 = x228 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x230 = x22 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x231 = -1 * x230 * sensor_pt[0];
	const FLT x232 = x24 * sensor_pt[2];
	const FLT x233 = x232 + x231;
	const FLT x234 = x233 + x229;
	const FLT x235 = 2 * x29;
	const FLT x236 = 2 * x40;
	const FLT x237 = x230 * x236;
	const FLT x238 = (x234 * x235) + x237 + (-1 * x224 * x225) + x227;
	const FLT x239 = x230 * sensor_pt[2];
	const FLT x240 = -1 * x228 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x241 = x24 * sensor_pt[0];
	const FLT x242 = x241 + x240;
	const FLT x243 = x242 + x239;
	const FLT x244 = x219 * x226;
	const FLT x245 = 2 * x35;
	const FLT x246 = -1 * x230 * x245;
	const FLT x247 = 2 * x37;
	const FLT x248 = (x224 * x247) + x246 + (-1 * x235 * x243) + x244;
	const FLT x249 = x221 * x245;
	const FLT x250 = -1 * x219 * x236;
	const FLT x251 = x250 + x249 + (-1 * x234 * x247) + (x225 * x243);
	const FLT x252 = (x251 * (*lh_p).Rot[1]) + (-1 * x238 * (*lh_p).Rot[2]) + (x248 * (*lh_p).Rot[0]);
	const FLT x253 = (x238 * (*lh_p).Rot[0]) + (-1 * x251 * (*lh_p).Rot[3]) + (x248 * (*lh_p).Rot[2]);
	const FLT x254 = x251 + (-1 * x252 * x174) + (x253 * x179);
	const FLT x255 = (x238 * (*lh_p).Rot[3]) + (-1 * x248 * (*lh_p).Rot[1]) + (x251 * (*lh_p).Rot[0]);
	const FLT x256 = x238 + (-1 * x255 * x179) + (x252 * x172);
	const FLT x257 = x248 + (-1 * x253 * x172) + (x255 * x174);
	const FLT x258 = (x96 * x257) + (x91 * x256);
	const FLT x259 = (-1 * x115 * (x258 + (x254 * x114))) + (x56 * x254);
	const FLT x260 = x259 * x113;
	const FLT x261 = x59 * x260;
	const FLT x262 = (x57 * ((-1 * x58 * x260) + x261)) + (x259 * x121);
	const FLT x263 = (x57 * x262) + (x61 * x260);
	const FLT x264 = (-1 * x72 * x254) + (x99 * x258);
	const FLT x265 = ((-1 * x257 * x106) + (x256 * x105)) * x107;
	const FLT x266 = x265 + (-1 * x85 * x264);
	const FLT x267 = x83 * (x264 + (x266 * x130) + (-1 * x127 * ((x76 * ((x259 * x126) + (x57 * x263) + (x57 * (x263 + (x57 * (x262 + (x57 * ((x259 * x120) + x261 + (-1 * x260 * x119))) + (x259 * x165))) + (x259 * x123))) + (x259 * x125))) + (x266 * x112))) + (x260 * x128) + (x81 * x263));
	const FLT x268 = x230 * sensor_pt[1];
	const FLT x269 = x221 * sensor_pt[2];
	const FLT x270 = x219 * sensor_pt[0];
	const FLT x271 = (-1 * x270) + x268 + x269;
	const FLT x272 = -1 * x229;
	const FLT x273 = x272 + (-1 * x232) + x231;
	const FLT x274 = x24 * x226;
	const FLT x275 = (-1 * x249) + (-1 * x235 * x271) + x274 + (x273 * x247);
	const FLT x276 = (-1 * x222) + x220;
	const FLT x277 = x276 + x223;
	const FLT x278 = x24 * x236;
	const FLT x279 = x246 + (-1 * x277 * x247) + (-1 * x278) + (x271 * x225);
	const FLT x280 = x236 * x221;
	const FLT x281 = x230 * x226;
	const FLT x282 = (x235 * x277) + x280 + x281 + (-1 * x273 * x225);
	const FLT x283 = (x282 * (*lh_p).Rot[3]) + (-1 * x275 * (*lh_p).Rot[1]) + (x279 * (*lh_p).Rot[0]);
	const FLT x284 = (x279 * (*lh_p).Rot[1]) + (-1 * x282 * (*lh_p).Rot[2]) + (x275 * (*lh_p).Rot[0]);
	const FLT x285 = x282 + (-1 * x283 * x179) + (x284 * x172);
	const FLT x286 = (x282 * (*lh_p).Rot[0]) + (-1 * x279 * (*lh_p).Rot[3]) + (x275 * (*lh_p).Rot[2]);
	const FLT x287 = x275 + (-1 * x286 * x172) + (x283 * x174);
	const FLT x288 = (x96 * x287) + (x91 * x285);
	const FLT x289 = x279 + (-1 * x284 * x174) + (x286 * x179);
	const FLT x290 = (-1 * x72 * x289) + (x99 * x288);
	const FLT x291 = ((-1 * x287 * x106) + (x285 * x105)) * x107;
	const FLT x292 = x291 + (-1 * x85 * x290);
	const FLT x293 = (-1 * x115 * (x288 + (x289 * x114))) + (x56 * x289);
	const FLT x294 = x293 * x155;
	const FLT x295 = (x57 * ((-1 * x293 * x157) + x294)) + (x293 * x121);
	const FLT x296 = (x57 * x295) + (x293 * x154);
	const FLT x297 = x83 * ((x292 * x130) + (x81 * x296) + x290 + (-1 * x127 * ((x76 * ((x293 * x126) + (x57 * x296) + (x57 * (x296 + (x57 * ((x57 * ((x293 * x120) + x294 + (-1 * x293 * x164))) + x295 + (x293 * x165))) + (x293 * x123))) + (x293 * x125))) + (x292 * x112))) + (x293 * x160));
	const FLT x298 = -1 * x239;
	const FLT x299 = (-1 * x241) + x240 + x298;
	const FLT x300 = x233 + x272;
	const FLT x301 = x219 * x245;
	const FLT x302 = x301 + (x225 * x300) + (-1 * x299 * x247) + x280;
	const FLT x303 = x24 * x245;
	const FLT x304 = (-1 * x268) + x269 + x270;
	const FLT x305 = (x247 * x304) + (-1 * x235 * x300) + x227 + (-1 * x303);
	const FLT x306 = (x235 * x299) + x278 + (-1 * x244) + (-1 * x225 * x304);
	const FLT x307 = (x306 * (*lh_p).Rot[3]) + (x302 * (*lh_p).Rot[0]) + (-1 * x305 * (*lh_p).Rot[1]);
	const FLT x308 = (x302 * (*lh_p).Rot[1]) + (x305 * (*lh_p).Rot[0]) + (-1 * x306 * (*lh_p).Rot[2]);
	const FLT x309 = x306 + (-1 * x307 * x179) + (x308 * x172);
	const FLT x310 = (x306 * (*lh_p).Rot[0]) + (-1 * x302 * (*lh_p).Rot[3]) + (x305 * (*lh_p).Rot[2]);
	const FLT x311 = x305 + (-1 * x310 * x172) + (x307 * x174);
	const FLT x312 = (x96 * x311) + (x91 * x309);
	const FLT x313 = x302 + (-1 * x308 * x174) + (x310 * x179);
	const FLT x314 = (-1 * x72 * x313) + (x99 * x312);
	const FLT x315 = ((-1 * x311 * x106) + (x309 * x105)) * x107;
	const FLT x316 = x315 + (-1 * x85 * x314);
	const FLT x317 = (-1 * x115 * (x312 + (x313 * x114))) + (x56 * x313);
	const FLT x318 = x317 * x155;
	const FLT x319 = (x57 * ((-1 * x317 * x157) + x318)) + (x317 * x121);
	const FLT x320 = (x57 * x319) + (x317 * x154);
	const FLT x321 = x83 * ((x316 * x130) + (x81 * x320) + x314 + (-1 * x127 * ((x76 * ((x57 * x320) + (x57 * (x320 + (x57 * (x319 + (x57 * ((x317 * x120) + x318 + (-1 * x317 * x164))) + (x317 * x165))) + (x317 * x123))) + (x317 * x126) + (x317 * x125))) + (x316 * x112))) + (x317 * x160));
	const FLT x322 = 2 * (x268 + x270 + (-1 * x269));
	const FLT x323 = x276 + (-1 * x223);
	const FLT x324 = (-1 * x237) + x303 + (-1 * x37 * x322) + (x225 * x323);
	const FLT x325 = x242 + x298;
	const FLT x326 = (x247 * x325) + x281 + (-1 * x235 * x323) + x301;
	const FLT x327 = x250 + (-1 * x274) + (x29 * x322) + (-1 * x225 * x325);
	const FLT x328 = (x327 * (*lh_p).Rot[0]) + (-1 * x324 * (*lh_p).Rot[3]) + (x326 * (*lh_p).Rot[2]);
	const FLT x329 = (x324 * (*lh_p).Rot[1]) + (-1 * x327 * (*lh_p).Rot[2]) + (x326 * (*lh_p).Rot[0]);
	const FLT x330 = x324 + (x328 * x179) + (-1 * x329 * x174);
	const FLT x331 = (x327 * (*lh_p).Rot[3]) + (-1 * x326 * (*lh_p).Rot[1]) + (x324 * (*lh_p).Rot[0]);
	const FLT x332 = x327 + (-1 * x331 * x179) + (x329 * x172);
	const FLT x333 = x326 + (-1 * x328 * x172) + (x331 * x174);
	const FLT x334 = (x96 * x333) + (x91 * x332);
	const FLT x335 = (-1 * x115 * (x334 + (x330 * x114))) + (x56 * x330);
	const FLT x336 = x335 * x155;
	const FLT x337 = (x57 * ((-1 * x335 * x157) + x336)) + (x335 * x121);
	const FLT x338 = (x57 * x337) + (x335 * x154);
	const FLT x339 = (-1 * x72 * x330) + (x99 * x334);
	const FLT x340 = ((-1 * x333 * x106) + (x332 * x105)) * x107;
	const FLT x341 = x340 + (-1 * x85 * x339);
	const FLT x342 = x83 * (x339 + (-1 * x127 * ((x76 * ((x57 * x338) + (x335 * x126) + (x57 * (x338 + (x57 * (x337 + (x57 * (x336 + (x335 * x120) + (-1 * x335 * x164))) + (x335 * x165))) + (x335 * x123))) + (x335 * x125))) + (x341 * x112))) + (x341 * x130) + (x335 * x160) + (x81 * x338));
	const FLT x343 = x19 * (*_x0).Pose.Rot[2];
	const FLT x344 = 0.5 * x20;
	const FLT x345 = x2 * x344;
	const FLT x346 = x345 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x347 = -1 * x28;
	const FLT x348 = dt * dt * dt;
	const FLT x349 = 0.5 * x14 * x348;
	const FLT x350 = x33 * x349;
	const FLT x351 = 1.0/2.0 * (1. / (x17 * sqrt(x17)));
	const FLT x352 = x21 * x12 * x351;
	const FLT x353 = x352 * (*_x0).Pose.Rot[3];
	const FLT x354 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x355 = dt * dt * dt * dt;
	const FLT x356 = 2 * (1. / (x9 * x9)) * x13;
	const FLT x357 = x356 * x355;
	const FLT x358 = 1. / (x9 * sqrt(x9));
	const FLT x359 = 1.0 * x12 * x16;
	const FLT x360 = x359 * x358;
	const FLT x361 = x360 * x355;
	const FLT x362 = x3 * x361;
	const FLT x363 = x3 * x357;
	const FLT x364 = x20 * x359;
	const FLT x365 = x2 * x364;
	const FLT x366 = 2 * x15;
	const FLT x367 = x2 * x366;
	const FLT x368 = x5 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x369 = (-1 * x368 * x357) + (x361 * x368) + (x367 * (*_x0).Velocity.AxisAngleRot[0]) + (x362 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x354 * x357) + (-1 * x363 * (*_x0).Velocity.AxisAngleRot[0]) + (x361 * x354) + (-1 * x365 * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x370 = x369 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x371 = x16 * x351;
	const FLT x372 = x371 * x369;
	const FLT x373 = x352 * (*_x0).Pose.Rot[0];
	const FLT x374 = x369 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x375 = x358 * x348;
	const FLT x376 = x375 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x377 = x376 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x378 = x26 * x377;
	const FLT x379 = (*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x380 = x379 * x349;
	const FLT x381 = x36 * x380;
	const FLT x382 = x352 * (*_x0).Pose.Rot[1];
	const FLT x383 = x369 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x384 = x19 * (*_x0).Pose.Rot[3];
	const FLT x385 = x7 * x375;
	const FLT x386 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x387 = x31 * x349;
	const FLT x388 = x19 * (*_x0).Pose.Rot[0];
	const FLT x389 = x388 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x390 = x375 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x391 = (-1 * x390 * x389) + (x387 * x386);
	const FLT x392 = x381 + (-1 * x378) + (-1 * x374 * x373) + x391 + (x384 * x385) + x347 + (-1 * x383 * x382) + (-1 * x346 * x343) + (-1 * x7 * x350) + (x370 * x353) + (-1 * x372 * (*_x0).Pose.Rot[2]);
	const FLT x393 = x350 * x386;
	const FLT x394 = x390 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x395 = x394 * x384;
	const FLT x396 = x25 * x380;
	const FLT x397 = x377 * x343;
	const FLT x398 = x352 * (*_x0).Pose.Rot[2];
	const FLT x399 = x7 * x349;
	const FLT x400 = x19 * x385;
	const FLT x401 = (-1 * x373 * x370) + x23 + (-1 * x26 * x346) + x393 + (x31 * x399) + (-1 * x372 * (*_x0).Pose.Rot[1]) + (-1 * x395) + x397 + (x398 * x383) + (-1 * x396) + (-1 * x400 * (*_x0).Pose.Rot[0]) + (-1 * x374 * x353);
	const FLT x402 = (x31 * x380) + (-1 * x376 * x389);
	const FLT x403 = x36 * x349;
	const FLT x404 = (-1 * x403 * x386) + (x26 * x394);
	const FLT x405 = (-1 * x398 * x370) + (-1 * x384 * x346) + x404 + x30 + (-1 * x373 * x383) + (-1 * x372 * (*_x0).Pose.Rot[3]) + (x25 * x399) + (-1 * x400 * (*_x0).Pose.Rot[2]) + x402 + (x374 * x382);
	const FLT x406 = x25 * x349;
	const FLT x407 = x406 * x386;
	const FLT x408 = x343 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x409 = x408 * x375 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x410 = -1 * x27;
	const FLT x411 = (-1 * x379 * x350) + (x377 * x384);
	const FLT x412 = (x26 * x385) + x410 + (-1 * x389 * x345) + (x382 * x370) + x411 + (-1 * x36 * x399) + (-1 * x372 * (*_x0).Pose.Rot[0]) + (-1 * x407) + x409 + (x374 * x398) + (x383 * x353);
	const FLT x413 = (x412 * sensor_pt[1]) + (-1 * x401 * sensor_pt[2]) + (x405 * sensor_pt[0]);
	const FLT x414 = (x401 * sensor_pt[1]) + (-1 * x392 * sensor_pt[0]) + (x412 * sensor_pt[2]);
	const FLT x415 = (x414 * x235) + (-1 * x405 * x226) + (x236 * x392) + (-1 * x413 * x225);
	const FLT x416 = (x412 * sensor_pt[0]) + (-1 * x405 * sensor_pt[1]) + (x392 * sensor_pt[2]);
	const FLT x417 = (-1 * x416 * x235) + (x401 * x226) + (x413 * x247) + (-1 * x245 * x392);
	const FLT x418 = (-1 * x401 * x236) + (x416 * x225) + (-1 * x414 * x247) + (x405 * x245);
	const FLT x419 = (-1 * x415 * (*lh_p).Rot[2]) + (x418 * (*lh_p).Rot[1]) + (x417 * (*lh_p).Rot[0]);
	const FLT x420 = (x415 * (*lh_p).Rot[0]) + (x417 * (*lh_p).Rot[2]) + (-1 * x418 * (*lh_p).Rot[3]);
	const FLT x421 = x418 + (-1 * x419 * x174) + (x420 * x179);
	const FLT x422 = (-1 * x417 * (*lh_p).Rot[1]) + (x415 * (*lh_p).Rot[3]) + (x418 * (*lh_p).Rot[0]);
	const FLT x423 = x415 + (-1 * x422 * x179) + (x419 * x172);
	const FLT x424 = x417 + (-1 * x420 * x172) + (x422 * x174);
	const FLT x425 = (x96 * x424) + (x91 * x423);
	const FLT x426 = x113 * ((-1 * x115 * (x425 + (x421 * x114))) + (x56 * x421));
	const FLT x427 = x59 * x426;
	const FLT x428 = (x57 * ((-1 * x58 * x426) + x427)) + (x60 * x426);
	const FLT x429 = (x57 * x428) + (x61 * x426);
	const FLT x430 = (-1 * x72 * x421) + (x99 * x425);
	const FLT x431 = ((-1 * x424 * x106) + (x423 * x105)) * x107;
	const FLT x432 = x431 + (-1 * x85 * x430);
	const FLT x433 = x83 * (x430 + (x432 * x130) + (x426 * x128) + (x81 * x429) + (-1 * x127 * ((x76 * ((x57 * x429) + (x62 * x426) + (x57 * (x429 + (x57 * (x428 + (x57 * ((x64 * x426) + (-1 * x426 * x119) + x427)) + (x65 * x426))) + (x66 * x426))) + (x67 * x426))) + (x432 * x112))));
	const FLT x434 = x357 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x435 = x361 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x436 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x437 = (x436 * x361) + (-1 * x5 * x434) + (-1 * x365 * (*_x0).Velocity.AxisAngleRot[1]) + (x5 * x435) + (-1 * x7 * x434) + (-1 * x436 * x357) + (x7 * x435) + (x367 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x438 = x437 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x439 = x3 * x375;
	const FLT x440 = x437 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x441 = x437 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x442 = x3 * x349;
	const FLT x443 = x437 * x371;
	const FLT x444 = x345 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x445 = x376 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x446 = (*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x447 = (-1 * x406 * x446) + (x445 * x343);
	const FLT x448 = x447 + x391 + (-1 * x443 * (*_x0).Pose.Rot[1]) + (-1 * x26 * x444) + (x33 * x442) + x28 + (-1 * x438 * x373) + (-1 * x439 * x384) + (x440 * x398) + (-1 * x441 * x353);
	const FLT x449 = (x446 * x387) + (-1 * x445 * x388);
	const FLT x450 = (-1 * x444 * x384) + (-1 * x409) + (-1 * x36 * x442) + (-1 * x438 * x398) + x407 + (x26 * x439) + (-1 * x443 * (*_x0).Pose.Rot[3]) + x449 + x410 + (-1 * x440 * x373) + (x441 * x382);
	const FLT x451 = -1 * x30;
	const FLT x452 = x446 * x350;
	const FLT x453 = x445 * x384;
	const FLT x454 = x404 + (-1 * x444 * x388) + x453 + (-1 * x443 * (*_x0).Pose.Rot[0]) + (x440 * x353) + (-1 * x452) + (x439 * x343) + (x441 * x398) + x451 + (x438 * x382) + (-1 * x25 * x442);
	const FLT x455 = (x454 * sensor_pt[1]) + (-1 * x448 * sensor_pt[2]) + (x450 * sensor_pt[0]);
	const FLT x456 = x26 * x445;
	const FLT x457 = x403 * x446;
	const FLT x458 = (-1 * x393) + (-1 * x441 * x373) + (-1 * x439 * x388) + x457 + (x438 * x353) + x395 + (-1 * x456) + (-1 * x443 * (*_x0).Pose.Rot[2]) + (-1 * x440 * x382) + x23 + (-1 * x408 * x345) + (x31 * x442);
	const FLT x459 = (x448 * sensor_pt[1]) + (-1 * x458 * sensor_pt[0]) + (x454 * sensor_pt[2]);
	const FLT x460 = (-1 * x450 * x226) + (x458 * x236) + (-1 * x455 * x225) + (x459 * x235);
	const FLT x461 = 2 * ((-1 * x450 * sensor_pt[1]) + (x454 * sensor_pt[0]) + (x458 * sensor_pt[2]));
	const FLT x462 = (x455 * x247) + (-1 * x29 * x461) + (-1 * x458 * x245) + (x448 * x226);
	const FLT x463 = (x450 * x245) + (x34 * x461) + (-1 * x459 * x247) + (-1 * x448 * x236);
	const FLT x464 = (-1 * x460 * (*lh_p).Rot[2]) + (x463 * (*lh_p).Rot[1]) + (x462 * (*lh_p).Rot[0]);
	const FLT x465 = (x460 * (*lh_p).Rot[0]) + (-1 * x463 * (*lh_p).Rot[3]) + (x462 * (*lh_p).Rot[2]);
	const FLT x466 = x463 + (-1 * x464 * x174) + (x465 * x179);
	const FLT x467 = (x460 * (*lh_p).Rot[3]) + (-1 * x462 * (*lh_p).Rot[1]) + (x463 * (*lh_p).Rot[0]);
	const FLT x468 = x460 + (-1 * x467 * x179) + (x464 * x172);
	const FLT x469 = x462 + (-1 * x465 * x172) + (x467 * x174);
	const FLT x470 = (x96 * x469) + (x91 * x468);
	const FLT x471 = x113 * ((-1 * x115 * (x470 + (x466 * x114))) + (x56 * x466));
	const FLT x472 = x59 * x471;
	const FLT x473 = (x57 * ((-1 * x58 * x471) + x472)) + (x60 * x471);
	const FLT x474 = (x57 * x473) + (x61 * x471);
	const FLT x475 = (-1 * x72 * x466) + (x99 * x470);
	const FLT x476 = ((-1 * x469 * x106) + (x468 * x105)) * x107;
	const FLT x477 = x476 + (-1 * x85 * x475);
	const FLT x478 = x83 * (x475 + (x471 * x128) + (x477 * x130) + (x81 * x474) + (-1 * x127 * ((x76 * ((x62 * x471) + (x57 * x474) + (x57 * (x474 + (x57 * ((x57 * ((x64 * x471) + x472 + (-1 * x471 * x119))) + x473 + (x65 * x471))) + (x66 * x471))) + (x67 * x471))) + (x477 * x112))));
	const FLT x479 = x7 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x480 = x355 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x481 = x2 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x482 = (-1 * x480 * x356) + (-1 * x363 * (*_x0).Velocity.AxisAngleRot[2]) + (x481 * x366) + (-1 * x479 * x357) + (-1 * x481 * x364) + (x479 * x361) + (x480 * x360) + (x362 * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x483 = x482 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x484 = x5 * x375;
	const FLT x485 = x482 * x353;
	const FLT x486 = x482 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x487 = x482 * x371;
	const FLT x488 = x481 * x344;
	const FLT x489 = x5 * x349;
	const FLT x490 = (-1 * x25 * x489) + (-1 * x26 * x488) + (-1 * x487 * (*_x0).Pose.Rot[1]) + (-1 * x485 * (*_x0).Velocity.AxisAngleRot[1]) + (x484 * x343) + (x483 * x398) + (-1 * x453) + x452 + x402 + (-1 * x486 * x373) + x451;
	const FLT x491 = x482 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x492 = x491 * x352;
	const FLT x493 = (-1 * x397) + x23 + (-1 * x486 * x398) + x396 + (x492 * (*_x0).Pose.Rot[1]) + (-1 * x484 * x388) + x456 + (-1 * x483 * x373) + (x31 * x489) + (-1 * x488 * x384) + (-1 * x487 * (*_x0).Pose.Rot[3]) + (-1 * x457);
	const FLT x494 = (-1 * x488 * x388) + (x486 * x382) + (-1 * x487 * (*_x0).Pose.Rot[0]) + x347 + x447 + (-1 * x5 * x350) + (-1 * x381) + (x485 * (*_x0).Velocity.AxisAngleRot[2]) + (x484 * x384) + x378 + (x491 * x398);
	const FLT x495 = (x494 * sensor_pt[1]) + (-1 * x490 * sensor_pt[2]) + (x493 * sensor_pt[0]);
	const FLT x496 = x411 + (-1 * x483 * x382) + (-1 * x26 * x484) + x27 + (-1 * x488 * x343) + x449 + (x36 * x489) + (x485 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x492 * (*_x0).Pose.Rot[0]) + (-1 * x487 * (*_x0).Pose.Rot[2]);
	const FLT x497 = 2 * x496;
	const FLT x498 = 2 * ((x490 * sensor_pt[1]) + (-1 * x496 * sensor_pt[0]) + (x494 * sensor_pt[2]));
	const FLT x499 = (x29 * x498) + (-1 * x493 * x226) + (-1 * x495 * x225) + (x40 * x497);
	const FLT x500 = (x494 * sensor_pt[0]) + (-1 * x493 * sensor_pt[1]) + (x496 * sensor_pt[2]);
	const FLT x501 = (x490 * x226) + (-1 * x35 * x497) + (-1 * x500 * x235) + (x495 * x247);
	const FLT x502 = (-1 * x490 * x236) + (x500 * x225) + (-1 * x37 * x498) + (x493 * x245);
	const FLT x503 = (-1 * x499 * (*lh_p).Rot[2]) + (x502 * (*lh_p).Rot[1]) + (x501 * (*lh_p).Rot[0]);
	const FLT x504 = 2 * ((x499 * (*lh_p).Rot[0]) + (-1 * x502 * (*lh_p).Rot[3]) + (x501 * (*lh_p).Rot[2]));
	const FLT x505 = (-1 * x503 * x174) + x502 + (x504 * (*lh_p).Rot[3]);
	const FLT x506 = 2 * ((x499 * (*lh_p).Rot[3]) + (-1 * x501 * (*lh_p).Rot[1]) + (x502 * (*lh_p).Rot[0]));
	const FLT x507 = x499 + (-1 * x506 * (*lh_p).Rot[3]) + (x503 * x172);
	const FLT x508 = x501 + (x506 * (*lh_p).Rot[1]) + (-1 * x504 * (*lh_p).Rot[2]);
	const FLT x509 = (x96 * x508) + (x91 * x507);
	const FLT x510 = (-1 * x115 * (x509 + (x505 * x114))) + (x56 * x505);
	const FLT x511 = x510 * x155;
	const FLT x512 = (x57 * ((-1 * x510 * x157) + x511)) + (x510 * x121);
	const FLT x513 = (x57 * x512) + (x510 * x154);
	const FLT x514 = (-1 * x72 * x505) + (x99 * x509);
	const FLT x515 = ((-1 * x508 * x106) + (x507 * x105)) * x107;
	const FLT x516 = x515 + (-1 * x85 * x514);
	const FLT x517 = x83 * ((x516 * x130) + (-1 * x127 * ((x76 * ((x510 * x126) + (x57 * (x513 + (x57 * (x512 + (x57 * ((x510 * x120) + x511 + (-1 * x510 * x164))) + (x510 * x165))) + (x510 * x123))) + (x57 * x513) + (x510 * x125))) + (x516 * x112))) + x514 + (x81 * x513) + (x510 * x160));
	const FLT x518 = dt * x178;
	const FLT x519 = dt * x180;
	const FLT x520 = x519 + x518;
	const FLT x521 = -1 * dt * x169;
	const FLT x522 = (-1 * dt * x167) + dt;
	const FLT x523 = x522 + x521;
	const FLT x524 = dt * x173;
	const FLT x525 = dt * x175;
	const FLT x526 = x525 + (-1 * x524);
	const FLT x527 = (x96 * x526) + (x91 * x523);
	const FLT x528 = (-1 * x115 * (x527 + (x520 * x114))) + (x56 * x520);
	const FLT x529 = x528 * x155;
	const FLT x530 = (x57 * ((-1 * x528 * x157) + x529)) + (x528 * x121);
	const FLT x531 = (x57 * x530) + (x528 * x154);
	const FLT x532 = (-1 * x72 * x520) + (x99 * x527);
	const FLT x533 = ((-1 * x526 * x106) + (x523 * x105)) * x107;
	const FLT x534 = x533 + (-1 * x85 * x532);
	const FLT x535 = x83 * (x532 + (x534 * x130) + (-1 * x127 * ((x76 * ((x57 * (x531 + (x57 * (x530 + (x57 * ((x528 * x120) + x529 + (-1 * x528 * x164))) + (x528 * x165))) + (x528 * x123))) + (x528 * x126) + (x57 * x531) + (x528 * x125))) + (x534 * x112))) + (x528 * x160) + (x81 * x531));
	const FLT x536 = -1 * dt * x196;
	const FLT x537 = x536 + x521 + dt;
	const FLT x538 = x518 + (-1 * x519);
	const FLT x539 = dt * x192;
	const FLT x540 = dt * x193;
	const FLT x541 = x540 + x539;
	const FLT x542 = (x96 * x541) + (x91 * x538);
	const FLT x543 = x113 * ((-1 * x115 * (x542 + (x537 * x114))) + (x56 * x537));
	const FLT x544 = x59 * x543;
	const FLT x545 = (x57 * ((-1 * x58 * x543) + x544)) + (x60 * x543);
	const FLT x546 = (x57 * x545) + (x61 * x543);
	const FLT x547 = (-1 * x72 * x537) + (x99 * x542);
	const FLT x548 = ((-1 * x541 * x106) + (x538 * x105)) * x107;
	const FLT x549 = x548 + (-1 * x85 * x547);
	const FLT x550 = x83 * (x547 + (x543 * x128) + (x549 * x130) + (-1 * x127 * ((x76 * ((x62 * x543) + (x57 * x546) + (x57 * ((x57 * (x545 + (x57 * ((x64 * x543) + x544 + (-1 * x543 * x119))) + (x65 * x543))) + x546 + (x66 * x543))) + (x67 * x543))) + (x549 * x112))) + (x81 * x546));
	const FLT x551 = x524 + x525;
	const FLT x552 = x522 + x536;
	const FLT x553 = (x96 * x552) + (x91 * x551);
	const FLT x554 = x539 + (-1 * x540);
	const FLT x555 = (-1 * x72 * x554) + (x99 * x553);
	const FLT x556 = ((-1 * x552 * x106) + (x551 * x105)) * x107;
	const FLT x557 = x556 + (-1 * x85 * x555);
	const FLT x558 = (-1 * x115 * (x553 + (x554 * x114))) + (x56 * x554);
	const FLT x559 = x558 * x155;
	const FLT x560 = x558 * x113;
	const FLT x561 = (x57 * ((-1 * x58 * x560) + x559)) + (x558 * x121);
	const FLT x562 = (x57 * x561) + (x558 * x154);
	const FLT x563 = x83 * ((x557 * x130) + (x560 * x128) + x555 + (-1 * x127 * ((x76 * ((x558 * x125) + (x57 * (x562 + (x57 * (x561 + (x57 * (x559 + (x558 * x120) + (-1 * x560 * x119))) + (x558 * x165))) + (x558 * x123))) + (x558 * x126) + (x57 * x562))) + (x557 * x112))) + (x81 * x562));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0])/sizeof(FLT), x108 + (-1 * x131) + (-1 * ((-1 * x108) + x131) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1])/sizeof(FLT), x142 + (-1 * x148) + (-1 * ((-1 * x142) + x148) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2])/sizeof(FLT), x162 + (-1 * x166) + (-1 * ((-1 * x162) + x166) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0])/sizeof(FLT), x183 + (-1 * x190) + (-1 * ((-1 * x183) + x190) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1])/sizeof(FLT), x200 + (-1 * x206) + (-1 * ((-1 * x200) + x206) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2])/sizeof(FLT), x216 + (-1 * ((-1 * x216) + x218) * x132) + (-1 * x218));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0])/sizeof(FLT), x265 + (-1 * x267) + (-1 * ((-1 * x265) + x267) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1])/sizeof(FLT), (-1 * x297) + x291 + (-1 * ((-1 * x291) + x297) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2])/sizeof(FLT), x315 + (-1 * x321) + (-1 * ((-1 * x315) + x321) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3])/sizeof(FLT), (-1 * x342) + x340 + (-1 * ((-1 * x340) + x342) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0])/sizeof(FLT), (-1 * x433) + x431 + (-1 * ((-1 * x431) + x433) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1])/sizeof(FLT), x476 + (-1 * x478) + (-1 * ((-1 * x476) + x478) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2])/sizeof(FLT), x515 + (-1 * ((-1 * x515) + x517) * x132) + (-1 * x517));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0])/sizeof(FLT), x533 + (-1 * x535) + (-1 * ((-1 * x533) + x535) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1])/sizeof(FLT), x548 + (-1 * x550) + (-1 * ((-1 * x548) + x550) * x132));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2])/sizeof(FLT), x556 + (-1 * x563) + (-1 * ((-1 * x556) + x563) * x132));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_x0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = dt * dt;
	const FLT x2 = x1 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x3 = x1 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x4 = x1 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x5 = 1e-10 + x2 + x3 + x4;
	const FLT x6 = sqrt(x5);
	const FLT x7 = 0.5 * x6;
	const FLT x8 = sin(x7);
	const FLT x9 = (1. / x5) * (x8 * x8);
	const FLT x10 = cos(x7);
	const FLT x11 = 1. / sqrt((x4 * x9) + (x3 * x9) + (x2 * x9) + (x10 * x10));
	const FLT x12 = (1. / x6) * x8 * dt * x11;
	const FLT x13 = x12 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x14 = x13 * (*_x0).Pose.Rot[0];
	const FLT x15 = x11 * x10;
	const FLT x16 = x15 * (*_x0).Pose.Rot[2];
	const FLT x17 = x12 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x17 * (*_x0).Pose.Rot[1];
	const FLT x19 = x12 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x20 = x19 * (*_x0).Pose.Rot[3];
	const FLT x21 = x18 + x14 + (-1 * x20) + x16;
	const FLT x22 = (-1 * x19 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x13 * (*_x0).Pose.Rot[2]);
	const FLT x23 = x17 * (*_x0).Pose.Rot[0];
	const FLT x24 = x13 * (*_x0).Pose.Rot[1];
	const FLT x25 = x15 * (*_x0).Pose.Rot[3];
	const FLT x26 = x19 * (*_x0).Pose.Rot[2];
	const FLT x27 = x26 + x25 + x23 + (-1 * x24);
	const FLT x28 = (x21 * sensor_pt[2]) + (-1 * x27 * sensor_pt[1]) + (x22 * sensor_pt[0]);
	const FLT x29 = x17 * (*_x0).Pose.Rot[2];
	const FLT x30 = x13 * (*_x0).Pose.Rot[3];
	const FLT x31 = x15 * (*_x0).Pose.Rot[1];
	const FLT x32 = x19 * (*_x0).Pose.Rot[0];
	const FLT x33 = x32 + x31 + (-1 * x29) + x30;
	const FLT x34 = (-1 * x33 * sensor_pt[2]) + (x27 * sensor_pt[0]) + (x22 * sensor_pt[1]);
	const FLT x35 = sensor_pt[2] + (x0 * (*_x0).Acc[2]) + (2 * ((x34 * x33) + (-1 * x21 * x28))) + (dt * (*_x0).Velocity.Pos[2]) + (*_x0).Pose.Pos[2];
	const FLT x36 = (-1 * x21 * sensor_pt[0]) + (x22 * sensor_pt[2]) + (x33 * sensor_pt[1]);
	const FLT x37 = (dt * (*_x0).Velocity.Pos[1]) + sensor_pt[1] + (2 * ((x28 * x27) + (-1 * x33 * x36))) + (*_x0).Pose.Pos[1] + (x0 * (*_x0).Acc[1]);
	const FLT x38 = (2 * ((x36 * x21) + (-1 * x34 * x27))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x0 * (*_x0).Acc[0]);
	const FLT x39 = (x35 * (*lh_p).Rot[0]) + (-1 * x38 * (*lh_p).Rot[2]) + (x37 * (*lh_p).Rot[1]);
	const FLT x40 = (-1 * x37 * (*lh_p).Rot[3]) + (x35 * (*lh_p).Rot[2]) + (x38 * (*lh_p).Rot[0]);
	const FLT x41 = x37 + (*lh_p).Pos[1] + (2 * ((x40 * (*lh_p).Rot[3]) + (-1 * x39 * (*lh_p).Rot[1])));
	const FLT x42 = x41 * x41;
	const FLT x43 = (-1 * x35 * (*lh_p).Rot[1]) + (x37 * (*lh_p).Rot[0]) + (x38 * (*lh_p).Rot[3]);
	const FLT x44 = x35 + (2 * ((x43 * (*lh_p).Rot[1]) + (-1 * x40 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x45 = x38 + (2 * ((x39 * (*lh_p).Rot[2]) + (-1 * x43 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x46 = x45 * x45;
	const FLT x47 = x46 + (x44 * x44);
	const FLT x48 = x47 + x42;
	const FLT x49 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x50 = cos(x49);
	const FLT x51 = 1. / x50;
	const FLT x52 = x51 * (1. / sqrt(x48));
	const FLT x53 = asin(x52 * x41);
	const FLT x54 = 8.0108022e-06 * x53;
	const FLT x55 = -8.0108022e-06 + (-1 * x54);
	const FLT x56 = 0.0028679863 + (x53 * x55);
	const FLT x57 = 5.3685255e-06 + (x53 * x56);
	const FLT x58 = 0.0076069798 + (x53 * x57);
	const FLT x59 = x53 * x58;
	const FLT x60 = -8.0108022e-06 + (-1.60216044e-05 * x53);
	const FLT x61 = x56 + (x60 * x53);
	const FLT x62 = x57 + (x61 * x53);
	const FLT x63 = x58 + (x62 * x53);
	const FLT x64 = (x63 * x53) + x59;
	const FLT x65 = sin(x49);
	const FLT x66 = atan2(-1 * x44, x45);
	const FLT x67 = tan(x49);
	const FLT x68 = x67 * (1. / sqrt(x47));
	const FLT x69 = -1 * x68 * x41;
	const FLT x70 = (-1 * asin(x69)) + (*bsc0).ogeephase + x66;
	const FLT x71 = (sin(x70) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x72 = x71 * x65;
	const FLT x73 = x50 + (x72 * x64);
	const FLT x74 = 1. / x73;
	const FLT x75 = x53 * x53;
	const FLT x76 = x71 * x75;
	const FLT x77 = x74 * x76;
	const FLT x78 = x69 + (x77 * x58);
	const FLT x79 = 1. / sqrt(1 + (-1 * (x78 * x78)));
	const FLT x80 = (-1 * x18) + x20 + (-1 * x16) + (-1 * x14);
	const FLT x81 = 2 * x21;
	const FLT x82 = 1 + (x80 * x81) + (-2 * (x27 * x27));
	const FLT x83 = 2 * x22;
	const FLT x84 = x83 * x21;
	const FLT x85 = 2 * x33;
	const FLT x86 = (x85 * x27) + (-1 * x84);
	const FLT x87 = x83 * x27;
	const FLT x88 = x87 + (-1 * x80 * x85);
	const FLT x89 = (x88 * (*lh_p).Rot[1]) + (-1 * x82 * (*lh_p).Rot[2]) + (x86 * (*lh_p).Rot[0]);
	const FLT x90 = 2 * (*lh_p).Rot[2];
	const FLT x91 = (x82 * (*lh_p).Rot[3]) + (-1 * x86 * (*lh_p).Rot[1]) + (x88 * (*lh_p).Rot[0]);
	const FLT x92 = 2 * (*lh_p).Rot[3];
	const FLT x93 = x82 + (x89 * x90) + (-1 * x92 * x91);
	const FLT x94 = 2 * x45;
	const FLT x95 = 2 * (*lh_p).Rot[1];
	const FLT x96 = (x82 * (*lh_p).Rot[0]) + (-1 * x88 * (*lh_p).Rot[3]) + (x86 * (*lh_p).Rot[2]);
	const FLT x97 = x86 + (x91 * x95) + (-1 * x90 * x96);
	const FLT x98 = 2 * x44;
	const FLT x99 = (x98 * x97) + (x93 * x94);
	const FLT x100 = 1.0/2.0 * x41;
	const FLT x101 = x67 * (1. / (x47 * sqrt(x47))) * x100;
	const FLT x102 = x88 + (x92 * x96) + (-1 * x89 * x95);
	const FLT x103 = (-1 * x68 * x102) + (x99 * x101);
	const FLT x104 = 1. / x47;
	const FLT x105 = 1. / sqrt(1 + (-1 * (x67 * x67) * x42 * x104));
	const FLT x106 = x44 * (1. / x46);
	const FLT x107 = 1. / x45;
	const FLT x108 = x46 * x104;
	const FLT x109 = ((-1 * x97 * x107) + (x93 * x106)) * x108;
	const FLT x110 = cos(x70) * (*bsc0).ogeemag;
	const FLT x111 = x110 * (x109 + (-1 * x103 * x105));
	const FLT x112 = x64 * x65;
	const FLT x113 = 1. / sqrt(1 + (-1 * (1. / (x50 * x50)) * x42 * (1. / x48)));
	const FLT x114 = 2 * x41;
	const FLT x115 = x51 * (1. / (x48 * sqrt(x48))) * x100;
	const FLT x116 = x113 * ((-1 * x115 * (x99 + (x102 * x114))) + (x52 * x102));
	const FLT x117 = x55 * x116;
	const FLT x118 = 2.40324066e-05 * x53;
	const FLT x119 = (x53 * ((-1 * x54 * x116) + x117)) + (x56 * x116);
	const FLT x120 = (x53 * x119) + (x57 * x116);
	const FLT x121 = (1. / (x73 * x73)) * x76 * x58;
	const FLT x122 = x75 * x74 * x58;
	const FLT x123 = 2 * x71 * x74 * x59;
	const FLT x124 = x79 * (x103 + (x111 * x122) + (x116 * x123) + (-1 * x121 * ((x72 * ((x53 * x120) + (x53 * (x120 + (x53 * (x119 + (x53 * ((x60 * x116) + x117 + (-1 * x118 * x116))) + (x61 * x116))) + (x62 * x116))) + (x58 * x116) + (x63 * x116))) + (x111 * x112))) + (x77 * x120));
	const FLT x125 = cos((-1 * asin(x78)) + (*bsc0).gibpha + x66) * (*bsc0).gibmag;
	const FLT x126 = 2 * ((-1 * x25) + (-1 * x26) + x24 + (-1 * x23));
	const FLT x127 = x83 * x33;
	const FLT x128 = x127 + (-1 * x21 * x126);
	const FLT x129 = 1 + (x27 * x126) + (-2 * (x33 * x33));
	const FLT x130 = (x85 * x21) + (-1 * x87);
	const FLT x131 = (x130 * (*lh_p).Rot[0]) + (x128 * (*lh_p).Rot[2]) + (-1 * x129 * (*lh_p).Rot[3]);
	const FLT x132 = (x129 * (*lh_p).Rot[1]) + (x128 * (*lh_p).Rot[0]) + (-1 * x130 * (*lh_p).Rot[2]);
	const FLT x133 = x129 + (x92 * x131) + (-1 * x95 * x132);
	const FLT x134 = 2 * ((x130 * (*lh_p).Rot[3]) + (-1 * x128 * (*lh_p).Rot[1]) + (x129 * (*lh_p).Rot[0]));
	const FLT x135 = x130 + (x90 * x132) + (-1 * x134 * (*lh_p).Rot[3]);
	const FLT x136 = (x134 * (*lh_p).Rot[1]) + x128 + (-1 * x90 * x131);
	const FLT x137 = (x98 * x136) + (x94 * x135);
	const FLT x138 = (-1 * x115 * (x137 + (x114 * x133))) + (x52 * x133);
	const FLT x139 = x113 * x138;
	const FLT x140 = x57 * x113;
	const FLT x141 = x55 * x139;
	const FLT x142 = (x53 * ((-1 * x54 * x139) + x141)) + (x56 * x139);
	const FLT x143 = (x53 * x142) + (x138 * x140);
	const FLT x144 = (-1 * x68 * x133) + (x101 * x137);
	const FLT x145 = ((-1 * x107 * x136) + (x106 * x135)) * x108;
	const FLT x146 = x145 + (-1 * x105 * x144);
	const FLT x147 = x110 * x122;
	const FLT x148 = x110 * x112;
	const FLT x149 = x79 * (x144 + (-1 * x121 * ((x72 * ((x58 * x139) + (x63 * x139) + (x53 * (x143 + (x53 * ((x53 * (x141 + (x60 * x139) + (-1 * x118 * x139))) + x142 + (x61 * x139))) + (x62 * x139))) + (x53 * x143))) + (x146 * x148))) + (x146 * x147) + (x123 * x139) + (x77 * x143));
	const FLT x150 = (x81 * x27) + (-1 * x127);
	const FLT x151 = (-1 * x32) + (-1 * x30) + x29 + (-1 * x31);
	const FLT x152 = 1 + (x85 * x151) + (-2 * (x21 * x21));
	const FLT x153 = x84 + (-2 * x27 * x151);
	const FLT x154 = (x153 * (*lh_p).Rot[0]) + (-1 * x150 * (*lh_p).Rot[3]) + (x152 * (*lh_p).Rot[2]);
	const FLT x155 = (x150 * (*lh_p).Rot[1]) + (-1 * x153 * (*lh_p).Rot[2]) + (x152 * (*lh_p).Rot[0]);
	const FLT x156 = x150 + (x92 * x154) + (-1 * x95 * x155);
	const FLT x157 = (x153 * (*lh_p).Rot[3]) + (-1 * x152 * (*lh_p).Rot[1]) + (x150 * (*lh_p).Rot[0]);
	const FLT x158 = x153 + (x90 * x155) + (-1 * x92 * x157);
	const FLT x159 = x152 + (x95 * x157) + (-1 * x90 * x154);
	const FLT x160 = (x98 * x159) + (x94 * x158);
	const FLT x161 = (-1 * x115 * (x160 + (x114 * x156))) + (x52 * x156);
	const FLT x162 = x113 * x161;
	const FLT x163 = x55 * x162;
	const FLT x164 = (x53 * ((-1 * x54 * x162) + x163)) + (x56 * x162);
	const FLT x165 = (x53 * x164) + (x161 * x140);
	const FLT x166 = (-1 * x68 * x156) + (x101 * x160);
	const FLT x167 = ((-1 * x107 * x159) + (x106 * x158)) * x108;
	const FLT x168 = x167 + (-1 * x105 * x166);
	const FLT x169 = x79 * ((-1 * x121 * ((x72 * ((x58 * x162) + (x53 * x165) + (x53 * (x165 + (x53 * (x164 + (x53 * ((x60 * x162) + x163 + (-1 * x118 * x162))) + (x61 * x162))) + (x62 * x162))) + (x63 * x162))) + (x168 * x148))) + (x168 * x147) + (x77 * x165) + x166 + (x123 * x162));
	cnMatrixOptionalSet(Hx, 0, 0, x109 + (-1 * x124) + (-1 * ((-1 * x109) + x124) * x125));
	cnMatrixOptionalSet(Hx, 0, 1, x145 + (-1 * x149) + (-1 * ((-1 * x145) + x149) * x125));
	cnMatrixOptionalSet(Hx, 0, 2, x167 + (-1 * x169) + (-1 * ((-1 * x167) + x169) * x125));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_sensor_pt(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 1.0/2.0 * dt * fabs(dt);
	const FLT x1 = x0 * (*_x0).Acc[1];
	const FLT x2 = dt * (*_x0).Velocity.Pos[1];
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x16 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x17 = x13 * x12;
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[3]) + (-1 * x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = x14 * (*_x0).Pose.Rot[0];
	const FLT x21 = (x20 * (*_x0).Velocity.AxisAngleRot[0]) + (-1 * x15 * (*_x0).Pose.Rot[2]) + (x17 * (*_x0).Pose.Rot[1]) + (x16 * (*_x0).Pose.Rot[3]);
	const FLT x22 = (x20 * (*_x0).Velocity.AxisAngleRot[1]) + (-1 * x18 * (*_x0).Pose.Rot[3]) + (x15 * (*_x0).Pose.Rot[1]) + (x17 * (*_x0).Pose.Rot[2]);
	const FLT x23 = (-1 * x22 * sensor_pt[0]) + (x19 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x24 = (x18 * (*_x0).Pose.Rot[2]) + (x17 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Velocity.AxisAngleRot[2]) + (-1 * x16 * (*_x0).Pose.Rot[1]);
	const FLT x25 = (-1 * x24 * sensor_pt[1]) + (x22 * sensor_pt[2]) + (x19 * sensor_pt[0]);
	const FLT x26 = 2 * ((x24 * x25) + (-1 * x23 * x21));
	const FLT x27 = x26 + x2 + sensor_pt[1] + (*_x0).Pose.Pos[1] + x1;
	const FLT x28 = x27 * (*lh_p).Rot[0];
	const FLT x29 = dt * (*_x0).Velocity.Pos[0];
	const FLT x30 = x0 * (*_x0).Acc[0];
	const FLT x31 = (-1 * x21 * sensor_pt[2]) + (x24 * sensor_pt[0]) + (x19 * sensor_pt[1]);
	const FLT x32 = 2 * ((x22 * x23) + (-1 * x31 * x24));
	const FLT x33 = x32 + (*_x0).Pose.Pos[0] + x29 + sensor_pt[0] + x30;
	const FLT x34 = x33 * (*lh_p).Rot[3];
	const FLT x35 = dt * (*_x0).Velocity.Pos[2];
	const FLT x36 = x0 * (*_x0).Acc[2];
	const FLT x37 = 2 * ((x31 * x21) + (-1 * x25 * x22));
	const FLT x38 = x37 + sensor_pt[2] + x36 + x35 + (*_x0).Pose.Pos[2];
	const FLT x39 = x38 * (*lh_p).Rot[1];
	const FLT x40 = (-1 * x39) + x28 + x34;
	const FLT x41 = x38 * (*lh_p).Rot[0];
	const FLT x42 = x27 * (*lh_p).Rot[1];
	const FLT x43 = x33 * (*lh_p).Rot[2];
	const FLT x44 = (-1 * x43) + x41 + x42;
	const FLT x45 = x33 + (2 * ((x44 * (*lh_p).Rot[2]) + (-1 * x40 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x46 = x38 * (*lh_p).Rot[2];
	const FLT x47 = x33 * (*lh_p).Rot[0];
	const FLT x48 = x27 * (*lh_p).Rot[3];
	const FLT x49 = (-1 * x48) + x46 + x47;
	const FLT x50 = x27 + (*lh_p).Pos[1] + (2 * ((x49 * (*lh_p).Rot[3]) + (-1 * x44 * (*lh_p).Rot[1])));
	const FLT x51 = x50 * x45;
	const FLT x52 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x53 = tan(x52);
	const FLT x54 = x38 + (2 * ((x40 * (*lh_p).Rot[1]) + (-1 * x49 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x55 = x45 * x45;
	const FLT x56 = x55 + (x54 * x54);
	const FLT x57 = x53 * (1. / (x56 * sqrt(x56)));
	const FLT x58 = x51 * x57;
	const FLT x59 = x50 * x50;
	const FLT x60 = 1. / x56;
	const FLT x61 = 1. / sqrt(1 + (-1 * x60 * (x53 * x53) * x59));
	const FLT x62 = x60 * x54;
	const FLT x63 = atan2(-1 * x54, x45);
	const FLT x64 = x53 * (1. / sqrt(x56));
	const FLT x65 = -1 * x64 * x50;
	const FLT x66 = (-1 * asin(x65)) + (*bsc0).ogeephase + x63;
	const FLT x67 = cos(x66) * (*bsc0).ogeemag;
	const FLT x68 = x67 * (x62 + (-1 * x61 * x58));
	const FLT x69 = x56 + x59;
	const FLT x70 = cos(x52);
	const FLT x71 = 1. / x70;
	const FLT x72 = x71 * (1. / sqrt(x69));
	const FLT x73 = asin(x72 * x50);
	const FLT x74 = 8.0108022e-06 * x73;
	const FLT x75 = -8.0108022e-06 + (-1 * x74);
	const FLT x76 = 0.0028679863 + (x73 * x75);
	const FLT x77 = 5.3685255e-06 + (x73 * x76);
	const FLT x78 = 0.0076069798 + (x73 * x77);
	const FLT x79 = x73 * x73;
	const FLT x80 = x73 * x78;
	const FLT x81 = -8.0108022e-06 + (-1.60216044e-05 * x73);
	const FLT x82 = x76 + (x81 * x73);
	const FLT x83 = x77 + (x82 * x73);
	const FLT x84 = x78 + (x83 * x73);
	const FLT x85 = (x84 * x73) + x80;
	const FLT x86 = sin(x52);
	const FLT x87 = (sin(x66) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x88 = x86 * x87;
	const FLT x89 = x70 + (x88 * x85);
	const FLT x90 = 1. / x89;
	const FLT x91 = x79 * x78 * x90;
	const FLT x92 = 2 * x45;
	const FLT x93 = 1. / sqrt(1 + (-1 * (1. / (x70 * x70)) * (1. / x69) * x59));
	const FLT x94 = x71 * (1. / (x69 * sqrt(x69)));
	const FLT x95 = x50 * x94;
	const FLT x96 = x80 * x87 * x90;
	const FLT x97 = x93 * x96 * x95;
	const FLT x98 = x77 * x93;
	const FLT x99 = x51 * x94;
	const FLT x100 = x93 * x99;
	const FLT x101 = -1 * x75 * x100;
	const FLT x102 = (x73 * ((x74 * x100) + x101)) + (-1 * x76 * x100);
	const FLT x103 = (x73 * x102) + (-1 * x99 * x98);
	const FLT x104 = x87 * x79;
	const FLT x105 = x90 * x104;
	const FLT x106 = x85 * x86;
	const FLT x107 = 2.40324066e-05 * x73;
	const FLT x108 = x81 * x93;
	const FLT x109 = x84 * x93;
	const FLT x110 = (1. / (x89 * x89)) * x78 * x104;
	const FLT x111 = x65 + (x78 * x105);
	const FLT x112 = 1. / sqrt(1 + (-1 * (x111 * x111)));
	const FLT x113 = x112 * ((-1 * x110 * ((x88 * ((-1 * x78 * x100) + (x73 * x103) + (x73 * ((x73 * (x102 + (x73 * ((-1 * x99 * x108) + x101 + (x100 * x107))) + (-1 * x82 * x100))) + x103 + (-1 * x83 * x100))) + (-1 * x99 * x109))) + (x68 * x106))) + (x103 * x105) + (-1 * x92 * x97) + x58 + (x68 * x91));
	const FLT x114 = cos((-1 * asin(x111)) + (*bsc0).gibpha + x63) * (*bsc0).gibmag;
	const FLT x115 = x67 * x91;
	const FLT x116 = x64 * x61;
	const FLT x117 = (-1 * x59 * x94) + x72;
	const FLT x118 = x93 * x117;
	const FLT x119 = x75 * x118;
	const FLT x120 = (x73 * ((-1 * x74 * x118) + x119)) + (x76 * x118);
	const FLT x121 = (x73 * x120) + (x77 * x118);
	const FLT x122 = x67 * x106;
	const FLT x123 = 2 * x96;
	const FLT x124 = x112 * ((x118 * x123) + (-1 * x110 * ((x88 * ((x78 * x118) + (x73 * x121) + (x73 * (x121 + (x73 * (x120 + (x73 * ((x108 * x117) + x119 + (-1 * x107 * x118))) + (x82 * x118))) + (x83 * x118))) + (x84 * x118))) + (x116 * x122))) + (x105 * x121) + (-1 * x64) + (x115 * x116));
	const FLT x125 = x50 * x57;
	const FLT x126 = x54 * x125;
	const FLT x127 = x60 * x45;
	const FLT x128 = -1 * x127;
	const FLT x129 = x128 + (-1 * x61 * x126);
	const FLT x130 = x54 * x95;
	const FLT x131 = x93 * x130;
	const FLT x132 = -1 * x75 * x131;
	const FLT x133 = (x73 * ((x74 * x131) + x132)) + (-1 * x76 * x131);
	const FLT x134 = (x73 * x133) + (-1 * x98 * x130);
	const FLT x135 = 2 * x54;
	const FLT x136 = x112 * ((-1 * x97 * x135) + (x105 * x134) + (-1 * x110 * ((x88 * ((-1 * x109 * x130) + (x73 * (x134 + (x73 * (x133 + (x73 * ((-1 * x108 * x130) + x132 + (x107 * x131))) + (-1 * x82 * x131))) + (-1 * x83 * x131))) + (-1 * x78 * x131) + (x73 * x134))) + (x122 * x129))) + x126 + (x115 * x129));
	const FLT x137 = 2 * x48;
	const FLT x138 = (2 * x46) + (-1 * x137);
	const FLT x139 = 2 * x43;
	const FLT x140 = (2 * x42) + (-1 * x139);
	const FLT x141 = (x135 * x140) + (x92 * x138);
	const FLT x142 = 1.0/2.0 * x125;
	const FLT x143 = 2 * x39;
	const FLT x144 = (2 * x34) + (-1 * x143);
	const FLT x145 = (-1 * x64 * x144) + (x142 * x141);
	const FLT x146 = x54 * (1. / x55);
	const FLT x147 = 1. / x45;
	const FLT x148 = x60 * x55;
	const FLT x149 = ((-1 * x140 * x147) + (x138 * x146)) * x148;
	const FLT x150 = x149 + (-1 * x61 * x145);
	const FLT x151 = 2 * x50;
	const FLT x152 = 1.0/2.0 * x95;
	const FLT x153 = (-1 * x152 * (x141 + (x144 * x151))) + (x72 * x144);
	const FLT x154 = x93 * x153;
	const FLT x155 = x75 * x154;
	const FLT x156 = (x73 * ((-1 * x74 * x154) + x155)) + (x76 * x154);
	const FLT x157 = (x73 * x156) + (x77 * x154);
	const FLT x158 = x112 * (x145 + (x115 * x150) + (x105 * x157) + (-1 * x110 * ((x88 * ((x78 * x154) + (x73 * (x157 + (x73 * (x156 + (x73 * ((x108 * x153) + x155 + (-1 * x107 * x154))) + (x82 * x154))) + (x83 * x154))) + (x84 * x154) + (x73 * x157))) + (x122 * x150))) + (x123 * x154));
	const FLT x159 = 2 * x41;
	const FLT x160 = (-4 * x42) + (-1 * x159) + x139;
	const FLT x161 = (-1 * x36) + (-1 * sensor_pt[2]) + (-1 * x37) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x35);
	const FLT x162 = 2 * (*lh_p).Rot[3];
	const FLT x163 = 2 * (*lh_p).Rot[2];
	const FLT x164 = (x27 * x163) + (-1 * x161 * x162);
	const FLT x165 = 2 * (*lh_p).Rot[1];
	const FLT x166 = 2 * x28;
	const FLT x167 = x144 + (x161 * x165) + x166;
	const FLT x168 = (x167 * x135) + (x92 * x164);
	const FLT x169 = (-1 * x152 * (x168 + (x160 * x151))) + (x72 * x160);
	const FLT x170 = x93 * x169;
	const FLT x171 = (-1 * x64 * x160) + (x168 * x142);
	const FLT x172 = ((-1 * x167 * x147) + (x164 * x146)) * x148;
	const FLT x173 = x172 + (-1 * x61 * x171);
	const FLT x174 = x75 * x170;
	const FLT x175 = (x73 * ((-1 * x74 * x170) + x174)) + (x76 * x170);
	const FLT x176 = (x73 * x175) + (x77 * x170);
	const FLT x177 = x112 * ((x115 * x173) + x171 + (x105 * x176) + (x123 * x170) + (-1 * x110 * ((x88 * ((x78 * x170) + (x73 * (x176 + (x73 * (x175 + (x73 * ((x108 * x169) + x174 + (-1 * x107 * x170))) + (x82 * x170))) + (x83 * x170))) + (x73 * x176) + (x84 * x170))) + (x122 * x173))));
	const FLT x178 = (-1 * (*_x0).Pose.Pos[0]) + (-1 * x32) + (-1 * x29) + (-1 * x30) + (-1 * sensor_pt[0]);
	const FLT x179 = x140 + x159 + (x163 * x178);
	const FLT x180 = 2 * x47;
	const FLT x181 = (-1 * x180) + (-4 * x46) + x137;
	const FLT x182 = (x181 * x135) + (x92 * x179);
	const FLT x183 = (x38 * x162) + (-1 * x165 * x178);
	const FLT x184 = (-1 * x64 * x183) + (x182 * x142);
	const FLT x185 = ((-1 * x181 * x147) + (x179 * x146)) * x148;
	const FLT x186 = x185 + (-1 * x61 * x184);
	const FLT x187 = (-1 * x152 * (x182 + (x183 * x151))) + (x72 * x183);
	const FLT x188 = x93 * x187;
	const FLT x189 = x75 * x188;
	const FLT x190 = (x73 * ((-1 * x74 * x188) + x189)) + (x76 * x188);
	const FLT x191 = (x73 * x190) + (x77 * x188);
	const FLT x192 = x112 * (x184 + (x115 * x186) + (x123 * x188) + (-1 * x110 * ((x88 * ((x73 * x191) + (x78 * x188) + (x73 * (x191 + (x73 * (x190 + (x73 * ((x108 * x187) + x189 + (-1 * x107 * x188))) + (x82 * x188))) + (x83 * x188))) + (x84 * x188))) + (x122 * x186))) + (x105 * x191));
	const FLT x193 = (-1 * x2) + (-1 * x26) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x1) + (-1 * sensor_pt[1]);
	const FLT x194 = x138 + (x162 * x193) + x180;
	const FLT x195 = x143 + (-1 * x166) + (-4 * x34);
	const FLT x196 = (x33 * x165) + (-1 * x163 * x193);
	const FLT x197 = (x196 * x135) + (x92 * x195);
	const FLT x198 = (-1 * x152 * (x197 + (x194 * x151))) + (x72 * x194);
	const FLT x199 = x93 * x198;
	const FLT x200 = x75 * x199;
	const FLT x201 = (x73 * ((-1 * x74 * x199) + x200)) + (x76 * x199);
	const FLT x202 = (x73 * x201) + (x77 * x199);
	const FLT x203 = (-1 * x64 * x194) + (x197 * x142);
	const FLT x204 = ((-1 * x196 * x147) + (x195 * x146)) * x148;
	const FLT x205 = x204 + (-1 * x61 * x203);
	const FLT x206 = x112 * ((x205 * x115) + (-1 * x110 * ((x88 * ((x73 * (x202 + (x73 * (x201 + (x73 * ((x108 * x198) + (-1 * x107 * x199) + x200)) + (x82 * x199))) + (x83 * x199))) + (x84 * x199) + (x78 * x199) + (x73 * x202))) + (x205 * x122))) + (x202 * x105) + x203 + (x123 * x199));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0])/sizeof(FLT), x62 + (-1 * x113) + (-1 * x114 * ((-1 * x62) + x113)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1])/sizeof(FLT), (-1 * x114 * x124) + (-1 * x124));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2])/sizeof(FLT), x128 + (-1 * x136) + (-1 * (x127 + x136) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0])/sizeof(FLT), x149 + (-1 * x158) + (-1 * ((-1 * x149) + x158) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1])/sizeof(FLT), x172 + (-1 * x177) + (-1 * ((-1 * x172) + x177) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2])/sizeof(FLT), x185 + (-1 * x192) + (-1 * ((-1 * x185) + x192) * x114));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3])/sizeof(FLT), x204 + (-1 * x206) + (-1 * ((-1 * x204) + x206) * x114));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_lh_p(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f0193083190>,
// <cnkalman.codegen.WrapMember object at 0x7f0193083400>, <cnkalman.codegen.WrapMember object at 0x7f0193083370>,
// <cnkalman.codegen.WrapMember object at 0x7f01930831c0>, <cnkalman.codegen.WrapMember object at 0x7f0193083580>,
// <cnkalman.codegen.WrapMember object at 0x7f01930835e0>, <cnkalman.codegen.WrapMember object at 0x7f0193083550>]
static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x1 = cos(x0);
	const FLT x2 = 1.0/2.0 * dt * fabs(dt);
	const FLT x3 = dt * dt;
	const FLT x4 = x3 * ((*_x0).Velocity.AxisAngleRot[1] * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x5 = x3 * ((*_x0).Velocity.AxisAngleRot[2] * (*_x0).Velocity.AxisAngleRot[2]);
	const FLT x6 = x3 * ((*_x0).Velocity.AxisAngleRot[0] * (*_x0).Velocity.AxisAngleRot[0]);
	const FLT x7 = 1e-10 + x4 + x5 + x6;
	const FLT x8 = sqrt(x7);
	const FLT x9 = 0.5 * x8;
	const FLT x10 = sin(x9);
	const FLT x11 = (1. / x7) * (x10 * x10);
	const FLT x12 = cos(x9);
	const FLT x13 = 1. / sqrt((x6 * x11) + (x5 * x11) + (x4 * x11) + (x12 * x12));
	const FLT x14 = (1. / x8) * dt * x13 * x10;
	const FLT x15 = x14 * (*_x0).Velocity.AxisAngleRot[1];
	const FLT x16 = x13 * x12;
	const FLT x17 = x14 * (*_x0).Velocity.AxisAngleRot[2];
	const FLT x18 = x14 * (*_x0).Velocity.AxisAngleRot[0];
	const FLT x19 = (-1 * x18 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[2]);
	const FLT x20 = x14 * (*_x0).Pose.Rot[2];
	const FLT x21 = (x16 * (*_x0).Pose.Rot[0]) + (-1 * x18 * (*_x0).Pose.Rot[1]) + (-1 * x17 * (*_x0).Pose.Rot[3]) + (-1 * x20 * (*_x0).Velocity.AxisAngleRot[1]);
	const FLT x22 = (x20 * (*_x0).Velocity.AxisAngleRot[0]) + (x16 * (*_x0).Pose.Rot[3]) + (x17 * (*_x0).Pose.Rot[0]) + (-1 * x15 * (*_x0).Pose.Rot[1]);
	const FLT x23 = (x19 * sensor_pt[2]) + (-1 * x22 * sensor_pt[1]) + (x21 * sensor_pt[0]);
	const FLT x24 = (-1 * x20 * (*_x0).Velocity.AxisAngleRot[2]) + (x18 * (*_x0).Pose.Rot[0]) + (x16 * (*_x0).Pose.Rot[1]) + (x15 * (*_x0).Pose.Rot[3]);
	const FLT x25 = (x22 * sensor_pt[0]) + (-1 * x24 * sensor_pt[2]) + (x21 * sensor_pt[1]);
	const FLT x26 = sensor_pt[2] + (x2 * (*_x0).Acc[2]) + (dt * (*_x0).Velocity.Pos[2]) + (2 * ((x24 * x25) + (-1 * x23 * x19))) + (*_x0).Pose.Pos[2];
	const FLT x27 = (-1 * x19 * sensor_pt[0]) + (x21 * sensor_pt[2]) + (x24 * sensor_pt[1]);
	const FLT x28 = (2 * ((x22 * x23) + (-1 * x24 * x27))) + sensor_pt[1] + (*_x0).Pose.Pos[1] + (dt * (*_x0).Velocity.Pos[1]) + (x2 * (*_x0).Acc[1]);
	const FLT x29 = (2 * ((x27 * x19) + (-1 * x25 * x22))) + (*_x0).Pose.Pos[0] + sensor_pt[0] + (dt * (*_x0).Velocity.Pos[0]) + (x2 * (*_x0).Acc[0]);
	const FLT x30 = (-1 * x29 * (*lh_p).Rot[2]) + (x26 * (*lh_p).Rot[0]) + (x28 * (*lh_p).Rot[1]);
	const FLT x31 = (-1 * x28 * (*lh_p).Rot[3]) + (x26 * (*lh_p).Rot[2]) + (x29 * (*lh_p).Rot[0]);
	const FLT x32 = x28 + (*lh_p).Pos[1] + (2 * ((x31 * (*lh_p).Rot[3]) + (-1 * x30 * (*lh_p).Rot[1])));
	const FLT x33 = x32 * x32;
	const FLT x34 = (-1 * x26 * (*lh_p).Rot[1]) + (x28 * (*lh_p).Rot[0]) + (x29 * (*lh_p).Rot[3]);
	const FLT x35 = x26 + (2 * ((x34 * (*lh_p).Rot[1]) + (-1 * x31 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x36 = x29 + (2 * ((x30 * (*lh_p).Rot[2]) + (-1 * x34 * (*lh_p).Rot[3]))) + (*lh_p).Pos[0];
	const FLT x37 = (x36 * x36) + (x35 * x35);
	const FLT x38 = x37 + x33;
	const FLT x39 = x32 * (1. / sqrt(x38));
	const FLT x40 = asin((1. / x1) * x39);
	const FLT x41 = 8.0108022e-06 * x40;
	const FLT x42 = -8.0108022e-06 + (-1 * x41);
	const FLT x43 = 0.0028679863 + (x40 * x42);
	const FLT x44 = 5.3685255e-06 + (x40 * x43);
	const FLT x45 = 0.0076069798 + (x40 * x44);
	const FLT x46 = x40 * x40;
	const FLT x47 = sin(x0);
	const FLT x48 = atan2(-1 * x35, x36);
	const FLT x49 = tan(x0);
	const FLT x50 = x32 * (1. / sqrt(x37));
	const FLT x51 = -1 * x50 * x49;
	const FLT x52 = (-1 * asin(x51)) + (*bsc0).ogeephase + x48;
	const FLT x53 = sin(x52);
	const FLT x54 = (x53 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x55 = x40 * x45;
	const FLT x56 = -8.0108022e-06 + (-1.60216044e-05 * x40);
	const FLT x57 = x43 + (x56 * x40);
	const FLT x58 = x44 + (x57 * x40);
	const FLT x59 = x45 + (x58 * x40);
	const FLT x60 = (x59 * x40) + x55;
	const FLT x61 = x60 * x54;
	const FLT x62 = x61 * x47;
	const FLT x63 = x1 + x62;
	const FLT x64 = 1. / x63;
	const FLT x65 = x64 * x46;
	const FLT x66 = x65 * x45;
	const FLT x67 = (1. / (x63 * x63)) * x45 * x46;
	const FLT x68 = x62 * x67;
	const FLT x69 = x51 + (x66 * x54);
	const FLT x70 = 1. / sqrt(1 + (-1 * (x69 * x69)));
	const FLT x71 = ((-1 * x68) + x66) * x70;
	const FLT x72 = asin(x69) + (-1 * (*bsc0).gibpha) + (-1 * x48);
	const FLT x73 = cos(x72) * (*bsc0).gibmag;
	const FLT x74 = ((-1 * x68 * x53) + (x66 * x53)) * x70;
	const FLT x75 = cos(x52) * (*bsc0).ogeemag;
	const FLT x76 = x75 * x66;
	const FLT x77 = x70 * ((-1 * x75 * x68) + x76);
	const FLT x78 = x49 * x49;
	const FLT x79 = x50 * (1 + x78);
	const FLT x80 = x79 * (1. / sqrt(1 + (-1 * x78 * x33 * (1. / x37))));
	const FLT x81 = x54 * x47;
	const FLT x82 = 1. / (x1 * x1);
	const FLT x83 = x82 * x39 * (1. / sqrt(1 + (-1 * x82 * x33 * (1. / x38))));
	const FLT x84 = x83 * x47;
	const FLT x85 = -1 * x84 * x42;
	const FLT x86 = (x40 * ((x84 * x41) + x85)) + (-1 * x84 * x43);
	const FLT x87 = (x86 * x40) + (-1 * x84 * x44);
	const FLT x88 = x70 * ((-1 * x67 * x54 * ((x81 * ((-1 * x84 * x45) + (-1 * x84 * x59) + (x40 * ((x40 * (x86 + (x40 * ((-1 * x84 * x56) + x85 + (2.40324066e-05 * x84 * x40))) + (-1 * x84 * x57))) + x87 + (-1 * x84 * x58))) + (x87 * x40))) + (-1 * x80 * x75 * x60 * x47) + x47 + (-1 * x1 * x61))) + (x87 * x65 * x54) + x79 + (-1 * x80 * x76) + (-2 * x81 * x83 * x64 * x55));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve)/sizeof(FLT), (-1 * x71 * x73) + (-1 * x71));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag)/sizeof(FLT), -1 * sin(x72));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha)/sizeof(FLT), x73);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag)/sizeof(FLT), (-1 * x73 * x74) + (-1 * x74));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase)/sizeof(FLT), (-1 * x73 * x77) + (-1 * x77));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt)/sizeof(FLT), (-1 * x88 * x73) + (-1 * x88));
}

// Full version Jacobian of SurviveKalmanModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f0193083190>, <cnkalman.codegen.WrapMember object at 0x7f0193083400>, <cnkalman.codegen.WrapMember object at
// 0x7f0193083370>, <cnkalman.codegen.WrapMember object at 0x7f01930831c0>, <cnkalman.codegen.WrapMember object at
// 0x7f0193083580>, <cnkalman.codegen.WrapMember object at 0x7f01930835e0>, <cnkalman.codegen.WrapMember object at
// 0x7f0193083550>]

static inline void SurviveKalmanModel_LightMeas_y_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanModel_LightMeas_y_gen2(dt, _x0, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanModel_LightMeas_y_gen2_jac_bsc0(Hx, dt, _x0, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_x_gen1(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x2 * x11) + (x8 * x7);
	const FLT x14 = x4 * x9;
	const FLT x15 = x6 * x10;
	const FLT x16 = (x2 * x15) + (x8 * x14);
	const FLT x17 = (x2 * x14) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x13 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x41 * x37;
	const FLT x43 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x43 * x37;
	const FLT x45 = (-1 * x44 * x27) + (-1 * x0 * x38) + (-1 * x42 * x25) + (x40 * x39);
	const FLT x46 = x37 * x39;
	const FLT x47 = (x46 * x25) + (-1 * x0 * x44) + (x38 * x27) + (x40 * x41);
	const FLT x48 = (-1 * x38 * x25) + (x0 * x42) + (x46 * x27) + (x40 * x43);
	const FLT x49 = (x45 * sensor_pt[1]) + (-1 * x48 * sensor_pt[2]) + (x47 * sensor_pt[0]);
	const FLT x50 = (-1 * x42 * x27) + (x40 * x23) + (x44 * x25) + (x0 * x46);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = (*_x0).Pose.Pos[0] + (2 * ((x50 * x51) + (-1 * x47 * x49))) + (*error_model).Pose.Pos[0] +
					sensor_pt[0] + (x52 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x54 = (-1 * x47 * sensor_pt[1]) + (x45 * sensor_pt[0]) + (x50 * sensor_pt[2]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x52 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x50 * x54))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x56 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] + (2 * ((x54 * x47) + (-1 * x51 * x48))) +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x52 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x57 = (-1 * x56 * (*lh_p).Rot[3]) + (x53 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x58 = (-1 * x55 * (*lh_p).Rot[1]) + (x53 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[0]);
	const FLT x59 = x55 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x57 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x60 = (-1 * x53 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x61 = (*lh_p).Pos[0] + x53 + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = (*lh_p).Pos[1] + x56 + (2 * ((x57 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x63 = -1 * x59;
	const FLT x64 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x61 * x61) + (x59 * x59))) * x62 * (*bsc0).tilt)) +
					(-1 * atan2(x61, x63));
	return x64 + (-1 * cos(1.5707963267949 + x64 + (*bsc0).gibpha) * (*bsc0).gibmag) +
		   ((atan2(x62, x63) * atan2(x62, x63)) * (*bsc0).curve);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[0];
	const FLT x4 = x3 * (*lh_p).Rot[3];
	const FLT x5 = x4 + x2;
	const FLT x6 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x7 = dt * dt;
	const FLT x8 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x9 = x8 * x8;
	const FLT x10 = x7 * x9;
	const FLT x11 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x12 = x11 * x11;
	const FLT x13 = x7 * x12;
	const FLT x14 = x6 * x6;
	const FLT x15 = x7 * x14;
	const FLT x16 = 1e-10 + x15 + x10 + x13;
	const FLT x17 = sqrt(x16);
	const FLT x18 = 0.5 * x17;
	const FLT x19 = sin(x18);
	const FLT x20 = x19 * x19;
	const FLT x21 = 1. / x16;
	const FLT x22 = x20 * x21;
	const FLT x23 = cos(x18);
	const FLT x24 = (x23 * x23) + (x22 * x10) + (x22 * x13) + (x22 * x15);
	const FLT x25 = 1. / sqrt(x24);
	const FLT x26 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x27 = cos(x26);
	const FLT x28 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x29 = sin(x28);
	const FLT x30 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x31 = sin(x30);
	const FLT x32 = x31 * x29;
	const FLT x33 = cos(x28);
	const FLT x34 = sin(x26);
	const FLT x35 = cos(x30);
	const FLT x36 = x34 * x35;
	const FLT x37 = (x33 * x36) + (-1 * x32 * x27);
	const FLT x38 = x35 * x27;
	const FLT x39 = (x33 * x38) + (x32 * x34);
	const FLT x40 = x31 * x33;
	const FLT x41 = (x40 * x27) + (x36 * x29);
	const FLT x42 = (x38 * x29) + (-1 * x40 * x34);
	const FLT x43 = 1. / sqrt((x42 * x42) + (x41 * x41) + (x37 * x37) + (x39 * x39));
	const FLT x44 = x43 * x39;
	const FLT x45 = x41 * x43;
	const FLT x46 = x42 * x43;
	const FLT x47 = x43 * x37;
	const FLT x48 = (-1 * x47 * (*_x0).Pose.Rot[1]) + (x46 * (*_x0).Pose.Rot[3]) + (x44 * (*_x0).Pose.Rot[2]) +
					(x45 * (*_x0).Pose.Rot[0]);
	const FLT x49 = x48 * x25;
	const FLT x50 = x19 * (1. / x17);
	const FLT x51 = dt * x50;
	const FLT x52 = x51 * x49;
	const FLT x53 = (-1 * x46 * (*_x0).Pose.Rot[1]) + (x44 * (*_x0).Pose.Rot[0]) + (-1 * x47 * (*_x0).Pose.Rot[3]) +
					(-1 * x45 * (*_x0).Pose.Rot[2]);
	const FLT x54 = x25 * x23;
	const FLT x55 = x54 * x53;
	const FLT x56 = (x45 * (*_x0).Pose.Rot[1]) + (x47 * (*_x0).Pose.Rot[0]) + (x44 * (*_x0).Pose.Rot[3]) +
					(-1 * x46 * (*_x0).Pose.Rot[2]);
	const FLT x57 = x51 * x25;
	const FLT x58 = x57 * x56;
	const FLT x59 = (x47 * (*_x0).Pose.Rot[2]) + (-1 * x45 * (*_x0).Pose.Rot[3]) + (x44 * (*_x0).Pose.Rot[1]) +
					(x46 * (*_x0).Pose.Rot[0]);
	const FLT x60 = x57 * x59;
	const FLT x61 = (-1 * x60 * x11) + (-1 * x8 * x58) + (-1 * x6 * x52) + x55;
	const FLT x62 = x54 * x56;
	const FLT x63 = x53 * x57;
	const FLT x64 = (x52 * x11) + (x8 * x63) + (-1 * x6 * x60) + x62;
	const FLT x65 = x54 * x59;
	const FLT x66 = (x63 * x11) + (-1 * x8 * x52) + (x6 * x58) + x65;
	const FLT x67 = (-1 * x66 * sensor_pt[2]) + (x61 * sensor_pt[1]) + (x64 * sensor_pt[0]);
	const FLT x68 = x54 * x48;
	const FLT x69 = (-1 * x58 * x11) + x68 + (x8 * x60) + (x6 * x63);
	const FLT x70 = (-1 * x69 * sensor_pt[0]) + (x61 * sensor_pt[2]) + (x66 * sensor_pt[1]);
	const FLT x71 = 1.0 / 2.0 * x0;
	const FLT x72 = (*_x0).Pose.Pos[0] + (2 * ((x70 * x69) + (-1 * x64 * x67))) + (*error_model).Pose.Pos[0] +
					(x71 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x73 = (-1 * x64 * sensor_pt[1]) + (x61 * sensor_pt[0]) + (x69 * sensor_pt[2]);
	const FLT x74 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x71 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x67 * x66) + (-1 * x73 * x69))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x75 = (*_x0).Pose.Pos[1] + (2 * ((x73 * x64) + (-1 * x70 * x66))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x71 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x76 = (x72 * (*lh_p).Rot[0]) + (-1 * x75 * (*lh_p).Rot[3]) + (x74 * (*lh_p).Rot[2]);
	const FLT x77 = (-1 * x74 * (*lh_p).Rot[1]) + (x72 * (*lh_p).Rot[3]) + (x75 * (*lh_p).Rot[0]);
	const FLT x78 = x74 + (2 * ((x77 * (*lh_p).Rot[1]) + (-1 * x76 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x79 = 1. / x78;
	const FLT x80 = x3 * (*lh_p).Rot[2];
	const FLT x81 = x1 * (*lh_p).Rot[3];
	const FLT x82 = x81 + (-1 * x80);
	const FLT x83 = x78 * x78;
	const FLT x84 = 1. / x83;
	const FLT x85 = (-1 * x72 * (*lh_p).Rot[2]) + (x74 * (*lh_p).Rot[0]) + (x75 * (*lh_p).Rot[1]);
	const FLT x86 = x75 + (*lh_p).Pos[1] + (2 * ((x76 * (*lh_p).Rot[3]) + (-1 * x85 * (*lh_p).Rot[1])));
	const FLT x87 = x84 * x86;
	const FLT x88 = -1 * x78;
	const FLT x89 = x86 * x86;
	const FLT x90 = 2 * (1. / (x83 + x89)) * x83 * atan2(x86, x88) * (*bsc0).curve;
	const FLT x91 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x92 = -1 * x0 * x91;
	const FLT x93 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x94 = (-1 * x0 * x93) + x71;
	const FLT x95 = x94 + x92;
	const FLT x96 = x72 + (*lh_p).Pos[0] + (2 * ((x85 * (*lh_p).Rot[2]) + (-1 * x77 * (*lh_p).Rot[3])));
	const FLT x97 = x84 * x96;
	const FLT x98 = x83 + (x96 * x96);
	const FLT x99 = 1. / x98;
	const FLT x100 = x83 * x99;
	const FLT x101 = (1. / sqrt(x98)) * (*bsc0).tilt;
	const FLT x102 = 2 * x96;
	const FLT x103 = 2 * x78;
	const FLT x104 = 1.0 / 2.0 * x86 * (1. / (x98 * sqrt(x98))) * (*bsc0).tilt;
	const FLT x105 = 1. / sqrt(1 + (-1 * x89 * x99 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x106 = (-1 * x105 * ((-1 * ((x82 * x103) + (x95 * x102)) * x104) + (x5 * x101))) +
					 (-1 * ((x82 * x97) + (-1 * x79 * x95)) * x100);
	const FLT x107 = sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x86 * x101)) +
						 (-1 * atan2(x96, x88))) *
					 (*bsc0).gibmag;
	const FLT x108 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x109 = -1 * x0 * x108;
	const FLT x110 = x109 + x92 + x71;
	const FLT x111 = x0 * (*lh_p).Rot[3] * (*lh_p).Rot[2];
	const FLT x112 = x3 * (*lh_p).Rot[1];
	const FLT x113 = x112 + x111;
	const FLT x114 = x2 + (-1 * x4);
	const FLT x115 = (-1 * x105 * ((-1 * ((x103 * x113) + (x102 * x114)) * x104) + (x101 * x110))) +
					 (-1 * ((x97 * x113) + (-1 * x79 * x114)) * x100);
	const FLT x116 = x111 + (-1 * x112);
	const FLT x117 = x94 + x109;
	const FLT x118 = x80 + x81;
	const FLT x119 = (-1 * x105 * ((-1 * ((x103 * x117) + (x102 * x118)) * x104) + (x101 * x116))) +
					 (-1 * ((x97 * x117) + (-1 * x79 * x118)) * x100);
	const FLT x120 = 2 * (*lh_p).Rot[2];
	const FLT x121 = x120 * (*lh_p).Rot[1];
	const FLT x122 = 2 * (*lh_p).Rot[0];
	const FLT x123 = x122 * (*lh_p).Rot[3];
	const FLT x124 = x123 + x121;
	const FLT x125 = x122 * (*lh_p).Rot[2];
	const FLT x126 = 2 * (*lh_p).Rot[3];
	const FLT x127 = x126 * (*lh_p).Rot[1];
	const FLT x128 = x127 + (-1 * x125);
	const FLT x129 = 2 * x91;
	const FLT x130 = -1 * x129;
	const FLT x131 = 2 * x93;
	const FLT x132 = -1 * x131;
	const FLT x133 = 1 + x132 + x130;
	const FLT x134 = (-1 * x105 * ((-1 * ((x103 * x128) + (x102 * x133)) * x104) + (x101 * x124))) +
					 (-1 * ((x97 * x128) + (-1 * x79 * x133)) * x100);
	const FLT x135 = 2 * x108;
	const FLT x136 = 1 + (-1 * x135);
	const FLT x137 = x136 + x130;
	const FLT x138 = x126 * (*lh_p).Rot[2];
	const FLT x139 = x122 * (*lh_p).Rot[1];
	const FLT x140 = x139 + x138;
	const FLT x141 = x121 + (-1 * x123);
	const FLT x142 = (-1 * x105 * ((-1 * ((x103 * x140) + (x102 * x141)) * x104) + (x101 * x137))) +
					 (-1 * ((x97 * x140) + (-1 * x79 * x141)) * x100);
	const FLT x143 = x138 + (-1 * x139);
	const FLT x144 = x136 + x132;
	const FLT x145 = x125 + x127;
	const FLT x146 = (-1 * x105 * ((-1 * ((x103 * x144) + (x102 * x145)) * x104) + (x101 * x143))) +
					 (-1 * ((x97 * x144) + (-1 * x79 * x145)) * x100);
	const FLT x147 = x57 * x47;
	const FLT x148 = x6 * x147;
	const FLT x149 = x54 * x46;
	const FLT x150 = x57 * x44;
	const FLT x151 = x11 * x150;
	const FLT x152 = x57 * x45;
	const FLT x153 = -1 * x8 * x152;
	const FLT x154 = x153 + x151;
	const FLT x155 = x154 + x148 + x149;
	const FLT x156 = x57 * x46;
	const FLT x157 = x11 * x156;
	const FLT x158 = -1 * x157;
	const FLT x159 = x6 * x152;
	const FLT x160 = -1 * x159;
	const FLT x161 = x8 * x147;
	const FLT x162 = x54 * x44;
	const FLT x163 = x162 + (-1 * x161);
	const FLT x164 = x158 + x163 + x160;
	const FLT x165 = x8 * x150;
	const FLT x166 = x54 * x47;
	const FLT x167 = x11 * x152;
	const FLT x168 = -1 * x6 * x156;
	const FLT x169 = x168 + x167;
	const FLT x170 = x169 + x165 + x166;
	const FLT x171 = (x170 * sensor_pt[0]) + (-1 * x155 * sensor_pt[2]) + (x164 * sensor_pt[1]);
	const FLT x172 = 2 * x64;
	const FLT x173 = x8 * x156;
	const FLT x174 = x54 * x45;
	const FLT x175 = -1 * x11 * x147;
	const FLT x176 = x6 * x150;
	const FLT x177 = x176 + x175;
	const FLT x178 = x177 + x173 + x174;
	const FLT x179 = (-1 * x178 * sensor_pt[0]) + (x155 * sensor_pt[1]) + (x164 * sensor_pt[2]);
	const FLT x180 = 2 * x69;
	const FLT x181 = 2 * x67;
	const FLT x182 = 2 * x70;
	const FLT x183 = (x178 * x182) + (-1 * x170 * x181) + (-1 * x171 * x172) + (x179 * x180);
	const FLT x184 = (x178 * sensor_pt[2]) + (-1 * x170 * sensor_pt[1]) + (x164 * sensor_pt[0]);
	const FLT x185 = 2 * x66;
	const FLT x186 = 2 * x73;
	const FLT x187 = (-1 * x178 * x186) + (-1 * x180 * x184) + (x181 * x155) + (x171 * x185);
	const FLT x188 = (x172 * x184) + (-1 * x179 * x185) + (-1 * x182 * x155) + (x170 * x186);
	const FLT x189 = (x188 * (*lh_p).Rot[1]) + (-1 * x183 * (*lh_p).Rot[2]) + (x187 * (*lh_p).Rot[0]);
	const FLT x190 = 2 * (*lh_p).Rot[1];
	const FLT x191 = (x187 * (*lh_p).Rot[2]) + (-1 * x188 * (*lh_p).Rot[3]) + (x183 * (*lh_p).Rot[0]);
	const FLT x192 = (-1 * x189 * x190) + x188 + (x126 * x191);
	const FLT x193 = (-1 * x187 * (*lh_p).Rot[1]) + (x188 * (*lh_p).Rot[0]) + (x183 * (*lh_p).Rot[3]);
	const FLT x194 = x187 + (-1 * x120 * x191) + (x190 * x193);
	const FLT x195 = x183 + (-1 * x126 * x193) + (x120 * x189);
	const FLT x196 = (-1 * x105 * ((-1 * ((x103 * x194) + (x102 * x195)) * x104) + (x101 * x192))) +
					 (-1 * ((x97 * x194) + (-1 * x79 * x195)) * x100);
	const FLT x197 = -1 * x149;
	const FLT x198 = (-1 * x151) + x153;
	const FLT x199 = x198 + x148 + x197;
	const FLT x200 = x161 + x162;
	const FLT x201 = x200 + x158 + x159;
	const FLT x202 = -1 * x173;
	const FLT x203 = (-1 * x176) + x175;
	const FLT x204 = x203 + x202 + x174;
	const FLT x205 = (x204 * sensor_pt[0]) + (x199 * sensor_pt[1]) + (-1 * x201 * sensor_pt[2]);
	const FLT x206 = -1 * x166;
	const FLT x207 = (-1 * x167) + x168;
	const FLT x208 = x207 + x165 + x206;
	const FLT x209 = (x201 * sensor_pt[1]) + (x199 * sensor_pt[2]) + (-1 * x208 * sensor_pt[0]);
	const FLT x210 = (-1 * x204 * x181) + (x208 * x182) + (-1 * x205 * x172) + (x209 * x180);
	const FLT x211 = (-1 * x204 * sensor_pt[1]) + (x208 * sensor_pt[2]) + (x199 * sensor_pt[0]);
	const FLT x212 = (x205 * x185) + (-1 * x208 * x186) + (x201 * x181) + (-1 * x211 * x180);
	const FLT x213 = (-1 * x209 * x185) + (x204 * x186) + (-1 * x201 * x182) + (x211 * x172);
	const FLT x214 = (x213 * (*lh_p).Rot[1]) + (-1 * x210 * (*lh_p).Rot[2]) + (x212 * (*lh_p).Rot[0]);
	const FLT x215 = 2 * ((x212 * (*lh_p).Rot[2]) + (-1 * x213 * (*lh_p).Rot[3]) + (x210 * (*lh_p).Rot[0]));
	const FLT x216 = x213 + (-1 * x214 * x190) + (x215 * (*lh_p).Rot[3]);
	const FLT x217 = (x213 * (*lh_p).Rot[0]) + (-1 * x212 * (*lh_p).Rot[1]) + (x210 * (*lh_p).Rot[3]);
	const FLT x218 = x212 + (-1 * x215 * (*lh_p).Rot[2]) + (x217 * x190);
	const FLT x219 = x210 + (-1 * x217 * x126) + (x214 * x120);
	const FLT x220 = (-1 * x105 * ((-1 * ((x218 * x103) + (x219 * x102)) * x104) + (x216 * x101))) +
					 (-1 * ((x97 * x218) + (-1 * x79 * x219)) * x100);
	const FLT x221 = -1 * x174;
	const FLT x222 = x203 + x173 + x221;
	const FLT x223 = -1 * x165;
	const FLT x224 = x166 + x207 + x223;
	const FLT x225 = -1 * x148;
	const FLT x226 = x154 + x225 + x197;
	const FLT x227 = (x226 * sensor_pt[0]) + (x222 * sensor_pt[1]) + (-1 * x224 * sensor_pt[2]);
	const FLT x228 = x200 + x160 + x157;
	const FLT x229 = (-1 * x228 * sensor_pt[0]) + (x224 * sensor_pt[1]) + (x222 * sensor_pt[2]);
	const FLT x230 = (x229 * x180) + (x228 * x182) + (-1 * x227 * x172) + (-1 * x226 * x181);
	const FLT x231 = (-1 * x226 * sensor_pt[1]) + (x228 * sensor_pt[2]) + (x222 * sensor_pt[0]);
	const FLT x232 = (x227 * x185) + (x224 * x181) + (-1 * x231 * x180) + (-1 * x228 * x186);
	const FLT x233 = (x231 * x172) + (x226 * x186) + (-1 * x224 * x182) + (-1 * x229 * x185);
	const FLT x234 = (x233 * (*lh_p).Rot[1]) + (-1 * x230 * (*lh_p).Rot[2]) + (x232 * (*lh_p).Rot[0]);
	const FLT x235 = (x232 * (*lh_p).Rot[2]) + (-1 * x233 * (*lh_p).Rot[3]) + (x230 * (*lh_p).Rot[0]);
	const FLT x236 = x233 + (-1 * x234 * x190) + (x235 * x126);
	const FLT x237 = (x233 * (*lh_p).Rot[0]) + (x230 * (*lh_p).Rot[3]) + (-1 * x232 * (*lh_p).Rot[1]);
	const FLT x238 = x232 + (-1 * x235 * x120) + (x237 * x190);
	const FLT x239 = x230 + (-1 * x237 * x126) + (x234 * x120);
	const FLT x240 = (-1 * x105 * ((-1 * ((x238 * x103) + (x239 * x102)) * x104) + (x236 * x101))) +
					 (-1 * ((x97 * x238) + (-1 * x79 * x239)) * x100);
	const FLT x241 = x157 + x163 + x159;
	const FLT x242 = x169 + x223 + x206;
	const FLT x243 = x198 + x149 + x225;
	const FLT x244 = (x243 * sensor_pt[2]) + (-1 * x241 * sensor_pt[1]) + (x242 * sensor_pt[0]);
	const FLT x245 = x177 + x221 + x202;
	const FLT x246 = (x241 * sensor_pt[0]) + (-1 * x245 * sensor_pt[2]) + (x242 * sensor_pt[1]);
	const FLT x247 = (x246 * x185) + (-1 * x244 * x180) + (-1 * x243 * x186) + (x245 * x181);
	const FLT x248 = (x245 * sensor_pt[1]) + (x242 * sensor_pt[2]) + (-1 * x243 * sensor_pt[0]);
	const FLT x249 = (x248 * x180) + (-1 * x246 * x172) + (x243 * x182) + (-1 * x241 * x181);
	const FLT x250 = (x244 * x172) + (x241 * x186) + (-1 * x245 * x182) + (-1 * x248 * x185);
	const FLT x251 = (x250 * (*lh_p).Rot[1]) + (x247 * (*lh_p).Rot[0]) + (-1 * x249 * (*lh_p).Rot[2]);
	const FLT x252 = (x247 * (*lh_p).Rot[2]) + (x249 * (*lh_p).Rot[0]) + (-1 * x250 * (*lh_p).Rot[3]);
	const FLT x253 = x250 + (-1 * x251 * x190) + (x252 * x126);
	const FLT x254 = (x250 * (*lh_p).Rot[0]) + (-1 * x247 * (*lh_p).Rot[1]) + (x249 * (*lh_p).Rot[3]);
	const FLT x255 = (x254 * x190) + x247 + (-1 * x252 * x120);
	const FLT x256 = x249 + (-1 * x254 * x126) + (x251 * x120);
	const FLT x257 = (-1 * x105 * ((-1 * ((x255 * x103) + (x256 * x102)) * x104) + (x253 * x101))) +
					 (-1 * ((x97 * x255) + (-1 * x79 * x256)) * x100);
	const FLT x258 = dt * dt * dt;
	const FLT x259 = 0.5 * x21;
	const FLT x260 = x258 * x259;
	const FLT x261 = x68 * x260;
	const FLT x262 = x11 * x11 * x11;
	const FLT x263 = dt * dt * dt * dt;
	const FLT x264 = 1.0 * x23;
	const FLT x265 = x19 * (1. / (x16 * sqrt(x16)));
	const FLT x266 = x264 * x265;
	const FLT x267 = x266 * x263;
	const FLT x268 = 2 * x22;
	const FLT x269 = x7 * x268;
	const FLT x270 = 2 * x20 * (1. / (x16 * x16));
	const FLT x271 = x270 * x263;
	const FLT x272 = x11 * x264;
	const FLT x273 = x265 * x263;
	const FLT x274 = x273 * x272;
	const FLT x275 = x7 * x50;
	const FLT x276 = x14 * x271;
	const FLT x277 = (-1 * x275 * x272) + (-1 * x11 * x276) + (x14 * x274) + (x11 * x269) + (x9 * x274) +
					 (x267 * x262) + (-1 * x271 * x262) + (-1 * x9 * x11 * x271);
	const FLT x278 = 1.0 / 2.0 * (1. / (x24 * sqrt(x24)));
	const FLT x279 = x51 * x278;
	const FLT x280 = x59 * x279;
	const FLT x281 = x277 * x280;
	const FLT x282 = x23 * x278;
	const FLT x283 = x277 * x282;
	const FLT x284 = x56 * x25;
	const FLT x285 = 0.5 * x275;
	const FLT x286 = x53 * x279;
	const FLT x287 = x277 * x286;
	const FLT x288 = x265 * x258;
	const FLT x289 = x49 * x288;
	const FLT x290 = x48 * x279;
	const FLT x291 = x11 * x290;
	const FLT x292 = x8 * x11;
	const FLT x293 = x55 * x260;
	const FLT x294 = x8 * x288;
	const FLT x295 = x53 * x25;
	const FLT x296 = x11 * x295;
	const FLT x297 = (-1 * x296 * x294) + (x293 * x292);
	const FLT x298 = x59 * x25;
	const FLT x299 = x11 * x298;
	const FLT x300 = x6 * x288;
	const FLT x301 = x65 * x259;
	const FLT x302 = x258 * x301;
	const FLT x303 = x6 * x302;
	const FLT x304 = (-1 * x11 * x303) + (x299 * x300);
	const FLT x305 = x304 + (-1 * x277 * x291) + (-1 * x12 * x289) + x52 + x297 + (x6 * x281) + (x12 * x261) +
					 (-1 * x56 * x283) + (-1 * x8 * x287) + (-1 * x11 * x284 * x285);
	const FLT x306 = x6 * x289;
	const FLT x307 = x11 * x306;
	const FLT x308 = x56 * x279;
	const FLT x309 = x8 * x308;
	const FLT x310 = x277 * x290;
	const FLT x311 = x6 * x261;
	const FLT x312 = x11 * x311;
	const FLT x313 = -1 * x60;
	const FLT x314 = x12 * x288;
	const FLT x315 = x288 * x284;
	const FLT x316 = x62 * x260;
	const FLT x317 = (-1 * x292 * x316) + (x292 * x315);
	const FLT x318 = x317 + (-1 * x312) + (x298 * x314) + x313 + (-1 * x296 * x285) + (x6 * x310) + (-1 * x12 * x302) +
					 x307 + (x277 * x309) + (-1 * x53 * x283) + (x11 * x281);
	const FLT x319 = -1 * x58;
	const FLT x320 = x292 * x302;
	const FLT x321 = x299 * x294;
	const FLT x322 = x11 * x308;
	const FLT x323 = 0.5 * x49;
	const FLT x324 = x275 * x323;
	const FLT x325 = x6 * x293;
	const FLT x326 = (-1 * x296 * x300) + (x11 * x325);
	const FLT x327 = (-1 * x48 * x283) + (-1 * x11 * x324) + (-1 * x8 * x281) + (x277 * x322) + (-1 * x321) +
					 (-1 * x12 * x316) + x319 + x326 + (x12 * x315) + (-1 * x6 * x287) + x320;
	const FLT x328 = (x327 * sensor_pt[2]) + (-1 * x305 * sensor_pt[1]) + (x318 * sensor_pt[0]);
	const FLT x329 = x6 * x316;
	const FLT x330 = x11 * x329;
	const FLT x331 = x6 * x315;
	const FLT x332 = x11 * x331;
	const FLT x333 = x292 * x289;
	const FLT x334 = x6 * x308;
	const FLT x335 = x292 * x261;
	const FLT x336 = (-1 * x11 * x287) + x330 + x63 + (x12 * x293) + (-1 * x299 * x285) + (-1 * x295 * x314) + x333 +
					 (x8 * x310) + (-1 * x332) + (-1 * x277 * x334) + (-1 * x59 * x283) + (-1 * x335);
	const FLT x337 = (x305 * sensor_pt[0]) + (x318 * sensor_pt[1]) + (-1 * x336 * sensor_pt[2]);
	const FLT x338 = (-1 * x327 * x186) + (x336 * x181) + (-1 * x328 * x180) + (x337 * x185);
	const FLT x339 = (x336 * sensor_pt[1]) + (-1 * x327 * sensor_pt[0]) + (x318 * sensor_pt[2]);
	const FLT x340 = (x339 * x180) + (x327 * x182) + (-1 * x337 * x172) + (-1 * x305 * x181);
	const FLT x341 = (x328 * x172) + (x305 * x186) + (-1 * x339 * x185) + (-1 * x336 * x182);
	const FLT x342 = (x341 * (*lh_p).Rot[1]) + (x338 * (*lh_p).Rot[0]) + (-1 * x340 * (*lh_p).Rot[2]);
	const FLT x343 = 2 * ((x338 * (*lh_p).Rot[2]) + (-1 * x341 * (*lh_p).Rot[3]) + (x340 * (*lh_p).Rot[0]));
	const FLT x344 = x341 + (-1 * x342 * x190) + (x343 * (*lh_p).Rot[3]);
	const FLT x345 = 2 * ((x341 * (*lh_p).Rot[0]) + (-1 * x338 * (*lh_p).Rot[1]) + (x340 * (*lh_p).Rot[3]));
	const FLT x346 = x338 + (-1 * x343 * (*lh_p).Rot[2]) + (x345 * (*lh_p).Rot[1]);
	const FLT x347 = x340 + (x342 * x120) + (-1 * x345 * (*lh_p).Rot[3]);
	const FLT x348 = (-1 * x105 * ((-1 * ((x346 * x103) + (x347 * x102)) * x104) + (x344 * x101))) +
					 (-1 * ((x97 * x346) + (-1 * x79 * x347)) * x100);
	const FLT x349 = x6 * x7;
	const FLT x350 = x50 * x349;
	const FLT x351 = 0.5 * x350;
	const FLT x352 = x6 * x267;
	const FLT x353 = x6 * x271;
	const FLT x354 = (x6 * x6 * x6) * x263;
	const FLT x355 = (-1 * x270 * x354) + (x268 * x349) + (x266 * x354) + (-1 * x12 * x353) + (x12 * x352) +
					 (x9 * x352) + (-1 * x264 * x350) + (-1 * x9 * x353);
	const FLT x356 = x280 * x355;
	const FLT x357 = x286 * x355;
	const FLT x358 = x14 * x288;
	const FLT x359 = x282 * x355;
	const FLT x360 = x6 * x294;
	const FLT x361 = (-1 * x295 * x360) + (x8 * x325);
	const FLT x362 = x361 + (-1 * x307) + (-1 * x56 * x359) + x312 + (-1 * x291 * x355) + x313 + (-1 * x284 * x351) +
					 (-1 * x14 * x302) + (x6 * x356) + (x298 * x358) + (-1 * x8 * x357);
	const FLT x363 = -1 * x52;
	const FLT x364 = x8 * x331;
	const FLT x365 = x290 * x355;
	const FLT x366 = x8 * x329;
	const FLT x367 = x304 + (x11 * x356) + (x6 * x365) + (-1 * x366) + (x355 * x309) + x364 + x363 +
					 (-1 * x295 * x351) + (-1 * x14 * x261) + (x14 * x289) + (-1 * x53 * x359);
	const FLT x368 = x298 * x360;
	const FLT x369 = x8 * x303;
	const FLT x370 = x332 + (x14 * x293) + (-1 * x295 * x358) + (-1 * x330) + x63 + x369 + (-1 * x368) +
					 (-1 * x8 * x356) + (-1 * x6 * x357) + (-1 * x48 * x359) + (x355 * x322) + (-1 * x350 * x323);
	const FLT x371 = (x370 * sensor_pt[2]) + (-1 * x362 * sensor_pt[1]) + (x367 * sensor_pt[0]);
	const FLT x372 = 0.5 * x298;
	const FLT x373 = (-1 * x8 * x311) + (x8 * x306);
	const FLT x374 = (-1 * x11 * x357) + (x8 * x365) + (x14 * x316) + x326 + x373 + (-1 * x59 * x359) +
					 (-1 * x372 * x350) + x58 + (-1 * x355 * x334) + (-1 * x14 * x315);
	const FLT x375 = (x362 * sensor_pt[0]) + (-1 * x374 * sensor_pt[2]) + (x367 * sensor_pt[1]);
	const FLT x376 = (x375 * x185) + (x374 * x181) + (-1 * x371 * x180) + (-1 * x370 * x186);
	const FLT x377 = (x374 * sensor_pt[1]) + (x367 * sensor_pt[2]) + (-1 * x370 * sensor_pt[0]);
	const FLT x378 = (x377 * x180) + (-1 * x375 * x172) + (-1 * x362 * x181) + (x370 * x182);
	const FLT x379 = (x371 * x172) + (-1 * x374 * x182) + (-1 * x377 * x185) + (x362 * x186);
	const FLT x380 = (x379 * (*lh_p).Rot[1]) + (x376 * (*lh_p).Rot[0]) + (-1 * x378 * (*lh_p).Rot[2]);
	const FLT x381 = (x376 * (*lh_p).Rot[2]) + (-1 * x379 * (*lh_p).Rot[3]) + (x378 * (*lh_p).Rot[0]);
	const FLT x382 = x379 + (-1 * x380 * x190) + (x381 * x126);
	const FLT x383 = (x379 * (*lh_p).Rot[0]) + (-1 * x376 * (*lh_p).Rot[1]) + (x378 * (*lh_p).Rot[3]);
	const FLT x384 = (x383 * x190) + x376 + (-1 * x381 * x120);
	const FLT x385 = x378 + (-1 * x383 * x126) + (x380 * x120);
	const FLT x386 = (-1 * x105 * ((-1 * ((x384 * x103) + (x385 * x102)) * x104) + (x382 * x101))) +
					 (-1 * ((x97 * x384) + (-1 * x79 * x385)) * x100);
	const FLT x387 = x9 * x258;
	const FLT x388 = x259 * x387;
	const FLT x389 = x8 * x285;
	const FLT x390 = x8 * x264;
	const FLT x391 = x273 * x390;
	const FLT x392 = x8 * x8 * x8;
	const FLT x393 = (-1 * x275 * x390) + (x14 * x391) + (-1 * x271 * x392) + (x8 * x269) + (-1 * x8 * x12 * x271) +
					 (x267 * x392) + (x12 * x391) + (-1 * x8 * x276);
	const FLT x394 = x280 * x393;
	const FLT x395 = x286 * x393;
	const FLT x396 = x282 * x393;
	const FLT x397 = x265 * x387;
	const FLT x398 = (-1 * x291 * x393) + (x6 * x394) + x335 + (-1 * x284 * x389) + (x55 * x388) + (-1 * x333) +
					 (-1 * x369) + x368 + (-1 * x8 * x395) + (-1 * x56 * x396) + x63 + (-1 * x295 * x397);
	const FLT x399 = x290 * x393;
	const FLT x400 = (-1 * x62 * x388) + x373 + (x6 * x399) + (-1 * x320) + (-1 * x53 * x396) + (-1 * x295 * x389) +
					 (x284 * x397) + x319 + (x11 * x394) + (x393 * x309) + x321;
	const FLT x401 = (-1 * x48 * x396) + (-1 * x298 * x397) + (x393 * x322) + (x387 * x301) + x60 + (-1 * x8 * x324) +
					 (-1 * x6 * x395) + x361 + x317 + (-1 * x8 * x394);
	const FLT x402 = (x401 * sensor_pt[2]) + (-1 * x398 * sensor_pt[1]) + (x400 * sensor_pt[0]);
	const FLT x403 = x297 + (-1 * x11 * x395) + x363 + (x8 * x399) + x366 + (-1 * x8 * x275 * x372) + (x49 * x397) +
					 (-1 * x59 * x396) + (-1 * x364) + (-1 * x68 * x388) + (-1 * x393 * x334);
	const FLT x404 = (x398 * sensor_pt[0]) + (-1 * x403 * sensor_pt[2]) + (x400 * sensor_pt[1]);
	const FLT x405 = (x403 * x181) + (-1 * x402 * x180) + (x404 * x185) + (-1 * x401 * x186);
	const FLT x406 = (x403 * sensor_pt[1]) + (-1 * x401 * sensor_pt[0]) + (x400 * sensor_pt[2]);
	const FLT x407 = (x406 * x180) + (-1 * x398 * x181) + (-1 * x404 * x172) + (x401 * x182);
	const FLT x408 = (x402 * x172) + (-1 * x403 * x182) + (x398 * x186) + (-1 * x406 * x185);
	const FLT x409 = (x408 * (*lh_p).Rot[1]) + (x405 * (*lh_p).Rot[0]) + (-1 * x407 * (*lh_p).Rot[2]);
	const FLT x410 = (x405 * (*lh_p).Rot[2]) + (-1 * x408 * (*lh_p).Rot[3]) + (x407 * (*lh_p).Rot[0]);
	const FLT x411 = (-1 * x409 * x190) + x408 + (x410 * x126);
	const FLT x412 = (-1 * x405 * (*lh_p).Rot[1]) + (x408 * (*lh_p).Rot[0]) + (x407 * (*lh_p).Rot[3]);
	const FLT x413 = x405 + (-1 * x410 * x120) + (x412 * x190);
	const FLT x414 = x407 + (-1 * x412 * x126) + (x409 * x120);
	const FLT x415 = (-1 * x105 * ((-1 * ((x413 * x103) + (x414 * x102)) * x104) + (x411 * x101))) +
					 (-1 * ((x97 * x413) + (-1 * x79 * x414)) * x100);
	const FLT x416 = dt * x121;
	const FLT x417 = dt * x123;
	const FLT x418 = x417 + x416;
	const FLT x419 = dt * x125;
	const FLT x420 = dt * x127;
	const FLT x421 = x420 + (-1 * x419);
	const FLT x422 = -1 * dt * x131;
	const FLT x423 = (-1 * dt * x129) + dt;
	const FLT x424 = x423 + x422;
	const FLT x425 = (-1 * x105 * ((-1 * ((x421 * x103) + (x424 * x102)) * x104) + (x418 * x101))) +
					 (-1 * ((x97 * x421) + (-1 * x79 * x424)) * x100);
	const FLT x426 = -1 * dt * x135;
	const FLT x427 = x423 + x426;
	const FLT x428 = dt * x138;
	const FLT x429 = dt * x139;
	const FLT x430 = x429 + x428;
	const FLT x431 = x416 + (-1 * x417);
	const FLT x432 = (-1 * x105 * ((-1 * ((x430 * x103) + (x431 * x102)) * x104) + (x427 * x101))) +
					 (-1 * ((x97 * x430) + (-1 * x79 * x431)) * x100);
	const FLT x433 = x428 + (-1 * x429);
	const FLT x434 = x422 + dt + x426;
	const FLT x435 = x419 + x420;
	const FLT x436 = (-1 * x105 * ((-1 * ((x434 * x103) + (x435 * x102)) * x104) + (x433 * x101))) +
					 (-1 * ((x97 * x434) + (-1 * x79 * x435)) * x100);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						(x90 * ((x82 * x87) + (-1 * x5 * x79))) + x106 + (x107 * x106));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						x115 + (((x87 * x113) + (-1 * x79 * x110)) * x90) + (x107 * x115));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						x119 + (((x87 * x117) + (-1 * x79 * x116)) * x90) + (x107 * x119));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT),
						(((x87 * x128) + (-1 * x79 * x124)) * x90) + x134 + (x107 * x134));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT),
						(((x87 * x140) + (-1 * x79 * x137)) * x90) + x142 + (x107 * x142));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT),
						(((x87 * x144) + (-1 * x79 * x143)) * x90) + x146 + (x107 * x146));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x196 + (((x87 * x194) + (-1 * x79 * x192)) * x90) + (x107 * x196));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x220 + (((x87 * x218) + (-1 * x79 * x216)) * x90) + (x220 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x240 + (((x87 * x238) + (-1 * x79 * x236)) * x90) + (x240 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x257 + (((x87 * x255) + (-1 * x79 * x253)) * x90) + (x257 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x348 + (((x87 * x346) + (-1 * x79 * x344)) * x90) + (x348 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x386 + (((x87 * x384) + (-1 * x79 * x382)) * x90) + (x386 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x415 + (((x87 * x413) + (-1 * x79 * x411)) * x90) + (x415 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT),
						x425 + (((x87 * x421) + (-1 * x79 * x418)) * x90) + (x425 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT),
						x432 + (((x87 * x430) + (-1 * x79 * x427)) * x90) + (x432 * x107));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT),
						x436 + (((x87 * x434) + (-1 * x79 * x433)) * x90) + (x436 * x107));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[0];
	const FLT x4 = x3 * (*lh_p).Rot[3];
	const FLT x5 = x4 + x2;
	const FLT x6 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x8 = sin(x7);
	const FLT x9 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x10 = sin(x9);
	const FLT x11 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x12 = sin(x11);
	const FLT x13 = x12 * x10;
	const FLT x14 = x8 * x13;
	const FLT x15 = cos(x7);
	const FLT x16 = cos(x9);
	const FLT x17 = cos(x11);
	const FLT x18 = x17 * x16;
	const FLT x19 = x15 * x18;
	const FLT x20 = x19 + x14;
	const FLT x21 = x15 * x13;
	const FLT x22 = x8 * x18;
	const FLT x23 = x22 + (-1 * x21);
	const FLT x24 = x10 * x17;
	const FLT x25 = x8 * x24;
	const FLT x26 = x12 * x16;
	const FLT x27 = x26 * x15;
	const FLT x28 = x27 + x25;
	const FLT x29 = x8 * x26;
	const FLT x30 = x24 * x15;
	const FLT x31 = x30 + (-1 * x29);
	const FLT x32 = (x31 * x31) + (x28 * x28) + (x23 * x23) + (x20 * x20);
	const FLT x33 = 1. / sqrt(x32);
	const FLT x34 = x33 * (*_x0).Pose.Rot[2];
	const FLT x35 = x33 * (*_x0).Pose.Rot[0];
	const FLT x36 = x33 * (*_x0).Pose.Rot[3];
	const FLT x37 = x33 * (*_x0).Pose.Rot[1];
	const FLT x38 = (-1 * x37 * x23) + (x31 * x36) + (x34 * x20) + (x35 * x28);
	const FLT x39 = dt * dt;
	const FLT x40 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x41 = x40 * x40;
	const FLT x42 = x41 * x39;
	const FLT x43 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x44 = x43 * x43;
	const FLT x45 = x44 * x39;
	const FLT x46 = x6 * x6;
	const FLT x47 = x46 * x39;
	const FLT x48 = 1e-10 + x47 + x42 + x45;
	const FLT x49 = sqrt(x48);
	const FLT x50 = 0.5 * x49;
	const FLT x51 = sin(x50);
	const FLT x52 = x51 * x51;
	const FLT x53 = 1. / x48;
	const FLT x54 = x53 * x52;
	const FLT x55 = cos(x50);
	const FLT x56 = (x55 * x55) + (x54 * x42) + (x54 * x45) + (x54 * x47);
	const FLT x57 = 1. / sqrt(x56);
	const FLT x58 = x51 * x57;
	const FLT x59 = 1. / x49;
	const FLT x60 = dt * x59;
	const FLT x61 = x60 * x58;
	const FLT x62 = x61 * x38;
	const FLT x63 = (x35 * x20) + (-1 * x36 * x23) + (-1 * x31 * x37) + (-1 * x34 * x28);
	const FLT x64 = x57 * x55;
	const FLT x65 = x63 * x64;
	const FLT x66 = (x37 * x28) + (x35 * x23) + (x36 * x20) + (-1 * x31 * x34);
	const FLT x67 = x61 * x66;
	const FLT x68 = (x37 * x20) + (x34 * x23) + (-1 * x36 * x28) + (x31 * x35);
	const FLT x69 = x61 * x68;
	const FLT x70 = (-1 * x67 * x40) + (-1 * x6 * x62) + (-1 * x69 * x43) + x65;
	const FLT x71 = x64 * x66;
	const FLT x72 = x63 * x58;
	const FLT x73 = x72 * x60;
	const FLT x74 = (x62 * x43) + (x73 * x40) + (-1 * x6 * x69) + x71;
	const FLT x75 = x64 * x68;
	const FLT x76 = (x73 * x43) + (x6 * x67) + (-1 * x62 * x40) + x75;
	const FLT x77 = (-1 * x76 * sensor_pt[2]) + (x70 * sensor_pt[1]) + (x74 * sensor_pt[0]);
	const FLT x78 = x64 * x38;
	const FLT x79 = (-1 * x67 * x43) + x78 + (x69 * x40) + (x6 * x73);
	const FLT x80 = (-1 * x79 * sensor_pt[0]) + (x70 * sensor_pt[2]) + (x76 * sensor_pt[1]);
	const FLT x81 = 1.0 / 2.0 * x0;
	const FLT x82 = (*_x0).Pose.Pos[0] + (2 * ((x80 * x79) + (-1 * x74 * x77))) + (*error_model).Pose.Pos[0] +
					(x81 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x83 = (-1 * x74 * sensor_pt[1]) + (x70 * sensor_pt[0]) + (x79 * sensor_pt[2]);
	const FLT x84 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x77 * x76) + (-1 * x83 * x79))) +
					(x81 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x85 = (*_x0).Pose.Pos[1] + (2 * ((x83 * x74) + (-1 * x80 * x76))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x81 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x86 = (-1 * x85 * (*lh_p).Rot[3]) + (x82 * (*lh_p).Rot[0]) + (x84 * (*lh_p).Rot[2]);
	const FLT x87 = (x82 * (*lh_p).Rot[3]) + (-1 * x84 * (*lh_p).Rot[1]) + (x85 * (*lh_p).Rot[0]);
	const FLT x88 = x84 + (2 * ((x87 * (*lh_p).Rot[1]) + (-1 * x86 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x89 = 1. / x88;
	const FLT x90 = x3 * (*lh_p).Rot[2];
	const FLT x91 = x1 * (*lh_p).Rot[3];
	const FLT x92 = x91 + (-1 * x90);
	const FLT x93 = x88 * x88;
	const FLT x94 = 1. / x93;
	const FLT x95 = (-1 * x82 * (*lh_p).Rot[2]) + (x84 * (*lh_p).Rot[0]) + (x85 * (*lh_p).Rot[1]);
	const FLT x96 = x85 + (*lh_p).Pos[1] + (2 * ((x86 * (*lh_p).Rot[3]) + (-1 * x95 * (*lh_p).Rot[1])));
	const FLT x97 = x96 * x94;
	const FLT x98 = -1 * x88;
	const FLT x99 = x96 * x96;
	const FLT x100 = 2 * (1. / (x93 + x99)) * x93 * atan2(x96, x98) * (*bsc0).curve;
	const FLT x101 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x102 = -1 * x0 * x101;
	const FLT x103 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x104 = (-1 * x0 * x103) + x81;
	const FLT x105 = x104 + x102;
	const FLT x106 = x82 + (*lh_p).Pos[0] + (2 * ((x95 * (*lh_p).Rot[2]) + (-1 * x87 * (*lh_p).Rot[3])));
	const FLT x107 = x94 * x106;
	const FLT x108 = x93 + (x106 * x106);
	const FLT x109 = 1. / x108;
	const FLT x110 = x93 * x109;
	const FLT x111 = (1. / sqrt(x108)) * (*bsc0).tilt;
	const FLT x112 = 2 * x106;
	const FLT x113 = 2 * x88;
	const FLT x114 = 1.0 / 2.0 * x96 * (1. / (x108 * sqrt(x108))) * (*bsc0).tilt;
	const FLT x115 = 1. / sqrt(1 + (-1 * x99 * x109 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x116 = (-1 * x115 * ((-1 * x114 * ((x92 * x113) + (x105 * x112))) + (x5 * x111))) +
					 (-1 * ((x92 * x107) + (-1 * x89 * x105)) * x110);
	const FLT x117 = sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x96 * x111)) +
						 (-1 * atan2(x106, x98))) *
					 (*bsc0).gibmag;
	const FLT x118 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x119 = -1 * x0 * x118;
	const FLT x120 = x104 + x119;
	const FLT x121 = x0 * (*lh_p).Rot[3] * (*lh_p).Rot[2];
	const FLT x122 = x3 * (*lh_p).Rot[1];
	const FLT x123 = x122 + x121;
	const FLT x124 = x2 + (-1 * x4);
	const FLT x125 = (-1 * x115 * ((-1 * ((x113 * x123) + (x112 * x124)) * x114) + (x111 * x120))) +
					 (-1 * x110 * ((x107 * x123) + (-1 * x89 * x124)));
	const FLT x126 = x121 + (-1 * x122);
	const FLT x127 = x102 + x81 + x119;
	const FLT x128 = x90 + x91;
	const FLT x129 = (-1 * x115 * ((-1 * ((x113 * x127) + (x112 * x128)) * x114) + (x111 * x126))) +
					 (-1 * x110 * ((x107 * x127) + (-1 * x89 * x128)));
	const FLT x130 = 0.5 * x19;
	const FLT x131 = 0.5 * x14;
	const FLT x132 = x131 + x130;
	const FLT x133 = 2 * x31;
	const FLT x134 = 0.5 * x21;
	const FLT x135 = -1 * x134;
	const FLT x136 = 0.5 * x22;
	const FLT x137 = x136 + x135;
	const FLT x138 = 2 * x28;
	const FLT x139 = 0.5 * x25;
	const FLT x140 = -0.5 * x27;
	const FLT x141 = x140 + (-1 * x139);
	const FLT x142 = 2 * x23;
	const FLT x143 = 0.5 * x30;
	const FLT x144 = -1 * x143;
	const FLT x145 = 0.5 * x29;
	const FLT x146 = x145 + x144;
	const FLT x147 = 2 * x20;
	const FLT x148 = 1.0 / 2.0 * (1. / (x32 * sqrt(x32)));
	const FLT x149 = ((x146 * x147) + (x142 * x141) + (x133 * x132) + (x137 * x138)) * x148;
	const FLT x150 = x23 * x149;
	const FLT x151 = x31 * x149;
	const FLT x152 = -1 * x37 * x141;
	const FLT x153 = x20 * x149;
	const FLT x154 = x28 * x149;
	const FLT x155 = x36 * x132;
	const FLT x156 = (x35 * x137) + (-1 * x154 * (*_x0).Pose.Rot[0]) + x155 + (-1 * x151 * (*_x0).Pose.Rot[3]) +
					 (-1 * x153 * (*_x0).Pose.Rot[2]) + (x150 * (*_x0).Pose.Rot[1]) + x152 + (x34 * x146);
	const FLT x157 = x61 * x43;
	const FLT x158 = -1 * x37 * x132;
	const FLT x159 = x36 * x141;
	const FLT x160 = (-1 * x34 * x137) + (x150 * (*_x0).Pose.Rot[3]) + x158 + (x35 * x146) +
					 (x151 * (*_x0).Pose.Rot[1]) + (x154 * (*_x0).Pose.Rot[2]) + (-1 * x153 * (*_x0).Pose.Rot[0]) +
					 (-1 * x159);
	const FLT x161 = x61 * x40;
	const FLT x162 = x34 * x141;
	const FLT x163 = x35 * x132;
	const FLT x164 = x163 + (-1 * x150 * (*_x0).Pose.Rot[2]) + x162 + (-1 * x151 * (*_x0).Pose.Rot[0]) +
					 (-1 * x36 * x137) + (-1 * x153 * (*_x0).Pose.Rot[1]) + (x37 * x146) + (x154 * (*_x0).Pose.Rot[3]);
	const FLT x165 = x6 * x61;
	const FLT x166 = x34 * x132;
	const FLT x167 = x35 * x141;
	const FLT x168 = x167 + (-1 * x166) + (-1 * x153 * (*_x0).Pose.Rot[3]) + (x151 * (*_x0).Pose.Rot[2]) +
					 (-1 * x154 * (*_x0).Pose.Rot[1]) + (-1 * x150 * (*_x0).Pose.Rot[0]) + (x37 * x137) + (x36 * x146);
	const FLT x169 = (x64 * x168) + (-1 * x165 * x164) + (x156 * x157) + (x161 * x160);
	const FLT x170 = (x64 * x160) + (-1 * x165 * x156) + (-1 * x164 * x157) + (-1 * x161 * x168);
	const FLT x171 = x61 * x168;
	const FLT x172 = x61 * x160;
	const FLT x173 = (x6 * x172) + (x161 * x164) + (x64 * x156) + (-1 * x43 * x171);
	const FLT x174 = (x173 * sensor_pt[2]) + (-1 * x169 * sensor_pt[1]) + (x170 * sensor_pt[0]);
	const FLT x175 = 2 * x79;
	const FLT x176 = (x64 * x164) + (x6 * x171) + (x43 * x172) + (-1 * x161 * x156);
	const FLT x177 = (x169 * sensor_pt[0]) + (-1 * x176 * sensor_pt[2]) + (x170 * sensor_pt[1]);
	const FLT x178 = 2 * x76;
	const FLT x179 = 2 * x77;
	const FLT x180 = 2 * x83;
	const FLT x181 = (-1 * x173 * x180) + (x179 * x176) + (-1 * x174 * x175) + (x178 * x177);
	const FLT x182 = 2 * x80;
	const FLT x183 = 2 * x74;
	const FLT x184 = (x176 * sensor_pt[1]) + (-1 * x173 * sensor_pt[0]) + (x170 * sensor_pt[2]);
	const FLT x185 = (x175 * x184) + (-1 * x169 * x179) + (x173 * x182) + (-1 * x177 * x183);
	const FLT x186 = (-1 * x178 * x184) + (x174 * x183) + (x169 * x180) + (-1 * x176 * x182);
	const FLT x187 = (x186 * (*lh_p).Rot[1]) + (x181 * (*lh_p).Rot[0]) + (-1 * x185 * (*lh_p).Rot[2]);
	const FLT x188 = 2 * (*lh_p).Rot[1];
	const FLT x189 = (x181 * (*lh_p).Rot[2]) + (-1 * x186 * (*lh_p).Rot[3]) + (x185 * (*lh_p).Rot[0]);
	const FLT x190 = 2 * (*lh_p).Rot[3];
	const FLT x191 = x186 + (-1 * x187 * x188) + (x189 * x190);
	const FLT x192 = 2 * (*lh_p).Rot[2];
	const FLT x193 = (x186 * (*lh_p).Rot[0]) + (-1 * x181 * (*lh_p).Rot[1]) + (x185 * (*lh_p).Rot[3]);
	const FLT x194 = (-1 * x189 * x192) + x181 + (x188 * x193);
	const FLT x195 = x185 + (-1 * x190 * x193) + (x187 * x192);
	const FLT x196 = (-1 * x115 * ((-1 * ((x113 * x194) + (x112 * x195)) * x114) + (x111 * x191))) +
					 (-1 * x110 * ((x107 * x194) + (-1 * x89 * x195)));
	const FLT x197 = -1 * x136;
	const FLT x198 = x197 + x135;
	const FLT x199 = (-1 * x131) + x130;
	const FLT x200 = -1 * x145;
	const FLT x201 = x144 + x200;
	const FLT x202 = x139 + x140;
	const FLT x203 = ((x202 * x147) + (x201 * x142) + (x198 * x133) + (x199 * x138)) * x148;
	const FLT x204 = x23 * x203;
	const FLT x205 = x33 * x202;
	const FLT x206 = x28 * x203;
	const FLT x207 = x31 * x203;
	const FLT x208 = x20 * x203;
	const FLT x209 = (-1 * x208 * (*_x0).Pose.Rot[2]) + (-1 * x207 * (*_x0).Pose.Rot[3]) + (x205 * (*_x0).Pose.Rot[2]) +
					 (x204 * (*_x0).Pose.Rot[1]) + (-1 * x37 * x201) + (x36 * x198) + (x35 * x199) +
					 (-1 * x206 * (*_x0).Pose.Rot[0]);
	const FLT x210 = (x205 * (*_x0).Pose.Rot[0]) + (x206 * (*_x0).Pose.Rot[2]) + (x204 * (*_x0).Pose.Rot[3]) +
					 (-1 * x208 * (*_x0).Pose.Rot[0]) + (-1 * x36 * x201) + (-1 * x37 * x198) + (-1 * x34 * x199) +
					 (x207 * (*_x0).Pose.Rot[1]);
	const FLT x211 = (x207 * (*_x0).Pose.Rot[2]) + (x35 * x201) + (-1 * x204 * (*_x0).Pose.Rot[0]) +
					 (-1 * x206 * (*_x0).Pose.Rot[1]) + (-1 * x208 * (*_x0).Pose.Rot[3]) + (x205 * (*_x0).Pose.Rot[3]) +
					 (x37 * x199) + (-1 * x34 * x198);
	const FLT x212 = (x34 * x201) + (-1 * x204 * (*_x0).Pose.Rot[2]) + (x206 * (*_x0).Pose.Rot[3]) +
					 (-1 * x207 * (*_x0).Pose.Rot[0]) + (x205 * (*_x0).Pose.Rot[1]) + (x35 * x198) +
					 (-1 * x208 * (*_x0).Pose.Rot[1]) + (-1 * x36 * x199);
	const FLT x213 = (x64 * x212) + (x211 * x165) + (-1 * x209 * x161) + (x210 * x157);
	const FLT x214 = (x64 * x210) + (-1 * x211 * x161) + (-1 * x212 * x157) + (-1 * x209 * x165);
	const FLT x215 = (x64 * x211) + (-1 * x212 * x165) + (x210 * x161) + (x209 * x157);
	const FLT x216 = (-1 * x213 * sensor_pt[2]) + (x215 * sensor_pt[0]) + (x214 * sensor_pt[1]);
	const FLT x217 = (x210 * x165) + (x212 * x161) + (-1 * x211 * x157) + (x64 * x209);
	const FLT x218 = (x214 * sensor_pt[2]) + (x213 * sensor_pt[1]) + (-1 * x217 * sensor_pt[0]);
	const FLT x219 = (-1 * x216 * x183) + (-1 * x215 * x179) + (x217 * x182) + (x218 * x175);
	const FLT x220 = (x217 * sensor_pt[2]) + (-1 * x215 * sensor_pt[1]) + (x214 * sensor_pt[0]);
	const FLT x221 = (x213 * x179) + (x216 * x178) + (-1 * x217 * x180) + (-1 * x220 * x175);
	const FLT x222 = (x220 * x183) + (-1 * x218 * x178) + (-1 * x213 * x182) + (x215 * x180);
	const FLT x223 = 2 * ((x222 * (*lh_p).Rot[1]) + (-1 * x219 * (*lh_p).Rot[2]) + (x221 * (*lh_p).Rot[0]));
	const FLT x224 = 2 * ((x221 * (*lh_p).Rot[2]) + (-1 * x222 * (*lh_p).Rot[3]) + (x219 * (*lh_p).Rot[0]));
	const FLT x225 = (-1 * x223 * (*lh_p).Rot[1]) + x222 + (x224 * (*lh_p).Rot[3]);
	const FLT x226 = 2 * ((x222 * (*lh_p).Rot[0]) + (-1 * x221 * (*lh_p).Rot[1]) + (x219 * (*lh_p).Rot[3]));
	const FLT x227 = x221 + (-1 * x224 * (*lh_p).Rot[2]) + (x226 * (*lh_p).Rot[1]);
	const FLT x228 = x219 + (x223 * (*lh_p).Rot[2]) + (-1 * x226 * (*lh_p).Rot[3]);
	const FLT x229 = (-1 * x115 * ((-1 * ((x227 * x113) + (x228 * x112)) * x114) + (x225 * x111))) +
					 (-1 * x110 * ((x227 * x107) + (-1 * x89 * x228)));
	const FLT x230 = x143 + x200;
	const FLT x231 = x134 + x197;
	const FLT x232 = ((x231 * x147) + (x133 * x141) + (x230 * x138) + (x132 * x142)) * x148;
	const FLT x233 = x232 * (*_x0).Pose.Rot[0];
	const FLT x234 = x23 * x232;
	const FLT x235 = x31 * x232;
	const FLT x236 = x28 * x232;
	const FLT x237 = (x35 * x231) + (x236 * (*_x0).Pose.Rot[2]) + (-1 * x20 * x233) + (x235 * (*_x0).Pose.Rot[1]) +
					 x152 + (-1 * x34 * x230) + (-1 * x155) + (x234 * (*_x0).Pose.Rot[3]);
	const FLT x238 = x20 * x232;
	const FLT x239 = (-1 * x28 * x233) + (x35 * x230) + (-1 * x235 * (*_x0).Pose.Rot[3]) + (x234 * (*_x0).Pose.Rot[1]) +
					 x158 + (-1 * x238 * (*_x0).Pose.Rot[2]) + (x34 * x231) + x159;
	const FLT x240 = (x235 * (*_x0).Pose.Rot[2]) + (-1 * x238 * (*_x0).Pose.Rot[3]) + (-1 * x162) + x163 +
					 (-1 * x236 * (*_x0).Pose.Rot[1]) + (-1 * x23 * x233) + (x37 * x230) + (x36 * x231);
	const FLT x241 = x166 + (x37 * x231) + (-1 * x31 * x233) + (-1 * x234 * (*_x0).Pose.Rot[2]) +
					 (-1 * x238 * (*_x0).Pose.Rot[1]) + (-1 * x36 * x230) + x167 + (x236 * (*_x0).Pose.Rot[3]);
	const FLT x242 = (x64 * x241) + (x240 * x165) + (x237 * x157) + (-1 * x239 * x161);
	const FLT x243 = (x64 * x237) + (-1 * x241 * x157) + (-1 * x240 * x161) + (-1 * x239 * x165);
	const FLT x244 = (x64 * x240) + (-1 * x241 * x165) + (x239 * x157) + (x237 * x161);
	const FLT x245 = (-1 * x242 * sensor_pt[2]) + (x244 * sensor_pt[0]) + (x243 * sensor_pt[1]);
	const FLT x246 = (x241 * x161) + (x237 * x165) + (-1 * x240 * x157) + (x64 * x239);
	const FLT x247 = (x242 * sensor_pt[1]) + (x243 * sensor_pt[2]) + (-1 * x246 * sensor_pt[0]);
	const FLT x248 = (x247 * x175) + (x246 * x182) + (-1 * x245 * x183) + (-1 * x244 * x179);
	const FLT x249 = (x246 * sensor_pt[2]) + (-1 * x244 * sensor_pt[1]) + (x243 * sensor_pt[0]);
	const FLT x250 = (x242 * x179) + (x245 * x178) + (-1 * x246 * x180) + (-1 * x249 * x175);
	const FLT x251 = (-1 * x247 * x178) + (-1 * x242 * x182) + (x244 * x180) + (x249 * x183);
	const FLT x252 = (x251 * (*lh_p).Rot[1]) + (-1 * x248 * (*lh_p).Rot[2]) + (x250 * (*lh_p).Rot[0]);
	const FLT x253 = (x250 * (*lh_p).Rot[2]) + (-1 * x251 * (*lh_p).Rot[3]) + (x248 * (*lh_p).Rot[0]);
	const FLT x254 = x251 + (-1 * x252 * x188) + (x253 * x190);
	const FLT x255 = (x251 * (*lh_p).Rot[0]) + (-1 * x250 * (*lh_p).Rot[1]) + (x248 * (*lh_p).Rot[3]);
	const FLT x256 = x250 + (-1 * x253 * x192) + (x255 * x188);
	const FLT x257 = x248 + (-1 * x255 * x190) + (x252 * x192);
	const FLT x258 = (-1 * x115 * ((-1 * ((x256 * x113) + (x257 * x112)) * x114) + (x254 * x111))) +
					 (-1 * x110 * ((x256 * x107) + (-1 * x89 * x257)));
	const FLT x259 = x192 * (*lh_p).Rot[1];
	const FLT x260 = x190 * (*lh_p).Rot[0];
	const FLT x261 = x260 + x259;
	const FLT x262 = x192 * (*lh_p).Rot[0];
	const FLT x263 = x190 * (*lh_p).Rot[1];
	const FLT x264 = x263 + (-1 * x262);
	const FLT x265 = 2 * x101;
	const FLT x266 = -1 * x265;
	const FLT x267 = 2 * x103;
	const FLT x268 = 1 + (-1 * x267);
	const FLT x269 = x268 + x266;
	const FLT x270 = (-1 * x115 * ((-1 * ((x264 * x113) + (x269 * x112)) * x114) + (x261 * x111))) +
					 (-1 * x110 * ((x264 * x107) + (-1 * x89 * x269)));
	const FLT x271 = 2 * x118;
	const FLT x272 = -1 * x271;
	const FLT x273 = x268 + x272;
	const FLT x274 = x190 * (*lh_p).Rot[2];
	const FLT x275 = x188 * (*lh_p).Rot[0];
	const FLT x276 = x275 + x274;
	const FLT x277 = x259 + (-1 * x260);
	const FLT x278 = (-1 * x115 * ((-1 * ((x276 * x113) + (x277 * x112)) * x114) + (x273 * x111))) +
					 (-1 * x110 * ((x276 * x107) + (-1 * x89 * x277)));
	const FLT x279 = x274 + (-1 * x275);
	const FLT x280 = 1 + x272 + x266;
	const FLT x281 = x262 + x263;
	const FLT x282 = (-1 * x115 * ((-1 * ((x280 * x113) + (x281 * x112)) * x114) + (x279 * x111))) +
					 (-1 * x110 * ((x280 * x107) + (-1 * x89 * x281)));
	const FLT x283 = dt * dt * dt;
	const FLT x284 = 0.5 * x53 * x283;
	const FLT x285 = x44 * x284;
	const FLT x286 = x6 * x51;
	const FLT x287 = dt * dt * dt * dt;
	const FLT x288 = (x43 * x43 * x43) * x287;
	const FLT x289 = 1. / (x48 * sqrt(x48));
	const FLT x290 = 1.0 * x55;
	const FLT x291 = x51 * x290;
	const FLT x292 = x291 * x289;
	const FLT x293 = 2 * x43;
	const FLT x294 = x54 * x39;
	const FLT x295 = x52 * (1. / (x48 * x48));
	const FLT x296 = 2 * x295;
	const FLT x297 = x41 * x287;
	const FLT x298 = x293 * x295;
	const FLT x299 = x51 * x43;
	const FLT x300 = x299 * x290;
	const FLT x301 = x289 * x300;
	const FLT x302 = x46 * x287;
	const FLT x303 = x59 * x39;
	const FLT x304 = (-1 * x298 * x302) + (x293 * x294) + (x292 * x288) + (x297 * x301) + (-1 * x300 * x303) +
					 (x301 * x302) + (-1 * x296 * x288) + (-1 * x297 * x298);
	const FLT x305 = 1.0 / 2.0 * (1. / (x56 * sqrt(x56)));
	const FLT x306 = x60 * x305;
	const FLT x307 = x306 * x304;
	const FLT x308 = x55 * x305;
	const FLT x309 = x308 * x304;
	const FLT x310 = x66 * x58;
	const FLT x311 = 0.5 * x310;
	const FLT x312 = x43 * x303;
	const FLT x313 = x51 * x40;
	const FLT x314 = x63 * x306;
	const FLT x315 = x304 * x314;
	const FLT x316 = x289 * x283;
	const FLT x317 = x58 * x38;
	const FLT x318 = x317 * x316;
	const FLT x319 = x38 * x307;
	const FLT x320 = x43 * x284;
	const FLT x321 = x40 * x320;
	const FLT x322 = x43 * x316;
	const FLT x323 = x72 * x40;
	const FLT x324 = (-1 * x322 * x323) + (x65 * x321);
	const FLT x325 = x6 * x320;
	const FLT x326 = x68 * x58;
	const FLT x327 = x6 * x316;
	const FLT x328 = x43 * x327;
	const FLT x329 = (x326 * x328) + (-1 * x75 * x325);
	const FLT x330 = x324 + (-1 * x44 * x318) + x62 + (x68 * x286 * x307) + (-1 * x313 * x315) + (x78 * x285) + x329 +
					 (-1 * x312 * x311) + (-1 * x299 * x319) + (-1 * x66 * x309);
	const FLT x331 = x43 * x318;
	const FLT x332 = x6 * x331;
	const FLT x333 = x66 * x307;
	const FLT x334 = x68 * x299;
	const FLT x335 = 0.5 * x72;
	const FLT x336 = x78 * x325;
	const FLT x337 = -1 * x69;
	const FLT x338 = x44 * x316;
	const FLT x339 = x310 * x316;
	const FLT x340 = x43 * x339;
	const FLT x341 = x71 * x320;
	const FLT x342 = (-1 * x40 * x341) + (x40 * x340);
	const FLT x343 = x342 + (x338 * x326) + (-1 * x336) + (-1 * x312 * x335) + (x286 * x319) + x332 +
					 (-1 * x75 * x285) + (x307 * x334) + (x313 * x333) + x337 + (-1 * x63 * x309);
	const FLT x344 = x75 * x321;
	const FLT x345 = x40 * x326;
	const FLT x346 = x322 * x345;
	const FLT x347 = x66 * x299;
	const FLT x348 = -1 * x67;
	const FLT x349 = x307 * x313;
	const FLT x350 = 0.5 * x312;
	const FLT x351 = (-1 * x72 * x328) + (x65 * x325);
	const FLT x352 = (-1 * x38 * x309) + (-1 * x68 * x349) + x348 + x351 + (-1 * x71 * x285) + (-1 * x350 * x317) +
					 x344 + (x44 * x339) + (x307 * x347) + (-1 * x286 * x315) + (-1 * x346);
	const FLT x353 = (x352 * sensor_pt[2]) + (-1 * x330 * sensor_pt[1]) + (x343 * sensor_pt[0]);
	const FLT x354 = x6 * x341;
	const FLT x355 = x6 * x340;
	const FLT x356 = x40 * x331;
	const FLT x357 = x78 * x321;
	const FLT x358 = (-1 * x299 * x315) + (-1 * x68 * x309) + (-1 * x350 * x326) + (-1 * x72 * x338) + x73 +
					 (-1 * x286 * x333) + x354 + (x65 * x285) + (-1 * x355) + x356 + (x38 * x349) + (-1 * x357);
	const FLT x359 = (x330 * sensor_pt[0]) + (x343 * sensor_pt[1]) + (-1 * x358 * sensor_pt[2]);
	const FLT x360 = (x358 * x179) + (-1 * x352 * x180) + (-1 * x353 * x175) + (x359 * x178);
	const FLT x361 = (x358 * sensor_pt[1]) + (-1 * x352 * sensor_pt[0]) + (x343 * sensor_pt[2]);
	const FLT x362 = (x361 * x175) + (x352 * x182) + (-1 * x359 * x183) + (-1 * x330 * x179);
	const FLT x363 = (x353 * x183) + (-1 * x361 * x178) + (x330 * x180) + (-1 * x358 * x182);
	const FLT x364 = (x360 * (*lh_p).Rot[0]) + (x363 * (*lh_p).Rot[1]) + (-1 * x362 * (*lh_p).Rot[2]);
	const FLT x365 = (x360 * (*lh_p).Rot[2]) + (-1 * x363 * (*lh_p).Rot[3]) + (x362 * (*lh_p).Rot[0]);
	const FLT x366 = x363 + (-1 * x364 * x188) + (x365 * x190);
	const FLT x367 = (x363 * (*lh_p).Rot[0]) + (-1 * x360 * (*lh_p).Rot[1]) + (x362 * (*lh_p).Rot[3]);
	const FLT x368 = x360 + (-1 * x365 * x192) + (x367 * x188);
	const FLT x369 = x362 + (x364 * x192) + (-1 * x367 * x190);
	const FLT x370 = (-1 * x115 * ((-1 * ((x368 * x113) + (x369 * x112)) * x114) + (x366 * x111))) +
					 (-1 * x110 * ((x368 * x107) + (-1 * x89 * x369)));
	const FLT x371 = x6 * x303;
	const FLT x372 = x46 * x284;
	const FLT x373 = x292 * x287;
	const FLT x374 = x44 * x373;
	const FLT x375 = x296 * x287;
	const FLT x376 = x44 * x375;
	const FLT x377 = x6 * x6 * x6;
	const FLT x378 = 2 * x294;
	const FLT x379 = (-1 * x377 * x375) + (x373 * x377) + (-1 * x6 * x376) + (x6 * x374) + (x6 * x378) +
					 (-1 * x6 * x41 * x375) + (-1 * x291 * x371) + (x6 * x297 * x292);
	const FLT x380 = x379 * x306;
	const FLT x381 = x286 * x380;
	const FLT x382 = x379 * x314;
	const FLT x383 = x46 * x316;
	const FLT x384 = x66 * x308;
	const FLT x385 = x38 * x380;
	const FLT x386 = x6 * x40;
	const FLT x387 = x284 * x386;
	const FLT x388 = (-1 * x327 * x323) + (x65 * x387);
	const FLT x389 = x388 + (-1 * x332) + (-1 * x379 * x384) + (x383 * x326) + (-1 * x299 * x385) + x336 +
					 (-1 * x371 * x311) + x337 + (x68 * x381) + (-1 * x75 * x372) + (-1 * x382 * x313);
	const FLT x390 = -1 * x62;
	const FLT x391 = x379 * x308;
	const FLT x392 = x386 * x339;
	const FLT x393 = x66 * x380;
	const FLT x394 = x71 * x387;
	const FLT x395 = x329 + (x380 * x334) + (x38 * x381) + x392 + (-1 * x394) + (-1 * x63 * x391) + x390 +
					 (x393 * x313) + (-1 * x78 * x372) + (-1 * x371 * x335) + (x383 * x317);
	const FLT x396 = x327 * x345;
	const FLT x397 = x75 * x387;
	const FLT x398 = 0.5 * x371;
	const FLT x399 = x355 + x397 + (-1 * x68 * x380 * x313) + (-1 * x398 * x317) + (x380 * x347) + x73 + (x65 * x372) +
					 (-1 * x72 * x383) + (-1 * x286 * x382) + (-1 * x354) + (-1 * x396) + (-1 * x38 * x391);
	const FLT x400 = (x399 * sensor_pt[2]) + (-1 * x389 * sensor_pt[1]) + (x395 * sensor_pt[0]);
	const FLT x401 = (-1 * x78 * x387) + (x386 * x318);
	const FLT x402 = x351 + (x385 * x313) + (x71 * x372) + x401 + (-1 * x383 * x310) + x67 + (-1 * x398 * x326) +
					 (-1 * x68 * x391) + (-1 * x299 * x382) + (-1 * x286 * x393);
	const FLT x403 = (x389 * sensor_pt[0]) + (-1 * x402 * sensor_pt[2]) + (x395 * sensor_pt[1]);
	const FLT x404 = (x403 * x178) + (x402 * x179) + (-1 * x400 * x175) + (-1 * x399 * x180);
	const FLT x405 = (x402 * sensor_pt[1]) + (x395 * sensor_pt[2]) + (-1 * x399 * sensor_pt[0]);
	const FLT x406 = (x405 * x175) + (-1 * x389 * x179) + (-1 * x403 * x183) + (x399 * x182);
	const FLT x407 = (-1 * x402 * x182) + (x400 * x183) + (-1 * x405 * x178) + (x389 * x180);
	const FLT x408 = (x407 * (*lh_p).Rot[1]) + (x404 * (*lh_p).Rot[0]) + (-1 * x406 * (*lh_p).Rot[2]);
	const FLT x409 = (x404 * (*lh_p).Rot[2]) + (-1 * x407 * (*lh_p).Rot[3]) + (x406 * (*lh_p).Rot[0]);
	const FLT x410 = x407 + (-1 * x408 * x188) + (x409 * x190);
	const FLT x411 = (x407 * (*lh_p).Rot[0]) + (-1 * x404 * (*lh_p).Rot[1]) + (x406 * (*lh_p).Rot[3]);
	const FLT x412 = x404 + (x411 * x188) + (-1 * x409 * x192);
	const FLT x413 = x406 + (-1 * x411 * x190) + (x408 * x192);
	const FLT x414 = (-1 * x115 * ((-1 * ((x412 * x113) + (x413 * x112)) * x114) + (x410 * x111))) +
					 (-1 * x110 * ((x412 * x107) + (-1 * x89 * x413)));
	const FLT x415 = x41 * x284;
	const FLT x416 = x40 * x303;
	const FLT x417 = 0.5 * x416;
	const FLT x418 = x40 * x40 * x40;
	const FLT x419 = (x40 * x292 * x302) + (-1 * x416 * x291) + (-1 * x418 * x375) + (x418 * x373) + (x40 * x378) +
					 (x40 * x374) + (-1 * x40 * x46 * x375) + (-1 * x40 * x376);
	const FLT x420 = x419 * x306;
	const FLT x421 = x420 * x286;
	const FLT x422 = x63 * x420;
	const FLT x423 = x41 * x316;
	const FLT x424 = x38 * x420;
	const FLT x425 = (-1 * x422 * x313) + x357 + (x68 * x421) + (-1 * x356) + (-1 * x424 * x299) + (-1 * x417 * x310) +
					 (x65 * x415) + (-1 * x419 * x384) + (-1 * x397) + x396 + x73 + (-1 * x72 * x423);
	const FLT x426 = x419 * x308;
	const FLT x427 = x420 * x313;
	const FLT x428 = (x420 * x334) + (-1 * x71 * x415) + x401 + (-1 * x344) + (x424 * x286) + x348 + (x41 * x339) +
					 (x66 * x427) + (-1 * x72 * x417) + (-1 * x63 * x426) + x346;
	const FLT x429 = x388 + x342 + (-1 * x38 * x426) + (x420 * x347) + x69 + (-1 * x422 * x286) + (x75 * x415) +
					 (-1 * x68 * x427) + (-1 * x423 * x326) + (-1 * x417 * x317);
	const FLT x430 = (x429 * sensor_pt[2]) + (-1 * x425 * sensor_pt[1]) + (x428 * sensor_pt[0]);
	const FLT x431 = x324 + (-1 * x422 * x299) + (x424 * x313) + x390 + (-1 * x417 * x326) + x394 + (-1 * x78 * x415) +
					 (-1 * x66 * x421) + (-1 * x392) + (-1 * x68 * x426) + (x41 * x318);
	const FLT x432 = (x425 * sensor_pt[0]) + (-1 * x431 * sensor_pt[2]) + (x428 * sensor_pt[1]);
	const FLT x433 = (x432 * x178) + (x431 * x179) + (-1 * x430 * x175) + (-1 * x429 * x180);
	const FLT x434 = (x431 * sensor_pt[1]) + (-1 * x429 * sensor_pt[0]) + (x428 * sensor_pt[2]);
	const FLT x435 = (x434 * x175) + (-1 * x425 * x179) + (-1 * x432 * x183) + (x429 * x182);
	const FLT x436 = (x425 * x180) + (x430 * x183) + (-1 * x431 * x182) + (-1 * x434 * x178);
	const FLT x437 = 2 * ((x433 * (*lh_p).Rot[0]) + (x436 * (*lh_p).Rot[1]) + (-1 * x435 * (*lh_p).Rot[2]));
	const FLT x438 = (x433 * (*lh_p).Rot[2]) + (-1 * x436 * (*lh_p).Rot[3]) + (x435 * (*lh_p).Rot[0]);
	const FLT x439 = x436 + (-1 * x437 * (*lh_p).Rot[1]) + (x438 * x190);
	const FLT x440 = 2 * ((x436 * (*lh_p).Rot[0]) + (-1 * x433 * (*lh_p).Rot[1]) + (x435 * (*lh_p).Rot[3]));
	const FLT x441 = (-1 * x438 * x192) + x433 + (x440 * (*lh_p).Rot[1]);
	const FLT x442 = x435 + (-1 * x440 * (*lh_p).Rot[3]) + (x437 * (*lh_p).Rot[2]);
	const FLT x443 = (-1 * x115 * ((-1 * ((x441 * x113) + (x442 * x112)) * x114) + (x439 * x111))) +
					 (-1 * x110 * ((x441 * x107) + (-1 * x89 * x442)));
	const FLT x444 = dt * x259;
	const FLT x445 = dt * x260;
	const FLT x446 = x445 + x444;
	const FLT x447 = dt * x262;
	const FLT x448 = dt * x263;
	const FLT x449 = x448 + (-1 * x447);
	const FLT x450 = -1 * dt * x265;
	const FLT x451 = (-1 * dt * x267) + dt;
	const FLT x452 = x451 + x450;
	const FLT x453 = (-1 * x115 * ((-1 * ((x449 * x113) + (x452 * x112)) * x114) + (x446 * x111))) +
					 (-1 * x110 * ((x449 * x107) + (-1 * x89 * x452)));
	const FLT x454 = -1 * dt * x271;
	const FLT x455 = x451 + x454;
	const FLT x456 = dt * x274;
	const FLT x457 = dt * x275;
	const FLT x458 = x457 + x456;
	const FLT x459 = x444 + (-1 * x445);
	const FLT x460 = (-1 * x115 * ((-1 * ((x458 * x113) + (x459 * x112)) * x114) + (x455 * x111))) +
					 (-1 * x110 * ((x458 * x107) + (-1 * x89 * x459)));
	const FLT x461 = x456 + (-1 * x457);
	const FLT x462 = x450 + dt + x454;
	const FLT x463 = x447 + x448;
	const FLT x464 = (-1 * x115 * ((-1 * ((x462 * x113) + (x463 * x112)) * x114) + (x461 * x111))) +
					 (-1 * x110 * ((x462 * x107) + (-1 * x89 * x463)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x116 + (x100 * ((x92 * x97) + (-1 * x5 * x89))) + (x116 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						(((x97 * x123) + (-1 * x89 * x120)) * x100) + x125 + (x117 * x125));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x129 + (((x97 * x127) + (-1 * x89 * x126)) * x100) + (x117 * x129));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x196 + (((x97 * x194) + (-1 * x89 * x191)) * x100) + (x117 * x196));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x229 + (((x97 * x227) + (-1 * x89 * x225)) * x100) + (x229 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x258 + (((x97 * x256) + (-1 * x89 * x254)) * x100) + (x258 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT),
						x270 + (((x97 * x264) + (-1 * x89 * x261)) * x100) + (x270 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT),
						x278 + (((x97 * x276) + (-1 * x89 * x273)) * x100) + (x278 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT),
						x282 + (((x97 * x280) + (-1 * x89 * x279)) * x100) + (x282 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						(((x97 * x368) + (-1 * x89 * x366)) * x100) + x370 + (x370 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x414 + (((x97 * x412) + (-1 * x89 * x410)) * x100) + (x414 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x443 + (((x97 * x441) + (-1 * x89 * x439)) * x100) + (x443 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT),
						(((x97 * x449) + (-1 * x89 * x446)) * x100) + x453 + (x453 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT),
						x460 + (((x97 * x458) + (-1 * x89 * x455)) * x100) + (x460 * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT),
						x464 + (((x97 * x462) + (-1 * x89 * x461)) * x100) + (x464 * x117));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (-1 * x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x15 * x10) + (x4 * x13);
	const FLT x17 = (x4 * x11) + (-1 * x2 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x14 * x14) + (x17 * x17) + (x12 * x12));
	const FLT x19 = x18 * (*_x0).Pose.Rot[2];
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * (*_x0).Pose.Rot[3];
	const FLT x22 = x14 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x21 * x17) + (x12 * x19) + (x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = x12 * x18;
	const FLT x40 = x18 * x17;
	const FLT x41 = (-1 * x40 * (*_x0).Pose.Rot[1]) + (x39 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x19 * x16);
	const FLT x42 = x36 * x35;
	const FLT x43 = (x20 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[0]) + (x21 * x12) + (-1 * x19 * x17);
	const FLT x44 = x43 * x37;
	const FLT x45 = (x39 * (*_x0).Pose.Rot[1]) + (x14 * x19) + (-1 * x21 * x16) + (x40 * (*_x0).Pose.Rot[0]);
	const FLT x46 = x45 * x37;
	const FLT x47 = (-1 * x46 * x27) + (-1 * x44 * x25) + (-1 * x0 * x38) + (x41 * x42);
	const FLT x48 = x0 * x46;
	const FLT x49 = x42 * x43;
	const FLT x50 = x41 * x37;
	const FLT x51 = x50 * x25;
	const FLT x52 = x38 * x27;
	const FLT x53 = x52 + x51 + (-1 * x48) + x49;
	const FLT x54 = x0 * x44;
	const FLT x55 = x42 * x45;
	const FLT x56 = x38 * x25;
	const FLT x57 = x50 * x27;
	const FLT x58 = x57 + (-1 * x56) + x54 + x55;
	const FLT x59 = (-1 * x58 * sensor_pt[2]) + (x47 * sensor_pt[1]) + (x53 * sensor_pt[0]);
	const FLT x60 = x46 * x25;
	const FLT x61 = x0 * x50;
	const FLT x62 = x42 * x23;
	const FLT x63 = x44 * x27;
	const FLT x64 = (-1 * x63) + x62 + x60 + x61;
	const FLT x65 = (-1 * x64 * sensor_pt[0]) + (x47 * sensor_pt[2]) + (x58 * sensor_pt[1]);
	const FLT x66 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x67 = (*_x0).Pose.Pos[0] + (2 * ((x64 * x65) + (-1 * x53 * x59))) + (*error_model).Pose.Pos[0] +
					(x66 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x68 = (-1 * x53 * sensor_pt[1]) + (x47 * sensor_pt[0]) + (x64 * sensor_pt[2]);
	const FLT x69 = (*error_model).Pose.Pos[2] + (2 * ((x58 * x59) + (-1 * x64 * x68))) + (*_x0).Pose.Pos[2] +
					(x66 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x70 = (*_x0).Pose.Pos[1] + (2 * ((x68 * x53) + (-1 * x65 * x58))) + (*error_model).Pose.Pos[1] +
					(x66 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]));
	const FLT x71 = (-1 * x70 * (*lh_p).Rot[3]) + (x67 * (*lh_p).Rot[0]) + (x69 * (*lh_p).Rot[2]);
	const FLT x72 = (-1 * x69 * (*lh_p).Rot[1]) + (x67 * (*lh_p).Rot[3]) + (x70 * (*lh_p).Rot[0]);
	const FLT x73 = x69 + (2 * ((x72 * (*lh_p).Rot[1]) + (-1 * x71 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x74 = 1. / x73;
	const FLT x75 = (-1 * x62) + x63 + (-1 * x60) + (-1 * x61);
	const FLT x76 = 2 * x64;
	const FLT x77 = 1 + (x75 * x76) + (-2 * (x53 * x53));
	const FLT x78 = x76 * x47;
	const FLT x79 = 2 * x58;
	const FLT x80 = (x79 * x53) + (-1 * x78);
	const FLT x81 = 2 * x53;
	const FLT x82 = x81 * x47;
	const FLT x83 = x82 + (-1 * x79 * x75);
	const FLT x84 = (x83 * (*lh_p).Rot[1]) + (-1 * x77 * (*lh_p).Rot[2]) + (x80 * (*lh_p).Rot[0]);
	const FLT x85 = 2 * (*lh_p).Rot[1];
	const FLT x86 = (x80 * (*lh_p).Rot[2]) + (-1 * x83 * (*lh_p).Rot[3]) + (x77 * (*lh_p).Rot[0]);
	const FLT x87 = 2 * (*lh_p).Rot[3];
	const FLT x88 = x83 + (-1 * x84 * x85) + (x86 * x87);
	const FLT x89 = (x83 * (*lh_p).Rot[0]) + (-1 * x80 * (*lh_p).Rot[1]) + (x77 * (*lh_p).Rot[3]);
	const FLT x90 = 2 * (*lh_p).Rot[2];
	const FLT x91 = x80 + (x89 * x85) + (-1 * x86 * x90);
	const FLT x92 = x73 * x73;
	const FLT x93 = 1. / x92;
	const FLT x94 = (-1 * x67 * (*lh_p).Rot[2]) + (x69 * (*lh_p).Rot[0]) + (x70 * (*lh_p).Rot[1]);
	const FLT x95 = x70 + (*lh_p).Pos[1] + (2 * ((x71 * (*lh_p).Rot[3]) + (-1 * x94 * (*lh_p).Rot[1])));
	const FLT x96 = x93 * x95;
	const FLT x97 = -1 * x73;
	const FLT x98 = x95 * x95;
	const FLT x99 = 2 * (1. / (x92 + x98)) * x92 * atan2(x95, x97) * (*bsc0).curve;
	const FLT x100 = x77 + (x84 * x90) + (-1 * x89 * x87);
	const FLT x101 = x67 + (*lh_p).Pos[0] + (2 * ((x94 * (*lh_p).Rot[2]) + (-1 * x72 * (*lh_p).Rot[3])));
	const FLT x102 = x93 * x101;
	const FLT x103 = x92 + (x101 * x101);
	const FLT x104 = 1. / x103;
	const FLT x105 = x92 * x104;
	const FLT x106 = 1. / sqrt(1 + (-1 * x98 * x104 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x107 = (1. / sqrt(x103)) * (*bsc0).tilt;
	const FLT x108 = 2 * x101;
	const FLT x109 = 2 * x73;
	const FLT x110 = 1.0 / 2.0 * x95 * (1. / (x103 * sqrt(x103))) * (*bsc0).tilt;
	const FLT x111 = (-1 * x106 * ((-1 * x110 * ((x91 * x109) + (x100 * x108))) + (x88 * x107))) +
					 (-1 * ((x91 * x102) + (-1 * x74 * x100)) * x105);
	const FLT x112 = sin(1.5707963267949 + (-1 * asin(x95 * x107)) + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
						 (-1 * atan2(x101, x97))) *
					 (*bsc0).gibmag;
	const FLT x113 = (x76 * x58) + (-1 * x82);
	const FLT x114 = (-1 * x51) + (-1 * x52) + (-1 * x49) + x48;
	const FLT x115 = x79 * x47;
	const FLT x116 = x115 + (-1 * x76 * x114);
	const FLT x117 = 1 + (x81 * x114) + (-2 * (x58 * x58));
	const FLT x118 = (x117 * (*lh_p).Rot[1]) + (-1 * x113 * (*lh_p).Rot[2]) + (x116 * (*lh_p).Rot[0]);
	const FLT x119 = (x116 * (*lh_p).Rot[2]) + (x113 * (*lh_p).Rot[0]) + (-1 * x117 * (*lh_p).Rot[3]);
	const FLT x120 = (-1 * x85 * x118) + x117 + (x87 * x119);
	const FLT x121 = (x117 * (*lh_p).Rot[0]) + (-1 * x116 * (*lh_p).Rot[1]) + (x113 * (*lh_p).Rot[3]);
	const FLT x122 = x116 + (x85 * x121) + (-1 * x90 * x119);
	const FLT x123 = x113 + (x90 * x118) + (-1 * x87 * x121);
	const FLT x124 = (-1 * x106 * ((-1 * ((x109 * x122) + (x108 * x123)) * x110) + (x107 * x120))) +
					 (-1 * x105 * ((x102 * x122) + (-1 * x74 * x123)));
	const FLT x125 = x56 + (-1 * x57) + (-1 * x55) + (-1 * x54);
	const FLT x126 = x78 + (-1 * x81 * x125);
	const FLT x127 = 1 + (x79 * x125) + (-2 * (x64 * x64));
	const FLT x128 = (x76 * x53) + (-1 * x115);
	const FLT x129 = (x128 * (*lh_p).Rot[1]) + (-1 * x126 * (*lh_p).Rot[2]) + (x127 * (*lh_p).Rot[0]);
	const FLT x130 = (x127 * (*lh_p).Rot[2]) + (-1 * x128 * (*lh_p).Rot[3]) + (x126 * (*lh_p).Rot[0]);
	const FLT x131 = x128 + (-1 * x85 * x129) + (x87 * x130);
	const FLT x132 = (x128 * (*lh_p).Rot[0]) + (-1 * x127 * (*lh_p).Rot[1]) + (x126 * (*lh_p).Rot[3]);
	const FLT x133 = x127 + (x85 * x132) + (-1 * x90 * x130);
	const FLT x134 = x126 + (x90 * x129) + (-1 * x87 * x132);
	const FLT x135 = (-1 * x106 * ((-1 * ((x109 * x133) + (x108 * x134)) * x110) + (x107 * x131))) +
					 (-1 * x105 * ((x102 * x133) + (-1 * x74 * x134)));
	cnMatrixOptionalSet(Hx, 0, 0, x111 + (((x91 * x96) + (-1 * x88 * x74)) * x99) + (x111 * x112));
	cnMatrixOptionalSet(Hx, 0, 1, x124 + (((x96 * x122) + (-1 * x74 * x120)) * x99) + (x112 * x124));
	cnMatrixOptionalSet(Hx, 0, 2, x135 + (((x96 * x133) + (-1 * x74 * x131)) * x99) + (x112 * x135));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_sensor_pt_with_hx(
	CnMat *Hx, CnMat *hx, const FLT dt, const SurviveKalmanModel *_x0, const SurviveKalmanErrorModel *error_model,
	const FLT *sensor_pt, const SurvivePose *lh_p, const BaseStationCal *bsc0) {
	if (hx != 0) {
		hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
	}
	if (Hx != 0) {
		SurviveKalmanErrorModel_LightMeas_x_gen1_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
	}
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2],
// (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_lh_p(CnMat *Hx, const FLT dt,
																	 const SurviveKalmanModel *_x0,
																	 const SurviveKalmanErrorModel *error_model,
																	 const FLT *sensor_pt, const SurvivePose *lh_p,
																	 const BaseStationCal *bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x5);
	const FLT x9 = cos(x1);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (x2 * x7);
	const FLT x13 = x2 * x10;
	const FLT x14 = (x8 * x13) + (-1 * x7 * x9);
	const FLT x15 = x4 * x8;
	const FLT x16 = (x9 * x15) + (x6 * x13);
	const FLT x17 = (x6 * x11) + (-1 * x2 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x14 * x14) + (x17 * x17) + (x12 * x12));
	const FLT x19 = x18 * (*_x0).Pose.Rot[2];
	const FLT x20 = x18 * (*_x0).Pose.Rot[0];
	const FLT x21 = x18 * x17;
	const FLT x22 = x14 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[3]) + (x12 * x19) + (x20 * x16);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = x18 * x16;
	const FLT x40 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (-1 * x22 * (*_x0).Pose.Rot[3]) + (x20 * x12) +
					(-1 * x39 * (*_x0).Pose.Rot[2]);
	const FLT x41 = x36 * x35;
	const FLT x42 = x12 * x18;
	const FLT x43 = (x39 * (*_x0).Pose.Rot[1]) + (x20 * x14) + (x42 * (*_x0).Pose.Rot[3]) + (-1 * x19 * x17);
	const FLT x44 = x43 * x37;
	const FLT x45 = (x14 * x19) + (-1 * x39 * (*_x0).Pose.Rot[3]) + (x42 * (*_x0).Pose.Rot[1]) + (x20 * x17);
	const FLT x46 = x45 * x37;
	const FLT x47 = (-1 * x46 * x27) + (-1 * x0 * x38) + (-1 * x44 * x25) + (x40 * x41);
	const FLT x48 = x40 * x37;
	const FLT x49 = (x48 * x25) + (x38 * x27) + (-1 * x0 * x46) + (x41 * x43);
	const FLT x50 = (x48 * x27) + (-1 * x38 * x25) + (x0 * x44) + (x41 * x45);
	const FLT x51 = (-1 * x50 * sensor_pt[2]) + (x47 * sensor_pt[1]) + (x49 * sensor_pt[0]);
	const FLT x52 = (x41 * x23) + (x46 * x25) + (-1 * x44 * x27) + (x0 * x48);
	const FLT x53 = (x47 * sensor_pt[2]) + (-1 * x52 * sensor_pt[0]) + (x50 * sensor_pt[1]);
	const FLT x54 = 2 * ((x53 * x52) + (-1 * x51 * x49));
	const FLT x55 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x56 = x55 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x57 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x58 = (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + x57 + x54 + x56 + sensor_pt[0];
	const FLT x59 = x58 * (*lh_p).Rot[0];
	const FLT x60 = (-1 * x49 * sensor_pt[1]) + (x47 * sensor_pt[0]) + (x52 * sensor_pt[2]);
	const FLT x61 = 2 * ((x50 * x51) + (-1 * x60 * x52));
	const FLT x62 = x55 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x63 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x64 = (*error_model).Pose.Pos[2] + (*_x0).Pose.Pos[2] + x61 + x62 + sensor_pt[2] + x63;
	const FLT x65 = x64 * (*lh_p).Rot[2];
	const FLT x66 = 2 * ((x60 * x49) + (-1 * x50 * x53));
	const FLT x67 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x68 = x55 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x69 = x66 + (*error_model).Pose.Pos[1] + sensor_pt[1] + x67 + (*_x0).Pose.Pos[1] + x68;
	const FLT x70 = x69 * (*lh_p).Rot[3];
	const FLT x71 = (-1 * x70) + x59 + x65;
	const FLT x72 = x58 * (*lh_p).Rot[3];
	const FLT x73 = x69 * (*lh_p).Rot[0];
	const FLT x74 = x64 * (*lh_p).Rot[1];
	const FLT x75 = (-1 * x74) + x72 + x73;
	const FLT x76 = x64 + (2 * ((x75 * (*lh_p).Rot[1]) + (-1 * x71 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x77 = x64 * (*lh_p).Rot[0];
	const FLT x78 = x69 * (*lh_p).Rot[1];
	const FLT x79 = x58 * (*lh_p).Rot[2];
	const FLT x80 = (-1 * x79) + x77 + x78;
	const FLT x81 = (*lh_p).Pos[0] + x58 + (2 * ((x80 * (*lh_p).Rot[2]) + (-1 * x75 * (*lh_p).Rot[3])));
	const FLT x82 = x76 * x76;
	const FLT x83 = x82 + (x81 * x81);
	const FLT x84 = 1. / x83;
	const FLT x85 = x69 + (*lh_p).Pos[1] + (2 * ((x71 * (*lh_p).Rot[3]) + (-1 * x80 * (*lh_p).Rot[1])));
	const FLT x86 = x85 * x85;
	const FLT x87 = 1. / sqrt(1 + (-1 * x84 * x86 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x88 = (1. / (x83 * sqrt(x83))) * x85 * (*bsc0).tilt;
	const FLT x89 = x88 * x87;
	const FLT x90 = (x81 * x89) + (x84 * x76);
	const FLT x91 = (1. / sqrt(x83)) * (*bsc0).tilt;
	const FLT x92 = -1 * x76;
	const FLT x93 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
										 (-1 * asin(x85 * x91)) + (-1 * atan2(x81, x92)));
	const FLT x94 = 2 * x76;
	const FLT x95 = (1. / (x82 + x86)) * atan2(x85, x92) * (*bsc0).curve;
	const FLT x96 = x87 * x91;
	const FLT x97 = 2 * x95;
	const FLT x98 = (x89 * x76) + (-1 * x81 * x84);
	const FLT x99 = 1. / x76;
	const FLT x100 = 2 * x74;
	const FLT x101 = (2 * x72) + (-1 * x100);
	const FLT x102 = 2 * x79;
	const FLT x103 = (2 * x78) + (-1 * x102);
	const FLT x104 = 1. / x82;
	const FLT x105 = x85 * x104;
	const FLT x106 = x82 * x97;
	const FLT x107 = 2 * x70;
	const FLT x108 = (2 * x65) + (-1 * x107);
	const FLT x109 = x81 * x104;
	const FLT x110 = x82 * x84;
	const FLT x111 = 2 * x81;
	const FLT x112 = 1.0 / 2.0 * x88;
	const FLT x113 = (-1 * x87 * ((-1 * x112 * ((x94 * x103) + (x108 * x111))) + (x91 * x101))) +
					 (-1 * x110 * ((x103 * x109) + (-1 * x99 * x108)));
	const FLT x114 = 2 * x77;
	const FLT x115 = x102 + (-1 * x114) + (-4 * x78);
	const FLT x116 = 2 * x73;
	const FLT x117 = 2 * ((-1 * sensor_pt[2]) + (-1 * x63) + (-1 * x61) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x62) +
						  (-1 * (*error_model).Pose.Pos[2]));
	const FLT x118 = x101 + x116 + (x117 * (*lh_p).Rot[1]);
	const FLT x119 = 2 * (*lh_p).Rot[2];
	const FLT x120 = (x69 * x119) + (-1 * x117 * (*lh_p).Rot[3]);
	const FLT x121 = (-1 * x87 * ((-1 * x112 * ((x94 * x118) + (x111 * x120))) + (x91 * x115))) +
					 (-1 * x110 * ((x109 * x118) + (-1 * x99 * x120)));
	const FLT x122 = (-1 * (*error_model).Pose.Pos[0]) + (-1 * x57) + (-1 * sensor_pt[0]) + (-1 * x54) + (-1 * x56) +
					 (-1 * (*_x0).Pose.Pos[0]);
	const FLT x123 = 2 * (*lh_p).Rot[1];
	const FLT x124 = (2 * x64 * (*lh_p).Rot[3]) + (-1 * x123 * x122);
	const FLT x125 = 2 * x59;
	const FLT x126 = x107 + (-4 * x65) + (-1 * x125);
	const FLT x127 = x103 + x114 + (x119 * x122);
	const FLT x128 = (-1 * x87 * ((-1 * x112 * ((x94 * x126) + (x111 * x127))) + (x91 * x124))) +
					 (-1 * x110 * ((x109 * x126) + (-1 * x99 * x127)));
	const FLT x129 = 2 * ((-1 * x67) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x68) + (-1 * x66) +
						  (-1 * (*error_model).Pose.Pos[1]) + (-1 * sensor_pt[1]));
	const FLT x130 = x108 + x125 + (x129 * (*lh_p).Rot[3]);
	const FLT x131 = (x58 * x123) + (-1 * x129 * (*lh_p).Rot[2]);
	const FLT x132 = (-1 * x116) + (-4 * x72) + x100;
	const FLT x133 = (-1 * x87 * ((-1 * x112 * ((x94 * x131) + (x111 * x132))) + (x91 * x130))) +
					 (-1 * x110 * ((x109 * x131) + (-1 * x99 * x132)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), x90 + (x93 * x90));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT),
						(-1 * x95 * x94) + (-1 * x93 * x96) + (-1 * x96));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x98 + (x85 * x97) + (x93 * x98));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						(x106 * ((x103 * x105) + (-1 * x99 * x101))) + x113 + (x93 * x113));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x121 + (x106 * ((x105 * x118) + (-1 * x99 * x115))) + (x93 * x121));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x128 + (x106 * ((x105 * x126) + (-1 * x99 * x124))) + (x93 * x128));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x133 + (x106 * ((x105 * x131) + (-1 * x99 * x130))) + (x93 * x133));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1],
// (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_lh_p_with_hx(
	CnMat *Hx, CnMat *hx, const FLT dt, const SurviveKalmanModel *_x0, const SurviveKalmanErrorModel *error_model,
	const FLT *sensor_pt, const SurvivePose *lh_p, const BaseStationCal *bsc0) {
	if (hx != 0) {
		hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
	}
	if (Hx != 0) {
		SurviveKalmanErrorModel_LightMeas_x_gen1_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
	}
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f0193076be0>,
// <cnkalman.codegen.WrapMember object at 0x7f0193076d30>, <cnkalman.codegen.WrapMember object at 0x7f0193076c40>,
// <cnkalman.codegen.WrapMember object at 0x7f0193076fd0>, <cnkalman.codegen.WrapMember object at 0x7f0193076d60>,
// <cnkalman.codegen.WrapMember object at 0x7f0193076a00>, <cnkalman.codegen.WrapMember object at 0x7f0193076b80>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_bsc0(CnMat *Hx, const FLT dt,
																	 const SurviveKalmanModel *_x0,
																	 const SurviveKalmanErrorModel *error_model,
																	 const FLT *sensor_pt, const SurvivePose *lh_p,
																	 const BaseStationCal *bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = sin(x1);
	const FLT x10 = cos(x5);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x10;
	const FLT x14 = (x8 * x13) + (x7 * x9);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x2 * x15) + (x4 * x11);
	const FLT x17 = (x4 * x13) + (-1 * x9 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x41 * x37;
	const FLT x43 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x43 * x37;
	const FLT x45 = (-1 * x44 * x27) + (-1 * x0 * x38) + (-1 * x42 * x25) + (x40 * x39);
	const FLT x46 = x37 * x25;
	const FLT x47 = x37 * x39;
	const FLT x48 = (-1 * x42 * x27) + (x40 * x23) + (x43 * x46) + (x0 * x47);
	const FLT x49 = (x47 * x25) + (-1 * x0 * x44) + (x38 * x27) + (x40 * x41);
	const FLT x50 = (-1 * x49 * sensor_pt[1]) + (x45 * sensor_pt[0]) + (x48 * sensor_pt[2]);
	const FLT x51 = (x47 * x27) + (-1 * x46 * x23) + (x0 * x42) + (x40 * x43);
	const FLT x52 = (x45 * sensor_pt[1]) + (-1 * x51 * sensor_pt[2]) + (x49 * sensor_pt[0]);
	const FLT x53 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x54 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x53 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					sensor_pt[2] + (2 * ((x52 * x51) + (-1 * x50 * x48))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x55 = (-1 * x48 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x51 * sensor_pt[1]);
	const FLT x56 = (*_x0).Pose.Pos[1] + (2 * ((x50 * x49) + (-1 * x51 * x55))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x53 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x57 = (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + (x53 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(2 * ((x55 * x48) + (-1 * x52 * x49))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x58 = (-1 * x57 * (*lh_p).Rot[2]) + (x54 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x59 = (x57 * (*lh_p).Rot[0]) + (-1 * x56 * (*lh_p).Rot[3]) + (x54 * (*lh_p).Rot[2]);
	const FLT x60 = x56 + (*lh_p).Pos[1] + (2 * ((x59 * (*lh_p).Rot[3]) + (-1 * x58 * (*lh_p).Rot[1])));
	const FLT x61 = (-1 * x54 * (*lh_p).Rot[1]) + (x57 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[0]);
	const FLT x62 = x54 + (2 * ((x61 * (*lh_p).Rot[1]) + (-1 * x59 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x63 = -1 * x62;
	const FLT x64 = x57 + (*lh_p).Pos[0] + (2 * ((x58 * (*lh_p).Rot[2]) + (-1 * x61 * (*lh_p).Rot[3])));
	const FLT x65 = (x64 * x64) + (x62 * x62);
	const FLT x66 = x60 * (1. / sqrt(x65));
	const FLT x67 = 1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x66 * (*bsc0).tilt)) +
					(-1 * atan2(x64, x63));
	const FLT x68 = sin(x67) * (*bsc0).gibmag;
	const FLT x69 = x66 * (1. / sqrt(1 + (-1 * (x60 * x60) * (1. / x65) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), atan2(x60, x63) * atan2(x60, x63));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), -1 * cos(x67));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x68);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase) / sizeof(FLT), -1 + (-1 * x68));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x69) + (-1 * x68 * x69));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f0193076be0>, <cnkalman.codegen.WrapMember object at 0x7f0193076d30>, <cnkalman.codegen.WrapMember object at
// 0x7f0193076c40>, <cnkalman.codegen.WrapMember object at 0x7f0193076fd0>, <cnkalman.codegen.WrapMember object at
// 0x7f0193076d60>, <cnkalman.codegen.WrapMember object at 0x7f0193076a00>, <cnkalman.codegen.WrapMember object at
// 0x7f0193076b80>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen1_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_y_gen1(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = cos(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x5);
	const FLT x9 = cos(x1);
	const FLT x10 = sin(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x10;
	const FLT x14 = x4 * x8;
	const FLT x15 = (x9 * x14) + (x6 * x13);
	const FLT x16 = (x7 * x9) + (x8 * x13);
	const FLT x17 = (x2 * x14) + (-1 * x6 * x11);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x15 * x15));
	const FLT x19 = x15 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x41 * x37;
	const FLT x43 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x43 * x37;
	const FLT x45 = (-1 * x44 * x27) + (-1 * x0 * x38) + (-1 * x42 * x25) + (x40 * x39);
	const FLT x46 = x37 * x39;
	const FLT x47 = (x46 * x25) + (-1 * x0 * x44) + (x38 * x27) + (x40 * x41);
	const FLT x48 = x37 * x25;
	const FLT x49 = (-1 * x48 * x23) + (x0 * x42) + (x46 * x27) + (x40 * x43);
	const FLT x50 = (-1 * x49 * sensor_pt[2]) + (x45 * sensor_pt[1]) + (x47 * sensor_pt[0]);
	const FLT x51 = (-1 * x42 * x27) + (x43 * x48) + (x40 * x23) + (x0 * x46);
	const FLT x52 = (-1 * x51 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x49 * sensor_pt[1]);
	const FLT x53 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x54 = (*_x0).Pose.Pos[0] + (2 * ((x52 * x51) + (-1 * x50 * x47))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0])) + (*error_model).Pose.Pos[0] +
					(x53 * ((*_x0).Acc[0] + (*error_model).Acc[0]));
	const FLT x55 = (-1 * x47 * sensor_pt[1]) + (x45 * sensor_pt[0]) + (x51 * sensor_pt[2]);
	const FLT x56 = (*_x0).Pose.Pos[1] + (2 * ((x55 * x47) + (-1 * x52 * x49))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x53 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x57 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x50 * x49) + (-1 * x51 * x55))) +
					(x53 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x58 = (-1 * x57 * (*lh_p).Rot[1]) + (x54 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[0]);
	const FLT x59 = (-1 * x54 * (*lh_p).Rot[2]) + (x57 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x60 = x54 + (*lh_p).Pos[0] + (2 * ((x59 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x61 = (-1 * x56 * (*lh_p).Rot[3]) + (x54 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[2]);
	const FLT x62 = x57 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x61 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x63 = -1 * x62;
	const FLT x64 = x56 + (*lh_p).Pos[1] + (2 * ((x61 * (*lh_p).Rot[3]) + (-1 * x59 * (*lh_p).Rot[1])));
	const FLT x65 = (-1 * (*bsc0).phase) + (-1 * asin((1. / sqrt((x64 * x64) + (x62 * x62))) * x60 * (*bsc0).tilt)) +
					(-1 * atan2(-1 * x64, x63));
	return x65 + ((atan2(x60, x63) * atan2(x60, x63)) * (*bsc0).curve) +
		   (-1 * cos(1.5707963267949 + x65 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x2 = x0 * (*lh_p).Rot[3];
	const FLT x3 = x2 * (*lh_p).Rot[0];
	const FLT x4 = x3 + x1;
	const FLT x5 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x6 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x7 = cos(x6);
	const FLT x8 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x9 = sin(x8);
	const FLT x10 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x11 = sin(x10);
	const FLT x12 = x9 * x11;
	const FLT x13 = sin(x6);
	const FLT x14 = cos(x10);
	const FLT x15 = cos(x8);
	const FLT x16 = x15 * x14;
	const FLT x17 = (x13 * x16) + (-1 * x7 * x12);
	const FLT x18 = (x7 * x16) + (x13 * x12);
	const FLT x19 = x15 * x11;
	const FLT x20 = x9 * x14;
	const FLT x21 = (x7 * x20) + (x13 * x19);
	const FLT x22 = (x7 * x19) + (-1 * x20 * x13);
	const FLT x23 = 1. / sqrt((x22 * x22) + (x21 * x21) + (x17 * x17) + (x18 * x18));
	const FLT x24 = x23 * x18;
	const FLT x25 = x23 * x21;
	const FLT x26 = x22 * x23;
	const FLT x27 = x23 * x17;
	const FLT x28 = (x26 * (*_x0).Pose.Rot[3]) + (x24 * (*_x0).Pose.Rot[2]) + (-1 * x27 * (*_x0).Pose.Rot[1]) +
					(x25 * (*_x0).Pose.Rot[0]);
	const FLT x29 = dt * dt;
	const FLT x30 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x31 = x30 * x30;
	const FLT x32 = x31 * x29;
	const FLT x33 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x34 = x33 * x33;
	const FLT x35 = x34 * x29;
	const FLT x36 = x5 * x5;
	const FLT x37 = x36 * x29;
	const FLT x38 = 1e-10 + x37 + x32 + x35;
	const FLT x39 = sqrt(x38);
	const FLT x40 = 0.5 * x39;
	const FLT x41 = sin(x40);
	const FLT x42 = x41 * x41;
	const FLT x43 = 1. / x38;
	const FLT x44 = x42 * x43;
	const FLT x45 = cos(x40);
	const FLT x46 = (x44 * x35) + (x45 * x45) + (x44 * x32) + (x44 * x37);
	const FLT x47 = 1. / sqrt(x46);
	const FLT x48 = x41 * (1. / x39);
	const FLT x49 = dt * x48;
	const FLT x50 = x47 * x49;
	const FLT x51 = x50 * x28;
	const FLT x52 = (x24 * (*_x0).Pose.Rot[0]) + (-1 * x26 * (*_x0).Pose.Rot[1]) + (-1 * x27 * (*_x0).Pose.Rot[3]) +
					(-1 * x25 * (*_x0).Pose.Rot[2]);
	const FLT x53 = x45 * x47;
	const FLT x54 = x53 * x52;
	const FLT x55 = (x25 * (*_x0).Pose.Rot[1]) + (x27 * (*_x0).Pose.Rot[0]) + (x24 * (*_x0).Pose.Rot[3]) +
					(-1 * x26 * (*_x0).Pose.Rot[2]);
	const FLT x56 = x55 * x47;
	const FLT x57 = x56 * x49;
	const FLT x58 = (x24 * (*_x0).Pose.Rot[1]) + (-1 * x25 * (*_x0).Pose.Rot[3]) + (x27 * (*_x0).Pose.Rot[2]) +
					(x26 * (*_x0).Pose.Rot[0]);
	const FLT x59 = x50 * x58;
	const FLT x60 = (-1 * x59 * x33) + (-1 * x57 * x30) + (-1 * x5 * x51) + x54;
	const FLT x61 = x53 * x55;
	const FLT x62 = x50 * x52;
	const FLT x63 = (x51 * x33) + (-1 * x5 * x59) + (x62 * x30) + x61;
	const FLT x64 = x53 * x58;
	const FLT x65 = (x62 * x33) + (-1 * x51 * x30) + (x5 * x57) + x64;
	const FLT x66 = (-1 * x65 * sensor_pt[2]) + (x60 * sensor_pt[1]) + (x63 * sensor_pt[0]);
	const FLT x67 = x53 * x28;
	const FLT x68 = (-1 * x57 * x33) + x67 + (x59 * x30) + (x5 * x62);
	const FLT x69 = (-1 * x68 * sensor_pt[0]) + (x60 * sensor_pt[2]) + (x65 * sensor_pt[1]);
	const FLT x70 = 1.0 / 2.0 * x0;
	const FLT x71 = (*_x0).Pose.Pos[0] + (x70 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*error_model).Pose.Pos[0] +
					sensor_pt[0] + (2 * ((x68 * x69) + (-1 * x63 * x66))) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x72 = (-1 * x63 * sensor_pt[1]) + (x60 * sensor_pt[0]) + (x68 * sensor_pt[2]);
	const FLT x73 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x65 * x66) + (-1 * x72 * x68))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) +
					(x70 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2];
	const FLT x74 = (*_x0).Pose.Pos[1] + (2 * ((x72 * x63) + (-1 * x65 * x69))) +
					(x70 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1];
	const FLT x75 = (-1 * x74 * (*lh_p).Rot[3]) + (x71 * (*lh_p).Rot[0]) + (x73 * (*lh_p).Rot[2]);
	const FLT x76 = (-1 * x73 * (*lh_p).Rot[1]) + (x71 * (*lh_p).Rot[3]) + (x74 * (*lh_p).Rot[0]);
	const FLT x77 = x73 + (2 * ((x76 * (*lh_p).Rot[1]) + (-1 * x75 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x78 = 1. / x77;
	const FLT x79 = x0 * (*lh_p).Rot[0];
	const FLT x80 = x79 * (*lh_p).Rot[2];
	const FLT x81 = x2 * (*lh_p).Rot[1];
	const FLT x82 = x81 + (-1 * x80);
	const FLT x83 = (-1 * x71 * (*lh_p).Rot[2]) + (x73 * (*lh_p).Rot[0]) + (x74 * (*lh_p).Rot[1]);
	const FLT x84 = x74 + (*lh_p).Pos[1] + (2 * ((x75 * (*lh_p).Rot[3]) + (-1 * x83 * (*lh_p).Rot[1])));
	const FLT x85 = x77 * x77;
	const FLT x86 = 1. / x85;
	const FLT x87 = x84 * x86;
	const FLT x88 = x85 + (x84 * x84);
	const FLT x89 = 1. / x88;
	const FLT x90 = x89 * x85;
	const FLT x91 = (*lh_p).Pos[0] + x71 + (2 * ((x83 * (*lh_p).Rot[2]) + (-1 * x76 * (*lh_p).Rot[3])));
	const FLT x92 = x91 * x91;
	const FLT x93 = 1. / sqrt(1 + (-1 * x89 * x92 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x94 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x95 = -1 * x0 * x94;
	const FLT x96 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x97 = (-1 * x0 * x96) + x70;
	const FLT x98 = x97 + x95;
	const FLT x99 = (1. / sqrt(x88)) * (*bsc0).tilt;
	const FLT x100 = 2 * x84;
	const FLT x101 = 2 * x77;
	const FLT x102 = 1.0 / 2.0 * (1. / (x88 * sqrt(x88))) * x91 * (*bsc0).tilt;
	const FLT x103 = (-1 * x93 * ((-1 * x102 * ((x82 * x101) + (x4 * x100))) + (x99 * x98))) +
					 (-1 * x90 * ((-1 * x82 * x87) + (x4 * x78)));
	const FLT x104 = -1 * x77;
	const FLT x105 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
										  (-1 * asin(x91 * x99)) + (-1 * atan2(-1 * x84, x104)));
	const FLT x106 = x86 * x91;
	const FLT x107 = 2 * (1. / (x85 + x92)) * x85 * atan2(x91, x104) * (*bsc0).curve;
	const FLT x108 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x109 = -1 * x0 * x108;
	const FLT x110 = x109 + x95 + x70;
	const FLT x111 = x2 * (*lh_p).Rot[2];
	const FLT x112 = x79 * (*lh_p).Rot[1];
	const FLT x113 = x112 + x111;
	const FLT x114 = x1 + (-1 * x3);
	const FLT x115 = (-1 * x93 * ((-1 * ((x101 * x113) + (x100 * x110)) * x102) + (x99 * x114))) +
					 (-1 * ((-1 * x87 * x113) + (x78 * x110)) * x90);
	const FLT x116 = x111 + (-1 * x112);
	const FLT x117 = x97 + x109;
	const FLT x118 = x80 + x81;
	const FLT x119 = (-1 * x93 * ((-1 * ((x101 * x117) + (x100 * x116)) * x102) + (x99 * x118))) +
					 (-1 * ((-1 * x87 * x117) + (x78 * x116)) * x90);
	const FLT x120 = 2 * (*lh_p).Rot[2];
	const FLT x121 = x120 * (*lh_p).Rot[1];
	const FLT x122 = 2 * (*lh_p).Rot[3];
	const FLT x123 = x122 * (*lh_p).Rot[0];
	const FLT x124 = x123 + x121;
	const FLT x125 = x120 * (*lh_p).Rot[0];
	const FLT x126 = x122 * (*lh_p).Rot[1];
	const FLT x127 = x126 + (-1 * x125);
	const FLT x128 = 2 * x94;
	const FLT x129 = -1 * x128;
	const FLT x130 = 2 * x96;
	const FLT x131 = -1 * x130;
	const FLT x132 = 1 + x131 + x129;
	const FLT x133 = (-1 * x93 * ((-1 * ((x101 * x127) + (x100 * x124)) * x102) + (x99 * x132))) +
					 (-1 * ((-1 * x87 * x127) + (x78 * x124)) * x90);
	const FLT x134 = 2 * x108;
	const FLT x135 = 1 + (-1 * x134);
	const FLT x136 = x135 + x129;
	const FLT x137 = x120 * (*lh_p).Rot[3];
	const FLT x138 = 2 * (*lh_p).Rot[1];
	const FLT x139 = x138 * (*lh_p).Rot[0];
	const FLT x140 = x139 + x137;
	const FLT x141 = x121 + (-1 * x123);
	const FLT x142 = (-1 * x93 * ((-1 * ((x101 * x140) + (x100 * x136)) * x102) + (x99 * x141))) +
					 (-1 * ((-1 * x87 * x140) + (x78 * x136)) * x90);
	const FLT x143 = x137 + (-1 * x139);
	const FLT x144 = x135 + x131;
	const FLT x145 = x125 + x126;
	const FLT x146 = (-1 * x93 * ((-1 * ((x101 * x144) + (x100 * x143)) * x102) + (x99 * x145))) +
					 (-1 * ((-1 * x87 * x144) + (x78 * x143)) * x90);
	const FLT x147 = x50 * x24;
	const FLT x148 = x33 * x147;
	const FLT x149 = x53 * x26;
	const FLT x150 = x50 * x25;
	const FLT x151 = -1 * x30 * x150;
	const FLT x152 = x50 * x27;
	const FLT x153 = x5 * x152;
	const FLT x154 = x153 + x151;
	const FLT x155 = x154 + x148 + x149;
	const FLT x156 = x30 * x152;
	const FLT x157 = -1 * x156;
	const FLT x158 = x5 * x150;
	const FLT x159 = -1 * x158;
	const FLT x160 = x53 * x24;
	const FLT x161 = x50 * x26;
	const FLT x162 = x33 * x161;
	const FLT x163 = (-1 * x162) + x160;
	const FLT x164 = x157 + x163 + x159;
	const FLT x165 = x33 * x150;
	const FLT x166 = x30 * x147;
	const FLT x167 = -1 * x5 * x161;
	const FLT x168 = x53 * x27;
	const FLT x169 = x168 + x167;
	const FLT x170 = x169 + x165 + x166;
	const FLT x171 = (x170 * sensor_pt[0]) + (-1 * x155 * sensor_pt[2]) + (x164 * sensor_pt[1]);
	const FLT x172 = 2 * x63;
	const FLT x173 = x53 * x25;
	const FLT x174 = x30 * x161;
	const FLT x175 = -1 * x33 * x152;
	const FLT x176 = x5 * x147;
	const FLT x177 = x176 + x175;
	const FLT x178 = x177 + x173 + x174;
	const FLT x179 = (-1 * x178 * sensor_pt[0]) + (x155 * sensor_pt[1]) + (x164 * sensor_pt[2]);
	const FLT x180 = 2 * x68;
	const FLT x181 = 2 * x66;
	const FLT x182 = 2 * x69;
	const FLT x183 = (x178 * x182) + (-1 * x170 * x181) + (-1 * x171 * x172) + (x179 * x180);
	const FLT x184 = (x178 * sensor_pt[2]) + (-1 * x170 * sensor_pt[1]) + (x164 * sensor_pt[0]);
	const FLT x185 = 2 * x65;
	const FLT x186 = 2 * x72;
	const FLT x187 = (-1 * x178 * x186) + (-1 * x180 * x184) + (x181 * x155) + (x171 * x185);
	const FLT x188 = (x172 * x184) + (-1 * x179 * x185) + (-1 * x182 * x155) + (x170 * x186);
	const FLT x189 = (x188 * (*lh_p).Rot[1]) + (-1 * x183 * (*lh_p).Rot[2]) + (x187 * (*lh_p).Rot[0]);
	const FLT x190 = (x187 * (*lh_p).Rot[2]) + (-1 * x188 * (*lh_p).Rot[3]) + (x183 * (*lh_p).Rot[0]);
	const FLT x191 = x188 + (-1 * x189 * x138) + (x122 * x190);
	const FLT x192 = (-1 * x187 * (*lh_p).Rot[1]) + (x188 * (*lh_p).Rot[0]) + (x183 * (*lh_p).Rot[3]);
	const FLT x193 = x187 + (-1 * x120 * x190) + (x192 * x138);
	const FLT x194 = x183 + (-1 * x122 * x192) + (x120 * x189);
	const FLT x195 = (-1 * x93 * ((-1 * ((x101 * x193) + (x100 * x191)) * x102) + (x99 * x194))) +
					 (-1 * ((-1 * x87 * x193) + (x78 * x191)) * x90);
	const FLT x196 = -1 * x149;
	const FLT x197 = -1 * x148;
	const FLT x198 = x154 + x196 + x197;
	const FLT x199 = x163 + x158 + x156;
	const FLT x200 = -1 * x174;
	const FLT x201 = (-1 * x176) + x175;
	const FLT x202 = x201 + x200 + x173;
	const FLT x203 = (x202 * sensor_pt[0]) + (x198 * sensor_pt[1]) + (-1 * x199 * sensor_pt[2]);
	const FLT x204 = -1 * x165;
	const FLT x205 = (-1 * x168) + x167;
	const FLT x206 = x205 + x204 + x166;
	const FLT x207 = (x199 * sensor_pt[1]) + (x198 * sensor_pt[2]) + (-1 * x206 * sensor_pt[0]);
	const FLT x208 = (-1 * x202 * x181) + (x206 * x182) + (-1 * x203 * x172) + (x207 * x180);
	const FLT x209 = (-1 * x202 * sensor_pt[1]) + (x206 * sensor_pt[2]) + (x198 * sensor_pt[0]);
	const FLT x210 = (x181 * x199) + (-1 * x206 * x186) + (x203 * x185) + (-1 * x209 * x180);
	const FLT x211 = (-1 * x207 * x185) + (x202 * x186) + (-1 * x182 * x199) + (x209 * x172);
	const FLT x212 = (-1 * x208 * (*lh_p).Rot[2]) + (x211 * (*lh_p).Rot[1]) + (x210 * (*lh_p).Rot[0]);
	const FLT x213 = (x210 * (*lh_p).Rot[2]) + (-1 * x211 * (*lh_p).Rot[3]) + (x208 * (*lh_p).Rot[0]);
	const FLT x214 = x211 + (-1 * x212 * x138) + (x213 * x122);
	const FLT x215 = (x211 * (*lh_p).Rot[0]) + (-1 * x210 * (*lh_p).Rot[1]) + (x208 * (*lh_p).Rot[3]);
	const FLT x216 = x210 + (-1 * x213 * x120) + (x215 * x138);
	const FLT x217 = x208 + (-1 * x215 * x122) + (x212 * x120);
	const FLT x218 = (-1 * x93 * ((-1 * ((x216 * x101) + (x214 * x100)) * x102) + (x99 * x217))) +
					 (-1 * ((-1 * x87 * x216) + (x78 * x214)) * x90);
	const FLT x219 = -1 * x173;
	const FLT x220 = x201 + x174 + x219;
	const FLT x221 = -1 * x166;
	const FLT x222 = x169 + x204 + x221;
	const FLT x223 = (-1 * x153) + x151;
	const FLT x224 = x223 + x148 + x196;
	const FLT x225 = (x224 * sensor_pt[0]) + (x220 * sensor_pt[1]) + (-1 * x222 * sensor_pt[2]);
	const FLT x226 = x160 + x162;
	const FLT x227 = x226 + x156 + x159;
	const FLT x228 = (-1 * x227 * sensor_pt[0]) + (x222 * sensor_pt[1]) + (x220 * sensor_pt[2]);
	const FLT x229 = (x227 * x182) + (-1 * x225 * x172) + (x228 * x180) + (-1 * x224 * x181);
	const FLT x230 = (x227 * sensor_pt[2]) + (-1 * x224 * sensor_pt[1]) + (x220 * sensor_pt[0]);
	const FLT x231 = (x225 * x185) + (-1 * x230 * x180) + (x222 * x181) + (-1 * x227 * x186);
	const FLT x232 = (x230 * x172) + (x224 * x186) + (-1 * x222 * x182) + (-1 * x228 * x185);
	const FLT x233 = (x232 * (*lh_p).Rot[1]) + (-1 * x229 * (*lh_p).Rot[2]) + (x231 * (*lh_p).Rot[0]);
	const FLT x234 = (x231 * (*lh_p).Rot[2]) + (-1 * x232 * (*lh_p).Rot[3]) + (x229 * (*lh_p).Rot[0]);
	const FLT x235 = x232 + (-1 * x233 * x138) + (x234 * x122);
	const FLT x236 = (x232 * (*lh_p).Rot[0]) + (x229 * (*lh_p).Rot[3]) + (-1 * x231 * (*lh_p).Rot[1]);
	const FLT x237 = x231 + (-1 * x234 * x120) + (x236 * x138);
	const FLT x238 = x229 + (-1 * x236 * x122) + (x233 * x120);
	const FLT x239 = (-1 * x93 * ((-1 * ((x237 * x101) + (x235 * x100)) * x102) + (x99 * x238))) +
					 (-1 * ((-1 * x87 * x237) + (x78 * x235)) * x90);
	const FLT x240 = x226 + x157 + x158;
	const FLT x241 = x205 + x221 + x165;
	const FLT x242 = x223 + x197 + x149;
	const FLT x243 = (x242 * sensor_pt[2]) + (-1 * x240 * sensor_pt[1]) + (x241 * sensor_pt[0]);
	const FLT x244 = x177 + x200 + x219;
	const FLT x245 = (-1 * x244 * sensor_pt[2]) + (x240 * sensor_pt[0]) + (x241 * sensor_pt[1]);
	const FLT x246 = (-1 * x242 * x186) + (x245 * x185) + (-1 * x243 * x180) + (x244 * x181);
	const FLT x247 = (x244 * sensor_pt[1]) + (x241 * sensor_pt[2]) + (-1 * x242 * sensor_pt[0]);
	const FLT x248 = (x242 * x182) + (-1 * x245 * x172) + (x247 * x180) + (-1 * x240 * x181);
	const FLT x249 = (x240 * x186) + (x243 * x172) + (-1 * x244 * x182) + (-1 * x247 * x185);
	const FLT x250 = 2 * ((x249 * (*lh_p).Rot[1]) + (x246 * (*lh_p).Rot[0]) + (-1 * x248 * (*lh_p).Rot[2]));
	const FLT x251 = 2 * ((x246 * (*lh_p).Rot[2]) + (x248 * (*lh_p).Rot[0]) + (-1 * x249 * (*lh_p).Rot[3]));
	const FLT x252 = x249 + (-1 * x250 * (*lh_p).Rot[1]) + (x251 * (*lh_p).Rot[3]);
	const FLT x253 = 2 * ((x249 * (*lh_p).Rot[0]) + (-1 * x246 * (*lh_p).Rot[1]) + (x248 * (*lh_p).Rot[3]));
	const FLT x254 = x246 + (x253 * (*lh_p).Rot[1]) + (-1 * x251 * (*lh_p).Rot[2]);
	const FLT x255 = x248 + (-1 * x253 * (*lh_p).Rot[3]) + (x250 * (*lh_p).Rot[2]);
	const FLT x256 = (-1 * x93 * ((-1 * ((x254 * x101) + (x252 * x100)) * x102) + (x99 * x255))) +
					 (-1 * ((-1 * x87 * x254) + (x78 * x252)) * x90);
	const FLT x257 = dt * dt * dt;
	const FLT x258 = 0.5 * x43;
	const FLT x259 = x258 * x257;
	const FLT x260 = x34 * x259;
	const FLT x261 = 1.0 / 2.0 * (1. / (x46 * sqrt(x46)));
	const FLT x262 = x49 * x261;
	const FLT x263 = x5 * x262;
	const FLT x264 = dt * dt * dt * dt;
	const FLT x265 = (x33 * x33 * x33) * x264;
	const FLT x266 = 1.0 * x45;
	const FLT x267 = x41 * (1. / (x38 * sqrt(x38)));
	const FLT x268 = x266 * x267;
	const FLT x269 = 2 * x44;
	const FLT x270 = x29 * x269;
	const FLT x271 = 2 * x42 * (1. / (x38 * x38));
	const FLT x272 = x271 * x264;
	const FLT x273 = x31 * x272;
	const FLT x274 = x268 * x264;
	const FLT x275 = x36 * x274;
	const FLT x276 = x48 * x29;
	const FLT x277 = x33 * x276;
	const FLT x278 = x36 * x272;
	const FLT x279 = (-1 * x277 * x266) + (x33 * x270) + (x268 * x265) + (-1 * x271 * x265) + (-1 * x33 * x273) +
					 (-1 * x33 * x278) + (x33 * x275) + (x31 * x33 * x274);
	const FLT x280 = x58 * x279;
	const FLT x281 = x45 * x261;
	const FLT x282 = x279 * x281;
	const FLT x283 = 0.5 * x56;
	const FLT x284 = x52 * x279;
	const FLT x285 = x30 * x262;
	const FLT x286 = x47 * x28;
	const FLT x287 = x267 * x257;
	const FLT x288 = x34 * x287;
	const FLT x289 = x33 * x262;
	const FLT x290 = x28 * x279;
	const FLT x291 = x30 * x259;
	const FLT x292 = x54 * x291;
	const FLT x293 = x52 * x47;
	const FLT x294 = x33 * x293;
	const FLT x295 = x30 * x287;
	const FLT x296 = (-1 * x295 * x294) + (x33 * x292);
	const FLT x297 = x5 * x287;
	const FLT x298 = x58 * x47;
	const FLT x299 = x33 * x298;
	const FLT x300 = x5 * x33 * x259;
	const FLT x301 = (-1 * x64 * x300) + (x297 * x299);
	const FLT x302 = x301 + x296 + (-1 * x286 * x288) + x51 + (x263 * x280) + (x67 * x260) + (-1 * x290 * x289) +
					 (-1 * x277 * x283) + (-1 * x55 * x282) + (-1 * x284 * x285);
	const FLT x303 = -1 * x59;
	const FLT x304 = x33 * x286;
	const FLT x305 = x297 * x304;
	const FLT x306 = x55 * x279;
	const FLT x307 = 0.5 * x293;
	const FLT x308 = x67 * x300;
	const FLT x309 = x61 * x291;
	const FLT x310 = x56 * x33;
	const FLT x311 = (x295 * x310) + (-1 * x33 * x309);
	const FLT x312 = (x298 * x288) + (-1 * x277 * x307) + (x290 * x263) + (-1 * x52 * x282) + (x289 * x280) + x303 +
					 (-1 * x308) + x305 + x311 + (-1 * x64 * x260) + (x285 * x306);
	const FLT x313 = x64 * x291;
	const FLT x314 = x33 * x313;
	const FLT x315 = x299 * x295;
	const FLT x316 = -1 * x57;
	const FLT x317 = 0.5 * x286;
	const FLT x318 = (x54 * x300) + (-1 * x297 * x294);
	const FLT x319 = x318 + (x56 * x288) + (-1 * x285 * x280) + x316 + (-1 * x28 * x282) + (-1 * x263 * x284) +
					 (-1 * x315) + (x289 * x306) + (-1 * x277 * x317) + (-1 * x61 * x260) + x314;
	const FLT x320 = (-1 * x302 * sensor_pt[1]) + (x319 * sensor_pt[2]) + (x312 * sensor_pt[0]);
	const FLT x321 = 0.5 * x298;
	const FLT x322 = x61 * x300;
	const FLT x323 = x297 * x310;
	const FLT x324 = x295 * x304;
	const FLT x325 = x67 * x291;
	const FLT x326 = x33 * x325;
	const FLT x327 = x62 + (-1 * x293 * x288) + (x54 * x260) + (-1 * x58 * x282) + (x290 * x285) + (-1 * x263 * x306) +
					 (-1 * x289 * x284) + x322 + (-1 * x277 * x321) + (-1 * x323) + x324 + (-1 * x326);
	const FLT x328 = (x302 * sensor_pt[0]) + (x312 * sensor_pt[1]) + (-1 * x327 * sensor_pt[2]);
	const FLT x329 = (-1 * x319 * x186) + (x327 * x181) + (-1 * x320 * x180) + (x328 * x185);
	const FLT x330 = (x327 * sensor_pt[1]) + (-1 * x319 * sensor_pt[0]) + (x312 * sensor_pt[2]);
	const FLT x331 = (x330 * x180) + (x319 * x182) + (-1 * x328 * x172) + (-1 * x302 * x181);
	const FLT x332 = (x320 * x172) + (x302 * x186) + (-1 * x330 * x185) + (-1 * x327 * x182);
	const FLT x333 = (x332 * (*lh_p).Rot[1]) + (x329 * (*lh_p).Rot[0]) + (-1 * x331 * (*lh_p).Rot[2]);
	const FLT x334 = (x329 * (*lh_p).Rot[2]) + (-1 * x332 * (*lh_p).Rot[3]) + (x331 * (*lh_p).Rot[0]);
	const FLT x335 = x332 + (-1 * x333 * x138) + (x334 * x122);
	const FLT x336 = (x332 * (*lh_p).Rot[0]) + (-1 * x329 * (*lh_p).Rot[1]) + (x331 * (*lh_p).Rot[3]);
	const FLT x337 = x329 + (-1 * x334 * x120) + (x336 * x138);
	const FLT x338 = x331 + (x333 * x120) + (-1 * x336 * x122);
	const FLT x339 = (-1 * x93 * ((-1 * ((x337 * x101) + (x335 * x100)) * x102) + (x99 * x338))) +
					 (-1 * ((-1 * x87 * x337) + (x78 * x335)) * x90);
	const FLT x340 = x5 * x29;
	const FLT x341 = x48 * x340;
	const FLT x342 = x36 * x259;
	const FLT x343 = x5 * x274;
	const FLT x344 = x34 * x272;
	const FLT x345 = x5 * x5 * x5;
	const FLT x346 = (-1 * x272 * x345) + (x274 * x345) + (-1 * x5 * x344) + (-1 * x5 * x273) + (x269 * x340) +
					 (x31 * x343) + (x34 * x343) + (-1 * x266 * x341);
	const FLT x347 = x262 * x346;
	const FLT x348 = x58 * x347;
	const FLT x349 = x30 * x347;
	const FLT x350 = x36 * x287;
	const FLT x351 = x55 * x281;
	const FLT x352 = x33 * x347;
	const FLT x353 = x30 * x297;
	const FLT x354 = (-1 * x293 * x353) + (x5 * x292);
	const FLT x355 = x354 + (-1 * x28 * x352) + (-1 * x351 * x346) + (-1 * x64 * x342) + x303 + (-1 * x283 * x341) +
					 (x5 * x348) + (-1 * x305) + (x298 * x350) + x308 + (-1 * x52 * x349);
	const FLT x356 = -1 * x51;
	const FLT x357 = x52 * x281;
	const FLT x358 = x56 * x353;
	const FLT x359 = x5 * x347;
	const FLT x360 = x5 * x309;
	const FLT x361 = x301 + (-1 * x360) + (x55 * x349) + x358 + (x33 * x348) + (-1 * x67 * x342) + (-1 * x307 * x341) +
					 (x286 * x350) + x356 + (x28 * x359) + (-1 * x357 * x346);
	const FLT x362 = x52 * x347;
	const FLT x363 = x298 * x353;
	const FLT x364 = x5 * x313;
	const FLT x365 = x28 * x281;
	const FLT x366 = x323 + x364 + (x54 * x342) + (-1 * x363) + (-1 * x58 * x349) + (-1 * x293 * x350) + (x55 * x352) +
					 (-1 * x365 * x346) + (-1 * x322) + (-1 * x5 * x362) + x62 + (-1 * x317 * x341);
	const FLT x367 = (x366 * sensor_pt[2]) + (-1 * x355 * sensor_pt[1]) + (x361 * sensor_pt[0]);
	const FLT x368 = x58 * x281;
	const FLT x369 = (-1 * x5 * x325) + (x286 * x353);
	const FLT x370 = (-1 * x33 * x362) + (x28 * x349) + x57 + (x61 * x342) + (-1 * x321 * x341) + (-1 * x55 * x359) +
					 x369 + x318 + (-1 * x56 * x350) + (-1 * x368 * x346);
	const FLT x371 = (-1 * x370 * sensor_pt[2]) + (x355 * sensor_pt[0]) + (x361 * sensor_pt[1]);
	const FLT x372 = (x371 * x185) + (x370 * x181) + (-1 * x367 * x180) + (-1 * x366 * x186);
	const FLT x373 = (x370 * sensor_pt[1]) + (x361 * sensor_pt[2]) + (-1 * x366 * sensor_pt[0]);
	const FLT x374 = (-1 * x355 * x181) + (x373 * x180) + (-1 * x371 * x172) + (x366 * x182);
	const FLT x375 = (x367 * x172) + (-1 * x373 * x185) + (-1 * x370 * x182) + (x355 * x186);
	const FLT x376 = (x375 * (*lh_p).Rot[1]) + (x372 * (*lh_p).Rot[0]) + (-1 * x374 * (*lh_p).Rot[2]);
	const FLT x377 = (x372 * (*lh_p).Rot[2]) + (-1 * x375 * (*lh_p).Rot[3]) + (x374 * (*lh_p).Rot[0]);
	const FLT x378 = x375 + (-1 * x376 * x138) + (x377 * x122);
	const FLT x379 = (x375 * (*lh_p).Rot[0]) + (-1 * x372 * (*lh_p).Rot[1]) + (x374 * (*lh_p).Rot[3]);
	const FLT x380 = x372 + (x379 * x138) + (-1 * x377 * x120);
	const FLT x381 = (-1 * x379 * x122) + x374 + (x376 * x120);
	const FLT x382 = (-1 * x93 * ((-1 * ((x380 * x101) + (x378 * x100)) * x102) + (x99 * x381))) +
					 (-1 * ((-1 * x87 * x380) + (x78 * x378)) * x90);
	const FLT x383 = x31 * x257;
	const FLT x384 = x258 * x383;
	const FLT x385 = x30 * x276;
	const FLT x386 = x30 * x30 * x30;
	const FLT x387 = (-1 * x266 * x385) + (-1 * x272 * x386) + (x274 * x386) + (x30 * x275) + (x30 * x270) +
					 (x30 * x34 * x274) + (-1 * x30 * x278) + (-1 * x30 * x344);
	const FLT x388 = x58 * x387;
	const FLT x389 = x52 * x387;
	const FLT x390 = x267 * x383;
	const FLT x391 = x28 * x387;
	const FLT x392 = (-1 * x289 * x391) + (-1 * x285 * x389) + (x263 * x388) + (x54 * x384) + (-1 * x283 * x385) +
					 x326 + (-1 * x387 * x351) + (-1 * x364) + (-1 * x293 * x390) + (-1 * x324) + x363 + x62;
	const FLT x393 = x263 * x387;
	const FLT x394 = x55 * x387;
	const FLT x395 = x369 + (x289 * x388) + (x285 * x394) + (x28 * x393) + (-1 * x314) + (-1 * x61 * x384) +
					 (-1 * x385 * x307) + x316 + (x56 * x390) + (-1 * x387 * x357) + x315;
	const FLT x396 = (-1 * x365 * x387) + (-1 * x298 * x390) + x354 + x59 + (-1 * x385 * x317) + x311 + (x289 * x394) +
					 (x64 * x384) + (-1 * x263 * x389) + (-1 * x285 * x388);
	const FLT x397 = (x396 * sensor_pt[2]) + (-1 * x392 * sensor_pt[1]) + (x395 * sensor_pt[0]);
	const FLT x398 = (x285 * x391) + x296 + x356 + (-1 * x67 * x384) + (-1 * x385 * x321) + x360 + (-1 * x55 * x393) +
					 (-1 * x289 * x389) + (-1 * x368 * x387) + (-1 * x358) + (x286 * x390);
	const FLT x399 = (x392 * sensor_pt[0]) + (-1 * x398 * sensor_pt[2]) + (x395 * sensor_pt[1]);
	const FLT x400 = (x399 * x185) + (x398 * x181) + (-1 * x397 * x180) + (-1 * x396 * x186);
	const FLT x401 = (x398 * sensor_pt[1]) + (-1 * x396 * sensor_pt[0]) + (x395 * sensor_pt[2]);
	const FLT x402 = (x401 * x180) + (-1 * x392 * x181) + (-1 * x399 * x172) + (x396 * x182);
	const FLT x403 = (x397 * x172) + (x392 * x186) + (-1 * x398 * x182) + (-1 * x401 * x185);
	const FLT x404 = (x403 * (*lh_p).Rot[1]) + (x400 * (*lh_p).Rot[0]) + (-1 * x402 * (*lh_p).Rot[2]);
	const FLT x405 = (x400 * (*lh_p).Rot[2]) + (-1 * x403 * (*lh_p).Rot[3]) + (x402 * (*lh_p).Rot[0]);
	const FLT x406 = x403 + (-1 * x404 * x138) + (x405 * x122);
	const FLT x407 = (x403 * (*lh_p).Rot[0]) + (-1 * x400 * (*lh_p).Rot[1]) + (x402 * (*lh_p).Rot[3]);
	const FLT x408 = (-1 * x405 * x120) + x400 + (x407 * x138);
	const FLT x409 = x402 + (-1 * x407 * x122) + (x404 * x120);
	const FLT x410 = (-1 * x93 * ((-1 * ((x408 * x101) + (x406 * x100)) * x102) + (x99 * x409))) +
					 (-1 * ((-1 * x87 * x408) + (x78 * x406)) * x90);
	const FLT x411 = dt * x121;
	const FLT x412 = dt * x123;
	const FLT x413 = x412 + x411;
	const FLT x414 = dt * x125;
	const FLT x415 = dt * x126;
	const FLT x416 = x415 + (-1 * x414);
	const FLT x417 = -1 * dt * x130;
	const FLT x418 = (-1 * dt * x128) + dt;
	const FLT x419 = x418 + x417;
	const FLT x420 = (-1 * x93 * ((-1 * ((x416 * x101) + (x413 * x100)) * x102) + (x99 * x419))) +
					 (-1 * ((-1 * x87 * x416) + (x78 * x413)) * x90);
	const FLT x421 = -1 * dt * x134;
	const FLT x422 = x418 + x421;
	const FLT x423 = dt * x137;
	const FLT x424 = dt * x139;
	const FLT x425 = x424 + x423;
	const FLT x426 = x411 + (-1 * x412);
	const FLT x427 = (-1 * x93 * ((-1 * ((x425 * x101) + (x422 * x100)) * x102) + (x99 * x426))) +
					 (-1 * ((-1 * x87 * x425) + (x78 * x422)) * x90);
	const FLT x428 = x423 + (-1 * x424);
	const FLT x429 = x417 + dt + x421;
	const FLT x430 = x414 + x415;
	const FLT x431 = (-1 * x93 * ((-1 * ((x429 * x101) + (x428 * x100)) * x102) + (x99 * x430))) +
					 (-1 * ((-1 * x87 * x429) + (x78 * x428)) * x90);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						(x103 * x105) + x103 + (x107 * ((x82 * x106) + (-1 * x78 * x98))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						x115 + (x105 * x115) + (x107 * ((x106 * x113) + (-1 * x78 * x114))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						(x105 * x119) + x119 + (x107 * ((x106 * x117) + (-1 * x78 * x118))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT),
						x133 + (x105 * x133) + (x107 * ((x106 * x127) + (-1 * x78 * x132))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT),
						x142 + (x105 * x142) + (x107 * ((x106 * x140) + (-1 * x78 * x141))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT),
						x146 + (x105 * x146) + (x107 * ((x106 * x144) + (-1 * x78 * x145))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x195 + (x105 * x195) + (x107 * ((x106 * x193) + (-1 * x78 * x194))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x218 + (x218 * x105) + (x107 * ((x216 * x106) + (-1 * x78 * x217))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x239 + (x239 * x105) + (x107 * ((x237 * x106) + (-1 * x78 * x238))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x256 * x105) + x256 + (x107 * ((x254 * x106) + (-1 * x78 * x255))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x339 + (x339 * x105) + (x107 * ((x337 * x106) + (-1 * x78 * x338))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x382 + (x382 * x105) + (x107 * ((x380 * x106) + (-1 * x78 * x381))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						(x410 * x105) + x410 + (x107 * ((x408 * x106) + (-1 * x78 * x409))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT),
						x420 + (x420 * x105) + (x107 * ((x416 * x106) + (-1 * x78 * x419))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT),
						x427 + (x427 * x105) + (x107 * ((x425 * x106) + (-1 * x78 * x426))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT),
						x431 + (x431 * x105) + (x107 * ((x429 * x106) + (-1 * x78 * x430))));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = dt * fabs(dt);
	const FLT x1 = x0 * (*lh_p).Rot[1];
	const FLT x2 = x1 * (*lh_p).Rot[2];
	const FLT x3 = x0 * (*lh_p).Rot[0];
	const FLT x4 = x3 * (*lh_p).Rot[3];
	const FLT x5 = x4 + x2;
	const FLT x6 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x8 = sin(x7);
	const FLT x9 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x10 = sin(x9);
	const FLT x11 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x12 = sin(x11);
	const FLT x13 = x12 * x10;
	const FLT x14 = x8 * x13;
	const FLT x15 = cos(x7);
	const FLT x16 = cos(x11);
	const FLT x17 = cos(x9);
	const FLT x18 = x17 * x16;
	const FLT x19 = x15 * x18;
	const FLT x20 = x19 + x14;
	const FLT x21 = x15 * x13;
	const FLT x22 = x8 * x18;
	const FLT x23 = x22 + (-1 * x21);
	const FLT x24 = x10 * x16;
	const FLT x25 = x8 * x24;
	const FLT x26 = x12 * x17;
	const FLT x27 = x26 * x15;
	const FLT x28 = x27 + x25;
	const FLT x29 = x8 * x26;
	const FLT x30 = x24 * x15;
	const FLT x31 = x30 + (-1 * x29);
	const FLT x32 = (x31 * x31) + (x28 * x28) + (x23 * x23) + (x20 * x20);
	const FLT x33 = 1. / sqrt(x32);
	const FLT x34 = x33 * (*_x0).Pose.Rot[2];
	const FLT x35 = x33 * (*_x0).Pose.Rot[0];
	const FLT x36 = x33 * (*_x0).Pose.Rot[3];
	const FLT x37 = x33 * (*_x0).Pose.Rot[1];
	const FLT x38 = (-1 * x37 * x23) + (x31 * x36) + (x34 * x20) + (x35 * x28);
	const FLT x39 = dt * dt;
	const FLT x40 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x41 = x40 * x40;
	const FLT x42 = x41 * x39;
	const FLT x43 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x44 = x43 * x43;
	const FLT x45 = x44 * x39;
	const FLT x46 = x6 * x6;
	const FLT x47 = x46 * x39;
	const FLT x48 = 1e-10 + x47 + x42 + x45;
	const FLT x49 = sqrt(x48);
	const FLT x50 = 0.5 * x49;
	const FLT x51 = sin(x50);
	const FLT x52 = x51 * x51;
	const FLT x53 = 1. / x48;
	const FLT x54 = x53 * x52;
	const FLT x55 = cos(x50);
	const FLT x56 = (x55 * x55) + (x54 * x42) + (x54 * x45) + (x54 * x47);
	const FLT x57 = 1. / sqrt(x56);
	const FLT x58 = x51 * x57;
	const FLT x59 = 1. / x49;
	const FLT x60 = dt * x59;
	const FLT x61 = x60 * x58;
	const FLT x62 = x61 * x38;
	const FLT x63 = (x35 * x20) + (-1 * x36 * x23) + (-1 * x31 * x37) + (-1 * x34 * x28);
	const FLT x64 = x57 * x55;
	const FLT x65 = x63 * x64;
	const FLT x66 = (x37 * x28) + (x35 * x23) + (x36 * x20) + (-1 * x31 * x34);
	const FLT x67 = x61 * x66;
	const FLT x68 = (x37 * x20) + (x34 * x23) + (-1 * x36 * x28) + (x31 * x35);
	const FLT x69 = x68 * x58;
	const FLT x70 = x60 * x69;
	const FLT x71 = (-1 * x70 * x43) + (-1 * x67 * x40) + (-1 * x6 * x62) + x65;
	const FLT x72 = x64 * x66;
	const FLT x73 = x63 * x61;
	const FLT x74 = (x73 * x40) + (-1 * x6 * x70) + (x62 * x43) + x72;
	const FLT x75 = x64 * x68;
	const FLT x76 = (x73 * x43) + (x6 * x67) + (-1 * x62 * x40) + x75;
	const FLT x77 = (-1 * x76 * sensor_pt[2]) + (x71 * sensor_pt[1]) + (x74 * sensor_pt[0]);
	const FLT x78 = x64 * x38;
	const FLT x79 = (-1 * x67 * x43) + x78 + (x70 * x40) + (x6 * x73);
	const FLT x80 = (-1 * x79 * sensor_pt[0]) + (x71 * sensor_pt[2]) + (x76 * sensor_pt[1]);
	const FLT x81 = 1.0 / 2.0 * x0;
	const FLT x82 = (*_x0).Pose.Pos[0] + (2 * ((x80 * x79) + (-1 * x74 * x77))) + (*error_model).Pose.Pos[0] +
					(x81 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x83 = (-1 * x74 * sensor_pt[1]) + (x71 * sensor_pt[0]) + (x79 * sensor_pt[2]);
	const FLT x84 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x77 * x76) + (-1 * x83 * x79))) +
					(x81 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x85 = (*_x0).Pose.Pos[1] + (2 * ((x83 * x74) + (-1 * x80 * x76))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x81 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x86 = (-1 * x85 * (*lh_p).Rot[3]) + (x82 * (*lh_p).Rot[0]) + (x84 * (*lh_p).Rot[2]);
	const FLT x87 = (x82 * (*lh_p).Rot[3]) + (-1 * x84 * (*lh_p).Rot[1]) + (x85 * (*lh_p).Rot[0]);
	const FLT x88 = x84 + (2 * ((x87 * (*lh_p).Rot[1]) + (-1 * x86 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x89 = 1. / x88;
	const FLT x90 = x3 * (*lh_p).Rot[2];
	const FLT x91 = x1 * (*lh_p).Rot[3];
	const FLT x92 = x91 + (-1 * x90);
	const FLT x93 = x88 * x88;
	const FLT x94 = 1. / x93;
	const FLT x95 = (-1 * x82 * (*lh_p).Rot[2]) + (x84 * (*lh_p).Rot[0]) + (x85 * (*lh_p).Rot[1]);
	const FLT x96 = x85 + (*lh_p).Pos[1] + (2 * ((x86 * (*lh_p).Rot[3]) + (-1 * x95 * (*lh_p).Rot[1])));
	const FLT x97 = x96 * x94;
	const FLT x98 = x93 + (x96 * x96);
	const FLT x99 = 1. / x98;
	const FLT x100 = x93 * x99;
	const FLT x101 = x82 + (*lh_p).Pos[0] + (2 * ((x95 * (*lh_p).Rot[2]) + (-1 * x87 * (*lh_p).Rot[3])));
	const FLT x102 = x101 * x101;
	const FLT x103 = 1. / sqrt(1 + (-1 * x99 * x102 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x104 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x105 = -1 * x0 * x104;
	const FLT x106 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x107 = (-1 * x0 * x106) + x81;
	const FLT x108 = x107 + x105;
	const FLT x109 = (1. / sqrt(x98)) * (*bsc0).tilt;
	const FLT x110 = 2 * x96;
	const FLT x111 = 2 * x88;
	const FLT x112 = 1.0 / 2.0 * (1. / (x98 * sqrt(x98))) * x101 * (*bsc0).tilt;
	const FLT x113 = (-1 * x103 * ((-1 * x112 * ((x92 * x111) + (x5 * x110))) + (x109 * x108))) +
					 (-1 * x100 * ((-1 * x92 * x97) + (x5 * x89)));
	const FLT x114 = -1 * x88;
	const FLT x115 = sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha + (-1 * asin(x101 * x109)) +
						 (-1 * atan2(-1 * x96, x114))) *
					 (*bsc0).gibmag;
	const FLT x116 = x94 * x101;
	const FLT x117 = 2 * x93 * (1. / (x93 + x102)) * atan2(x101, x114) * (*bsc0).curve;
	const FLT x118 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x119 = -1 * x0 * x118;
	const FLT x120 = x107 + x119;
	const FLT x121 = x0 * (*lh_p).Rot[3] * (*lh_p).Rot[2];
	const FLT x122 = x1 * (*lh_p).Rot[0];
	const FLT x123 = x122 + x121;
	const FLT x124 = x2 + (-1 * x4);
	const FLT x125 = (-1 * x103 * ((-1 * ((x111 * x123) + (x110 * x120)) * x112) + (x109 * x124))) +
					 (-1 * ((-1 * x97 * x123) + (x89 * x120)) * x100);
	const FLT x126 = x121 + (-1 * x122);
	const FLT x127 = x105 + x81 + x119;
	const FLT x128 = x90 + x91;
	const FLT x129 = (-1 * x103 * ((-1 * ((x111 * x127) + (x110 * x126)) * x112) + (x109 * x128))) +
					 (-1 * ((-1 * x97 * x127) + (x89 * x126)) * x100);
	const FLT x130 = 0.5 * x19;
	const FLT x131 = 0.5 * x14;
	const FLT x132 = x131 + x130;
	const FLT x133 = 2 * x31;
	const FLT x134 = 0.5 * x21;
	const FLT x135 = -1 * x134;
	const FLT x136 = 0.5 * x22;
	const FLT x137 = x136 + x135;
	const FLT x138 = 2 * x28;
	const FLT x139 = 0.5 * x25;
	const FLT x140 = -0.5 * x27;
	const FLT x141 = x140 + (-1 * x139);
	const FLT x142 = 2 * x141;
	const FLT x143 = 0.5 * x30;
	const FLT x144 = -1 * x143;
	const FLT x145 = 0.5 * x29;
	const FLT x146 = x145 + x144;
	const FLT x147 = 2 * x20;
	const FLT x148 = (x146 * x147) + (x23 * x142) + (x133 * x132) + (x137 * x138);
	const FLT x149 = x23 * x148;
	const FLT x150 = 1.0 / 2.0 * (1. / (x32 * sqrt(x32)));
	const FLT x151 = x150 * (*_x0).Pose.Rot[1];
	const FLT x152 = x150 * (*_x0).Pose.Rot[3];
	const FLT x153 = x31 * x148;
	const FLT x154 = x33 * x141;
	const FLT x155 = -1 * x154 * (*_x0).Pose.Rot[1];
	const FLT x156 = x150 * (*_x0).Pose.Rot[2];
	const FLT x157 = x20 * x148;
	const FLT x158 = x150 * (*_x0).Pose.Rot[0];
	const FLT x159 = x28 * x148;
	const FLT x160 = x33 * x132;
	const FLT x161 = x160 * (*_x0).Pose.Rot[3];
	const FLT x162 = x161 + (x35 * x137) + (x149 * x151) + (x34 * x146) + (-1 * x152 * x153) + x155 +
					 (-1 * x158 * x159) + (-1 * x156 * x157);
	const FLT x163 = x61 * x43;
	const FLT x164 = -1 * x160 * (*_x0).Pose.Rot[1];
	const FLT x165 = x154 * (*_x0).Pose.Rot[3];
	const FLT x166 = (-1 * x34 * x137) + (x149 * x152) + x164 + (x35 * x146) + (x151 * x153) + (-1 * x157 * x158) +
					 (-1 * x165) + (x156 * x159);
	const FLT x167 = x61 * x40;
	const FLT x168 = x154 * (*_x0).Pose.Rot[2];
	const FLT x169 = x160 * (*_x0).Pose.Rot[0];
	const FLT x170 = (-1 * x153 * x158) + x169 + (-1 * x149 * x156) + (x37 * x146) + (-1 * x151 * x157) +
					 (x152 * x159) + (-1 * x36 * x137) + x168;
	const FLT x171 = x6 * x61;
	const FLT x172 = x160 * (*_x0).Pose.Rot[2];
	const FLT x173 = x154 * (*_x0).Pose.Rot[0];
	const FLT x174 = x173 + (-1 * x172) + (-1 * x152 * x157) + (-1 * x149 * x158) + (x153 * x156) + (x37 * x137) +
					 (-1 * x151 * x159) + (x36 * x146);
	const FLT x175 = (x64 * x174) + (x163 * x162) + (-1 * x170 * x171) + (x167 * x166);
	const FLT x176 = x61 * x174;
	const FLT x177 = (x64 * x166) + (-1 * x162 * x171) + (-1 * x163 * x170) + (-1 * x40 * x176);
	const FLT x178 = (x166 * x171) + (x64 * x162) + (x167 * x170) + (-1 * x163 * x174);
	const FLT x179 = (x178 * sensor_pt[2]) + (-1 * x175 * sensor_pt[1]) + (x177 * sensor_pt[0]);
	const FLT x180 = 2 * x79;
	const FLT x181 = (x64 * x170) + (x6 * x176) + (x166 * x163) + (-1 * x167 * x162);
	const FLT x182 = (x175 * sensor_pt[0]) + (-1 * x181 * sensor_pt[2]) + (x177 * sensor_pt[1]);
	const FLT x183 = 2 * x76;
	const FLT x184 = 2 * x77;
	const FLT x185 = 2 * x83;
	const FLT x186 = (-1 * x178 * x185) + (-1 * x179 * x180) + (x181 * x184) + (x183 * x182);
	const FLT x187 = 2 * x80;
	const FLT x188 = 2 * x74;
	const FLT x189 = (x181 * sensor_pt[1]) + (-1 * x178 * sensor_pt[0]) + (x177 * sensor_pt[2]);
	const FLT x190 = (-1 * x175 * x184) + (x178 * x187) + (x180 * x189) + (-1 * x188 * x182);
	const FLT x191 = (x175 * x185) + (-1 * x189 * x183) + (x179 * x188) + (-1 * x181 * x187);
	const FLT x192 = (x186 * (*lh_p).Rot[0]) + (x191 * (*lh_p).Rot[1]) + (-1 * x190 * (*lh_p).Rot[2]);
	const FLT x193 = 2 * (*lh_p).Rot[1];
	const FLT x194 = (x186 * (*lh_p).Rot[2]) + (-1 * x191 * (*lh_p).Rot[3]) + (x190 * (*lh_p).Rot[0]);
	const FLT x195 = 2 * (*lh_p).Rot[3];
	const FLT x196 = x191 + (-1 * x192 * x193) + (x194 * x195);
	const FLT x197 = 2 * (*lh_p).Rot[2];
	const FLT x198 = (x191 * (*lh_p).Rot[0]) + (-1 * x186 * (*lh_p).Rot[1]) + (x190 * (*lh_p).Rot[3]);
	const FLT x199 = x186 + (-1 * x197 * x194) + (x198 * x193);
	const FLT x200 = (-1 * x198 * x195) + x190 + (x197 * x192);
	const FLT x201 = (-1 * x103 * ((-1 * ((x111 * x199) + (x110 * x196)) * x112) + (x200 * x109))) +
					 (-1 * ((-1 * x97 * x199) + (x89 * x196)) * x100);
	const FLT x202 = -1 * x136;
	const FLT x203 = x202 + x135;
	const FLT x204 = (-1 * x131) + x130;
	const FLT x205 = -1 * x145;
	const FLT x206 = x144 + x205;
	const FLT x207 = 2 * x23;
	const FLT x208 = x139 + x140;
	const FLT x209 = (x208 * x147) + (x206 * x207) + (x203 * x133) + (x204 * x138);
	const FLT x210 = x23 * x209;
	const FLT x211 = x33 * x206;
	const FLT x212 = x28 * x209;
	const FLT x213 = x31 * x209;
	const FLT x214 = x20 * x209;
	const FLT x215 = x214 * x150;
	const FLT x216 = x33 * x203;
	const FLT x217 = (x216 * (*_x0).Pose.Rot[3]) + (-1 * x215 * (*_x0).Pose.Rot[2]) + (-1 * x213 * x152) +
					 (x34 * x208) + (x210 * x151) + (-1 * x211 * (*_x0).Pose.Rot[1]) + (-1 * x212 * x158) +
					 (x35 * x204);
	const FLT x218 = x213 * x150;
	const FLT x219 = (x35 * x208) + (x210 * x152) + (-1 * x211 * (*_x0).Pose.Rot[3]) + (x212 * x156) +
					 (-1 * x216 * (*_x0).Pose.Rot[1]) + (x218 * (*_x0).Pose.Rot[1]) + (-1 * x214 * x158) +
					 (-1 * x34 * x204);
	const FLT x220 = (x218 * (*_x0).Pose.Rot[2]) + (x37 * x204) + (x35 * x206) + (x36 * x208) + (-1 * x212 * x151) +
					 (-1 * x210 * x158) + (-1 * x214 * x152) + (-1 * x34 * x203);
	const FLT x221 = (-1 * x215 * (*_x0).Pose.Rot[1]) + (-1 * x210 * x156) + (x37 * x208) + (x212 * x152) +
					 (x35 * x203) + (x34 * x206) + (-1 * x213 * x158) + (-1 * x36 * x204);
	const FLT x222 = (x64 * x221) + (x220 * x171) + (-1 * x217 * x167) + (x219 * x163);
	const FLT x223 = (x64 * x219) + (-1 * x220 * x167) + (-1 * x221 * x163) + (-1 * x217 * x171);
	const FLT x224 = (-1 * x221 * x171) + (x219 * x167) + (x64 * x220) + (x217 * x163);
	const FLT x225 = (x224 * sensor_pt[0]) + (-1 * x222 * sensor_pt[2]) + (x223 * sensor_pt[1]);
	const FLT x226 = (x219 * x171) + (x221 * x167) + (-1 * x220 * x163) + (x64 * x217);
	const FLT x227 = (x222 * sensor_pt[1]) + (x223 * sensor_pt[2]) + (-1 * x226 * sensor_pt[0]);
	const FLT x228 = (-1 * x224 * x184) + (x226 * x187) + (-1 * x225 * x188) + (x227 * x180);
	const FLT x229 = (x226 * sensor_pt[2]) + (-1 * x224 * sensor_pt[1]) + (x223 * sensor_pt[0]);
	const FLT x230 = (-1 * x226 * x185) + (x225 * x183) + (x222 * x184) + (-1 * x229 * x180);
	const FLT x231 = (x229 * x188) + (-1 * x227 * x183) + (-1 * x222 * x187) + (x224 * x185);
	const FLT x232 = (x231 * (*lh_p).Rot[1]) + (-1 * x228 * (*lh_p).Rot[2]) + (x230 * (*lh_p).Rot[0]);
	const FLT x233 = (x230 * (*lh_p).Rot[2]) + (-1 * x231 * (*lh_p).Rot[3]) + (x228 * (*lh_p).Rot[0]);
	const FLT x234 = x231 + (-1 * x232 * x193) + (x233 * x195);
	const FLT x235 = (-1 * x230 * (*lh_p).Rot[1]) + (x231 * (*lh_p).Rot[0]) + (x228 * (*lh_p).Rot[3]);
	const FLT x236 = (-1 * x233 * x197) + x230 + (x235 * x193);
	const FLT x237 = x228 + (x232 * x197) + (-1 * x235 * x195);
	const FLT x238 = (-1 * x103 * ((-1 * ((x236 * x111) + (x234 * x110)) * x112) + (x237 * x109))) +
					 (-1 * ((-1 * x97 * x236) + (x89 * x234)) * x100);
	const FLT x239 = x143 + x205;
	const FLT x240 = x134 + x202;
	const FLT x241 = (x240 * x147) + (x239 * x138) + (x31 * x142) + (x207 * x132);
	const FLT x242 = x20 * x241;
	const FLT x243 = x23 * x241;
	const FLT x244 = x31 * x241;
	const FLT x245 = x244 * x150;
	const FLT x246 = x28 * x241;
	const FLT x247 = x246 * x150;
	const FLT x248 = (x35 * x240) + (-1 * x161) + (-1 * x34 * x239) + (-1 * x242 * x158) + x155 + (x243 * x152) +
					 (x247 * (*_x0).Pose.Rot[2]) + (x245 * (*_x0).Pose.Rot[1]);
	const FLT x249 = (-1 * x246 * x158) + (x35 * x239) + (-1 * x244 * x152) + x164 + (x243 * x151) +
					 (-1 * x242 * x156) + x165 + (x34 * x240);
	const FLT x250 = (x245 * (*_x0).Pose.Rot[2]) + (-1 * x168) + x169 + (-1 * x242 * x152) + (-1 * x243 * x158) +
					 (x37 * x239) + (x36 * x240) + (-1 * x247 * (*_x0).Pose.Rot[1]);
	const FLT x251 = x172 + (-1 * x244 * x158) + (x37 * x240) + (-1 * x243 * x156) + (-1 * x242 * x151) +
					 (x246 * x152) + (-1 * x36 * x239) + x173;
	const FLT x252 = (x64 * x251) + (x250 * x171) + (x248 * x163) + (-1 * x249 * x167);
	const FLT x253 = (x64 * x248) + (-1 * x251 * x163) + (-1 * x250 * x167) + (-1 * x249 * x171);
	const FLT x254 = (x64 * x250) + (-1 * x251 * x171) + (x249 * x163) + (x248 * x167);
	const FLT x255 = (-1 * x252 * sensor_pt[2]) + (x254 * sensor_pt[0]) + (x253 * sensor_pt[1]);
	const FLT x256 = (x251 * x167) + (x248 * x171) + (-1 * x250 * x163) + (x64 * x249);
	const FLT x257 = (x253 * sensor_pt[2]) + (x252 * sensor_pt[1]) + (-1 * x256 * sensor_pt[0]);
	const FLT x258 = (-1 * x255 * x188) + (x257 * x180) + (x256 * x187) + (-1 * x254 * x184);
	const FLT x259 = (-1 * x254 * sensor_pt[1]) + (x256 * sensor_pt[2]) + (x253 * sensor_pt[0]);
	const FLT x260 = (x252 * x184) + (x255 * x183) + (-1 * x256 * x185) + (-1 * x259 * x180);
	const FLT x261 = (-1 * x257 * x183) + (x254 * x185) + (-1 * x252 * x187) + (x259 * x188);
	const FLT x262 = (x261 * (*lh_p).Rot[1]) + (-1 * x258 * (*lh_p).Rot[2]) + (x260 * (*lh_p).Rot[0]);
	const FLT x263 = (x260 * (*lh_p).Rot[2]) + (-1 * x261 * (*lh_p).Rot[3]) + (x258 * (*lh_p).Rot[0]);
	const FLT x264 = x261 + (-1 * x262 * x193) + (x263 * x195);
	const FLT x265 = (x261 * (*lh_p).Rot[0]) + (-1 * x260 * (*lh_p).Rot[1]) + (x258 * (*lh_p).Rot[3]);
	const FLT x266 = (-1 * x263 * x197) + x260 + (x265 * x193);
	const FLT x267 = x258 + (-1 * x265 * x195) + (x262 * x197);
	const FLT x268 = (-1 * x103 * ((-1 * ((x266 * x111) + (x264 * x110)) * x112) + (x267 * x109))) +
					 (-1 * ((-1 * x97 * x266) + (x89 * x264)) * x100);
	const FLT x269 = x193 * (*lh_p).Rot[2];
	const FLT x270 = x195 * (*lh_p).Rot[0];
	const FLT x271 = x270 + x269;
	const FLT x272 = x197 * (*lh_p).Rot[0];
	const FLT x273 = x193 * (*lh_p).Rot[3];
	const FLT x274 = x273 + (-1 * x272);
	const FLT x275 = 2 * x106;
	const FLT x276 = -1 * x275;
	const FLT x277 = 2 * x104;
	const FLT x278 = -1 * x277;
	const FLT x279 = 1 + x278 + x276;
	const FLT x280 = (-1 * x103 * ((-1 * ((x274 * x111) + (x271 * x110)) * x112) + (x279 * x109))) +
					 (-1 * ((-1 * x97 * x274) + (x89 * x271)) * x100);
	const FLT x281 = 2 * x118;
	const FLT x282 = 1 + (-1 * x281);
	const FLT x283 = x282 + x276;
	const FLT x284 = x197 * (*lh_p).Rot[3];
	const FLT x285 = x193 * (*lh_p).Rot[0];
	const FLT x286 = x285 + x284;
	const FLT x287 = x269 + (-1 * x270);
	const FLT x288 = (-1 * x103 * ((-1 * ((x286 * x111) + (x283 * x110)) * x112) + (x287 * x109))) +
					 (-1 * ((-1 * x97 * x286) + (x89 * x283)) * x100);
	const FLT x289 = x284 + (-1 * x285);
	const FLT x290 = x282 + x278;
	const FLT x291 = x272 + x273;
	const FLT x292 = (-1 * x103 * ((-1 * ((x290 * x111) + (x289 * x110)) * x112) + (x291 * x109))) +
					 (-1 * ((-1 * x97 * x290) + (x89 * x289)) * x100);
	const FLT x293 = dt * dt * dt;
	const FLT x294 = 0.5 * x53 * x293;
	const FLT x295 = x78 * x294;
	const FLT x296 = dt * dt * dt * dt;
	const FLT x297 = (x43 * x43 * x43) * x296;
	const FLT x298 = 1. / (x48 * sqrt(x48));
	const FLT x299 = 1.0 * x55;
	const FLT x300 = x51 * x299;
	const FLT x301 = x298 * x300;
	const FLT x302 = x43 * x39;
	const FLT x303 = 2 * x54;
	const FLT x304 = 2 * x52 * (1. / (x48 * x48));
	const FLT x305 = x296 * x304;
	const FLT x306 = x41 * x43;
	const FLT x307 = x296 * x301;
	const FLT x308 = x46 * x307;
	const FLT x309 = x59 * x302;
	const FLT x310 = x46 * x305;
	const FLT x311 = (-1 * x43 * x310) + (x43 * x308) + (-1 * x309 * x300) + (x302 * x303) + (x307 * x306) +
					 (x297 * x301) + (-1 * x297 * x304) + (-1 * x305 * x306);
	const FLT x312 = x6 * x51;
	const FLT x313 = 1.0 / 2.0 * (1. / (x56 * sqrt(x56)));
	const FLT x314 = x60 * x313;
	const FLT x315 = x312 * x314;
	const FLT x316 = x68 * x315;
	const FLT x317 = x55 * x313;
	const FLT x318 = x66 * x317;
	const FLT x319 = x66 * x58;
	const FLT x320 = 0.5 * x319;
	const FLT x321 = x51 * x314;
	const FLT x322 = x311 * x321;
	const FLT x323 = x63 * x40;
	const FLT x324 = x298 * x293;
	const FLT x325 = x58 * x38;
	const FLT x326 = x324 * x325;
	const FLT x327 = x43 * x38;
	const FLT x328 = x65 * x294;
	const FLT x329 = x40 * x43;
	const FLT x330 = x63 * x58;
	const FLT x331 = x43 * x324;
	const FLT x332 = x331 * x330;
	const FLT x333 = (-1 * x40 * x332) + (x328 * x329);
	const FLT x334 = x69 * x324;
	const FLT x335 = x6 * x43;
	const FLT x336 = x75 * x294;
	const FLT x337 = (-1 * x336 * x335) + (x335 * x334);
	const FLT x338 = x333 + (-1 * x327 * x322) + (-1 * x44 * x326) + x62 + (x311 * x316) + (x44 * x295) + x337 +
					 (-1 * x309 * x320) + (-1 * x322 * x323) + (-1 * x311 * x318);
	const FLT x339 = x43 * x326;
	const FLT x340 = x6 * x339;
	const FLT x341 = x66 * x40;
	const FLT x342 = x63 * x317;
	const FLT x343 = x38 * x315;
	const FLT x344 = 0.5 * x330;
	const FLT x345 = x295 * x335;
	const FLT x346 = -1 * x70;
	const FLT x347 = x331 * x319;
	const FLT x348 = x72 * x294;
	const FLT x349 = (-1 * x329 * x348) + (x40 * x347);
	const FLT x350 = x346 + (-1 * x309 * x344) + x340 + (-1 * x44 * x336) + (x44 * x334) + (-1 * x345) + (x322 * x341) +
					 x349 + (x311 * x343) + (-1 * x311 * x342) + (x68 * x43 * x322);
	const FLT x351 = -1 * x67;
	const FLT x352 = x63 * x315;
	const FLT x353 = x336 * x329;
	const FLT x354 = x40 * x334;
	const FLT x355 = x43 * x354;
	const FLT x356 = x66 * x43;
	const FLT x357 = x68 * x40;
	const FLT x358 = x44 * x324;
	const FLT x359 = 0.5 * x325;
	const FLT x360 = x38 * x317;
	const FLT x361 = (-1 * x6 * x332) + (x328 * x335);
	const FLT x362 = x361 + (-1 * x360 * x311) + (-1 * x359 * x309) + (x358 * x319) + (-1 * x357 * x322) +
					 (x356 * x322) + x351 + (-1 * x44 * x348) + (-1 * x355) + (-1 * x352 * x311) + x353;
	const FLT x363 = (x362 * sensor_pt[2]) + (-1 * x338 * sensor_pt[1]) + (x350 * sensor_pt[0]);
	const FLT x364 = 0.5 * x69;
	const FLT x365 = x68 * x317;
	const FLT x366 = x348 * x335;
	const FLT x367 = x6 * x347;
	const FLT x368 = x40 * x339;
	const FLT x369 = x40 * x38;
	const FLT x370 = x66 * x315;
	const FLT x371 = x295 * x329;
	const FLT x372 = x63 * x43;
	const FLT x373 = x366 + (x44 * x328) + x73 + (-1 * x365 * x311) + (-1 * x364 * x309) + (-1 * x358 * x330) + x368 +
					 (x369 * x322) + (-1 * x372 * x322) + (-1 * x370 * x311) + (-1 * x367) + (-1 * x371);
	const FLT x374 = (x338 * sensor_pt[0]) + (x350 * sensor_pt[1]) + (-1 * x373 * sensor_pt[2]);
	const FLT x375 = (-1 * x362 * x185) + (-1 * x363 * x180) + (x373 * x184) + (x374 * x183);
	const FLT x376 = (x373 * sensor_pt[1]) + (-1 * x362 * sensor_pt[0]) + (x350 * sensor_pt[2]);
	const FLT x377 = (x376 * x180) + (x362 * x187) + (-1 * x374 * x188) + (-1 * x338 * x184);
	const FLT x378 = (x363 * x188) + (x338 * x185) + (-1 * x376 * x183) + (-1 * x373 * x187);
	const FLT x379 = 2 * ((x378 * (*lh_p).Rot[1]) + (x375 * (*lh_p).Rot[0]) + (-1 * x377 * (*lh_p).Rot[2]));
	const FLT x380 = 2 * ((x375 * (*lh_p).Rot[2]) + (-1 * x378 * (*lh_p).Rot[3]) + (x377 * (*lh_p).Rot[0]));
	const FLT x381 = x378 + (-1 * x379 * (*lh_p).Rot[1]) + (x380 * (*lh_p).Rot[3]);
	const FLT x382 = 2 * ((x378 * (*lh_p).Rot[0]) + (-1 * x375 * (*lh_p).Rot[1]) + (x377 * (*lh_p).Rot[3]));
	const FLT x383 = x375 + (-1 * x380 * (*lh_p).Rot[2]) + (x382 * (*lh_p).Rot[1]);
	const FLT x384 = x377 + (x379 * (*lh_p).Rot[2]) + (-1 * x382 * (*lh_p).Rot[3]);
	const FLT x385 = (-1 * x103 * ((-1 * ((x383 * x111) + (x381 * x110)) * x112) + (x384 * x109))) +
					 (-1 * ((-1 * x97 * x383) + (x89 * x381)) * x100);
	const FLT x386 = x59 * x39;
	const FLT x387 = x6 * x386;
	const FLT x388 = x299 * x312;
	const FLT x389 = x296 * x298 * x388;
	const FLT x390 = x6 * x305;
	const FLT x391 = x6 * x6 * x6;
	const FLT x392 = x39 * x303;
	const FLT x393 = (-1 * x391 * x305) + (x6 * x392) + (x391 * x307) + (-1 * x44 * x390) + (-1 * x388 * x386) +
					 (x44 * x389) + (x41 * x389) + (-1 * x41 * x390);
	const FLT x394 = x393 * x321;
	const FLT x395 = x43 * x394;
	const FLT x396 = x6 * x40;
	const FLT x397 = x6 * x330;
	const FLT x398 = x40 * x324;
	const FLT x399 = (-1 * x398 * x397) + (x396 * x328);
	const FLT x400 = x399 + (-1 * x38 * x395) + (-1 * x340) + (-1 * x393 * x318) + (x46 * x334) + x345 +
					 (-1 * x387 * x320) + x346 + (-1 * x46 * x336) + (-1 * x394 * x323) + (x393 * x316);
	const FLT x401 = -1 * x62;
	const FLT x402 = x6 * x398 * x319;
	const FLT x403 = x396 * x348;
	const FLT x404 = (x68 * x395) + x337 + (-1 * x403) + (x393 * x343) + (x394 * x341) + x402 + (-1 * x46 * x295) +
					 x401 + (x46 * x326) + (-0.5 * x397 * x386) + (-1 * x393 * x342);
	const FLT x405 = x46 * x324;
	const FLT x406 = x6 * x354;
	const FLT x407 = x396 * x336;
	const FLT x408 = (x46 * x328) + x73 + (-1 * x406) + (-1 * x393 * x352) + x407 + (x394 * x356) + (-1 * x394 * x357) +
					 (-1 * x393 * x360) + (-1 * x405 * x330) + (-1 * x366) + x367 + (-1 * x387 * x359);
	const FLT x409 = (x408 * sensor_pt[2]) + (-1 * x400 * sensor_pt[1]) + (x404 * sensor_pt[0]);
	const FLT x410 = 2 * x408;
	const FLT x411 = (-1 * x295 * x396) + (x396 * x326);
	const FLT x412 = x361 + x411 + (-1 * x372 * x394) + (x394 * x369) + x67 + (-1 * x405 * x319) + (-1 * x393 * x370) +
					 (x46 * x348) + (-1 * x364 * x387) + (-1 * x393 * x365);
	const FLT x413 = (-1 * x412 * sensor_pt[2]) + (x400 * sensor_pt[0]) + (x404 * sensor_pt[1]);
	const FLT x414 = (x413 * x183) + (-1 * x409 * x180) + (x412 * x184) + (-1 * x83 * x410);
	const FLT x415 = (x404 * sensor_pt[2]) + (x412 * sensor_pt[1]) + (-1 * x408 * sensor_pt[0]);
	const FLT x416 = (x415 * x180) + (-1 * x413 * x188) + (-1 * x400 * x184) + (x80 * x410);
	const FLT x417 = (x409 * x188) + (-1 * x415 * x183) + (-1 * x412 * x187) + (x400 * x185);
	const FLT x418 = (x417 * (*lh_p).Rot[1]) + (x414 * (*lh_p).Rot[0]) + (-1 * x416 * (*lh_p).Rot[2]);
	const FLT x419 = (x414 * (*lh_p).Rot[2]) + (-1 * x417 * (*lh_p).Rot[3]) + (x416 * (*lh_p).Rot[0]);
	const FLT x420 = x417 + (-1 * x418 * x193) + (x419 * x195);
	const FLT x421 = (x417 * (*lh_p).Rot[0]) + (-1 * x414 * (*lh_p).Rot[1]) + (x416 * (*lh_p).Rot[3]);
	const FLT x422 = x414 + (x421 * x193) + (-1 * x419 * x197);
	const FLT x423 = x416 + (-1 * x421 * x195) + (x418 * x197);
	const FLT x424 = (-1 * x103 * ((-1 * ((x422 * x111) + (x420 * x110)) * x112) + (x423 * x109))) +
					 (-1 * ((-1 * x97 * x422) + (x89 * x420)) * x100);
	const FLT x425 = x41 * x294;
	const FLT x426 = x40 * x386;
	const FLT x427 = x40 * x44;
	const FLT x428 = x40 * x40 * x40;
	const FLT x429 = (-1 * x426 * x300) + (-1 * x428 * x305) + (x428 * x307) + (-1 * x427 * x305) + (x40 * x308) +
					 (x427 * x307) + (x40 * x392) + (-1 * x40 * x310);
	const FLT x430 = x429 * x321;
	const FLT x431 = x41 * x324;
	const FLT x432 = (-1 * x430 * x327) + x73 + (-1 * x426 * x320) + (-1 * x407) + (-1 * x431 * x330) + (-1 * x368) +
					 x371 + (x65 * x425) + (-1 * x430 * x323) + (-1 * x429 * x318) + (x429 * x316) + x406;
	const FLT x433 = x68 * x430;
	const FLT x434 = x411 + (-1 * x72 * x425) + (x430 * x341) + (x429 * x343) + (-1 * x353) + (x43 * x433) +
					 (x431 * x319) + (-1 * x426 * x344) + x351 + (-1 * x429 * x342) + x355;
	const FLT x435 = x399 + (-1 * x429 * x360) + (-1 * x69 * x431) + (x430 * x356) + (x75 * x425) + (-1 * x40 * x433) +
					 x349 + x70 + (-1 * x429 * x352) + (-1 * x426 * x359);
	const FLT x436 = (x435 * sensor_pt[2]) + (-1 * x432 * sensor_pt[1]) + (x434 * sensor_pt[0]);
	const FLT x437 = x333 + (-1 * x430 * x372) + (x430 * x369) + (-1 * x426 * x364) + x403 + (-1 * x429 * x365) +
					 (-1 * x78 * x425) + (-1 * x402) + x401 + (-1 * x429 * x370) + (x431 * x325);
	const FLT x438 = (x432 * sensor_pt[0]) + (-1 * x437 * sensor_pt[2]) + (x434 * sensor_pt[1]);
	const FLT x439 = (x438 * x183) + (x437 * x184) + (-1 * x436 * x180) + (-1 * x435 * x185);
	const FLT x440 = (x437 * sensor_pt[1]) + (-1 * x435 * sensor_pt[0]) + (x434 * sensor_pt[2]);
	const FLT x441 = (-1 * x432 * x184) + (x440 * x180) + (-1 * x438 * x188) + (x435 * x187);
	const FLT x442 = (x436 * x188) + (x432 * x185) + (-1 * x437 * x187) + (-1 * x440 * x183);
	const FLT x443 = 2 * ((x442 * (*lh_p).Rot[1]) + (x439 * (*lh_p).Rot[0]) + (-1 * x441 * (*lh_p).Rot[2]));
	const FLT x444 = 2 * ((-1 * x442 * (*lh_p).Rot[3]) + (x439 * (*lh_p).Rot[2]) + (x441 * (*lh_p).Rot[0]));
	const FLT x445 = x442 + (-1 * x443 * (*lh_p).Rot[1]) + (x444 * (*lh_p).Rot[3]);
	const FLT x446 = 2 * ((-1 * x439 * (*lh_p).Rot[1]) + (x442 * (*lh_p).Rot[0]) + (x441 * (*lh_p).Rot[3]));
	const FLT x447 = x439 + (-1 * x444 * (*lh_p).Rot[2]) + (x446 * (*lh_p).Rot[1]);
	const FLT x448 = (-1 * x446 * (*lh_p).Rot[3]) + x441 + (x443 * (*lh_p).Rot[2]);
	const FLT x449 = (-1 * x103 * ((-1 * ((x447 * x111) + (x445 * x110)) * x112) + (x448 * x109))) +
					 (-1 * ((-1 * x97 * x447) + (x89 * x445)) * x100);
	const FLT x450 = dt * x269;
	const FLT x451 = dt * x270;
	const FLT x452 = x451 + x450;
	const FLT x453 = dt * x272;
	const FLT x454 = dt * x273;
	const FLT x455 = x454 + (-1 * x453);
	const FLT x456 = -1 * dt * x277;
	const FLT x457 = (-1 * dt * x275) + dt;
	const FLT x458 = x457 + x456;
	const FLT x459 = (-1 * x103 * ((-1 * ((x455 * x111) + (x452 * x110)) * x112) + (x458 * x109))) +
					 (-1 * ((-1 * x97 * x455) + (x89 * x452)) * x100);
	const FLT x460 = -1 * dt * x281;
	const FLT x461 = x457 + x460;
	const FLT x462 = dt * x284;
	const FLT x463 = dt * x285;
	const FLT x464 = x463 + x462;
	const FLT x465 = x450 + (-1 * x451);
	const FLT x466 = (-1 * x103 * ((-1 * ((x464 * x111) + (x461 * x110)) * x112) + (x465 * x109))) +
					 (-1 * ((-1 * x97 * x464) + (x89 * x461)) * x100);
	const FLT x467 = x462 + (-1 * x463);
	const FLT x468 = x456 + dt + x460;
	const FLT x469 = x453 + x454;
	const FLT x470 = (-1 * x103 * ((-1 * ((x468 * x111) + (x467 * x110)) * x112) + (x469 * x109))) +
					 (-1 * ((-1 * x97 * x468) + (x89 * x467)) * x100);
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						(x113 * x115) + x113 + (((x92 * x116) + (-1 * x89 * x108)) * x117));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						x125 + (x115 * x125) + (x117 * ((x116 * x123) + (-1 * x89 * x124))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x129 + (x115 * x129) + (x117 * ((x116 * x127) + (-1 * x89 * x128))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x201 + (x201 * x115) + (x117 * ((x116 * x199) + (-1 * x89 * x200))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x238 + (x238 * x115) + (x117 * ((x236 * x116) + (-1 * x89 * x237))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x268 * x115) + x268 + (x117 * ((x266 * x116) + (-1 * x89 * x267))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT),
						x280 + (x280 * x115) + (x117 * ((x274 * x116) + (-1 * x89 * x279))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT),
						x288 + (x288 * x115) + (x117 * ((x286 * x116) + (-1 * x89 * x287))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT),
						x292 + (x292 * x115) + (x117 * ((x290 * x116) + (-1 * x89 * x291))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						(x385 * x115) + x385 + (x117 * ((x383 * x116) + (-1 * x89 * x384))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x424 + (x424 * x115) + (x117 * ((x422 * x116) + (-1 * x89 * x423))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x449 + (x449 * x115) + (x117 * ((x447 * x116) + (-1 * x89 * x448))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT),
						x459 + (x459 * x115) + (x117 * ((x455 * x116) + (-1 * x89 * x458))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT),
						x466 + (x466 * x115) + (x117 * ((x464 * x116) + (-1 * x89 * x465))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT),
						(x470 * x115) + x470 + (x117 * ((x468 * x116) + (-1 * x89 * x469))));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (x2 * x7);
	const FLT x13 = x4 * x9;
	const FLT x14 = x6 * x10;
	const FLT x15 = (x8 * x14) + (-1 * x2 * x13);
	const FLT x16 = (x2 * x11) + (x8 * x7);
	const FLT x17 = (x8 * x13) + (-1 * x2 * x14);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x17 * x17) + (x12 * x12));
	const FLT x19 = x18 * (*_x0).Pose.Rot[2];
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * (*_x0).Pose.Rot[3];
	const FLT x22 = x15 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x21 * x17) + (x12 * x19) + (x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = x12 * x18;
	const FLT x40 = x18 * x17;
	const FLT x41 = (-1 * x40 * (*_x0).Pose.Rot[1]) + (x39 * (*_x0).Pose.Rot[0]) + (-1 * x21 * x15) + (-1 * x19 * x16);
	const FLT x42 = x36 * x35;
	const FLT x43 = (x20 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[0]) + (x21 * x12) + (-1 * x19 * x17);
	const FLT x44 = x43 * x37;
	const FLT x45 =
		(x39 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[2]) + (-1 * x21 * x16) + (x40 * (*_x0).Pose.Rot[0]);
	const FLT x46 = x45 * x37;
	const FLT x47 = (-1 * x46 * x27) + (-1 * x44 * x25) + (-1 * x0 * x38) + (x41 * x42);
	const FLT x48 = x0 * x46;
	const FLT x49 = x42 * x43;
	const FLT x50 = x41 * x37;
	const FLT x51 = x50 * x25;
	const FLT x52 = x38 * x27;
	const FLT x53 = x52 + x51 + (-1 * x48) + x49;
	const FLT x54 = x0 * x44;
	const FLT x55 = x42 * x45;
	const FLT x56 = x38 * x25;
	const FLT x57 = x50 * x27;
	const FLT x58 = x57 + (-1 * x56) + x54 + x55;
	const FLT x59 = (-1 * x58 * sensor_pt[2]) + (x47 * sensor_pt[1]) + (x53 * sensor_pt[0]);
	const FLT x60 = x46 * x25;
	const FLT x61 = x0 * x50;
	const FLT x62 = x42 * x23;
	const FLT x63 = x44 * x27;
	const FLT x64 = (-1 * x63) + x62 + x60 + x61;
	const FLT x65 = (-1 * x64 * sensor_pt[0]) + (x47 * sensor_pt[2]) + (x58 * sensor_pt[1]);
	const FLT x66 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x67 = (*_x0).Pose.Pos[0] + (2 * ((x64 * x65) + (-1 * x53 * x59))) + (*error_model).Pose.Pos[0] +
					(x66 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x68 = (-1 * x53 * sensor_pt[1]) + (x47 * sensor_pt[0]) + (x64 * sensor_pt[2]);
	const FLT x69 = (*error_model).Pose.Pos[2] + (2 * ((x58 * x59) + (-1 * x64 * x68))) + (*_x0).Pose.Pos[2] +
					(x66 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x70 = (*_x0).Pose.Pos[1] + (2 * ((x68 * x53) + (-1 * x65 * x58))) + (*error_model).Pose.Pos[1] +
					(x66 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]));
	const FLT x71 = (-1 * x70 * (*lh_p).Rot[3]) + (x67 * (*lh_p).Rot[0]) + (x69 * (*lh_p).Rot[2]);
	const FLT x72 = (-1 * x69 * (*lh_p).Rot[1]) + (x67 * (*lh_p).Rot[3]) + (x70 * (*lh_p).Rot[0]);
	const FLT x73 = x69 + (2 * ((x72 * (*lh_p).Rot[1]) + (-1 * x71 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x74 = 1. / x73;
	const FLT x75 = (-1 * x62) + x63 + (-1 * x60) + (-1 * x61);
	const FLT x76 = 2 * x64;
	const FLT x77 = 1 + (x75 * x76) + (-2 * (x53 * x53));
	const FLT x78 = x76 * x47;
	const FLT x79 = 2 * x58;
	const FLT x80 = (x79 * x53) + (-1 * x78);
	const FLT x81 = 2 * x53;
	const FLT x82 = x81 * x47;
	const FLT x83 = x82 + (-1 * x79 * x75);
	const FLT x84 = (x83 * (*lh_p).Rot[1]) + (-1 * x77 * (*lh_p).Rot[2]) + (x80 * (*lh_p).Rot[0]);
	const FLT x85 = 2 * (*lh_p).Rot[1];
	const FLT x86 = (x80 * (*lh_p).Rot[2]) + (-1 * x83 * (*lh_p).Rot[3]) + (x77 * (*lh_p).Rot[0]);
	const FLT x87 = 2 * (*lh_p).Rot[3];
	const FLT x88 = x83 + (-1 * x84 * x85) + (x86 * x87);
	const FLT x89 = (x83 * (*lh_p).Rot[0]) + (-1 * x80 * (*lh_p).Rot[1]) + (x77 * (*lh_p).Rot[3]);
	const FLT x90 = 2 * (*lh_p).Rot[2];
	const FLT x91 = x80 + (x89 * x85) + (-1 * x86 * x90);
	const FLT x92 = (-1 * x67 * (*lh_p).Rot[2]) + (x69 * (*lh_p).Rot[0]) + (x70 * (*lh_p).Rot[1]);
	const FLT x93 = x70 + (*lh_p).Pos[1] + (2 * ((x71 * (*lh_p).Rot[3]) + (-1 * x92 * (*lh_p).Rot[1])));
	const FLT x94 = x73 * x73;
	const FLT x95 = 1. / x94;
	const FLT x96 = x93 * x95;
	const FLT x97 = x94 + (x93 * x93);
	const FLT x98 = 1. / x97;
	const FLT x99 = x98 * x94;
	const FLT x100 = x77 + (x84 * x90) + (-1 * x89 * x87);
	const FLT x101 = (1. / sqrt(x97)) * (*bsc0).tilt;
	const FLT x102 = 2 * x93;
	const FLT x103 = 2 * x73;
	const FLT x104 = x67 + (*lh_p).Pos[0] + (2 * ((x92 * (*lh_p).Rot[2]) + (-1 * x72 * (*lh_p).Rot[3])));
	const FLT x105 = 1.0 / 2.0 * (1. / (x97 * sqrt(x97))) * x104 * (*bsc0).tilt;
	const FLT x106 = x104 * x104;
	const FLT x107 = 1. / sqrt(1 + (-1 * x98 * x106 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x108 = (-1 * x107 * ((-1 * ((x91 * x103) + (x88 * x102)) * x105) + (x101 * x100))) +
					 (-1 * ((-1 * x91 * x96) + (x88 * x74)) * x99);
	const FLT x109 = -1 * x73;
	const FLT x110 = sin(1.5707963267949 + (-1 * asin(x101 * x104)) + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
						 (-1 * atan2(-1 * x93, x109))) *
					 (*bsc0).gibmag;
	const FLT x111 = x95 * x104;
	const FLT x112 = 2 * x94 * (1. / (x94 + x106)) * atan2(x104, x109) * (*bsc0).curve;
	const FLT x113 = (x76 * x58) + (-1 * x82);
	const FLT x114 = (-1 * x51) + (-1 * x52) + (-1 * x49) + x48;
	const FLT x115 = x79 * x47;
	const FLT x116 = x115 + (-1 * x76 * x114);
	const FLT x117 = 1 + (x81 * x114) + (-2 * (x58 * x58));
	const FLT x118 = 2 * ((x117 * (*lh_p).Rot[1]) + (-1 * x113 * (*lh_p).Rot[2]) + (x116 * (*lh_p).Rot[0]));
	const FLT x119 = (x116 * (*lh_p).Rot[2]) + (x113 * (*lh_p).Rot[0]) + (-1 * x117 * (*lh_p).Rot[3]);
	const FLT x120 = (-1 * x118 * (*lh_p).Rot[1]) + x117 + (x87 * x119);
	const FLT x121 = (x117 * (*lh_p).Rot[0]) + (-1 * x116 * (*lh_p).Rot[1]) + (x113 * (*lh_p).Rot[3]);
	const FLT x122 = x116 + (x85 * x121) + (-1 * x90 * x119);
	const FLT x123 = x113 + (x118 * (*lh_p).Rot[2]) + (-1 * x87 * x121);
	const FLT x124 = (-1 * x107 * ((-1 * ((x103 * x122) + (x102 * x120)) * x105) + (x101 * x123))) +
					 (-1 * ((-1 * x96 * x122) + (x74 * x120)) * x99);
	const FLT x125 = x56 + (-1 * x57) + (-1 * x55) + (-1 * x54);
	const FLT x126 = x78 + (-1 * x81 * x125);
	const FLT x127 = 1 + (x79 * x125) + (-2 * (x64 * x64));
	const FLT x128 = (x76 * x53) + (-1 * x115);
	const FLT x129 = (x128 * (*lh_p).Rot[1]) + (-1 * x126 * (*lh_p).Rot[2]) + (x127 * (*lh_p).Rot[0]);
	const FLT x130 = (x127 * (*lh_p).Rot[2]) + (-1 * x128 * (*lh_p).Rot[3]) + (x126 * (*lh_p).Rot[0]);
	const FLT x131 = x128 + (-1 * x85 * x129) + (x87 * x130);
	const FLT x132 = (x128 * (*lh_p).Rot[0]) + (-1 * x127 * (*lh_p).Rot[1]) + (x126 * (*lh_p).Rot[3]);
	const FLT x133 = x127 + (x85 * x132) + (-1 * x90 * x130);
	const FLT x134 = x126 + (x90 * x129) + (-1 * x87 * x132);
	const FLT x135 = (-1 * x107 * ((-1 * ((x103 * x133) + (x102 * x131)) * x105) + (x101 * x134))) +
					 (-1 * ((-1 * x96 * x133) + (x74 * x131)) * x99);
	cnMatrixOptionalSet(Hx, 0, 0, x108 + (x108 * x110) + (((x91 * x111) + (-1 * x74 * x100)) * x112));
	cnMatrixOptionalSet(Hx, 0, 1, x124 + (x110 * x124) + (x112 * ((x111 * x122) + (-1 * x74 * x123))));
	cnMatrixOptionalSet(Hx, 0, 2, x135 + (x110 * x135) + (x112 * ((x111 * x133) + (-1 * x74 * x134))));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x2 * x11) + (x8 * x7);
	const FLT x14 = x4 * x9;
	const FLT x15 = x6 * x10;
	const FLT x16 = (x2 * x15) + (x8 * x14);
	const FLT x17 = (x2 * x14) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x13 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x41 * x37;
	const FLT x43 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x37 * x27;
	const FLT x45 = (-1 * x43 * x44) + (-1 * x0 * x38) + (-1 * x42 * x25) + (x40 * x39);
	const FLT x46 = x43 * x37;
	const FLT x47 = x37 * x39;
	const FLT x48 = (x44 * x23) + (x47 * x25) + (-1 * x0 * x46) + (x40 * x41);
	const FLT x49 = (-1 * x38 * x25) + (x0 * x42) + (x44 * x39) + (x40 * x43);
	const FLT x50 = (x45 * sensor_pt[1]) + (-1 * x49 * sensor_pt[2]) + (x48 * sensor_pt[0]);
	const FLT x51 = (-1 * x41 * x44) + (x46 * x25) + (x40 * x23) + (x0 * x47);
	const FLT x52 = (-1 * x51 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x49 * sensor_pt[1]);
	const FLT x53 = 2 * ((x52 * x51) + (-1 * x50 * x48));
	const FLT x54 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x55 = x54 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x56 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x57 = (*error_model).Pose.Pos[0] + (*_x0).Pose.Pos[0] + x53 + x55 + sensor_pt[0] + x56;
	const FLT x58 = x57 * (*lh_p).Rot[3];
	const FLT x59 = (x45 * sensor_pt[0]) + (-1 * x48 * sensor_pt[1]) + (x51 * sensor_pt[2]);
	const FLT x60 = 2 * ((x59 * x48) + (-1 * x52 * x49));
	const FLT x61 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x62 = x54 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x63 = (*_x0).Pose.Pos[1] + x61 + (*error_model).Pose.Pos[1] + x60 + sensor_pt[1] + x62;
	const FLT x64 = x63 * (*lh_p).Rot[0];
	const FLT x65 = 2 * ((x50 * x49) + (-1 * x51 * x59));
	const FLT x66 = x54 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x67 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x68 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + x65 + sensor_pt[2] + x66 + x67;
	const FLT x69 = x68 * (*lh_p).Rot[1];
	const FLT x70 = x58 + (-1 * x69) + x64;
	const FLT x71 = x68 * (*lh_p).Rot[0];
	const FLT x72 = x63 * (*lh_p).Rot[1];
	const FLT x73 = x57 * (*lh_p).Rot[2];
	const FLT x74 = (-1 * x73) + x71 + x72;
	const FLT x75 = x57 + (*lh_p).Pos[0] + (2 * ((x74 * (*lh_p).Rot[2]) + (-1 * x70 * (*lh_p).Rot[3])));
	const FLT x76 = x57 * (*lh_p).Rot[0];
	const FLT x77 = x68 * (*lh_p).Rot[2];
	const FLT x78 = x63 * (*lh_p).Rot[3];
	const FLT x79 = x76 + (-1 * x78) + x77;
	const FLT x80 = x68 + (2 * ((x70 * (*lh_p).Rot[1]) + (-1 * x79 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x81 = x80 * x80;
	const FLT x82 = x63 + (*lh_p).Pos[1] + (2 * ((x79 * (*lh_p).Rot[3]) + (-1 * x74 * (*lh_p).Rot[1])));
	const FLT x83 = (x82 * x82) + x81;
	const FLT x84 = (1. / sqrt(x83)) * (*bsc0).tilt;
	const FLT x85 = -1 * x80;
	const FLT x86 = (*bsc0).gibmag * sin(1.5707963267949 + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
										 (-1 * asin(x84 * x75)) + (-1 * atan2(-1 * x82, x85)));
	const FLT x87 = 1. / x83;
	const FLT x88 = x75 * x75;
	const FLT x89 = 1. / sqrt(1 + (-1 * x88 * x87 * ((*bsc0).tilt * (*bsc0).tilt)));
	const FLT x90 = x89 * x84;
	const FLT x91 = 2 * x80;
	const FLT x92 = (1. / (x81 + x88)) * atan2(x75, x85) * (*bsc0).curve;
	const FLT x93 = (1. / (x83 * sqrt(x83))) * x75 * (*bsc0).tilt;
	const FLT x94 = x89 * x93;
	const FLT x95 = (x82 * x94) + (-1 * x80 * x87);
	const FLT x96 = (x80 * x94) + (x82 * x87);
	const FLT x97 = 2 * x92;
	const FLT x98 = 1. / x80;
	const FLT x99 = 2 * x69;
	const FLT x100 = (2 * x58) + (-1 * x99);
	const FLT x101 = 2 * x73;
	const FLT x102 = (2 * x72) + (-1 * x101);
	const FLT x103 = 1. / x81;
	const FLT x104 = x82 * x103;
	const FLT x105 = x81 * x87;
	const FLT x106 = 2 * x78;
	const FLT x107 = (2 * x77) + (-1 * x106);
	const FLT x108 = 2 * x82;
	const FLT x109 = 1.0 / 2.0 * x93;
	const FLT x110 = (-1 * x89 * ((-1 * x109 * ((x91 * x102) + (x100 * x108))) + (x84 * x107))) +
					 (-1 * x105 * ((-1 * x102 * x104) + (x98 * x100)));
	const FLT x111 = x75 * x103;
	const FLT x112 = x81 * x97;
	const FLT x113 = 2 * x71;
	const FLT x114 = x101 + (-1 * x113) + (-4 * x72);
	const FLT x115 = 2 * x64;
	const FLT x116 = (-1 * sensor_pt[2]) + (-1 * x65) + (-1 * x67) + (-1 * (*_x0).Pose.Pos[2]) + (-1 * x66) +
					 (-1 * (*error_model).Pose.Pos[2]);
	const FLT x117 = 2 * (*lh_p).Rot[1];
	const FLT x118 = x100 + x115 + (x116 * x117);
	const FLT x119 = 2 * (*lh_p).Rot[3];
	const FLT x120 = 2 * (*lh_p).Rot[2];
	const FLT x121 = (x63 * x120) + (-1 * x119 * x116);
	const FLT x122 = (-1 * x89 * ((-1 * x109 * ((x91 * x118) + (x108 * x114))) + (x84 * x121))) +
					 (-1 * x105 * ((-1 * x104 * x118) + (x98 * x114)));
	const FLT x123 = (-1 * (*error_model).Pose.Pos[0]) + (-1 * sensor_pt[0]) + (-1 * x56) + (-1 * x53) +
					 (-1 * (*_x0).Pose.Pos[0]) + (-1 * x55);
	const FLT x124 = (x68 * x119) + (-1 * x117 * x123);
	const FLT x125 = 2 * x76;
	const FLT x126 = x106 + (-4 * x77) + (-1 * x125);
	const FLT x127 = x113 + x102 + (x120 * x123);
	const FLT x128 = (-1 * x89 * ((-1 * x109 * ((x91 * x126) + (x108 * x124))) + (x84 * x127))) +
					 (-1 * x105 * ((-1 * x104 * x126) + (x98 * x124)));
	const FLT x129 = 2 * ((-1 * x61) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x62) + (-1 * (*error_model).Pose.Pos[1]) +
						  (-1 * x60) + (-1 * sensor_pt[1]));
	const FLT x130 = x107 + x125 + (x129 * (*lh_p).Rot[3]);
	const FLT x131 = (x57 * x117) + (-1 * x129 * (*lh_p).Rot[2]);
	const FLT x132 = (-1 * x115) + (-4 * x58) + x99;
	const FLT x133 = (-1 * x89 * ((-1 * x109 * ((x91 * x131) + (x108 * x130))) + (x84 * x132))) +
					 (-1 * x105 * ((-1 * x104 * x131) + (x98 * x130)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT),
						(-1 * x92 * x91) + (-1 * x86 * x90) + (-1 * x90));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), x95 + (x86 * x95));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x96 + (x86 * x96) + (x75 * x97));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT),
						x110 + (x86 * x110) + (x112 * ((x102 * x111) + (-1 * x98 * x107))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT),
						x122 + (x86 * x122) + (x112 * ((x111 * x118) + (-1 * x98 * x121))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT),
						x128 + (x86 * x128) + (x112 * ((x111 * x126) + (-1 * x98 * x127))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT),
						x133 + (x86 * x133) + (x112 * ((x111 * x131) + (-1 * x98 * x132))));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at 0x7f0193066550>,
// <cnkalman.codegen.WrapMember object at 0x7f01930660a0>, <cnkalman.codegen.WrapMember object at 0x7f01930660d0>,
// <cnkalman.codegen.WrapMember object at 0x7f0193066490>, <cnkalman.codegen.WrapMember object at 0x7f0193066430>,
// <cnkalman.codegen.WrapMember object at 0x7f019306b0d0>, <cnkalman.codegen.WrapMember object at 0x7f01930664f0>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x6 = cos(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x5);
	const FLT x9 = cos(x3);
	const FLT x10 = cos(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x4 * x8;
	const FLT x14 = (x6 * x11) + (x2 * x13);
	const FLT x15 = x2 * x9;
	const FLT x16 = (x6 * x15) + (x13 * x10);
	const FLT x17 = (x7 * x10) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x18 * (*_x0).Pose.Rot[1];
	const FLT x23 =
		(-1 * x22 * x12) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = x12 * x18;
	const FLT x40 = (-1 * x22 * x17) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x39 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x41 = x36 * x35;
	const FLT x42 =
		(x22 * x16) + (x19 * (*_x0).Pose.Rot[3]) + (x39 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x43 = x42 * x37;
	const FLT x44 =
		(x39 * (*_x0).Pose.Rot[2]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * x14) + (x21 * (*_x0).Pose.Rot[0]);
	const FLT x45 = x44 * x37;
	const FLT x46 = (-1 * x43 * x25) + (-1 * x45 * x27) + (-1 * x0 * x38) + (x40 * x41);
	const FLT x47 = x40 * x37;
	const FLT x48 = (x38 * x27) + (x47 * x25) + (-1 * x0 * x45) + (x41 * x42);
	const FLT x49 = x37 * x25;
	const FLT x50 = (x47 * x27) + (x0 * x43) + (-1 * x49 * x23) + (x41 * x44);
	const FLT x51 = (-1 * x50 * sensor_pt[2]) + (x46 * sensor_pt[1]) + (x48 * sensor_pt[0]);
	const FLT x52 = (-1 * x43 * x27) + (x41 * x23) + (x44 * x49) + (x0 * x47);
	const FLT x53 = (x46 * sensor_pt[2]) + (-1 * x52 * sensor_pt[0]) + (x50 * sensor_pt[1]);
	const FLT x54 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x55 = (*_x0).Pose.Pos[0] + (2 * ((x53 * x52) + (-1 * x51 * x48))) + (*error_model).Pose.Pos[0] +
					(x54 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x56 = (-1 * x48 * sensor_pt[1]) + (x46 * sensor_pt[0]) + (x52 * sensor_pt[2]);
	const FLT x57 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(2 * ((x56 * x48) + (-1 * x50 * x53))) + (x54 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x58 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x50 * x51) + (-1 * x52 * x56))) +
					sensor_pt[2] + (x54 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x59 = (x55 * (*lh_p).Rot[3]) + (-1 * x58 * (*lh_p).Rot[1]) + (x57 * (*lh_p).Rot[0]);
	const FLT x60 = (-1 * x55 * (*lh_p).Rot[2]) + (x58 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[1]);
	const FLT x61 = x55 + (*lh_p).Pos[0] + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x59 * (*lh_p).Rot[3])));
	const FLT x62 = (-1 * x57 * (*lh_p).Rot[3]) + (x55 * (*lh_p).Rot[0]) + (x58 * (*lh_p).Rot[2]);
	const FLT x63 = x58 + (2 * ((x59 * (*lh_p).Rot[1]) + (-1 * x62 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x64 = -1 * x63;
	const FLT x65 = x57 + (*lh_p).Pos[1] + (2 * ((x62 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x66 = (x65 * x65) + (x63 * x63);
	const FLT x67 = x61 * (1. / sqrt(x66));
	const FLT x68 = 1.5707963267949 + (-1 * asin(x67 * (*bsc0).tilt)) + (-1 * (*bsc0).phase) + (*bsc0).gibpha +
					(-1 * atan2(-1 * x65, x64));
	const FLT x69 = sin(x68) * (*bsc0).gibmag;
	const FLT x70 = x67 * (1. / sqrt(1 + (-1 * (x61 * x61) * (1. / x66) * ((*bsc0).tilt * (*bsc0).tilt))));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), atan2(x61, x64) * atan2(x61, x64));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), -1 * cos(x68));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x69);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase) / sizeof(FLT), -1 + (-1 * x69));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x70) + (-1 * x70 * x69));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen1 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f0193066550>, <cnkalman.codegen.WrapMember object at 0x7f01930660a0>, <cnkalman.codegen.WrapMember object at
// 0x7f01930660d0>, <cnkalman.codegen.WrapMember object at 0x7f0193066490>, <cnkalman.codegen.WrapMember object at
// 0x7f0193066430>, <cnkalman.codegen.WrapMember object at 0x7f019306b0d0>, <cnkalman.codegen.WrapMember object at
// 0x7f01930664f0>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen1_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen1(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen1_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_x_gen2(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x6 = cos(x5);
	const FLT x7 = cos(x1);
	const FLT x8 = cos(x3);
	const FLT x9 = sin(x5);
	const FLT x10 = (x8 * x7 * x9) + (-1 * x2 * x4 * x6);
	const FLT x11 = x4 * x9;
	const FLT x12 = x6 * x7;
	const FLT x13 = (x8 * x12) + (x2 * x11);
	const FLT x14 = x2 * x8;
	const FLT x15 = (x4 * x12) + (x9 * x14);
	const FLT x16 = (x6 * x14) + (-1 * x7 * x11);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x10 * x10) + (x13 * x13));
	const FLT x18 = x13 * x17;
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * x16;
	const FLT x21 = x10 * x17;
	const FLT x22 = (x18 * (*_x0).Pose.Rot[2]) + (-1 * x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[3]) +
					(x19 * (*_x0).Pose.Rot[0]);
	const FLT x23 = dt * dt;
	const FLT x24 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x25 = (x24 * x24) * x23;
	const FLT x26 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x27 = x23 * (x26 * x26);
	const FLT x28 = (x0 * x0) * x23;
	const FLT x29 = 1e-10 + x28 + x25 + x27;
	const FLT x30 = sqrt(x29);
	const FLT x31 = 0.5 * x30;
	const FLT x32 = sin(x31);
	const FLT x33 = (x32 * x32) * (1. / x29);
	const FLT x34 = cos(x31);
	const FLT x35 = 1. / sqrt((x33 * x27) + (x34 * x34) + (x33 * x25) + (x33 * x28));
	const FLT x36 = dt * (1. / x30) * x32 * x35;
	const FLT x37 = x36 * x22;
	const FLT x38 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[0]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x39 = x34 * x35;
	const FLT x40 = (x21 * (*_x0).Pose.Rot[0]) + (x18 * (*_x0).Pose.Rot[3]) + (x19 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x41 = x36 * x24;
	const FLT x42 = (x18 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[2]) + (-1 * x19 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x43 = x42 * x36;
	const FLT x44 = (-1 * x43 * x26) + (-1 * x40 * x41) + (-1 * x0 * x37) + (x38 * x39);
	const FLT x45 = (x37 * x26) + (x41 * x38) + (-1 * x0 * x43) + (x40 * x39);
	const FLT x46 = x40 * x36;
	const FLT x47 = x36 * x38;
	const FLT x48 = (x47 * x26) + (-1 * x41 * x22) + (x0 * x46) + (x42 * x39);
	const FLT x49 = (-1 * x48 * sensor_pt[2]) + (x44 * sensor_pt[1]) + (x45 * sensor_pt[0]);
	const FLT x50 = (-1 * x46 * x26) + (x39 * x22) + (x41 * x42) + (x0 * x47);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x44 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = (*_x0).Pose.Pos[0] + (2 * ((x50 * x51) + (-1 * x45 * x49))) + (*error_model).Pose.Pos[0] +
					sensor_pt[0] + (x52 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x54 = (-1 * x45 * sensor_pt[1]) + (x44 * sensor_pt[0]) + (x50 * sensor_pt[2]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x52 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x50 * x54))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x56 = (*_x0).Pose.Pos[1] + (2 * ((x54 * x45) + (-1 * x51 * x48))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x52 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x57 = (-1 * x56 * (*lh_p).Rot[3]) + (x53 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x58 = (-1 * x55 * (*lh_p).Rot[1]) + (x53 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[0]);
	const FLT x59 = x55 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x57 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x60 = (-1 * x53 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x61 = (*lh_p).Pos[0] + x53 + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = atan2(-1 * x59, x61);
	const FLT x63 = (*lh_p).Pos[1] + x56 + (2 * ((x57 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x64 = (x61 * x61) + (x59 * x59);
	const FLT x65 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x66 = cos(x65);
	const FLT x67 = asin(x63 * (1. / x66) * (1. / sqrt(x64 + (x63 * x63))));
	const FLT x68 = 0.0028679863 + (x67 * (-8.0108022e-06 + (-8.0108022e-06 * x67)));
	const FLT x69 = 5.3685255e-06 + (x67 * x68);
	const FLT x70 = 0.0076069798 + (x67 * x69);
	const FLT x71 = x63 * (1. / sqrt(x64)) * tan(x65);
	const FLT x72 = ((*bsc0).ogeemag * sin((-1 * asin(x71)) + (*bsc0).ogeephase + x62)) + (*bsc0).curve;
	const FLT x73 =
		(-1 *
		 asin(x71 + (x70 * x72 * (x67 * x67) *
					 (1. / (x66 + (-1 * x72 * sin(x65) *
								   ((x67 * (x70 + (x67 * (x69 + (x67 * (x68 + (x67 * (-8.0108022e-06 +
																					  (-1.60216044e-05 * x67))))))))) +
									(x70 * x67)))))))) +
		x62;
	return -1.5707963267949 + x73 + (sin(x73 + (*bsc0).gibpha) * (*bsc0).gibmag) + (-1 * (*bsc0).phase);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = tan(x0);
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x6 = cos(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x8 = sin(x7);
	const FLT x9 = x6 * x8;
	const FLT x10 = sin(x5);
	const FLT x11 = cos(x7);
	const FLT x12 = cos(x3);
	const FLT x13 = x12 * x11;
	const FLT x14 = (x13 * x10) + (-1 * x4 * x9);
	const FLT x15 = x8 * x10;
	const FLT x16 = (x6 * x13) + (x4 * x15);
	const FLT x17 = x4 * x11;
	const FLT x18 = (x6 * x17) + (x15 * x12);
	const FLT x19 = (x9 * x12) + (-1 * x10 * x17);
	const FLT x20 = 1. / sqrt((x19 * x19) + (x18 * x18) + (x14 * x14) + (x16 * x16));
	const FLT x21 = x20 * x16;
	const FLT x22 = x20 * x18;
	const FLT x23 = x20 * x19;
	const FLT x24 = x20 * x14;
	const FLT x25 = (-1 * x24 * (*_x0).Pose.Rot[1]) + (x23 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[2]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x26 = dt * dt;
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x28 = x27 * x27;
	const FLT x29 = x28 * x26;
	const FLT x30 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x31 = x30 * x30;
	const FLT x32 = x31 * x26;
	const FLT x33 = x2 * x2;
	const FLT x34 = x33 * x26;
	const FLT x35 = 1e-10 + x34 + x29 + x32;
	const FLT x36 = sqrt(x35);
	const FLT x37 = 0.5 * x36;
	const FLT x38 = sin(x37);
	const FLT x39 = x38 * x38;
	const FLT x40 = 1. / x35;
	const FLT x41 = x40 * x39;
	const FLT x42 = cos(x37);
	const FLT x43 = (x42 * x42) + (x41 * x29) + (x41 * x32) + (x41 * x34);
	const FLT x44 = 1. / sqrt(x43);
	const FLT x45 = x44 * x38;
	const FLT x46 = 1. / x36;
	const FLT x47 = dt * x46;
	const FLT x48 = x45 * x47;
	const FLT x49 = x48 * x25;
	const FLT x50 = (-1 * x23 * (*_x0).Pose.Rot[1]) + (-1 * x24 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[0]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x51 = x42 * x44;
	const FLT x52 = x50 * x51;
	const FLT x53 = (x24 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[1]) +
					(-1 * x23 * (*_x0).Pose.Rot[2]);
	const FLT x54 = x53 * x48;
	const FLT x55 = (x24 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(x23 * (*_x0).Pose.Rot[0]);
	const FLT x56 = x55 * x48;
	const FLT x57 = (-1 * x56 * x30) + (-1 * x54 * x27) + (-1 * x2 * x49) + x52;
	const FLT x58 = x53 * x51;
	const FLT x59 = x50 * x45;
	const FLT x60 = x59 * x47;
	const FLT x61 = (x49 * x30) + (x60 * x27) + (-1 * x2 * x56) + x58;
	const FLT x62 = x51 * x55;
	const FLT x63 = (x60 * x30) + (-1 * x49 * x27) + (x2 * x54) + x62;
	const FLT x64 = (-1 * x63 * sensor_pt[2]) + (x57 * sensor_pt[1]) + (x61 * sensor_pt[0]);
	const FLT x65 = x51 * x25;
	const FLT x66 = (-1 * x54 * x30) + (x56 * x27) + x65 + (x2 * x60);
	const FLT x67 = (x57 * sensor_pt[2]) + (-1 * x66 * sensor_pt[0]) + (x63 * sensor_pt[1]);
	const FLT x68 = dt * fabs(dt);
	const FLT x69 = 1.0 / 2.0 * x68;
	const FLT x70 = (*_x0).Pose.Pos[0] + (2 * ((x67 * x66) + (-1 * x64 * x61))) + (*error_model).Pose.Pos[0] +
					(x69 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x71 = (-1 * x61 * sensor_pt[1]) + (x57 * sensor_pt[0]) + (x66 * sensor_pt[2]);
	const FLT x72 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x63 * x64) + (-1 * x71 * x66))) +
					(x69 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x73 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] + (x69 * ((*_x0).Acc[1] + (*error_model).Acc[1])) +
					(2 * ((x71 * x61) + (-1 * x63 * x67))) + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]));
	const FLT x74 = (x70 * (*lh_p).Rot[0]) + (-1 * x73 * (*lh_p).Rot[3]) + (x72 * (*lh_p).Rot[2]);
	const FLT x75 = (-1 * x72 * (*lh_p).Rot[1]) + (x70 * (*lh_p).Rot[3]) + (x73 * (*lh_p).Rot[0]);
	const FLT x76 = x72 + (2 * ((x75 * (*lh_p).Rot[1]) + (-1 * x74 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x77 = (x72 * (*lh_p).Rot[0]) + (-1 * x70 * (*lh_p).Rot[2]) + (x73 * (*lh_p).Rot[1]);
	const FLT x78 = x70 + (*lh_p).Pos[0] + (2 * ((x77 * (*lh_p).Rot[2]) + (-1 * x75 * (*lh_p).Rot[3])));
	const FLT x79 = x78 * x78;
	const FLT x80 = x79 + (x76 * x76);
	const FLT x81 = 1. / x80;
	const FLT x82 = x73 + (*lh_p).Pos[1] + (2 * ((x74 * (*lh_p).Rot[3]) + (-1 * x77 * (*lh_p).Rot[1])));
	const FLT x83 = x82 * x82;
	const FLT x84 = 1. / sqrt(1 + (-1 * (x1 * x1) * x81 * x83));
	const FLT x85 = x68 * (*lh_p).Rot[1];
	const FLT x86 = x85 * (*lh_p).Rot[2];
	const FLT x87 = x68 * (*lh_p).Rot[3] * (*lh_p).Rot[0];
	const FLT x88 = x87 + x86;
	const FLT x89 = x1 * (1. / sqrt(x80));
	const FLT x90 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x91 = -1 * x68 * x90;
	const FLT x92 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x93 = x69 + (-1 * x68 * x92);
	const FLT x94 = x93 + x91;
	const FLT x95 = 2 * x78;
	const FLT x96 = x68 * (*lh_p).Rot[2];
	const FLT x97 = x96 * (*lh_p).Rot[0];
	const FLT x98 = x85 * (*lh_p).Rot[3];
	const FLT x99 = x98 + (-1 * x97);
	const FLT x100 = 2 * x76;
	const FLT x101 = (x99 * x100) + (x95 * x94);
	const FLT x102 = 1.0 / 2.0 * x82;
	const FLT x103 = x1 * (1. / (x80 * sqrt(x80))) * x102;
	const FLT x104 = (-1 * x101 * x103) + (x88 * x89);
	const FLT x105 = (1. / x79) * x76;
	const FLT x106 = 1. / x78;
	const FLT x107 = x81 * x79;
	const FLT x108 = ((-1 * x99 * x106) + (x94 * x105)) * x107;
	const FLT x109 = x108 + (-1 * x84 * x104);
	const FLT x110 = atan2(-1 * x76, x78);
	const FLT x111 = x82 * x89;
	const FLT x112 = (*bsc0).ogeephase + (-1 * asin(x111)) + x110;
	const FLT x113 = cos(x112) * (*bsc0).ogeemag;
	const FLT x114 = x80 + x83;
	const FLT x115 = cos(x0);
	const FLT x116 = 1. / x115;
	const FLT x117 = (1. / sqrt(x114)) * x116;
	const FLT x118 = asin(x82 * x117);
	const FLT x119 = 8.0108022e-06 * x118;
	const FLT x120 = -8.0108022e-06 + (-1 * x119);
	const FLT x121 = 0.0028679863 + (x118 * x120);
	const FLT x122 = 5.3685255e-06 + (x118 * x121);
	const FLT x123 = 0.0076069798 + (x118 * x122);
	const FLT x124 = x118 * x118;
	const FLT x125 = x118 * x123;
	const FLT x126 = -8.0108022e-06 + (-1.60216044e-05 * x118);
	const FLT x127 = x121 + (x118 * x126);
	const FLT x128 = x122 + (x118 * x127);
	const FLT x129 = x123 + (x118 * x128);
	const FLT x130 = (x118 * x129) + x125;
	const FLT x131 = sin(x0);
	const FLT x132 = (sin(x112) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x133 = x131 * x132;
	const FLT x134 = x115 + (-1 * x130 * x133);
	const FLT x135 = 1. / x134;
	const FLT x136 = x124 * x123 * x135;
	const FLT x137 = x113 * x136;
	const FLT x138 = 2 * x82;
	const FLT x139 = x102 * (1. / (x114 * sqrt(x114))) * x116;
	const FLT x140 = (-1 * x139 * (x101 + (x88 * x138))) + (x88 * x117);
	const FLT x141 = 1. / sqrt(1 + (-1 * x83 * (1. / x114) * (1. / (x115 * x115))));
	const FLT x142 = x122 * x141;
	const FLT x143 = x121 * x141;
	const FLT x144 = x120 * x141;
	const FLT x145 = x140 * x144;
	const FLT x146 = x119 * x141;
	const FLT x147 = (x118 * ((-1 * x140 * x146) + x145)) + (x140 * x143);
	const FLT x148 = (x118 * x147) + (x140 * x142);
	const FLT x149 = x124 * x132;
	const FLT x150 = x135 * x149;
	const FLT x151 = 2 * x125 * x132 * x135;
	const FLT x152 = x141 * x151;
	const FLT x153 = x129 * x141;
	const FLT x154 = x127 * x141;
	const FLT x155 = 2.40324066e-05 * x118;
	const FLT x156 = x141 * x155;
	const FLT x157 = x126 * x141;
	const FLT x158 = x128 * x141;
	const FLT x159 = x123 * x141;
	const FLT x160 = x130 * x131;
	const FLT x161 = x113 * x160;
	const FLT x162 = x123 * (1. / (x134 * x134)) * x149;
	const FLT x163 = x111 + (x123 * x150);
	const FLT x164 = 1. / sqrt(1 + (-1 * (x163 * x163)));
	const FLT x165 =
		x108 + (-1 * x164 *
				((-1 * x162 *
				  ((-1 * x109 * x161) +
				   (-1 * x133 *
					((x118 * x148) + (x140 * x153) + (x140 * x159) +
					 (x118 * ((x118 * (x147 + (x140 * x154) + (x118 * ((x140 * x157) + x145 + (-1 * x140 * x156))))) +
							  x148 + (x140 * x158))))))) +
				 (x140 * x152) + x104 + (x109 * x137) + (x148 * x150)));
	const FLT x166 = cos((-1 * asin(x163)) + x110 + (*bsc0).gibpha) * (*bsc0).gibmag;
	const FLT x167 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x168 = -1 * x68 * x167;
	const FLT x169 = x93 + x168;
	const FLT x170 = x86 + (-1 * x87);
	const FLT x171 = x96 * (*lh_p).Rot[3];
	const FLT x172 = x85 * (*lh_p).Rot[0];
	const FLT x173 = x172 + x171;
	const FLT x174 = (x100 * x173) + (x95 * x170);
	const FLT x175 = (-1 * x139 * (x174 + (x169 * x138))) + (x117 * x169);
	const FLT x176 = (-1 * x103 * x174) + (x89 * x169);
	const FLT x177 = ((-1 * x106 * x173) + (x105 * x170)) * x107;
	const FLT x178 = x177 + (-1 * x84 * x176);
	const FLT x179 = x175 * x144;
	const FLT x180 = (x118 * ((-1 * x175 * x146) + x179)) + (x175 * x143);
	const FLT x181 = (x118 * x180) + (x175 * x142);
	const FLT x182 =
		x177 +
		(-1 * x164 *
		 ((-1 * x162 *
		   ((-1 * x161 * x178) +
			(-1 * x133 *
			 ((x175 * x159) + (x118 * x181) + (x175 * x153) +
			  (x118 * (x181 + (x118 * (x180 + (x175 * x154) + (x118 * ((x175 * x157) + x179 + (-1 * x175 * x156))))) +
					   (x175 * x158))))))) +
		  (x181 * x150) + (x175 * x152) + x176 + (x178 * x137)));
	const FLT x183 = x171 + (-1 * x172);
	const FLT x184 = x97 + x98;
	const FLT x185 = x91 + x69 + x168;
	const FLT x186 = (x100 * x185) + (x95 * x184);
	const FLT x187 = (-1 * x139 * (x186 + (x183 * x138))) + (x117 * x183);
	const FLT x188 = x187 * x144;
	const FLT x189 = x187 * x141;
	const FLT x190 = (x118 * ((-1 * x119 * x189) + x188)) + (x187 * x143);
	const FLT x191 = (x118 * x190) + (x187 * x142);
	const FLT x192 = (-1 * x103 * x186) + (x89 * x183);
	const FLT x193 = ((-1 * x106 * x185) + (x105 * x184)) * x107;
	const FLT x194 = x193 + (-1 * x84 * x192);
	const FLT x195 =
		x193 +
		(-1 * x164 *
		 ((-1 * x162 *
		   ((-1 * x161 * x194) +
			(-1 * x133 *
			 ((x187 * x159) + (x187 * x153) +
			  (x118 * (x191 + (x118 * (x190 + (x187 * x154) + (x118 * ((x187 * x157) + x188 + (-1 * x189 * x155))))) +
					   (x187 * x158))) +
			  (x118 * x191))))) +
		  (x189 * x151) + (x191 * x150) + x192 + (x194 * x137)));
	const FLT x196 = 2 * (*lh_p).Rot[2];
	const FLT x197 = x196 * (*lh_p).Rot[1];
	const FLT x198 = 2 * (*lh_p).Rot[3];
	const FLT x199 = x198 * (*lh_p).Rot[0];
	const FLT x200 = x199 + x197;
	const FLT x201 = 2 * x92;
	const FLT x202 = -1 * x201;
	const FLT x203 = 2 * x90;
	const FLT x204 = -1 * x203;
	const FLT x205 = 1 + x204 + x202;
	const FLT x206 = x196 * (*lh_p).Rot[0];
	const FLT x207 = 2 * (*lh_p).Rot[1];
	const FLT x208 = x207 * (*lh_p).Rot[3];
	const FLT x209 = x208 + (-1 * x206);
	const FLT x210 = (x209 * x100) + (x95 * x205);
	const FLT x211 = (-1 * x139 * (x210 + (x200 * x138))) + (x200 * x117);
	const FLT x212 = x211 * x141;
	const FLT x213 = x212 * x120;
	const FLT x214 = (x118 * ((-1 * x212 * x119) + x213)) + (x211 * x143);
	const FLT x215 = (x214 * x118) + (x212 * x122);
	const FLT x216 = (-1 * x210 * x103) + (x89 * x200);
	const FLT x217 = ((-1 * x209 * x106) + (x205 * x105)) * x107;
	const FLT x218 = x217 + (-1 * x84 * x216);
	const FLT x219 =
		x217 + (-1 * x164 *
				(x216 + (x212 * x151) + (x215 * x150) +
				 (-1 * x162 *
				  ((-1 * x218 * x161) +
				   (-1 * x133 *
					((x212 * x123) +
					 (x118 * ((x118 * ((x212 * x127) + x214 + (x118 * ((x212 * x126) + x213 + (-1 * x212 * x155))))) +
							  x215 + (x211 * x158))) +
					 (x212 * x129) + (x215 * x118))))) +
				 (x218 * x137)));
	const FLT x220 = 2 * x167;
	const FLT x221 = 1 + (-1 * x220);
	const FLT x222 = x221 + x202;
	const FLT x223 = x197 + (-1 * x199);
	const FLT x224 = x196 * (*lh_p).Rot[3];
	const FLT x225 = x207 * (*lh_p).Rot[0];
	const FLT x226 = x225 + x224;
	const FLT x227 = (x226 * x100) + (x95 * x223);
	const FLT x228 = (-1 * x139 * (x227 + (x222 * x138))) + (x222 * x117);
	const FLT x229 = x228 * x144;
	const FLT x230 = (x118 * ((-1 * x228 * x146) + x229)) + (x228 * x143);
	const FLT x231 = (x230 * x118) + (x228 * x142);
	const FLT x232 = (-1 * x227 * x103) + (x89 * x222);
	const FLT x233 = ((-1 * x226 * x106) + (x223 * x105)) * x107;
	const FLT x234 = x233 + (-1 * x84 * x232);
	const FLT x235 =
		x233 + (-1 * x164 *
				((-1 * x162 *
				  ((-1 * x234 * x161) +
				   (-1 * x133 *
					((x228 * x159) + (x228 * x153) + (x231 * x118) +
					 (x118 * ((x118 * (x230 + (x228 * x154) + (x118 * ((x228 * x157) + (-1 * x228 * x156) + x229)))) +
							  x231 + (x228 * x158))))))) +
				 (x228 * x152) + x232 + (x231 * x150) + (x234 * x137)));
	const FLT x236 = x224 + (-1 * x225);
	const FLT x237 = x206 + x208;
	const FLT x238 = x221 + x204;
	const FLT x239 = (x238 * x100) + (x95 * x237);
	const FLT x240 = (-1 * x139 * (x239 + (x236 * x138))) + (x236 * x117);
	const FLT x241 = (-1 * x239 * x103) + (x89 * x236);
	const FLT x242 = ((-1 * x238 * x106) + (x237 * x105)) * x107;
	const FLT x243 = x242 + (-1 * x84 * x241);
	const FLT x244 = x240 * x144;
	const FLT x245 = (x118 * ((-1 * x240 * x146) + x244)) + (x240 * x143);
	const FLT x246 = (x245 * x118) + (x240 * x142);
	const FLT x247 =
		x242 +
		(-1 * x164 *
		 (x241 +
		  (-1 * x162 *
		   ((-1 * x243 * x161) +
			(-1 * x133 *
			 ((x240 * x159) + (x240 * x153) + (x246 * x118) +
			  (x118 * (x246 + (x118 * (x245 + (x240 * x154) + (x118 * ((x240 * x157) + (-1 * x240 * x156) + x244)))) +
					   (x240 * x158))))))) +
		  (x246 * x150) + (x240 * x152) + (x243 * x137)));
	const FLT x248 = x48 * x21;
	const FLT x249 = x30 * x248;
	const FLT x250 = x2 * x48;
	const FLT x251 = x24 * x250;
	const FLT x252 = x51 * x23;
	const FLT x253 = x48 * x27;
	const FLT x254 = -1 * x22 * x253;
	const FLT x255 = x254 + x252;
	const FLT x256 = x255 + x249 + x251;
	const FLT x257 = x22 * x250;
	const FLT x258 = -1 * x257;
	const FLT x259 = x48 * x30;
	const FLT x260 = x23 * x259;
	const FLT x261 = -1 * x260;
	const FLT x262 = x51 * x21;
	const FLT x263 = x24 * x253;
	const FLT x264 = (-1 * x263) + x262;
	const FLT x265 = x264 + x258 + x261;
	const FLT x266 = x27 * x248;
	const FLT x267 = x51 * x24;
	const FLT x268 = x22 * x259;
	const FLT x269 = -1 * x23 * x250;
	const FLT x270 = x269 + x268;
	const FLT x271 = x266 + x270 + x267;
	const FLT x272 = (x271 * sensor_pt[0]) + (-1 * x256 * sensor_pt[2]) + (x265 * sensor_pt[1]);
	const FLT x273 = 2 * x61;
	const FLT x274 = x51 * x22;
	const FLT x275 = x23 * x253;
	const FLT x276 = -1 * x24 * x259;
	const FLT x277 = x21 * x250;
	const FLT x278 = x277 + x276;
	const FLT x279 = x278 + x274 + x275;
	const FLT x280 = (x256 * sensor_pt[1]) + (-1 * x279 * sensor_pt[0]) + (x265 * sensor_pt[2]);
	const FLT x281 = 2 * x66;
	const FLT x282 = 2 * x64;
	const FLT x283 = 2 * x67;
	const FLT x284 = (-1 * x271 * x282) + (x279 * x283) + (-1 * x273 * x272) + (x280 * x281);
	const FLT x285 = (x279 * sensor_pt[2]) + (-1 * x271 * sensor_pt[1]) + (x265 * sensor_pt[0]);
	const FLT x286 = 2 * x63;
	const FLT x287 = 2 * x71;
	const FLT x288 = (x282 * x256) + (-1 * x279 * x287) + (-1 * x285 * x281) + (x272 * x286);
	const FLT x289 = (x273 * x285) + (-1 * x286 * x280) + (-1 * x283 * x256) + (x271 * x287);
	const FLT x290 = (-1 * x284 * (*lh_p).Rot[2]) + (x289 * (*lh_p).Rot[1]) + (x288 * (*lh_p).Rot[0]);
	const FLT x291 = (x288 * (*lh_p).Rot[2]) + (-1 * x289 * (*lh_p).Rot[3]) + (x284 * (*lh_p).Rot[0]);
	const FLT x292 = x289 + (-1 * x207 * x290) + (x291 * x198);
	const FLT x293 = (x289 * (*lh_p).Rot[0]) + (-1 * x288 * (*lh_p).Rot[1]) + (x284 * (*lh_p).Rot[3]);
	const FLT x294 = x284 + (-1 * x293 * x198) + (x290 * x196);
	const FLT x295 = x288 + (-1 * x291 * x196) + (x207 * x293);
	const FLT x296 = (x295 * x100) + (x95 * x294);
	const FLT x297 = (-1 * x296 * x103) + (x89 * x292);
	const FLT x298 = ((-1 * x295 * x106) + (x294 * x105)) * x107;
	const FLT x299 = x298 + (-1 * x84 * x297);
	const FLT x300 = (-1 * x139 * (x296 + (x292 * x138))) + (x292 * x117);
	const FLT x301 = x300 * x144;
	const FLT x302 = (x118 * ((-1 * x300 * x146) + x301)) + (x300 * x143);
	const FLT x303 = (x302 * x118) + (x300 * x142);
	const FLT x304 =
		x298 +
		(-1 * x164 *
		 (x297 + (x300 * x152) + (x299 * x137) +
		  (-1 * x162 *
		   ((-1 * x299 * x161) +
			(-1 * x133 *
			 ((x300 * x159) + (x303 * x118) + (x300 * x153) +
			  (x118 * (x303 + (x118 * ((x300 * x154) + x302 + (x118 * ((x300 * x157) + x301 + (-1 * x300 * x156))))) +
					   (x300 * x158))))))) +
		  (x303 * x150)));
	const FLT x305 = -1 * x249;
	const FLT x306 = (-1 * x252) + x254;
	const FLT x307 = x306 + x305 + x251;
	const FLT x308 = x263 + x262;
	const FLT x309 = x308 + x261 + x257;
	const FLT x310 = -1 * x275;
	const FLT x311 = (-1 * x277) + x276;
	const FLT x312 = x310 + x311 + x274;
	const FLT x313 = (x312 * sensor_pt[0]) + (x307 * sensor_pt[1]) + (-1 * x309 * sensor_pt[2]);
	const FLT x314 = -1 * x267;
	const FLT x315 = (-1 * x268) + x269;
	const FLT x316 = x315 + x266 + x314;
	const FLT x317 = (x309 * sensor_pt[1]) + (x307 * sensor_pt[2]) + (-1 * x316 * sensor_pt[0]);
	const FLT x318 = (x283 * x316) + (-1 * x282 * x312) + (-1 * x273 * x313) + (x281 * x317);
	const FLT x319 = (-1 * x312 * sensor_pt[1]) + (x316 * sensor_pt[2]) + (x307 * sensor_pt[0]);
	const FLT x320 = (x286 * x313) + (-1 * x287 * x316) + (x282 * x309) + (-1 * x281 * x319);
	const FLT x321 = (-1 * x286 * x317) + (-1 * x283 * x309) + (x287 * x312) + (x273 * x319);
	const FLT x322 = (x321 * (*lh_p).Rot[1]) + (-1 * x318 * (*lh_p).Rot[2]) + (x320 * (*lh_p).Rot[0]);
	const FLT x323 = (x320 * (*lh_p).Rot[2]) + (-1 * x321 * (*lh_p).Rot[3]) + (x318 * (*lh_p).Rot[0]);
	const FLT x324 = x321 + (-1 * x207 * x322) + (x323 * x198);
	const FLT x325 = (x321 * (*lh_p).Rot[0]) + (-1 * x320 * (*lh_p).Rot[1]) + (x318 * (*lh_p).Rot[3]);
	const FLT x326 = x318 + (-1 * x325 * x198) + (x322 * x196);
	const FLT x327 = x320 + (-1 * x323 * x196) + (x207 * x325);
	const FLT x328 = (x327 * x100) + (x95 * x326);
	const FLT x329 = (-1 * x328 * x103) + (x89 * x324);
	const FLT x330 = ((-1 * x327 * x106) + (x326 * x105)) * x107;
	const FLT x331 = x330 + (-1 * x84 * x329);
	const FLT x332 = (-1 * x139 * (x328 + (x324 * x138))) + (x324 * x117);
	const FLT x333 = x332 * x144;
	const FLT x334 = (x118 * ((-1 * x332 * x146) + x333)) + (x332 * x143);
	const FLT x335 = (x334 * x118) + (x332 * x142);
	const FLT x336 =
		x330 +
		(-1 * x164 *
		 (x329 + (x332 * x152) +
		  (-1 * x162 *
		   ((-1 * x331 * x161) +
			(-1 * x133 *
			 ((x335 * x118) + (x332 * x159) + (x332 * x153) +
			  (x118 * (x335 + (x118 * (x334 + (x332 * x154) + (x118 * ((x332 * x157) + (-1 * x332 * x156) + x333)))) +
					   (x332 * x158))))))) +
		  (x331 * x137) + (x335 * x150)));
	const FLT x337 = -1 * x274;
	const FLT x338 = x311 + x275 + x337;
	const FLT x339 = -1 * x266;
	const FLT x340 = x315 + x267 + x339;
	const FLT x341 = -1 * x251;
	const FLT x342 = x306 + x341 + x249;
	const FLT x343 = (x338 * sensor_pt[1]) + (x342 * sensor_pt[0]) + (-1 * x340 * sensor_pt[2]);
	const FLT x344 = x308 + x260 + x258;
	const FLT x345 = (x340 * sensor_pt[1]) + (-1 * x344 * sensor_pt[0]) + (x338 * sensor_pt[2]);
	const FLT x346 = (x281 * x345) + (x283 * x344) + (-1 * x273 * x343) + (-1 * x282 * x342);
	const FLT x347 = (x344 * sensor_pt[2]) + (-1 * x342 * sensor_pt[1]) + (x338 * sensor_pt[0]);
	const FLT x348 = (x286 * x343) + (x282 * x340) + (-1 * x281 * x347) + (-1 * x287 * x344);
	const FLT x349 = (x287 * x342) + (x273 * x347) + (-1 * x283 * x340) + (-1 * x286 * x345);
	const FLT x350 = (x349 * (*lh_p).Rot[1]) + (-1 * x346 * (*lh_p).Rot[2]) + (x348 * (*lh_p).Rot[0]);
	const FLT x351 = (x348 * (*lh_p).Rot[2]) + (-1 * x349 * (*lh_p).Rot[3]) + (x346 * (*lh_p).Rot[0]);
	const FLT x352 = x349 + (-1 * x207 * x350) + (x351 * x198);
	const FLT x353 = 2 * ((x349 * (*lh_p).Rot[0]) + (x346 * (*lh_p).Rot[3]) + (-1 * x348 * (*lh_p).Rot[1]));
	const FLT x354 = (-1 * x353 * (*lh_p).Rot[3]) + x346 + (x350 * x196);
	const FLT x355 = x348 + (-1 * x351 * x196) + (x353 * (*lh_p).Rot[1]);
	const FLT x356 = (x355 * x100) + (x95 * x354);
	const FLT x357 = (-1 * x139 * (x356 + (x352 * x138))) + (x352 * x117);
	const FLT x358 = (-1 * x356 * x103) + (x89 * x352);
	const FLT x359 = ((-1 * x355 * x106) + (x354 * x105)) * x107;
	const FLT x360 = x359 + (-1 * x84 * x358);
	const FLT x361 = x357 * x144;
	const FLT x362 = (x118 * ((-1 * x357 * x146) + x361)) + (x357 * x143);
	const FLT x363 = (x362 * x118) + (x357 * x142);
	const FLT x364 =
		x359 +
		(-1 * x164 *
		 (x358 + (x363 * x150) +
		  (-1 * x162 *
		   ((-1 * x360 * x161) +
			(-1 * x133 *
			 ((x357 * x159) + (x363 * x118) + (x357 * x153) +
			  (x118 * (x363 + (x118 * (x362 + (x357 * x154) + (x118 * ((x357 * x157) + x361 + (-1 * x357 * x156))))) +
					   (x357 * x158))))))) +
		  (x357 * x152) + (x360 * x137)));
	const FLT x365 = x264 + x260 + x257;
	const FLT x366 = x270 + x339 + x314;
	const FLT x367 = x305 + x255 + x341;
	const FLT x368 = (x367 * sensor_pt[2]) + (-1 * x365 * sensor_pt[1]) + (x366 * sensor_pt[0]);
	const FLT x369 = x278 + x310 + x337;
	const FLT x370 = (-1 * x369 * sensor_pt[2]) + (x365 * sensor_pt[0]) + (x366 * sensor_pt[1]);
	const FLT x371 = (-1 * x287 * x367) + (x286 * x370) + (-1 * x281 * x368) + (x282 * x369);
	const FLT x372 = (x369 * sensor_pt[1]) + (x366 * sensor_pt[2]) + (-1 * x367 * sensor_pt[0]);
	const FLT x373 = (x283 * x367) + (x281 * x372) + (-1 * x273 * x370) + (-1 * x282 * x365);
	const FLT x374 = (x287 * x365) + (x273 * x368) + (-1 * x283 * x369) + (-1 * x286 * x372);
	const FLT x375 = (x374 * (*lh_p).Rot[1]) + (x371 * (*lh_p).Rot[0]) + (-1 * x373 * (*lh_p).Rot[2]);
	const FLT x376 = (x371 * (*lh_p).Rot[2]) + (x373 * (*lh_p).Rot[0]) + (-1 * x374 * (*lh_p).Rot[3]);
	const FLT x377 = x374 + (-1 * x207 * x375) + (x376 * x198);
	const FLT x378 = (x374 * (*lh_p).Rot[0]) + (-1 * x371 * (*lh_p).Rot[1]) + (x373 * (*lh_p).Rot[3]);
	const FLT x379 = (-1 * x378 * x198) + x373 + (x375 * x196);
	const FLT x380 = x371 + (x207 * x378) + (-1 * x376 * x196);
	const FLT x381 = (x380 * x100) + (x95 * x379);
	const FLT x382 = (-1 * x139 * (x381 + (x377 * x138))) + (x377 * x117);
	const FLT x383 = x382 * x144;
	const FLT x384 = (x118 * ((-1 * x382 * x146) + x383)) + (x382 * x143);
	const FLT x385 = (x384 * x118) + (x382 * x142);
	const FLT x386 = (-1 * x381 * x103) + (x89 * x377);
	const FLT x387 = ((-1 * x380 * x106) + (x379 * x105)) * x107;
	const FLT x388 = x387 + (-1 * x84 * x386);
	const FLT x389 =
		x387 +
		(-1 * x164 *
		 ((x388 * x137) +
		  (-1 * x162 *
		   ((-1 * x388 * x161) +
			(-1 * x133 *
			 ((x382 * x159) + (x385 * x118) + (x382 * x153) +
			  (x118 * (x385 + (x118 * (x384 + (x382 * x154) + (x118 * ((x382 * x157) + x383 + (-1 * x382 * x156))))) +
					   (x382 * x158))))))) +
		  x386 + (x382 * x152) + (x385 * x150)));
	const FLT x390 = dt * dt * dt;
	const FLT x391 = 0.5 * x40 * x390;
	const FLT x392 = x65 * x391;
	const FLT x393 = 1.0 / 2.0 * (1. / (x43 * sqrt(x43)));
	const FLT x394 = x47 * x393;
	const FLT x395 = x38 * x394;
	const FLT x396 = x2 * x395;
	const FLT x397 = x30 * x30 * x30;
	const FLT x398 = 1.0 * x42;
	const FLT x399 = x38 * x398;
	const FLT x400 = dt * dt * dt * dt;
	const FLT x401 = 1. / (x35 * sqrt(x35));
	const FLT x402 = x401 * x400;
	const FLT x403 = x402 * x399;
	const FLT x404 = 2 * x30;
	const FLT x405 = x41 * x26;
	const FLT x406 = (1. / (x35 * x35)) * x39;
	const FLT x407 = 2 * x406;
	const FLT x408 = x400 * x407;
	const FLT x409 = x406 * x404;
	const FLT x410 = x28 * x400;
	const FLT x411 = x401 * x399;
	const FLT x412 = x30 * x411;
	const FLT x413 = x33 * x400;
	const FLT x414 = x46 * x26;
	const FLT x415 = x414 * x399;
	const FLT x416 = (-1 * x409 * x413) + (x412 * x413) + (x403 * x397) + (x405 * x404) + (-1 * x408 * x397) +
					 (-1 * x30 * x415) + (-1 * x409 * x410) + (x412 * x410);
	const FLT x417 = x55 * x416;
	const FLT x418 = x42 * x393;
	const FLT x419 = x416 * x418;
	const FLT x420 = 0.5 * x414;
	const FLT x421 = x53 * x45;
	const FLT x422 = x30 * x421;
	const FLT x423 = x38 * x27;
	const FLT x424 = x423 * x394;
	const FLT x425 = x50 * x416;
	const FLT x426 = x45 * x25;
	const FLT x427 = x401 * x390;
	const FLT x428 = x31 * x427;
	const FLT x429 = x25 * x416;
	const FLT x430 = x30 * x395;
	const FLT x431 = x62 * x391;
	const FLT x432 = x2 * x30;
	const FLT x433 = x55 * x45;
	const FLT x434 = x30 * x427;
	const FLT x435 = x2 * x434;
	const FLT x436 = (x435 * x433) + (-1 * x432 * x431);
	const FLT x437 = x52 * x391;
	const FLT x438 = x30 * x27;
	const FLT x439 = x27 * x427;
	const FLT x440 = x59 * x30;
	const FLT x441 = (-1 * x439 * x440) + (x438 * x437);
	const FLT x442 = (-1 * x429 * x430) + x441 + (x417 * x396) + (x31 * x392) + (-1 * x426 * x428) + (-1 * x53 * x419) +
					 x49 + (-1 * x422 * x420) + x436 + (-1 * x425 * x424);
	const FLT x443 = -1 * x56;
	const FLT x444 = x426 * x435;
	const FLT x445 = x416 * x424;
	const FLT x446 = x50 * x418;
	const FLT x447 = x30 * x392;
	const FLT x448 = x2 * x447;
	const FLT x449 = x58 * x391;
	const FLT x450 = (-1 * x438 * x449) + (x422 * x439);
	const FLT x451 = x450 + (-1 * x420 * x440) + (-1 * x31 * x431) + (-1 * x448) + (x429 * x396) + (x417 * x430) +
					 x443 + x444 + (x428 * x433) + (x53 * x445) + (-1 * x416 * x446);
	const FLT x452 = x431 * x438;
	const FLT x453 = x30 * x433 * x439;
	const FLT x454 = x53 * x430;
	const FLT x455 = -1 * x54;
	const FLT x456 = x30 * x426;
	const FLT x457 = x2 * x437;
	const FLT x458 = (x30 * x457) + (-1 * x2 * x427 * x440);
	const FLT x459 = (-1 * x456 * x420) + (x421 * x428) + x455 + (-1 * x425 * x396) + (-1 * x25 * x419) +
					 (-1 * x55 * x445) + (-1 * x31 * x449) + (-1 * x453) + x458 + (x454 * x416) + x452;
	const FLT x460 = (x459 * sensor_pt[2]) + (-1 * x442 * sensor_pt[1]) + (x451 * sensor_pt[0]);
	const FLT x461 = x420 * x433;
	const FLT x462 = x432 * x449;
	const FLT x463 = x2 * x421;
	const FLT x464 = x463 * x434;
	const FLT x465 = x456 * x439;
	const FLT x466 = x53 * x396;
	const FLT x467 = x27 * x447;
	const FLT x468 = (-1 * x425 * x430) + x60 + (-1 * x30 * x461) + (-1 * x467) + x462 + (-1 * x55 * x419) +
					 (-1 * x464) + (x31 * x437) + (-1 * x59 * x428) + (x424 * x429) + x465 + (-1 * x466 * x416);
	const FLT x469 = (x442 * sensor_pt[0]) + (x451 * sensor_pt[1]) + (-1 * x468 * sensor_pt[2]);
	const FLT x470 = (-1 * x459 * x287) + (x468 * x282) + (-1 * x460 * x281) + (x469 * x286);
	const FLT x471 = (-1 * x459 * sensor_pt[0]) + (x468 * sensor_pt[1]) + (x451 * sensor_pt[2]);
	const FLT x472 = (x459 * x283) + (-1 * x469 * x273) + (x471 * x281) + (-1 * x442 * x282);
	const FLT x473 = (x460 * x273) + (x442 * x287) + (-1 * x471 * x286) + (-1 * x468 * x283);
	const FLT x474 = (x473 * (*lh_p).Rot[1]) + (x470 * (*lh_p).Rot[0]) + (-1 * x472 * (*lh_p).Rot[2]);
	const FLT x475 = (x470 * (*lh_p).Rot[2]) + (-1 * x473 * (*lh_p).Rot[3]) + (x472 * (*lh_p).Rot[0]);
	const FLT x476 = x473 + (-1 * x474 * x207) + (x475 * x198);
	const FLT x477 = (x473 * (*lh_p).Rot[0]) + (-1 * x470 * (*lh_p).Rot[1]) + (x472 * (*lh_p).Rot[3]);
	const FLT x478 = x472 + (x474 * x196) + (-1 * x477 * x198);
	const FLT x479 = (-1 * x475 * x196) + x470 + (x477 * x207);
	const FLT x480 = (x479 * x100) + (x95 * x478);
	const FLT x481 = (-1 * x139 * (x480 + (x476 * x138))) + (x476 * x117);
	const FLT x482 = x481 * x144;
	const FLT x483 = (x118 * ((-1 * x481 * x146) + x482)) + (x481 * x143);
	const FLT x484 = (x483 * x118) + (x481 * x142);
	const FLT x485 = (-1 * x480 * x103) + (x89 * x476);
	const FLT x486 = ((-1 * x479 * x106) + (x478 * x105)) * x107;
	const FLT x487 = x486 + (-1 * x84 * x485);
	const FLT x488 =
		x486 +
		(-1 * x164 *
		 ((-1 * x162 *
		   ((-1 * x487 * x161) +
			(-1 * x133 *
			 ((x481 * x159) + (x484 * x118) + (x481 * x153) +
			  (x118 * (x484 + (x118 * (x483 + (x481 * x154) + (x118 * ((x481 * x157) + x482 + (-1 * x481 * x156))))) +
					   (x481 * x158))))))) +
		  x485 + (x481 * x152) + (x484 * x150) + (x487 * x137)));
	const FLT x489 = x33 * x391;
	const FLT x490 = x2 * x408;
	const FLT x491 = (x2 * x2 * x2) * x400;
	const FLT x492 = 2 * x405;
	const FLT x493 = (-1 * x491 * x407) + (x2 * x492) + (x491 * x411) + (-1 * x31 * x490) + (x2 * x31 * x403) +
					 (-1 * x28 * x490) + (-1 * x2 * x415) + (x2 * x410 * x411);
	const FLT x494 = x55 * x493;
	const FLT x495 = x493 * x424;
	const FLT x496 = x33 * x427;
	const FLT x497 = x493 * x418;
	const FLT x498 = x25 * x493;
	const FLT x499 = x2 * x439;
	const FLT x500 = (x27 * x457) + (-1 * x59 * x499);
	const FLT x501 = (-1 * x53 * x497) + x500 + (-1 * x62 * x489) + (-1 * x444) + (-1 * x50 * x495) +
					 (-1 * x498 * x430) + (-1 * x463 * x420) + (x494 * x396) + (x496 * x433) + x443 + x448;
	const FLT x502 = -1 * x49;
	const FLT x503 = x2 * x420;
	const FLT x504 = x463 * x439;
	const FLT x505 = x2 * x27;
	const FLT x506 = x449 * x505;
	const FLT x507 = x436 + (-1 * x506) + (x498 * x396) + (x53 * x495) + x504 + (-1 * x59 * x503) + x502 +
					 (-1 * x33 * x392) + (x496 * x426) + (x494 * x430) + (-1 * x50 * x497);
	const FLT x508 = x50 * x396;
	const FLT x509 = x499 * x433;
	const FLT x510 = x431 * x505;
	const FLT x511 = x464 + x510 + (x52 * x489) + (x493 * x454) + (-1 * x509) + (-1 * x59 * x496) + x60 +
					 (-1 * x493 * x508) + (-1 * x55 * x495) + (-1 * x462) + (-1 * x25 * x497) + (-1 * x426 * x503);
	const FLT x512 = (x511 * sensor_pt[2]) + (-1 * x501 * sensor_pt[1]) + (x507 * sensor_pt[0]);
	const FLT x513 = x50 * x430;
	const FLT x514 = (-1 * x505 * x392) + (x499 * x426);
	const FLT x515 = x514 + x458 + (x58 * x489) + (-1 * x493 * x513) + x54 + (-1 * x2 * x461) + (-1 * x493 * x466) +
					 (x25 * x495) + (-1 * x496 * x421) + (-1 * x55 * x497);
	const FLT x516 = (x501 * sensor_pt[0]) + (-1 * x515 * sensor_pt[2]) + (x507 * sensor_pt[1]);
	const FLT x517 = (x516 * x286) + (x515 * x282) + (-1 * x512 * x281) + (-1 * x511 * x287);
	const FLT x518 = (x507 * sensor_pt[2]) + (x515 * sensor_pt[1]) + (-1 * x511 * sensor_pt[0]);
	const FLT x519 = (-1 * x501 * x282) + (x518 * x281) + (-1 * x516 * x273) + (x511 * x283);
	const FLT x520 = (x512 * x273) + (-1 * x518 * x286) + (-1 * x515 * x283) + (x501 * x287);
	const FLT x521 = (x520 * (*lh_p).Rot[1]) + (x517 * (*lh_p).Rot[0]) + (-1 * x519 * (*lh_p).Rot[2]);
	const FLT x522 = (x517 * (*lh_p).Rot[2]) + (-1 * x520 * (*lh_p).Rot[3]) + (x519 * (*lh_p).Rot[0]);
	const FLT x523 = x520 + (-1 * x521 * x207) + (x522 * x198);
	const FLT x524 = (-1 * x517 * (*lh_p).Rot[1]) + (x520 * (*lh_p).Rot[0]) + (x519 * (*lh_p).Rot[3]);
	const FLT x525 = x519 + (-1 * x524 * x198) + (x521 * x196);
	const FLT x526 = x517 + (x524 * x207) + (-1 * x522 * x196);
	const FLT x527 = (x526 * x100) + (x95 * x525);
	const FLT x528 = (-1 * x139 * (x527 + (x523 * x138))) + (x523 * x117);
	const FLT x529 = x528 * x144;
	const FLT x530 = (x118 * ((-1 * x528 * x146) + x529)) + (x528 * x143);
	const FLT x531 = (x530 * x118) + (x528 * x142);
	const FLT x532 = (-1 * x527 * x103) + (x89 * x523);
	const FLT x533 = ((-1 * x526 * x106) + (x525 * x105)) * x107;
	const FLT x534 = x533 + (-1 * x84 * x532);
	const FLT x535 =
		x533 +
		(-1 * x164 *
		 (x532 + (x534 * x137) + (x531 * x150) + (x528 * x152) +
		  (-1 * x162 *
		   ((-1 * x534 * x161) +
			(-1 * x133 *
			 ((x528 * x159) + (x531 * x118) + (x528 * x153) +
			  (x118 * (x531 + (x118 * (x530 + (x528 * x154) + (x118 * ((x528 * x157) + x529 + (-1 * x528 * x156))))) +
					   (x528 * x158)))))))));
	const FLT x536 = x27 * x420;
	const FLT x537 = x423 * x398;
	const FLT x538 = x27 * x27 * x27;
	const FLT x539 = x27 * x408;
	const FLT x540 = (-1 * x414 * x537) + (-1 * x408 * x538) + (x403 * x538) + (x401 * x413 * x537) +
					 (x31 * x402 * x537) + (-1 * x33 * x539) + (x27 * x492) + (-1 * x31 * x539);
	const FLT x541 = x55 * x540;
	const FLT x542 = x424 * x540;
	const FLT x543 = x418 * x540;
	const FLT x544 = x28 * x427;
	const FLT x545 = x25 * x540;
	const FLT x546 = (-1 * x421 * x536) + x467 + (-1 * x50 * x542) + x60 + (x28 * x437) + x509 + (-1 * x53 * x543) +
					 (-1 * x510) + (x541 * x396) + (-1 * x59 * x544) + (-1 * x430 * x545) + (-1 * x465);
	const FLT x547 = (x430 * x541) + x514 + (-1 * x28 * x449) + (x545 * x396) + (-1 * x452) + (-1 * x59 * x536) +
					 (x421 * x544) + (x53 * x542) + x455 + (-1 * x446 * x540) + x453;
	const FLT x548 = (-1 * x433 * x544) + x450 + (x454 * x540) + x56 + (-1 * x508 * x540) + x500 + (-1 * x55 * x542) +
					 (-1 * x25 * x543) + (x28 * x431) + (-1 * x426 * x536);
	const FLT x549 = (x548 * sensor_pt[2]) + (-1 * x546 * sensor_pt[1]) + (x547 * sensor_pt[0]);
	const FLT x550 = x441 + (-1 * x28 * x392) + (-1 * x513 * x540) + (-1 * x433 * x536) + (x424 * x545) +
					 (x426 * x544) + (-1 * x55 * x543) + x506 + x502 + (-1 * x466 * x540) + (-1 * x504);
	const FLT x551 = (x546 * sensor_pt[0]) + (-1 * x550 * sensor_pt[2]) + (x547 * sensor_pt[1]);
	const FLT x552 = (x550 * x282) + (x551 * x286) + (-1 * x549 * x281) + (-1 * x548 * x287);
	const FLT x553 = (-1 * x548 * sensor_pt[0]) + (x550 * sensor_pt[1]) + (x547 * sensor_pt[2]);
	const FLT x554 = (-1 * x546 * x282) + (-1 * x551 * x273) + (x553 * x281) + (x548 * x283);
	const FLT x555 = (x546 * x287) + (x549 * x273) + (-1 * x550 * x283) + (-1 * x553 * x286);
	const FLT x556 = (x555 * (*lh_p).Rot[1]) + (x552 * (*lh_p).Rot[0]) + (-1 * x554 * (*lh_p).Rot[2]);
	const FLT x557 = (x552 * (*lh_p).Rot[2]) + (-1 * x555 * (*lh_p).Rot[3]) + (x554 * (*lh_p).Rot[0]);
	const FLT x558 = x555 + (-1 * x556 * x207) + (x557 * x198);
	const FLT x559 = 2 * ((-1 * x552 * (*lh_p).Rot[1]) + (x555 * (*lh_p).Rot[0]) + (x554 * (*lh_p).Rot[3]));
	const FLT x560 = x554 + (-1 * x559 * (*lh_p).Rot[3]) + (x556 * x196);
	const FLT x561 = (-1 * x557 * x196) + x552 + (x559 * (*lh_p).Rot[1]);
	const FLT x562 = (x561 * x100) + (x95 * x560);
	const FLT x563 = (-1 * x139 * (x562 + (x558 * x138))) + (x558 * x117);
	const FLT x564 = x563 * x144;
	const FLT x565 = (x118 * ((-1 * x563 * x146) + x564)) + (x563 * x143);
	const FLT x566 = (x565 * x118) + (x563 * x142);
	const FLT x567 = (-1 * x562 * x103) + (x89 * x558);
	const FLT x568 = ((-1 * x561 * x106) + (x560 * x105)) * x107;
	const FLT x569 = x568 + (-1 * x84 * x567);
	const FLT x570 =
		x568 +
		(-1 * x164 *
		 ((x569 * x137) + x567 + (x563 * x152) +
		  (-1 * x162 *
		   ((-1 * x569 * x161) +
			(-1 * x133 *
			 ((x563 * x159) + (x563 * x153) +
			  (x118 * (x566 + (x118 * (x565 + (x563 * x154) + (x118 * (x564 + (x563 * x157) + (-1 * x563 * x156))))) +
					   (x563 * x158))) +
			  (x566 * x118))))) +
		  (x566 * x150)));
	const FLT x571 = dt * x197;
	const FLT x572 = dt * x199;
	const FLT x573 = x572 + x571;
	const FLT x574 = -1 * dt * x203;
	const FLT x575 = -1 * dt * x201;
	const FLT x576 = x575 + dt + x574;
	const FLT x577 = dt * x206;
	const FLT x578 = dt * x208;
	const FLT x579 = x578 + (-1 * x577);
	const FLT x580 = (x579 * x100) + (x95 * x576);
	const FLT x581 = (-1 * x139 * (x580 + (x573 * x138))) + (x573 * x117);
	const FLT x582 = x581 * x144;
	const FLT x583 = (x118 * ((-1 * x581 * x146) + x582)) + (x581 * x143);
	const FLT x584 = (x583 * x118) + (x581 * x142);
	const FLT x585 = (-1 * x580 * x103) + (x89 * x573);
	const FLT x586 = ((-1 * x579 * x106) + (x576 * x105)) * x107;
	const FLT x587 = x586 + (-1 * x84 * x585);
	const FLT x588 =
		x586 +
		(-1 * x164 *
		 (x585 +
		  (-1 * x162 *
		   ((-1 * x587 * x161) +
			(-1 * x133 *
			 ((x581 * x159) + (x584 * x118) +
			  (x118 * (x584 + (x118 * (x583 + (x581 * x154) + (x118 * ((x581 * x157) + x582 + (-1 * x581 * x156))))) +
					   (x581 * x158))) +
			  (x581 * x153))))) +
		  (x587 * x137) + (x581 * x152) + (x584 * x150)));
	const FLT x589 = (-1 * dt * x220) + dt;
	const FLT x590 = x589 + x575;
	const FLT x591 = x571 + (-1 * x572);
	const FLT x592 = dt * x224;
	const FLT x593 = dt * x225;
	const FLT x594 = x593 + x592;
	const FLT x595 = (x594 * x100) + (x95 * x591);
	const FLT x596 = (-1 * x139 * (x595 + (x590 * x138))) + (x590 * x117);
	const FLT x597 = x596 * x144;
	const FLT x598 = (x118 * ((-1 * x596 * x146) + x597)) + (x596 * x143);
	const FLT x599 = (x598 * x118) + (x596 * x142);
	const FLT x600 = (-1 * x595 * x103) + (x89 * x590);
	const FLT x601 = ((-1 * x594 * x106) + (x591 * x105)) * x107;
	const FLT x602 = x113 * (x601 + (-1 * x84 * x600));
	const FLT x603 =
		x601 +
		(-1 * x164 *
		 (x600 + (x596 * x152) + (x599 * x150) +
		  (-1 * x162 *
		   ((-1 * x602 * x160) +
			(-1 * x133 *
			 ((x596 * x159) + (x596 * x153) + (x599 * x118) +
			  (x118 * (x599 + (x118 * ((x596 * x154) + x598 + (x118 * ((x596 * x157) + x597 + (-1 * x596 * x156))))) +
					   (x596 * x158))))))) +
		  (x602 * x136)));
	const FLT x604 = x592 + (-1 * x593);
	const FLT x605 = x577 + x578;
	const FLT x606 = x589 + x574;
	const FLT x607 = (x606 * x100) + (x95 * x605);
	const FLT x608 = (-1 * x139 * (x607 + (x604 * x138))) + (x604 * x117);
	const FLT x609 = x608 * x144;
	const FLT x610 = (x118 * ((-1 * x608 * x146) + x609)) + (x608 * x143);
	const FLT x611 = (x610 * x118) + (x608 * x142);
	const FLT x612 = (-1 * x607 * x103) + (x89 * x604);
	const FLT x613 = ((-1 * x606 * x106) + (x605 * x105)) * x107;
	const FLT x614 = x613 + (-1 * x84 * x612);
	const FLT x615 =
		x613 +
		(-1 * x164 *
		 ((-1 * x162 *
		   ((-1 * x614 * x161) +
			(-1 * x133 *
			 ((x118 * (x611 + (x118 * (x610 + (x608 * x154) + (x118 * ((x608 * x157) + x609 + (-1 * x608 * x156))))) +
					   (x608 * x158))) +
			  (x608 * x153) + (x608 * x159) + (x611 * x118))))) +
		  x612 + (x608 * x152) + (x611 * x150) + (x614 * x137)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT), x165 + (x166 * x165));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT), x182 + (x166 * x182));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT), x195 + (x166 * x195));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT), x219 + (x219 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT), x235 + (x235 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT), x247 + (x247 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x304 + (x304 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x336 + (x336 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x364 + (x364 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x389 + (x389 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x488 + (x488 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x535 + (x535 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x570 + (x570 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT), x588 + (x588 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT), x603 + (x603 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT), x615 + (x615 * x166));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = tan(x0);
	const FLT x2 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x8 = sin(x7);
	const FLT x9 = x6 * x8;
	const FLT x10 = x4 * x9;
	const FLT x11 = cos(x3);
	const FLT x12 = cos(x7);
	const FLT x13 = cos(x5);
	const FLT x14 = x13 * x12;
	const FLT x15 = x14 * x11;
	const FLT x16 = x15 + x10;
	const FLT x17 = x9 * x11;
	const FLT x18 = x4 * x14;
	const FLT x19 = x18 + (-1 * x17);
	const FLT x20 = x6 * x12;
	const FLT x21 = x4 * x20;
	const FLT x22 = x8 * x13;
	const FLT x23 = x22 * x11;
	const FLT x24 = x23 + x21;
	const FLT x25 = x4 * x22;
	const FLT x26 = x20 * x11;
	const FLT x27 = x26 + (-1 * x25);
	const FLT x28 = (x24 * x24) + (x27 * x27) + (x19 * x19) + (x16 * x16);
	const FLT x29 = 1. / sqrt(x28);
	const FLT x30 = x29 * (*_x0).Pose.Rot[2];
	const FLT x31 = x29 * (*_x0).Pose.Rot[0];
	const FLT x32 = x29 * (*_x0).Pose.Rot[3];
	const FLT x33 = x29 * (*_x0).Pose.Rot[1];
	const FLT x34 = (-1 * x33 * x19) + (x32 * x27) + (x30 * x16) + (x31 * x24);
	const FLT x35 = dt * dt;
	const FLT x36 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x37 = x36 * x36;
	const FLT x38 = x35 * x37;
	const FLT x39 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x40 = x39 * x39;
	const FLT x41 = x40 * x35;
	const FLT x42 = x2 * x2;
	const FLT x43 = x42 * x35;
	const FLT x44 = 1e-10 + x43 + x38 + x41;
	const FLT x45 = sqrt(x44);
	const FLT x46 = 0.5 * x45;
	const FLT x47 = sin(x46);
	const FLT x48 = x47 * x47;
	const FLT x49 = 1. / x44;
	const FLT x50 = x48 * x49;
	const FLT x51 = cos(x46);
	const FLT x52 = (x50 * x41) + (x50 * x38) + (x51 * x51) + (x50 * x43);
	const FLT x53 = 1. / sqrt(x52);
	const FLT x54 = x53 * x47;
	const FLT x55 = 1. / x45;
	const FLT x56 = dt * x55;
	const FLT x57 = x54 * x56;
	const FLT x58 = x57 * x34;
	const FLT x59 = (-1 * x33 * x27) + (x31 * x16) + (-1 * x32 * x19) + (-1 * x30 * x24);
	const FLT x60 = x53 * x51;
	const FLT x61 = x60 * x59;
	const FLT x62 = (x31 * x19) + (x33 * x24) + (x32 * x16) + (-1 * x30 * x27);
	const FLT x63 = x62 * x57;
	const FLT x64 = (x33 * x16) + (-1 * x32 * x24) + (x30 * x19) + (x31 * x27);
	const FLT x65 = x64 * x57;
	const FLT x66 = (-1 * x65 * x39) + (-1 * x63 * x36) + (-1 * x2 * x58) + x61;
	const FLT x67 = x60 * x62;
	const FLT x68 = x54 * x59;
	const FLT x69 = x68 * x56;
	const FLT x70 = (x69 * x36) + (x58 * x39) + (-1 * x2 * x65) + x67;
	const FLT x71 = x60 * x64;
	const FLT x72 = (x69 * x39) + (x2 * x63) + (-1 * x58 * x36) + x71;
	const FLT x73 = (-1 * x72 * sensor_pt[2]) + (x66 * sensor_pt[1]) + (x70 * sensor_pt[0]);
	const FLT x74 = x60 * x34;
	const FLT x75 = (-1 * x63 * x39) + x74 + (x65 * x36) + (x2 * x69);
	const FLT x76 = (x66 * sensor_pt[2]) + (-1 * x75 * sensor_pt[0]) + (x72 * sensor_pt[1]);
	const FLT x77 = dt * fabs(dt);
	const FLT x78 = 1.0 / 2.0 * x77;
	const FLT x79 = (*_x0).Pose.Pos[0] + (2 * ((x75 * x76) + (-1 * x70 * x73))) +
					(x78 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x80 = (-1 * x70 * sensor_pt[1]) + (x66 * sensor_pt[0]) + (x75 * sensor_pt[2]);
	const FLT x81 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x73 * x72) + (-1 * x80 * x75))) +
					(x78 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) + sensor_pt[2];
	const FLT x82 = (*_x0).Pose.Pos[1] + (2 * ((x80 * x70) + (-1 * x72 * x76))) + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + (*error_model).Pose.Pos[1] +
					(x78 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x83 = (-1 * x82 * (*lh_p).Rot[3]) + (x79 * (*lh_p).Rot[0]) + (x81 * (*lh_p).Rot[2]);
	const FLT x84 = (-1 * x81 * (*lh_p).Rot[1]) + (x79 * (*lh_p).Rot[3]) + (x82 * (*lh_p).Rot[0]);
	const FLT x85 = x81 + (2 * ((x84 * (*lh_p).Rot[1]) + (-1 * x83 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x86 = (-1 * x79 * (*lh_p).Rot[2]) + (x81 * (*lh_p).Rot[0]) + (x82 * (*lh_p).Rot[1]);
	const FLT x87 = (*lh_p).Pos[0] + x79 + (2 * ((x86 * (*lh_p).Rot[2]) + (-1 * x84 * (*lh_p).Rot[3])));
	const FLT x88 = x87 * x87;
	const FLT x89 = x88 + (x85 * x85);
	const FLT x90 = 1. / x89;
	const FLT x91 = x82 + (*lh_p).Pos[1] + (2 * ((x83 * (*lh_p).Rot[3]) + (-1 * x86 * (*lh_p).Rot[1])));
	const FLT x92 = x91 * x91;
	const FLT x93 = 1. / sqrt(1 + (-1 * (x1 * x1) * x92 * x90));
	const FLT x94 = x77 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x95 = x77 * (*lh_p).Rot[3];
	const FLT x96 = x95 * (*lh_p).Rot[0];
	const FLT x97 = x96 + x94;
	const FLT x98 = x1 * (1. / sqrt(x89));
	const FLT x99 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x100 = -1 * x77 * x99;
	const FLT x101 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x102 = x78 + (-1 * x77 * x101);
	const FLT x103 = x102 + x100;
	const FLT x104 = 2 * x87;
	const FLT x105 = x77 * (*lh_p).Rot[0];
	const FLT x106 = x105 * (*lh_p).Rot[2];
	const FLT x107 = x95 * (*lh_p).Rot[1];
	const FLT x108 = x107 + (-1 * x106);
	const FLT x109 = 2 * x85;
	const FLT x110 = (x109 * x108) + (x103 * x104);
	const FLT x111 = 1.0 / 2.0 * x91;
	const FLT x112 = x1 * (1. / (x89 * sqrt(x89))) * x111;
	const FLT x113 = (-1 * x110 * x112) + (x98 * x97);
	const FLT x114 = (1. / x88) * x85;
	const FLT x115 = 1. / x87;
	const FLT x116 = x88 * x90;
	const FLT x117 = ((-1 * x108 * x115) + (x103 * x114)) * x116;
	const FLT x118 = atan2(-1 * x85, x87);
	const FLT x119 = x91 * x98;
	const FLT x120 = (*bsc0).ogeephase + (-1 * asin(x119)) + x118;
	const FLT x121 = cos(x120) * (*bsc0).ogeemag;
	const FLT x122 = x121 * (x117 + (-1 * x93 * x113));
	const FLT x123 = x89 + x92;
	const FLT x124 = cos(x0);
	const FLT x125 = 1. / x124;
	const FLT x126 = (1. / sqrt(x123)) * x125;
	const FLT x127 = asin(x91 * x126);
	const FLT x128 = 8.0108022e-06 * x127;
	const FLT x129 = -8.0108022e-06 + (-1 * x128);
	const FLT x130 = 0.0028679863 + (x127 * x129);
	const FLT x131 = 5.3685255e-06 + (x127 * x130);
	const FLT x132 = 0.0076069798 + (x127 * x131);
	const FLT x133 = x127 * x127;
	const FLT x134 = x127 * x132;
	const FLT x135 = -8.0108022e-06 + (-1.60216044e-05 * x127);
	const FLT x136 = x130 + (x127 * x135);
	const FLT x137 = x131 + (x127 * x136);
	const FLT x138 = x132 + (x127 * x137);
	const FLT x139 = (x127 * x138) + x134;
	const FLT x140 = sin(x0);
	const FLT x141 = (sin(x120) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x142 = x140 * x141;
	const FLT x143 = x124 + (-1 * x139 * x142);
	const FLT x144 = 1. / x143;
	const FLT x145 = x133 * x132 * x144;
	const FLT x146 = 2 * x91;
	const FLT x147 = x111 * (1. / (x123 * sqrt(x123))) * x125;
	const FLT x148 = (-1 * x147 * (x110 + (x97 * x146))) + (x97 * x126);
	const FLT x149 = 1. / sqrt(1 + (-1 * x92 * (1. / (x124 * x124)) * (1. / x123)));
	const FLT x150 = x131 * x149;
	const FLT x151 = x130 * x149;
	const FLT x152 = x129 * x149;
	const FLT x153 = x148 * x152;
	const FLT x154 = x128 * x149;
	const FLT x155 = (x127 * ((-1 * x148 * x154) + x153)) + (x148 * x151);
	const FLT x156 = (x127 * x155) + (x148 * x150);
	const FLT x157 = x133 * x141;
	const FLT x158 = x144 * x157;
	const FLT x159 = 2 * x134 * x141 * x144;
	const FLT x160 = x149 * x159;
	const FLT x161 = x138 * x149;
	const FLT x162 = x136 * x149;
	const FLT x163 = 2.40324066e-05 * x127;
	const FLT x164 = x163 * x149;
	const FLT x165 = x135 * x149;
	const FLT x166 = x137 * x149;
	const FLT x167 = x132 * x149;
	const FLT x168 = x139 * x140;
	const FLT x169 = x132 * (1. / (x143 * x143)) * x157;
	const FLT x170 = x119 + (x132 * x158);
	const FLT x171 = 1. / sqrt(1 + (-1 * (x170 * x170)));
	const FLT x172 =
		x117 + (-1 * x171 *
				(x113 +
				 (-1 * x169 *
				  ((-1 * x122 * x168) +
				   (-1 * x142 *
					((x127 * x156) + (x167 * x148) + (x161 * x148) +
					 (x127 * ((x127 * (x155 + (x162 * x148) + (x127 * ((x165 * x148) + x153 + (-1 * x164 * x148))))) +
							  x156 + (x166 * x148))))))) +
				 (x122 * x145) + (x160 * x148) + (x156 * x158)));
	const FLT x173 = cos(x118 + (-1 * asin(x170)) + (*bsc0).gibpha) * (*bsc0).gibmag;
	const FLT x174 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x175 = -1 * x77 * x174;
	const FLT x176 = x102 + x175;
	const FLT x177 = x94 + (-1 * x96);
	const FLT x178 = x95 * (*lh_p).Rot[2];
	const FLT x179 = x105 * (*lh_p).Rot[1];
	const FLT x180 = x179 + x178;
	const FLT x181 = (x109 * x180) + (x104 * x177);
	const FLT x182 = (-1 * x147 * (x181 + (x176 * x146))) + (x126 * x176);
	const FLT x183 = (-1 * x112 * x181) + (x98 * x176);
	const FLT x184 = ((-1 * x115 * x180) + (x114 * x177)) * x116;
	const FLT x185 = x184 + (-1 * x93 * x183);
	const FLT x186 = x121 * x145;
	const FLT x187 = x182 * x152;
	const FLT x188 = (x127 * ((-1 * x182 * x154) + x187)) + (x182 * x151);
	const FLT x189 = (x127 * x188) + (x182 * x150);
	const FLT x190 = x121 * x168;
	const FLT x191 =
		x184 +
		(-1 * x171 *
		 (x183 + (x189 * x158) +
		  (-1 * x169 *
		   ((-1 * x185 * x190) +
			(-1 * x142 *
			 ((x161 * x182) + (x167 * x182) + (x127 * x189) +
			  (x127 * (x189 + (x127 * ((x162 * x182) + x188 + (x127 * ((x165 * x182) + x187 + (-1 * x164 * x182))))) +
					   (x166 * x182))))))) +
		  (x160 * x182) + (x186 * x185)));
	const FLT x192 = x178 + (-1 * x179);
	const FLT x193 = x106 + x107;
	const FLT x194 = x100 + x78 + x175;
	const FLT x195 = (x109 * x194) + (x104 * x193);
	const FLT x196 = (-1 * x147 * (x195 + (x192 * x146))) + (x126 * x192);
	const FLT x197 = x196 * x152;
	const FLT x198 = (x127 * ((-1 * x196 * x154) + x197)) + (x196 * x151);
	const FLT x199 = (x127 * x198) + (x196 * x150);
	const FLT x200 = (-1 * x112 * x195) + (x98 * x192);
	const FLT x201 = ((-1 * x115 * x194) + (x114 * x193)) * x116;
	const FLT x202 = x201 + (-1 * x93 * x200);
	const FLT x203 =
		x201 +
		(-1 * x171 *
		 (x200 +
		  (-1 * x169 *
		   ((-1 * x202 * x190) +
			(-1 * x142 *
			 ((x167 * x196) + (x161 * x196) +
			  (x127 * (x199 + (x127 * (x198 + (x162 * x196) + (x127 * (x197 + (x165 * x196) + (-1 * x164 * x196))))) +
					   (x166 * x196))) +
			  (x127 * x199))))) +
		  (x199 * x158) + (x160 * x196) + (x202 * x186)));
	const FLT x204 = 1.0 / 2.0 * (1. / (x28 * sqrt(x28)));
	const FLT x205 = x19 * x204;
	const FLT x206 = 0.5 * x15;
	const FLT x207 = 0.5 * x10;
	const FLT x208 = x207 + x206;
	const FLT x209 = 2 * x27;
	const FLT x210 = 0.5 * x17;
	const FLT x211 = -1 * x210;
	const FLT x212 = 0.5 * x18;
	const FLT x213 = x212 + x211;
	const FLT x214 = 2 * x24;
	const FLT x215 = 0.5 * x21;
	const FLT x216 = -0.5 * x23;
	const FLT x217 = x216 + (-1 * x215);
	const FLT x218 = 2 * x19;
	const FLT x219 = 0.5 * x26;
	const FLT x220 = -1 * x219;
	const FLT x221 = 0.5 * x25;
	const FLT x222 = x221 + x220;
	const FLT x223 = 2 * x16;
	const FLT x224 = (x223 * x222) + (x218 * x217) + (x208 * x209) + (x213 * x214);
	const FLT x225 = x224 * (*_x0).Pose.Rot[1];
	const FLT x226 = x27 * x204;
	const FLT x227 = x224 * x226;
	const FLT x228 = -1 * x33 * x217;
	const FLT x229 = x16 * x204;
	const FLT x230 = x224 * x229;
	const FLT x231 = x24 * x204;
	const FLT x232 = x231 * x224;
	const FLT x233 = x32 * x208;
	const FLT x234 = x233 + (x31 * x213) + (-1 * x232 * (*_x0).Pose.Rot[0]) + (-1 * x227 * (*_x0).Pose.Rot[3]) +
					 (-1 * x230 * (*_x0).Pose.Rot[2]) + (x30 * x222) + (x205 * x225) + x228;
	const FLT x235 = x57 * x39;
	const FLT x236 = -1 * x33 * x208;
	const FLT x237 = x32 * x217;
	const FLT x238 = x205 * x224;
	const FLT x239 = (x31 * x222) + (-1 * x30 * x213) + (x238 * (*_x0).Pose.Rot[3]) + (x225 * x226) +
					 (-1 * x230 * (*_x0).Pose.Rot[0]) + (-1 * x237) + x236 + (x232 * (*_x0).Pose.Rot[2]);
	const FLT x240 = x57 * x36;
	const FLT x241 = x30 * x217;
	const FLT x242 = x31 * x208;
	const FLT x243 = x242 + (-1 * x227 * (*_x0).Pose.Rot[0]) + (-1 * x238 * (*_x0).Pose.Rot[2]) + (x33 * x222) +
					 (-1 * x32 * x213) + (-1 * x225 * x229) + x241 + (x232 * (*_x0).Pose.Rot[3]);
	const FLT x244 = x57 * x243;
	const FLT x245 = x205 * (*_x0).Pose.Rot[0];
	const FLT x246 = x30 * x208;
	const FLT x247 = x31 * x217;
	const FLT x248 = x247 + (-1 * x246) + (x33 * x213) + (-1 * x230 * (*_x0).Pose.Rot[3]) + (-1 * x224 * x245) +
					 (-1 * x231 * x225) + (x227 * (*_x0).Pose.Rot[2]) + (x32 * x222);
	const FLT x249 = (x60 * x248) + (x234 * x235) + (-1 * x2 * x244) + (x239 * x240);
	const FLT x250 = x57 * x248;
	const FLT x251 = x2 * x57;
	const FLT x252 = (-1 * x234 * x251) + (-1 * x39 * x244) + (x60 * x239) + (-1 * x36 * x250);
	const FLT x253 = (x60 * x234) + (x239 * x251) + (x36 * x244) + (-1 * x39 * x250);
	const FLT x254 = (x253 * sensor_pt[2]) + (-1 * x249 * sensor_pt[1]) + (x252 * sensor_pt[0]);
	const FLT x255 = 2 * x75;
	const FLT x256 = (x60 * x243) + (x2 * x250) + (x235 * x239) + (-1 * x234 * x240);
	const FLT x257 = (-1 * x256 * sensor_pt[2]) + (x249 * sensor_pt[0]) + (x252 * sensor_pt[1]);
	const FLT x258 = 2 * x72;
	const FLT x259 = 2 * x73;
	const FLT x260 = 2 * x80;
	const FLT x261 = (-1 * x260 * x253) + (-1 * x254 * x255) + (x256 * x259) + (x258 * x257);
	const FLT x262 = 2 * x76;
	const FLT x263 = 2 * x70;
	const FLT x264 = (x256 * sensor_pt[1]) + (-1 * x253 * sensor_pt[0]) + (x252 * sensor_pt[2]);
	const FLT x265 = (x264 * x255) + (-1 * x259 * x249) + (x262 * x253) + (-1 * x263 * x257);
	const FLT x266 = (x260 * x249) + (x263 * x254) + (-1 * x264 * x258) + (-1 * x262 * x256);
	const FLT x267 = (x266 * (*lh_p).Rot[1]) + (x261 * (*lh_p).Rot[0]) + (-1 * x265 * (*lh_p).Rot[2]);
	const FLT x268 = 2 * (*lh_p).Rot[1];
	const FLT x269 = (x261 * (*lh_p).Rot[2]) + (-1 * x266 * (*lh_p).Rot[3]) + (x265 * (*lh_p).Rot[0]);
	const FLT x270 = 2 * (*lh_p).Rot[3];
	const FLT x271 = x266 + (-1 * x268 * x267) + (x270 * x269);
	const FLT x272 = (x266 * (*lh_p).Rot[0]) + (-1 * x261 * (*lh_p).Rot[1]) + (x265 * (*lh_p).Rot[3]);
	const FLT x273 = 2 * (*lh_p).Rot[2];
	const FLT x274 = (-1 * x272 * x270) + x265 + (x273 * x267);
	const FLT x275 = x261 + (-1 * x273 * x269) + (x272 * x268);
	const FLT x276 = (x275 * x109) + (x274 * x104);
	const FLT x277 = (-1 * x147 * (x276 + (x271 * x146))) + (x271 * x126);
	const FLT x278 = x277 * x152;
	const FLT x279 = (x127 * ((-1 * x277 * x154) + x278)) + (x277 * x151);
	const FLT x280 = (x279 * x127) + (x277 * x150);
	const FLT x281 = (-1 * x276 * x112) + (x98 * x271);
	const FLT x282 = ((-1 * x275 * x115) + (x274 * x114)) * x116;
	const FLT x283 = x282 + (-1 * x93 * x281);
	const FLT x284 =
		x282 +
		(-1 * x171 *
		 (x281 +
		  (-1 * x169 *
		   ((-1 * x283 * x190) +
			(-1 * x142 *
			 ((x277 * x167) + (x277 * x161) +
			  (x127 * (x280 + (x127 * (x279 + (x277 * x162) + (x127 * (x278 + (x277 * x165) + (-1 * x277 * x164))))) +
					   (x277 * x166))) +
			  (x280 * x127))))) +
		  (x277 * x160) + (x280 * x158) + (x283 * x186)));
	const FLT x285 = -1 * x212;
	const FLT x286 = x285 + x211;
	const FLT x287 = (-1 * x207) + x206;
	const FLT x288 = -1 * x221;
	const FLT x289 = x220 + x288;
	const FLT x290 = x215 + x216;
	const FLT x291 = (x290 * x223) + (x218 * x289) + (x209 * x286) + (x214 * x287);
	const FLT x292 = x205 * x291;
	const FLT x293 = x204 * x291;
	const FLT x294 = x24 * x293;
	const FLT x295 = x27 * x293;
	const FLT x296 = x291 * x229;
	const FLT x297 = (-1 * x295 * (*_x0).Pose.Rot[3]) + (-1 * x296 * (*_x0).Pose.Rot[2]) + (x30 * x290) +
					 (x292 * (*_x0).Pose.Rot[1]) + (x32 * x286) + (-1 * x294 * (*_x0).Pose.Rot[0]) + (-1 * x33 * x289) +
					 (x31 * x287);
	const FLT x298 = (x31 * x290) + (-1 * x32 * x289) + (x294 * (*_x0).Pose.Rot[2]) + (x292 * (*_x0).Pose.Rot[3]) +
					 (-1 * x33 * x286) + (x295 * (*_x0).Pose.Rot[1]) + (-1 * x296 * (*_x0).Pose.Rot[0]) +
					 (-1 * x30 * x287);
	const FLT x299 = (x33 * x287) + (x31 * x289) + (-1 * x296 * (*_x0).Pose.Rot[3]) + (-1 * x294 * (*_x0).Pose.Rot[1]) +
					 (x295 * (*_x0).Pose.Rot[2]) + (-1 * x30 * x286) + (-1 * x292 * (*_x0).Pose.Rot[0]) + (x32 * x290);
	const FLT x300 = (-1 * x295 * (*_x0).Pose.Rot[0]) + (x294 * (*_x0).Pose.Rot[3]) + (-1 * x296 * (*_x0).Pose.Rot[1]) +
					 (-1 * x292 * (*_x0).Pose.Rot[2]) + (x33 * x290) + (x30 * x289) + (x31 * x286) + (-1 * x32 * x287);
	const FLT x301 = (x60 * x300) + (x299 * x251) + (-1 * x297 * x240) + (x235 * x298);
	const FLT x302 = (x60 * x298) + (-1 * x299 * x240) + (-1 * x235 * x300) + (-1 * x297 * x251);
	const FLT x303 = (x60 * x299) + (x298 * x240) + (-1 * x251 * x300) + (x235 * x297);
	const FLT x304 = (x303 * sensor_pt[0]) + (-1 * x301 * sensor_pt[2]) + (x302 * sensor_pt[1]);
	const FLT x305 = (x298 * x251) + (x240 * x300) + (-1 * x235 * x299) + (x60 * x297);
	const FLT x306 = (x301 * sensor_pt[1]) + (x302 * sensor_pt[2]) + (-1 * x305 * sensor_pt[0]);
	const FLT x307 = (-1 * x259 * x303) + (x262 * x305) + (-1 * x263 * x304) + (x255 * x306);
	const FLT x308 = (-1 * x303 * sensor_pt[1]) + (x305 * sensor_pt[2]) + (x302 * sensor_pt[0]);
	const FLT x309 = (x259 * x301) + (x258 * x304) + (-1 * x260 * x305) + (-1 * x255 * x308);
	const FLT x310 = (x263 * x308) + (-1 * x258 * x306) + (-1 * x262 * x301) + (x260 * x303);
	const FLT x311 = (x310 * (*lh_p).Rot[1]) + (-1 * x307 * (*lh_p).Rot[2]) + (x309 * (*lh_p).Rot[0]);
	const FLT x312 = (x309 * (*lh_p).Rot[2]) + (-1 * x310 * (*lh_p).Rot[3]) + (x307 * (*lh_p).Rot[0]);
	const FLT x313 = x310 + (-1 * x268 * x311) + (x270 * x312);
	const FLT x314 = (x310 * (*lh_p).Rot[0]) + (-1 * x309 * (*lh_p).Rot[1]) + (x307 * (*lh_p).Rot[3]);
	const FLT x315 = x307 + (x273 * x311) + (-1 * x270 * x314);
	const FLT x316 = x309 + (-1 * x273 * x312) + (x268 * x314);
	const FLT x317 = (x316 * x109) + (x315 * x104);
	const FLT x318 = (-1 * x147 * (x317 + (x313 * x146))) + (x313 * x126);
	const FLT x319 = x318 * x152;
	const FLT x320 = (x127 * ((-1 * x318 * x154) + x319)) + (x318 * x151);
	const FLT x321 = (x320 * x127) + (x318 * x150);
	const FLT x322 = (-1 * x317 * x112) + (x98 * x313);
	const FLT x323 = ((-1 * x316 * x115) + (x315 * x114)) * x116;
	const FLT x324 = x323 + (-1 * x93 * x322);
	const FLT x325 =
		x323 +
		(-1 * x171 *
		 ((-1 * x169 *
		   ((-1 * x324 * x190) +
			(-1 * x142 *
			 ((x318 * x167) + (x321 * x127) + (x318 * x161) +
			  (x127 * (x321 + (x127 * (x320 + (x318 * x162) + (x127 * ((x318 * x165) + x319 + (-1 * x318 * x164))))) +
					   (x318 * x166))))))) +
		  x322 + (x324 * x186) + (x321 * x158) + (x318 * x160)));
	const FLT x326 = x219 + x288;
	const FLT x327 = x210 + x285;
	const FLT x328 = (x223 * x327) + (x214 * x326) + (x217 * x209) + (x218 * x208);
	const FLT x329 = x229 * x328;
	const FLT x330 = x205 * x328;
	const FLT x331 = x226 * x328;
	const FLT x332 = x328 * (*_x0).Pose.Rot[2];
	const FLT x333 = (x31 * x327) + (x231 * x332) + (-1 * x233) + (-1 * x329 * (*_x0).Pose.Rot[0]) + x228 +
					 (x330 * (*_x0).Pose.Rot[3]) + (-1 * x30 * x326) + (x331 * (*_x0).Pose.Rot[1]);
	const FLT x334 = x231 * x328;
	const FLT x335 = (-1 * x334 * (*_x0).Pose.Rot[0]) + (x330 * (*_x0).Pose.Rot[1]) + (x31 * x326) +
					 (-1 * x331 * (*_x0).Pose.Rot[3]) + x236 + (-1 * x329 * (*_x0).Pose.Rot[2]) + x237 + (x30 * x327);
	const FLT x336 = (-1 * x334 * (*_x0).Pose.Rot[1]) + x242 + (-1 * x245 * x328) + (x226 * x332) +
					 (-1 * x329 * (*_x0).Pose.Rot[3]) + (x32 * x327) + (-1 * x241) + (x33 * x326);
	const FLT x337 = (x33 * x327) + (-1 * x331 * (*_x0).Pose.Rot[0]) + x246 + (-1 * x330 * (*_x0).Pose.Rot[2]) +
					 (-1 * x329 * (*_x0).Pose.Rot[1]) + (x334 * (*_x0).Pose.Rot[3]) + (-1 * x32 * x326) + x247;
	const FLT x338 = (x251 * x336) + (x60 * x337) + (x235 * x333) + (-1 * x240 * x335);
	const FLT x339 = (-1 * x240 * x336) + (x60 * x333) + (-1 * x235 * x337) + (-1 * x251 * x335);
	const FLT x340 = (x60 * x336) + (-1 * x251 * x337) + (x235 * x335) + (x240 * x333);
	const FLT x341 = (-1 * x338 * sensor_pt[2]) + (x340 * sensor_pt[0]) + (x339 * sensor_pt[1]);
	const FLT x342 = (x251 * x333) + (-1 * x235 * x336) + (x240 * x337) + (x60 * x335);
	const FLT x343 = (x338 * sensor_pt[1]) + (x339 * sensor_pt[2]) + (-1 * x342 * sensor_pt[0]);
	const FLT x344 = (x255 * x343) + (x262 * x342) + (-1 * x263 * x341) + (-1 * x259 * x340);
	const FLT x345 = (x342 * sensor_pt[2]) + (-1 * x340 * sensor_pt[1]) + (x339 * sensor_pt[0]);
	const FLT x346 = (-1 * x260 * x342) + (x259 * x338) + (x258 * x341) + (-1 * x255 * x345);
	const FLT x347 = (x260 * x340) + (-1 * x262 * x338) + (-1 * x258 * x343) + (x263 * x345);
	const FLT x348 = (x347 * (*lh_p).Rot[1]) + (-1 * x344 * (*lh_p).Rot[2]) + (x346 * (*lh_p).Rot[0]);
	const FLT x349 = (x346 * (*lh_p).Rot[2]) + (-1 * x347 * (*lh_p).Rot[3]) + (x344 * (*lh_p).Rot[0]);
	const FLT x350 = (-1 * x268 * x348) + x347 + (x270 * x349);
	const FLT x351 = (-1 * x346 * (*lh_p).Rot[1]) + (x347 * (*lh_p).Rot[0]) + (x344 * (*lh_p).Rot[3]);
	const FLT x352 = (-1 * x270 * x351) + x344 + (x273 * x348);
	const FLT x353 = x346 + (-1 * x273 * x349) + (x268 * x351);
	const FLT x354 = (x353 * x109) + (x352 * x104);
	const FLT x355 = (-1 * x147 * (x354 + (x350 * x146))) + (x350 * x126);
	const FLT x356 = x355 * x152;
	const FLT x357 = (x127 * ((-1 * x355 * x154) + x356)) + (x355 * x151);
	const FLT x358 = (x357 * x127) + (x355 * x150);
	const FLT x359 = (-1 * x354 * x112) + (x98 * x350);
	const FLT x360 = ((-1 * x353 * x115) + (x352 * x114)) * x116;
	const FLT x361 = x360 + (-1 * x93 * x359);
	const FLT x362 =
		x360 + (-1 * x171 *
				((x361 * x186) +
				 (-1 * x169 *
				  ((-1 * x361 * x190) +
				   (-1 * x142 *
					((x127 * ((x127 * (x357 + (x355 * x162) + (x127 * ((x355 * x165) + x356 + (-1 * x355 * x164))))) +
							  x358 + (x355 * x166))) +
					 (x355 * x167) + (x355 * x161) + (x358 * x127))))) +
				 (x358 * x158) + x359 + (x355 * x160)));
	const FLT x363 = x268 * (*lh_p).Rot[2];
	const FLT x364 = x270 * (*lh_p).Rot[0];
	const FLT x365 = x364 + x363;
	const FLT x366 = 2 * x99;
	const FLT x367 = -1 * x366;
	const FLT x368 = 2 * x101;
	const FLT x369 = 1 + (-1 * x368);
	const FLT x370 = x369 + x367;
	const FLT x371 = x273 * (*lh_p).Rot[0];
	const FLT x372 = x268 * (*lh_p).Rot[3];
	const FLT x373 = x372 + (-1 * x371);
	const FLT x374 = (x373 * x109) + (x370 * x104);
	const FLT x375 = (-1 * x147 * (x374 + (x365 * x146))) + (x365 * x126);
	const FLT x376 = x375 * x152;
	const FLT x377 = (x127 * ((-1 * x375 * x154) + x376)) + (x375 * x151);
	const FLT x378 = (x377 * x127) + (x375 * x150);
	const FLT x379 = (-1 * x374 * x112) + (x98 * x365);
	const FLT x380 = ((-1 * x373 * x115) + (x370 * x114)) * x116;
	const FLT x381 = x380 + (-1 * x93 * x379);
	const FLT x382 =
		x380 +
		(-1 * x171 *
		 ((x375 * x160) +
		  (-1 * x169 *
		   ((-1 * x381 * x190) +
			(-1 * x142 *
			 ((x375 * x167) +
			  (x127 * (x378 + (x127 * (x377 + (x375 * x162) + (x127 * ((x375 * x165) + x376 + (-1 * x375 * x164))))) +
					   (x375 * x166))) +
			  (x375 * x161) + (x378 * x127))))) +
		  (x378 * x158) + x379 + (x381 * x186)));
	const FLT x383 = 2 * x174;
	const FLT x384 = -1 * x383;
	const FLT x385 = x369 + x384;
	const FLT x386 = x363 + (-1 * x364);
	const FLT x387 = x273 * (*lh_p).Rot[3];
	const FLT x388 = x268 * (*lh_p).Rot[0];
	const FLT x389 = x388 + x387;
	const FLT x390 = (x389 * x109) + (x386 * x104);
	const FLT x391 = (-1 * x147 * (x390 + (x385 * x146))) + (x385 * x126);
	const FLT x392 = x391 * x152;
	const FLT x393 = (x127 * ((-1 * x391 * x154) + x392)) + (x391 * x151);
	const FLT x394 = (x393 * x127) + (x391 * x150);
	const FLT x395 = (-1 * x390 * x112) + (x98 * x385);
	const FLT x396 = ((-1 * x389 * x115) + (x386 * x114)) * x116;
	const FLT x397 = x396 + (-1 * x93 * x395);
	const FLT x398 =
		x396 +
		(-1 * x171 *
		 (x395 +
		  (-1 * x169 *
		   ((-1 * x397 * x190) +
			(-1 * x142 *
			 ((x394 * x127) + (x391 * x167) + (x391 * x161) +
			  (x127 * (x394 + (x127 * (x393 + (x391 * x162) + (x127 * ((x391 * x165) + (-1 * x391 * x164) + x392)))) +
					   (x391 * x166))))))) +
		  (x391 * x160) + (x394 * x158) + (x397 * x186)));
	const FLT x399 = x387 + (-1 * x388);
	const FLT x400 = x371 + x372;
	const FLT x401 = 1 + x384 + x367;
	const FLT x402 = (x401 * x109) + (x400 * x104);
	const FLT x403 = (-1 * x147 * (x402 + (x399 * x146))) + (x399 * x126);
	const FLT x404 = (-1 * x402 * x112) + (x98 * x399);
	const FLT x405 = ((-1 * x401 * x115) + (x400 * x114)) * x116;
	const FLT x406 = x405 + (-1 * x93 * x404);
	const FLT x407 = x403 * x152;
	const FLT x408 = (x127 * ((-1 * x403 * x154) + x407)) + (x403 * x151);
	const FLT x409 = (x408 * x127) + (x403 * x150);
	const FLT x410 =
		x405 +
		(-1 * x171 *
		 (x404 +
		  (-1 * x169 *
		   ((-1 * x406 * x190) +
			(-1 * x142 *
			 ((x403 * x167) + (x409 * x127) + (x403 * x161) +
			  (x127 * (x409 + (x127 * (x408 + (x403 * x162) + (x127 * ((-1 * x403 * x164) + (x403 * x165) + x407)))) +
					   (x403 * x166))))))) +
		  (x409 * x158) + (x403 * x160) + (x406 * x186)));
	const FLT x411 = dt * dt * dt;
	const FLT x412 = 0.5 * x49 * x411;
	const FLT x413 = x74 * x412;
	const FLT x414 = x39 * x39 * x39;
	const FLT x415 = dt * dt * dt * dt;
	const FLT x416 = 1. / (x44 * sqrt(x44));
	const FLT x417 = 1.0 * x51;
	const FLT x418 = x47 * x417;
	const FLT x419 = x416 * x418;
	const FLT x420 = x415 * x419;
	const FLT x421 = x50 * x35;
	const FLT x422 = 2 * x421;
	const FLT x423 = (1. / (x44 * x44)) * x48;
	const FLT x424 = 2 * x423;
	const FLT x425 = x415 * x424;
	const FLT x426 = x37 * x415;
	const FLT x427 = x55 * x35;
	const FLT x428 = x39 * x427;
	const FLT x429 = x42 * x425;
	const FLT x430 = (-1 * x39 * x429) + (-1 * x418 * x428) + (x42 * x39 * x420) + (-1 * x414 * x425) + (x39 * x422) +
					 (x414 * x420) + (-1 * x37 * x39 * x425) + (x39 * x419 * x426);
	const FLT x431 = x2 * x47;
	const FLT x432 = 1.0 / 2.0 * (1. / (x52 * sqrt(x52)));
	const FLT x433 = x56 * x432;
	const FLT x434 = x64 * x433;
	const FLT x435 = x51 * x432;
	const FLT x436 = x62 * x435;
	const FLT x437 = x62 * x54;
	const FLT x438 = 0.5 * x437;
	const FLT x439 = x47 * x36;
	const FLT x440 = x59 * x433;
	const FLT x441 = x430 * x440;
	const FLT x442 = x411 * x416;
	const FLT x443 = x54 * x34;
	const FLT x444 = x443 * x442;
	const FLT x445 = x34 * x433;
	const FLT x446 = x47 * x445;
	const FLT x447 = x430 * x446;
	const FLT x448 = x2 * x39;
	const FLT x449 = x64 * x54;
	const FLT x450 = x442 * x449;
	const FLT x451 = x71 * x412;
	const FLT x452 = (-1 * x451 * x448) + (x450 * x448);
	const FLT x453 = x36 * x39;
	const FLT x454 = x61 * x412;
	const FLT x455 = x68 * x442;
	const FLT x456 = (-1 * x453 * x455) + (x453 * x454);
	const FLT x457 = x456 + x452 + x58 + (-1 * x40 * x444) + (-1 * x439 * x441) + (-1 * x39 * x447) +
					 (x434 * x430 * x431) + (x40 * x413) + (-1 * x430 * x436) + (-1 * x428 * x438);
	const FLT x458 = -1 * x65;
	const FLT x459 = x2 * x444;
	const FLT x460 = x39 * x459;
	const FLT x461 = x62 * x433;
	const FLT x462 = x461 * x439;
	const FLT x463 = x59 * x435;
	const FLT x464 = x47 * x39;
	const FLT x465 = x464 * x434;
	const FLT x466 = 0.5 * x68;
	const FLT x467 = x413 * x448;
	const FLT x468 = x40 * x442;
	const FLT x469 = x437 * x442;
	const FLT x470 = x67 * x412;
	const FLT x471 = (-1 * x453 * x470) + (x453 * x469);
	const FLT x472 = x471 + (x468 * x449) + (-1 * x467) + (-1 * x466 * x428) + (x465 * x430) + (-1 * x40 * x451) +
					 (x2 * x447) + x458 + x460 + (x462 * x430) + (-1 * x463 * x430);
	const FLT x473 = x47 * x440;
	const FLT x474 = x2 * x430;
	const FLT x475 = x451 * x453;
	const FLT x476 = x453 * x450;
	const FLT x477 = x47 * x461;
	const FLT x478 = x39 * x477;
	const FLT x479 = -1 * x63;
	const FLT x480 = x434 * x439;
	const FLT x481 = 0.5 * x443;
	const FLT x482 = x34 * x435;
	const FLT x483 = (-1 * x455 * x448) + (x454 * x448);
	const FLT x484 = x483 + (-1 * x480 * x430) + (-1 * x482 * x430) + x479 + (-1 * x481 * x428) + (-1 * x473 * x474) +
					 (-1 * x40 * x470) + x475 + (-1 * x476) + (x40 * x469) + (x478 * x430);
	const FLT x485 = (x484 * sensor_pt[2]) + (-1 * x457 * sensor_pt[1]) + (x472 * sensor_pt[0]);
	const FLT x486 = 0.5 * x449;
	const FLT x487 = x64 * x435;
	const FLT x488 = x470 * x448;
	const FLT x489 = x469 * x448;
	const FLT x490 = x453 * x444;
	const FLT x491 = x439 * x445;
	const FLT x492 = x453 * x413;
	const FLT x493 = (-1 * x492) + (x40 * x454) + x69 + (-1 * x474 * x477) + (-1 * x487 * x430) + (-1 * x486 * x428) +
					 (-1 * x68 * x468) + (-1 * x489) + (-1 * x464 * x441) + x488 + x490 + (x491 * x430);
	const FLT x494 = (x457 * sensor_pt[0]) + (x472 * sensor_pt[1]) + (-1 * x493 * sensor_pt[2]);
	const FLT x495 = (-1 * x484 * x260) + (x493 * x259) + (-1 * x485 * x255) + (x494 * x258);
	const FLT x496 = (-1 * x484 * sensor_pt[0]) + (x493 * sensor_pt[1]) + (x472 * sensor_pt[2]);
	const FLT x497 = (x496 * x255) + (x484 * x262) + (-1 * x494 * x263) + (-1 * x457 * x259);
	const FLT x498 = (x457 * x260) + (-1 * x496 * x258) + (x485 * x263) + (-1 * x493 * x262);
	const FLT x499 = (x495 * (*lh_p).Rot[0]) + (x498 * (*lh_p).Rot[1]) + (-1 * x497 * (*lh_p).Rot[2]);
	const FLT x500 = (x495 * (*lh_p).Rot[2]) + (-1 * x498 * (*lh_p).Rot[3]) + (x497 * (*lh_p).Rot[0]);
	const FLT x501 = x498 + (-1 * x499 * x268) + (x500 * x270);
	const FLT x502 = (x498 * (*lh_p).Rot[0]) + (-1 * x495 * (*lh_p).Rot[1]) + (x497 * (*lh_p).Rot[3]);
	const FLT x503 = x497 + (x499 * x273) + (-1 * x502 * x270);
	const FLT x504 = x495 + (-1 * x500 * x273) + (x502 * x268);
	const FLT x505 = (x504 * x109) + (x503 * x104);
	const FLT x506 = (-1 * x147 * (x505 + (x501 * x146))) + (x501 * x126);
	const FLT x507 = x506 * x152;
	const FLT x508 = (x127 * ((-1 * x506 * x154) + x507)) + (x506 * x151);
	const FLT x509 = (x508 * x127) + (x506 * x150);
	const FLT x510 = (-1 * x505 * x112) + (x98 * x501);
	const FLT x511 = ((-1 * x504 * x115) + (x503 * x114)) * x116;
	const FLT x512 = x511 + (-1 * x93 * x510);
	const FLT x513 =
		x511 + (-1 * x171 *
				((-1 * x169 *
				  ((-1 * x512 * x190) +
				   (-1 * x142 *
					((x506 * x167) + (x506 * x161) + (x509 * x127) +
					 (x127 * ((x127 * (x508 + (x506 * x162) + (x127 * (x507 + (x506 * x165) + (-1 * x506 * x164))))) +
							  x509 + (x506 * x166))))))) +
				 (x506 * x160) + x510 + (x509 * x158) + (x512 * x186)));
	const FLT x514 = x427 * x438;
	const FLT x515 = x40 * x415;
	const FLT x516 = x2 * x418;
	const FLT x517 = x416 * x516;
	const FLT x518 = 2 * x2;
	const FLT x519 = x423 * x518;
	const FLT x520 = (x2 * x2 * x2) * x415;
	const FLT x521 = (x421 * x518) + (-1 * x515 * x519) + (-1 * x424 * x520) + (-1 * x427 * x516) + (x419 * x520) +
					 (x426 * x517) + (x515 * x517) + (-1 * x426 * x519);
	const FLT x522 = x2 * x521;
	const FLT x523 = x440 * x521;
	const FLT x524 = x42 * x442;
	const FLT x525 = x2 * x36;
	const FLT x526 = (x454 * x525) + (-1 * x455 * x525);
	const FLT x527 = (-1 * x39 * x446 * x521) + x458 + x526 + (-1 * x42 * x451) + (x449 * x524) + (-1 * x439 * x523) +
					 (-1 * x436 * x521) + (-1 * x2 * x514) + (-1 * x460) + (x47 * x434 * x522) + x467;
	const FLT x528 = -1 * x58;
	const FLT x529 = x466 * x427;
	const FLT x530 = x469 * x525;
	const FLT x531 = x470 * x525;
	const FLT x532 = (-1 * x531) + (x446 * x522) + (x465 * x521) + (x462 * x521) + x530 + x528 + x452 +
					 (-1 * x42 * x413) + (-1 * x2 * x529) + (-1 * x463 * x521) + (x443 * x524);
	const FLT x533 = x450 * x525;
	const FLT x534 = x451 * x525;
	const FLT x535 = x481 * x427;
	const FLT x536 = x489 + x534 + (x42 * x454) + (-1 * x533) + x69 + (-1 * x68 * x524) + (-1 * x473 * x522) +
					 (-1 * x480 * x521) + (-1 * x482 * x521) + (-1 * x488) + (x478 * x521) + (-1 * x2 * x535);
	const FLT x537 = (-1 * x527 * sensor_pt[1]) + (x536 * sensor_pt[2]) + (x532 * sensor_pt[0]);
	const FLT x538 = 2 * x536;
	const FLT x539 = x486 * x427;
	const FLT x540 = (-1 * x413 * x525) + (x36 * x459);
	const FLT x541 = x540 + x483 + (-1 * x464 * x523) + x63 + (x491 * x521) + (-1 * x2 * x539) + (-1 * x477 * x522) +
					 (x42 * x470) + (-1 * x437 * x524) + (-1 * x487 * x521);
	const FLT x542 = (x527 * sensor_pt[0]) + (-1 * x541 * sensor_pt[2]) + (x532 * sensor_pt[1]);
	const FLT x543 = (x541 * x259) + (-1 * x537 * x255) + (x542 * x258) + (-1 * x80 * x538);
	const FLT x544 = (x541 * sensor_pt[1]) + (x532 * sensor_pt[2]) + (-1 * x536 * sensor_pt[0]);
	const FLT x545 = (x544 * x255) + (-1 * x527 * x259) + (-1 * x542 * x263) + (x76 * x538);
	const FLT x546 = (-1 * x544 * x258) + (x537 * x263) + (-1 * x541 * x262) + (x527 * x260);
	const FLT x547 = (x543 * (*lh_p).Rot[0]) + (x546 * (*lh_p).Rot[1]) + (-1 * x545 * (*lh_p).Rot[2]);
	const FLT x548 = (x543 * (*lh_p).Rot[2]) + (-1 * x546 * (*lh_p).Rot[3]) + (x545 * (*lh_p).Rot[0]);
	const FLT x549 = x546 + (-1 * x547 * x268) + (x548 * x270);
	const FLT x550 = (x546 * (*lh_p).Rot[0]) + (-1 * x543 * (*lh_p).Rot[1]) + (x545 * (*lh_p).Rot[3]);
	const FLT x551 = x545 + (-1 * x550 * x270) + (x547 * x273);
	const FLT x552 = (x550 * x268) + x543 + (-1 * x548 * x273);
	const FLT x553 = (x552 * x109) + (x551 * x104);
	const FLT x554 = (-1 * x147 * (x553 + (x549 * x146))) + (x549 * x126);
	const FLT x555 = x554 * x152;
	const FLT x556 = (x127 * ((-1 * x554 * x154) + x555)) + (x554 * x151);
	const FLT x557 = (x556 * x127) + (x554 * x150);
	const FLT x558 = (-1 * x553 * x112) + (x98 * x549);
	const FLT x559 = ((-1 * x552 * x115) + (x551 * x114)) * x116;
	const FLT x560 = x559 + (-1 * x93 * x558);
	const FLT x561 =
		x559 +
		(-1 * x171 *
		 ((x560 * x186) + x558 + (x554 * x160) + (x557 * x158) +
		  (-1 * x169 *
		   ((-1 * x560 * x190) +
			(-1 * x142 *
			 ((x554 * x167) + (x554 * x161) + (x557 * x127) +
			  (x127 * (x557 + (x127 * (x556 + (x554 * x162) + (x127 * ((x554 * x165) + x555 + (-1 * x554 * x164))))) +
					   (x554 * x166)))))))));
	const FLT x562 = x37 * x412;
	const FLT x563 = x417 * x439;
	const FLT x564 = x416 * x563;
	const FLT x565 = x36 * x36 * x36;
	const FLT x566 = (-1 * x425 * x565) + (x420 * x565) + (x515 * x564) + (-1 * x36 * x429) + (-1 * x40 * x36 * x425) +
					 (x42 * x415 * x564) + (-1 * x427 * x563) + (x36 * x422);
	const FLT x567 = x434 * x566;
	const FLT x568 = x440 * x566;
	const FLT x569 = x37 * x442;
	const FLT x570 = x446 * x566;
	const FLT x571 = (-1 * x36 * x514) + (-1 * x439 * x568) + x492 + (x431 * x567) + (-1 * x436 * x566) + (x61 * x562) +
					 (-1 * x534) + x69 + (-1 * x39 * x570) + x533 + (-1 * x68 * x569) + (-1 * x490);
	const FLT x572 = (-1 * x67 * x562) + x540 + (x2 * x570) + (-1 * x475) + (x465 * x566) + (-1 * x36 * x529) + x476 +
					 x479 + (x37 * x469) + (x462 * x566) + (-1 * x463 * x566);
	const FLT x573 = x477 * x566;
	const FLT x574 = x526 + (-1 * x482 * x566) + (x39 * x573) + x65 + (x71 * x562) + x471 + (-1 * x431 * x568) +
					 (-1 * x449 * x569) + (-1 * x439 * x567) + (-1 * x36 * x535);
	const FLT x575 = (x574 * sensor_pt[2]) + (-1 * x571 * sensor_pt[1]) + (x572 * sensor_pt[0]);
	const FLT x576 = (x491 * x566) + x456 + (-1 * x464 * x568) + (-1 * x36 * x539) + (x37 * x444) + (-1 * x74 * x562) +
					 (-1 * x487 * x566) + x528 + x531 + (-1 * x530) + (-1 * x2 * x573);
	const FLT x577 = (x571 * sensor_pt[0]) + (-1 * x576 * sensor_pt[2]) + (x572 * sensor_pt[1]);
	const FLT x578 = (x577 * x258) + (x576 * x259) + (-1 * x575 * x255) + (-1 * x574 * x260);
	const FLT x579 = (x576 * sensor_pt[1]) + (-1 * x574 * sensor_pt[0]) + (x572 * sensor_pt[2]);
	const FLT x580 = (-1 * x571 * x259) + (-1 * x577 * x263) + (x579 * x255) + (x574 * x262);
	const FLT x581 = (x571 * x260) + (x575 * x263) + (-1 * x576 * x262) + (-1 * x579 * x258);
	const FLT x582 = (x581 * (*lh_p).Rot[1]) + (x578 * (*lh_p).Rot[0]) + (-1 * x580 * (*lh_p).Rot[2]);
	const FLT x583 = (x578 * (*lh_p).Rot[2]) + (-1 * x581 * (*lh_p).Rot[3]) + (x580 * (*lh_p).Rot[0]);
	const FLT x584 = x581 + (-1 * x582 * x268) + (x583 * x270);
	const FLT x585 = (x581 * (*lh_p).Rot[0]) + (-1 * x578 * (*lh_p).Rot[1]) + (x580 * (*lh_p).Rot[3]);
	const FLT x586 = x580 + (-1 * x585 * x270) + (x582 * x273);
	const FLT x587 = x578 + (-1 * x583 * x273) + (x585 * x268);
	const FLT x588 = (x587 * x109) + (x586 * x104);
	const FLT x589 = (-1 * x147 * (x588 + (x584 * x146))) + (x584 * x126);
	const FLT x590 = x589 * x149;
	const FLT x591 = x589 * x152;
	const FLT x592 = (x127 * ((-1 * x589 * x154) + x591)) + (x589 * x151);
	const FLT x593 = (x592 * x127) + (x589 * x150);
	const FLT x594 = (-1 * x588 * x112) + (x98 * x584);
	const FLT x595 = ((-1 * x587 * x115) + (x586 * x114)) * x116;
	const FLT x596 = x595 + (-1 * x93 * x594);
	const FLT x597 =
		x595 +
		(-1 * x171 *
		 (x594 +
		  (-1 * x169 *
		   ((-1 * x596 * x190) +
			(-1 * x142 *
			 ((x589 * x167) + (x589 * x161) +
			  (x127 * (x593 + (x127 * ((x589 * x162) + x592 + (x127 * (x591 + (x589 * x165) + (-1 * x590 * x163))))) +
					   (x589 * x166))) +
			  (x593 * x127))))) +
		  (x596 * x186) + (x590 * x159) + (x593 * x158)));
	const FLT x598 = dt * x363;
	const FLT x599 = dt * x364;
	const FLT x600 = x599 + x598;
	const FLT x601 = -1 * dt * x366;
	const FLT x602 = -1 * dt * x368;
	const FLT x603 = x602 + dt + x601;
	const FLT x604 = dt * x371;
	const FLT x605 = dt * x372;
	const FLT x606 = x605 + (-1 * x604);
	const FLT x607 = (x606 * x109) + (x603 * x104);
	const FLT x608 = (-1 * x147 * (x607 + (x600 * x146))) + (x600 * x126);
	const FLT x609 = x608 * x152;
	const FLT x610 = (x127 * ((-1 * x608 * x154) + x609)) + (x608 * x151);
	const FLT x611 = (x610 * x127) + (x608 * x150);
	const FLT x612 = (-1 * x607 * x112) + (x98 * x600);
	const FLT x613 = ((-1 * x606 * x115) + (x603 * x114)) * x116;
	const FLT x614 = x613 + (-1 * x93 * x612);
	const FLT x615 =
		x613 + (-1 * x171 *
				(x612 +
				 (-1 * x169 *
				  ((-1 * x614 * x190) +
				   (-1 * x142 *
					((x611 * x127) +
					 (x127 * ((x127 * (x610 + (x608 * x162) + (x127 * ((x608 * x165) + x609 + (-1 * x608 * x164))))) +
							  x611 + (x608 * x166))) +
					 (x608 * x167) + (x608 * x161))))) +
				 (x608 * x160) + (x614 * x186) + (x611 * x158)));
	const FLT x616 = (-1 * dt * x383) + dt;
	const FLT x617 = x616 + x602;
	const FLT x618 = x598 + (-1 * x599);
	const FLT x619 = dt * x387;
	const FLT x620 = dt * x388;
	const FLT x621 = x620 + x619;
	const FLT x622 = (x621 * x109) + (x618 * x104);
	const FLT x623 = (-1 * x147 * (x622 + (x617 * x146))) + (x617 * x126);
	const FLT x624 = x623 * x152;
	const FLT x625 = (x127 * ((-1 * x623 * x154) + x624)) + (x623 * x151);
	const FLT x626 = (x625 * x127) + (x623 * x150);
	const FLT x627 = (-1 * x622 * x112) + (x98 * x617);
	const FLT x628 = ((-1 * x621 * x115) + (x618 * x114)) * x116;
	const FLT x629 = x628 + (-1 * x93 * x627);
	const FLT x630 =
		x628 +
		(-1 * x171 *
		 (x627 +
		  (-1 * x169 *
		   ((-1 * x629 * x190) +
			(-1 * x142 *
			 ((x623 * x167) + (x626 * x127) + (x623 * x161) +
			  (x127 * (x626 + (x127 * (x625 + (x623 * x162) + (x127 * ((x623 * x165) + x624 + (-1 * x623 * x164))))) +
					   (x623 * x166))))))) +
		  (x623 * x160) + (x626 * x158) + (x629 * x186)));
	const FLT x631 = x619 + (-1 * x620);
	const FLT x632 = x604 + x605;
	const FLT x633 = x616 + x601;
	const FLT x634 = (x633 * x109) + (x632 * x104);
	const FLT x635 = (-1 * x147 * (x634 + (x631 * x146))) + (x631 * x126);
	const FLT x636 = x635 * x152;
	const FLT x637 = (x127 * ((-1 * x635 * x154) + x636)) + (x635 * x151);
	const FLT x638 = (x637 * x127) + (x635 * x150);
	const FLT x639 = (-1 * x634 * x112) + (x98 * x631);
	const FLT x640 = ((-1 * x633 * x115) + (x632 * x114)) * x116;
	const FLT x641 = x640 + (-1 * x93 * x639);
	const FLT x642 =
		x640 +
		(-1 * x171 *
		 (x639 +
		  (-1 * x169 *
		   ((-1 * x641 * x190) +
			(-1 * x142 *
			 ((x127 * (x638 + (x127 * (x637 + (x635 * x162) + (x127 * (x636 + (x635 * x165) + (-1 * x635 * x164))))) +
					   (x635 * x166))) +
			  (x635 * x161) + (x635 * x167) + (x638 * x127))))) +
		  (x635 * x160) + (x638 * x158) + (x641 * x186)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT), x172 + (x172 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT), x191 + (x173 * x191));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT), x203 + (x203 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x284 + (x284 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x325 + (x325 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x362 + (x362 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT), x382 + (x382 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT), x398 + (x398 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT), x410 + (x410 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x513 + (x513 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x561 + (x561 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x597 + (x597 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT), x615 + (x615 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT), x630 + (x630 * x173));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT), x642 + (x642 * x173));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_error_model_with_hx(
	CnMat *Hx, CnMat *hx, const FLT dt, const SurviveKalmanModel *_x0, const SurviveKalmanErrorModel *error_model,
	const FLT *sensor_pt, const SurvivePose *lh_p, const BaseStationCal *bsc0) {
	if (hx != 0) {
		hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
	}
	if (Hx != 0) {
		SurviveKalmanErrorModel_LightMeas_x_gen2_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
	}
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_sensor_pt(CnMat *Hx, const FLT dt,
																		  const SurviveKalmanModel *_x0,
																		  const SurviveKalmanErrorModel *error_model,
																		  const FLT *sensor_pt, const SurvivePose *lh_p,
																		  const BaseStationCal *bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x2 * x11) + (x8 * x7);
	const FLT x14 = x4 * x9;
	const FLT x15 = x6 * x10;
	const FLT x16 = (x2 * x15) + (x8 * x14);
	const FLT x17 = (x2 * x14) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x13 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x37 * x25;
	const FLT x43 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x43 * x37;
	const FLT x45 = (-1 * x44 * x27) + (-1 * x41 * x42) + (-1 * x0 * x38) + (x40 * x39);
	const FLT x46 = x42 * x43;
	const FLT x47 = x37 * x39;
	const FLT x48 = x0 * x47;
	const FLT x49 = x40 * x23;
	const FLT x50 = x41 * x37;
	const FLT x51 = x50 * x27;
	const FLT x52 = (-1 * x51) + x49 + x46 + x48;
	const FLT x53 = x0 * x44;
	const FLT x54 = x40 * x41;
	const FLT x55 = x42 * x39;
	const FLT x56 = x38 * x27;
	const FLT x57 = x56 + x55 + (-1 * x53) + x54;
	const FLT x58 = (-1 * x57 * sensor_pt[1]) + (x45 * sensor_pt[0]) + (x52 * sensor_pt[2]);
	const FLT x59 = x0 * x50;
	const FLT x60 = x40 * x43;
	const FLT x61 = x42 * x23;
	const FLT x62 = x47 * x27;
	const FLT x63 = x62 + x59 + (-1 * x61) + x60;
	const FLT x64 = (-1 * x63 * sensor_pt[2]) + (x45 * sensor_pt[1]) + (x57 * sensor_pt[0]);
	const FLT x65 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x66 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x63 * x64) + (-1 * x52 * x58))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) +
					(x65 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2];
	const FLT x67 = (-1 * x52 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x63 * sensor_pt[1]);
	const FLT x68 = (*_x0).Pose.Pos[1] + (2 * ((x58 * x57) + (-1 * x63 * x67))) + (*error_model).Pose.Pos[1] +
					(x65 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]));
	const FLT x69 = (*error_model).Pose.Pos[0] + (*_x0).Pose.Pos[0] + (x65 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					sensor_pt[0] + (2 * ((x67 * x52) + (-1 * x64 * x57))) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x70 = (-1 * x69 * (*lh_p).Rot[2]) + (x66 * (*lh_p).Rot[0]) + (x68 * (*lh_p).Rot[1]);
	const FLT x71 = (-1 * x68 * (*lh_p).Rot[3]) + (x69 * (*lh_p).Rot[0]) + (x66 * (*lh_p).Rot[2]);
	const FLT x72 = x68 + (*lh_p).Pos[1] + (2 * ((x71 * (*lh_p).Rot[3]) + (-1 * x70 * (*lh_p).Rot[1])));
	const FLT x73 = x72 * x72;
	const FLT x74 = (-1 * x66 * (*lh_p).Rot[1]) + (x69 * (*lh_p).Rot[3]) + (x68 * (*lh_p).Rot[0]);
	const FLT x75 = x66 + (2 * ((x74 * (*lh_p).Rot[1]) + (-1 * x71 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x76 = x69 + (*lh_p).Pos[0] + (2 * ((x70 * (*lh_p).Rot[2]) + (-1 * x74 * (*lh_p).Rot[3])));
	const FLT x77 = x76 * x76;
	const FLT x78 = x77 + (x75 * x75);
	const FLT x79 = x78 + x73;
	const FLT x80 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x81 = cos(x80);
	const FLT x82 = 1. / x81;
	const FLT x83 = x82 * (1. / sqrt(x79));
	const FLT x84 = asin(x83 * x72);
	const FLT x85 = 8.0108022e-06 * x84;
	const FLT x86 = -8.0108022e-06 + (-1 * x85);
	const FLT x87 = 0.0028679863 + (x84 * x86);
	const FLT x88 = 5.3685255e-06 + (x84 * x87);
	const FLT x89 = 1. / sqrt(1 + (-1 * (1. / (x81 * x81)) * x73 * (1. / x79)));
	const FLT x90 = (-1 * x49) + (-1 * x46) + x51 + (-1 * x48);
	const FLT x91 = 2 * x52;
	const FLT x92 = 1 + (x91 * x90) + (-2 * (x57 * x57));
	const FLT x93 = x91 * x45;
	const FLT x94 = 2 * x63;
	const FLT x95 = (x57 * x94) + (-1 * x93);
	const FLT x96 = 2 * x57;
	const FLT x97 = x96 * x45;
	const FLT x98 = x97 + (-1 * x90 * x94);
	const FLT x99 = (x98 * (*lh_p).Rot[1]) + (-1 * x92 * (*lh_p).Rot[2]) + (x95 * (*lh_p).Rot[0]);
	const FLT x100 = 2 * (*lh_p).Rot[1];
	const FLT x101 = (x95 * (*lh_p).Rot[2]) + (-1 * x98 * (*lh_p).Rot[3]) + (x92 * (*lh_p).Rot[0]);
	const FLT x102 = 2 * (*lh_p).Rot[3];
	const FLT x103 = x98 + (-1 * x99 * x100) + (x101 * x102);
	const FLT x104 = 2 * x72;
	const FLT x105 = 2 * (*lh_p).Rot[2];
	const FLT x106 = (x98 * (*lh_p).Rot[0]) + (-1 * x95 * (*lh_p).Rot[1]) + (x92 * (*lh_p).Rot[3]);
	const FLT x107 = x92 + (x99 * x105) + (-1 * x102 * x106);
	const FLT x108 = 2 * x76;
	const FLT x109 = x95 + (x100 * x106) + (-1 * x101 * x105);
	const FLT x110 = 2 * x75;
	const FLT x111 = (x109 * x110) + (x108 * x107);
	const FLT x112 = 1.0 / 2.0 * x72;
	const FLT x113 = x82 * (1. / (x79 * sqrt(x79))) * x112;
	const FLT x114 = x89 * ((-1 * x113 * (x111 + (x103 * x104))) + (x83 * x103));
	const FLT x115 = x86 * x114;
	const FLT x116 = (x84 * ((-1 * x85 * x114) + x115)) + (x87 * x114);
	const FLT x117 = (x84 * x116) + (x88 * x114);
	const FLT x118 = 0.0076069798 + (x88 * x84);
	const FLT x119 = x84 * x118;
	const FLT x120 = -8.0108022e-06 + (-1.60216044e-05 * x84);
	const FLT x121 = x87 + (x84 * x120);
	const FLT x122 = x88 + (x84 * x121);
	const FLT x123 = x118 + (x84 * x122);
	const FLT x124 = (x84 * x123) + x119;
	const FLT x125 = sin(x80);
	const FLT x126 = atan2(-1 * x75, x76);
	const FLT x127 = tan(x80);
	const FLT x128 = (1. / sqrt(x78)) * x127;
	const FLT x129 = x72 * x128;
	const FLT x130 = (*bsc0).ogeephase + (-1 * asin(x129)) + x126;
	const FLT x131 = (sin(x130) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x132 = x125 * x131;
	const FLT x133 = x81 + (-1 * x124 * x132);
	const FLT x134 = 1. / x133;
	const FLT x135 = x84 * x84;
	const FLT x136 = x131 * x135;
	const FLT x137 = x134 * x136;
	const FLT x138 = 2.40324066e-05 * x84;
	const FLT x139 = (1. / (x78 * sqrt(x78))) * x112 * x127;
	const FLT x140 = (-1 * x111 * x139) + (x103 * x128);
	const FLT x141 = 1. / x78;
	const FLT x142 = 1. / sqrt(1 + (-1 * x73 * (x127 * x127) * x141));
	const FLT x143 = x75 * (1. / x77);
	const FLT x144 = 1. / x76;
	const FLT x145 = x77 * x141;
	const FLT x146 = ((-1 * x109 * x144) + (x107 * x143)) * x145;
	const FLT x147 = x146 + (-1 * x140 * x142);
	const FLT x148 = cos(x130) * (*bsc0).ogeemag;
	const FLT x149 = x124 * x125;
	const FLT x150 = x148 * x149;
	const FLT x151 = x118 * (1. / (x133 * x133)) * x136;
	const FLT x152 = x118 * x134 * x135;
	const FLT x153 = x148 * x152;
	const FLT x154 = 2 * x119 * x134 * x131;
	const FLT x155 = x129 + (x118 * x137);
	const FLT x156 = 1. / sqrt(1 + (-1 * (x155 * x155)));
	const FLT x157 =
		x146 +
		(-1 * x156 *
		 ((x114 * x154) + (x147 * x153) + (x117 * x137) + x140 +
		  (-1 * x151 *
		   ((-1 * x147 * x150) +
			(-1 * x132 *
			 ((x84 * x117) + (x118 * x114) + (x114 * x123) +
			  (x84 * (x117 + (x84 * (x116 + (x114 * x121) + (x84 * ((x114 * x120) + x115 + (-1 * x114 * x138))))) +
					  (x114 * x122)))))))));
	const FLT x158 = cos((-1 * asin(x155)) + x126 + (*bsc0).gibpha) * (*bsc0).gibmag;
	const FLT x159 = (x63 * x91) + (-1 * x97);
	const FLT x160 = (-1 * x55) + (-1 * x56) + (-1 * x54) + x53;
	const FLT x161 = x94 * x45;
	const FLT x162 = x161 + (-1 * x91 * x160);
	const FLT x163 = 1 + (x96 * x160) + (-2 * (x63 * x63));
	const FLT x164 = 2 * ((-1 * x159 * (*lh_p).Rot[2]) + (x163 * (*lh_p).Rot[1]) + (x162 * (*lh_p).Rot[0]));
	const FLT x165 = (x162 * (*lh_p).Rot[2]) + (x159 * (*lh_p).Rot[0]) + (-1 * x163 * (*lh_p).Rot[3]);
	const FLT x166 = x163 + (-1 * x164 * (*lh_p).Rot[1]) + (x102 * x165);
	const FLT x167 = (x163 * (*lh_p).Rot[0]) + (-1 * x162 * (*lh_p).Rot[1]) + (x159 * (*lh_p).Rot[3]);
	const FLT x168 = (x164 * (*lh_p).Rot[2]) + x159 + (-1 * x102 * x167);
	const FLT x169 = (x100 * x167) + x162 + (-1 * x105 * x165);
	const FLT x170 = (x110 * x169) + (x108 * x168);
	const FLT x171 = (-1 * x170 * x139) + (x128 * x166);
	const FLT x172 = ((-1 * x169 * x144) + (x168 * x143)) * x145;
	const FLT x173 = x172 + (-1 * x171 * x142);
	const FLT x174 = x89 * ((-1 * x113 * (x170 + (x104 * x166))) + (x83 * x166));
	const FLT x175 = x86 * x174;
	const FLT x176 = (x84 * ((-1 * x85 * x174) + x175)) + (x87 * x174);
	const FLT x177 = (x84 * x176) + (x88 * x174);
	const FLT x178 =
		x172 + (-1 * x156 *
				((x174 * x154) + x171 +
				 (-1 * x151 *
				  ((-1 * x173 * x150) +
				   (-1 * x132 *
					((x123 * x174) +
					 (x84 * ((x84 * (x176 + (x121 * x174) + (x84 * (x175 + (x120 * x174) + (-1 * x174 * x138))))) +
							 x177 + (x122 * x174))) +
					 (x118 * x174) + (x84 * x177))))) +
				 (x173 * x153) + (x177 * x137)));
	const FLT x179 = (-1 * x62) + x61 + (-1 * x60) + (-1 * x59);
	const FLT x180 = x93 + (-1 * x96 * x179);
	const FLT x181 = 1 + (x94 * x179) + (-2 * (x52 * x52));
	const FLT x182 = (x57 * x91) + (-1 * x161);
	const FLT x183 = (x182 * (*lh_p).Rot[1]) + (-1 * x180 * (*lh_p).Rot[2]) + (x181 * (*lh_p).Rot[0]);
	const FLT x184 = (x181 * (*lh_p).Rot[2]) + (-1 * x182 * (*lh_p).Rot[3]) + (x180 * (*lh_p).Rot[0]);
	const FLT x185 = x182 + (-1 * x100 * x183) + (x102 * x184);
	const FLT x186 = (x182 * (*lh_p).Rot[0]) + (-1 * x181 * (*lh_p).Rot[1]) + (x180 * (*lh_p).Rot[3]);
	const FLT x187 = x180 + (x105 * x183) + (-1 * x102 * x186);
	const FLT x188 = x181 + (x100 * x186) + (-1 * x105 * x184);
	const FLT x189 = (x110 * x188) + (x108 * x187);
	const FLT x190 = x89 * ((-1 * x113 * (x189 + (x104 * x185))) + (x83 * x185));
	const FLT x191 = x86 * x190;
	const FLT x192 = (x84 * ((-1 * x85 * x190) + x191)) + (x87 * x190);
	const FLT x193 = (x84 * x192) + (x88 * x190);
	const FLT x194 = (-1 * x189 * x139) + (x128 * x185);
	const FLT x195 = ((-1 * x188 * x144) + (x187 * x143)) * x145;
	const FLT x196 = x148 * (x195 + (-1 * x194 * x142));
	const FLT x197 =
		x195 + (-1 * x156 *
				(x194 +
				 (-1 * x151 *
				  ((-1 * x196 * x149) +
				   (-1 * x132 *
					((x118 * x190) + (x123 * x190) + (x84 * x193) +
					 (x84 * ((x84 * (x192 + (x121 * x190) + (x84 * (x191 + (x120 * x190) + (-1 * x190 * x138))))) +
							 x193 + (x122 * x190))))))) +
				 (x193 * x137) + (x190 * x154) + (x196 * x152)));
	cnMatrixOptionalSet(Hx, 0, 0, x157 + (x157 * x158));
	cnMatrixOptionalSet(Hx, 0, 1, x178 + (x178 * x158));
	cnMatrixOptionalSet(Hx, 0, 2, x197 + (x197 * x158));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = sin(x0);
	const FLT x8 = cos(x2);
	const FLT x9 = cos(x4);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (-1 * x1 * x6);
	const FLT x12 = (x1 * x10) + (x6 * x7);
	const FLT x13 = x3 * x9;
	const FLT x14 = x5 * x8;
	const FLT x15 = (x1 * x14) + (x7 * x13);
	const FLT x16 = (x1 * x13) + (-1 * x7 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x11 * x11) + (x12 * x12));
	const FLT x18 = x12 * x17;
	const FLT x19 = x15 * x17;
	const FLT x20 = x17 * x16;
	const FLT x21 = x11 * x17;
	const FLT x22 = (x18 * (*_x0).Pose.Rot[2]) + (-1 * x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[3]) +
					(x19 * (*_x0).Pose.Rot[0]);
	const FLT x23 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = x24 * (x23 * x23);
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (x18 * (*_x0).Pose.Rot[0]) +
					(-1 * x19 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x21 * (*_x0).Pose.Rot[0]) + (x18 * (*_x0).Pose.Rot[3]) + (x19 * (*_x0).Pose.Rot[1]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x37 * x25;
	const FLT x43 = (x18 * (*_x0).Pose.Rot[1]) + (x21 * (*_x0).Pose.Rot[2]) + (-1 * x19 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x37 * x27;
	const FLT x45 = (-1 * x43 * x44) + (-1 * x41 * x42) + (-1 * x38 * x22) + (x40 * x39);
	const FLT x46 = (-1 * x41 * x44) + (x40 * x22) + (x42 * x43) + (x38 * x39);
	const FLT x47 = (x44 * x22) + (x42 * x39) + (-1 * x43 * x38) + (x40 * x41);
	const FLT x48 = (-1 * x47 * sensor_pt[1]) + (x45 * sensor_pt[0]) + (x46 * sensor_pt[2]);
	const FLT x49 = (-1 * x42 * x22) + (x41 * x38) + (x44 * x39) + (x40 * x43);
	const FLT x50 = (-1 * x49 * sensor_pt[2]) + (x45 * sensor_pt[1]) + (x47 * sensor_pt[0]);
	const FLT x51 = 2 * ((x50 * x49) + (-1 * x46 * x48));
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = x52 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x54 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + x54 + x51 + sensor_pt[2] + x53;
	const FLT x56 = x55 * (*lh_p).Rot[0];
	const FLT x57 = (x45 * sensor_pt[2]) + (-1 * x46 * sensor_pt[0]) + (x49 * sensor_pt[1]);
	const FLT x58 = 2 * ((x47 * x48) + (-1 * x57 * x49));
	const FLT x59 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x60 = x52 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x61 = (*_x0).Pose.Pos[1] + x58 + (*error_model).Pose.Pos[1] + x59 + sensor_pt[1] + x60;
	const FLT x62 = x61 * (*lh_p).Rot[1];
	const FLT x63 = 2 * ((x57 * x46) + (-1 * x50 * x47));
	const FLT x64 = x52 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x65 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x66 = (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + x64 + sensor_pt[0] + x63 + x65;
	const FLT x67 = x66 * (*lh_p).Rot[2];
	const FLT x68 = (-1 * x67) + x56 + x62;
	const FLT x69 = x66 * (*lh_p).Rot[0];
	const FLT x70 = x55 * (*lh_p).Rot[2];
	const FLT x71 = x61 * (*lh_p).Rot[3];
	const FLT x72 = (-1 * x71) + x69 + x70;
	const FLT x73 = (*lh_p).Pos[1] + x61 + (2 * ((x72 * (*lh_p).Rot[3]) + (-1 * x68 * (*lh_p).Rot[1])));
	const FLT x74 = x73 * x73;
	const FLT x75 = x66 * (*lh_p).Rot[3];
	const FLT x76 = x61 * (*lh_p).Rot[0];
	const FLT x77 = x55 * (*lh_p).Rot[1];
	const FLT x78 = (-1 * x77) + x75 + x76;
	const FLT x79 = (2 * ((x78 * (*lh_p).Rot[1]) + (-1 * x72 * (*lh_p).Rot[2]))) + x55 + (*lh_p).Pos[2];
	const FLT x80 = x66 + (*lh_p).Pos[0] + (2 * ((x68 * (*lh_p).Rot[2]) + (-1 * x78 * (*lh_p).Rot[3])));
	const FLT x81 = x80 * x80;
	const FLT x82 = x81 + (x79 * x79);
	const FLT x83 = x82 + x74;
	const FLT x84 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x85 = cos(x84);
	const FLT x86 = 1. / x85;
	const FLT x87 = (1. / sqrt(x83)) * x86;
	const FLT x88 = asin(x87 * x73);
	const FLT x89 = 8.0108022e-06 * x88;
	const FLT x90 = -8.0108022e-06 + (-1 * x89);
	const FLT x91 = 0.0028679863 + (x88 * x90);
	const FLT x92 = 5.3685255e-06 + (x88 * x91);
	const FLT x93 = 0.0076069798 + (x88 * x92);
	const FLT x94 = x88 * x93;
	const FLT x95 = -8.0108022e-06 + (-1.60216044e-05 * x88);
	const FLT x96 = x91 + (x88 * x95);
	const FLT x97 = x92 + (x88 * x96);
	const FLT x98 = x93 + (x88 * x97);
	const FLT x99 = (x88 * x98) + x94;
	const FLT x100 = sin(x84);
	const FLT x101 = atan2(-1 * x79, x80);
	const FLT x102 = tan(x84);
	const FLT x103 = (1. / sqrt(x82)) * x102;
	const FLT x104 = x73 * x103;
	const FLT x105 = (-1 * asin(x104)) + (*bsc0).ogeephase + x101;
	const FLT x106 = (sin(x105) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x107 = x100 * x106;
	const FLT x108 = x85 + (-1 * x99 * x107);
	const FLT x109 = 1. / x108;
	const FLT x110 = x88 * x88;
	const FLT x111 = x106 * x110;
	const FLT x112 = x109 * x111;
	const FLT x113 = x104 + (x93 * x112);
	const FLT x114 = 1. / sqrt(1 + (-1 * (x113 * x113)));
	const FLT x115 = 1. / sqrt(1 + (-1 * (1. / x83) * (1. / (x85 * x85)) * x74));
	const FLT x116 = (1. / (x83 * sqrt(x83))) * x86;
	const FLT x117 = x80 * x73;
	const FLT x118 = x116 * x117;
	const FLT x119 = x118 * x115;
	const FLT x120 = -1 * x90 * x119;
	const FLT x121 = 2.40324066e-05 * x88;
	const FLT x122 = x91 * x115;
	const FLT x123 = (x88 * ((x89 * x119) + x120)) + (-1 * x118 * x122);
	const FLT x124 = x97 * x115;
	const FLT x125 = (x88 * x123) + (-1 * x92 * x119);
	const FLT x126 = x93 * x115;
	const FLT x127 = 1. / x82;
	const FLT x128 = 1. / sqrt(1 + (-1 * x74 * (x102 * x102) * x127));
	const FLT x129 = (1. / (x82 * sqrt(x82))) * x102;
	const FLT x130 = x117 * x129;
	const FLT x131 = x79 * x127;
	const FLT x132 = x131 + (x128 * x130);
	const FLT x133 = cos(x105) * (*bsc0).ogeemag;
	const FLT x134 = x99 * x100;
	const FLT x135 = x133 * x134;
	const FLT x136 = x93 * (1. / (x108 * x108)) * x111;
	const FLT x137 = 2 * x80;
	const FLT x138 = x73 * x116;
	const FLT x139 = x94 * x109 * x106;
	const FLT x140 = x115 * x138 * x139;
	const FLT x141 = x93 * x109 * x110;
	const FLT x142 = x133 * x141;
	const FLT x143 =
		x131 +
		(-1 * x114 *
		 ((-1 * x137 * x140) +
		  (-1 * x136 *
		   ((-1 * x132 * x135) +
			(-1 * x107 *
			 ((-1 * x98 * x119) + (-1 * x118 * x126) + (x88 * x125) +
			  (x88 * (x125 + (x88 * (x123 + (-1 * x96 * x119) + (x88 * (x120 + (-1 * x95 * x119) + (x119 * x121))))) +
					  (-1 * x118 * x124))))))) +
		  (x112 * x125) + (x132 * x142) + (-1 * x130)));
	const FLT x144 = cos(x101 + (-1 * asin(x113)) + (*bsc0).gibpha) * (*bsc0).gibmag;
	const FLT x145 = x115 * ((-1 * x74 * x116) + x87);
	const FLT x146 = x90 * x145;
	const FLT x147 = (x88 * ((-1 * x89 * x145) + x146)) + (x91 * x145);
	const FLT x148 = (x88 * x147) + (x92 * x145);
	const FLT x149 = x103 * x128;
	const FLT x150 = 2 * x139;
	const FLT x151 =
		x114 * ((-1 * x142 * x149) + (x112 * x148) + (x145 * x150) + x103 +
				(-1 * x136 *
				 ((x135 * x149) +
				  (-1 * x107 *
				   ((x88 * x148) + (x98 * x145) + (x93 * x145) +
					(x88 * (x148 + (x88 * (x147 + (x96 * x145) + (x88 * ((x95 * x145) + x146 + (-1 * x121 * x145))))) +
							(x97 * x145))))))));
	const FLT x152 = x73 * x129;
	const FLT x153 = x79 * x152;
	const FLT x154 = 2 * x79;
	const FLT x155 = x79 * x138;
	const FLT x156 = x115 * x155;
	const FLT x157 = -1 * x90 * x156;
	const FLT x158 = (x88 * ((x89 * x156) + x157)) + (-1 * x122 * x155);
	const FLT x159 = (x88 * x158) + (-1 * x92 * x156);
	const FLT x160 = -1 * x80 * x127;
	const FLT x161 = x160 + (x128 * x153);
	const FLT x162 =
		x160 +
		(-1 * x114 *
		 ((x161 * x142) + (x112 * x159) +
		  (-1 * x136 *
		   ((-1 * x161 * x135) +
			(-1 * x107 *
			 ((x88 * x159) + (-1 * x126 * x155) + (-1 * x98 * x156) +
			  (x88 * (x159 + (x88 * (x158 + (-1 * x96 * x156) + (x88 * ((-1 * x95 * x156) + x157 + (x121 * x156))))) +
					  (-1 * x124 * x155))))))) +
		  (-1 * x153) + (-1 * x140 * x154)));
	const FLT x163 = 2 * x77;
	const FLT x164 = (2 * x75) + (-1 * x163);
	const FLT x165 = 2 * x73;
	const FLT x166 = 2 * x71;
	const FLT x167 = (2 * x70) + (-1 * x166);
	const FLT x168 = 2 * x67;
	const FLT x169 = (2 * x62) + (-1 * x168);
	const FLT x170 = (x169 * x154) + (x167 * x137);
	const FLT x171 = 1.0 / 2.0 * x138;
	const FLT x172 = x115 * ((-1 * x171 * (x170 + (x165 * x164))) + (x87 * x164));
	const FLT x173 = x90 * x172;
	const FLT x174 = (x88 * ((-1 * x89 * x172) + x173)) + (x91 * x172);
	const FLT x175 = (x88 * x174) + (x92 * x172);
	const FLT x176 = 1.0 / 2.0 * x152;
	const FLT x177 = (-1 * x170 * x176) + (x103 * x164);
	const FLT x178 = (1. / x81) * x79;
	const FLT x179 = 1. / x80;
	const FLT x180 = x81 * x127;
	const FLT x181 = ((-1 * x169 * x179) + (x167 * x178)) * x180;
	const FLT x182 = x181 + (-1 * x128 * x177);
	const FLT x183 =
		x181 + (-1 * x114 *
				(x177 +
				 (-1 * x136 *
				  ((-1 * x182 * x135) +
				   (-1 * x107 *
					((x98 * x172) + (x93 * x172) +
					 (x88 * (x175 + (x88 * (x174 + (x96 * x172) + (x88 * ((x95 * x172) + (-1 * x121 * x172) + x173)))) +
							 (x97 * x172))) +
					 (x88 * x175))))) +
				 (x172 * x150) + (x112 * x175) + (x182 * x142)));
	const FLT x184 = 2 * x56;
	const FLT x185 = x168 + (-1 * x184) + (-4 * x62);
	const FLT x186 = (-1 * sensor_pt[2]) + (-1 * x51) + (-1 * x54) + (-1 * (*error_model).Pose.Pos[2]) +
					 (-1 * (*_x0).Pose.Pos[2]) + (-1 * x53);
	const FLT x187 = 2 * (*lh_p).Rot[3];
	const FLT x188 = 2 * (*lh_p).Rot[2];
	const FLT x189 = (x61 * x188) + (-1 * x187 * x186);
	const FLT x190 = 2 * x76;
	const FLT x191 = 2 * (*lh_p).Rot[1];
	const FLT x192 = x164 + x190 + (x186 * x191);
	const FLT x193 = (x192 * x154) + (x189 * x137);
	const FLT x194 = (-1 * x171 * (x193 + (x165 * x185))) + (x87 * x185);
	const FLT x195 = x115 * x194;
	const FLT x196 = x90 * x195;
	const FLT x197 = (x88 * ((-1 * x89 * x195) + x196)) + (x91 * x195);
	const FLT x198 = (x88 * x197) + (x92 * x195);
	const FLT x199 = (-1 * x176 * x193) + (x103 * x185);
	const FLT x200 = ((-1 * x179 * x192) + (x178 * x189)) * x180;
	const FLT x201 = x200 + (-1 * x128 * x199);
	const FLT x202 =
		x200 + (-1 * x114 *
				((x201 * x142) + x199 +
				 (-1 * x136 *
				  ((-1 * x201 * x135) +
				   (-1 * x107 *
					((x93 * x195) + (x98 * x195) +
					 (x88 * (x198 + (x88 * (x197 + (x96 * x195) + (x88 * ((x95 * x195) + (-1 * x121 * x195) + x196)))) +
							 (x124 * x194))) +
					 (x88 * x198))))) +
				 (x195 * x150) + (x112 * x198)));
	const FLT x203 = (-1 * sensor_pt[0]) + (-1 * (*error_model).Pose.Pos[0]) + (-1 * x63) + (-1 * x65) + (-1 * x64) +
					 (-1 * (*_x0).Pose.Pos[0]);
	const FLT x204 = (x55 * x187) + (-1 * x203 * x191);
	const FLT x205 = x169 + x184 + (x203 * x188);
	const FLT x206 = 2 * x69;
	const FLT x207 = (-4 * x70) + x166 + (-1 * x206);
	const FLT x208 = (x207 * x154) + (x205 * x137);
	const FLT x209 = (-1 * x171 * (x208 + (x204 * x165))) + (x87 * x204);
	const FLT x210 = x209 * x115;
	const FLT x211 = x90 * x210;
	const FLT x212 = (x88 * ((-1 * x89 * x210) + x211)) + (x91 * x210);
	const FLT x213 = (x88 * x212) + (x92 * x210);
	const FLT x214 = (-1 * x208 * x176) + (x204 * x103);
	const FLT x215 = ((-1 * x207 * x179) + (x205 * x178)) * x180;
	const FLT x216 = x215 + (-1 * x214 * x128);
	const FLT x217 =
		x215 + (-1 * x114 *
				(x214 + (x216 * x142) +
				 (-1 * x136 *
				  ((-1 * x216 * x135) +
				   (-1 * x107 *
					((x93 * x210) + (x98 * x210) +
					 (x88 * (x213 + (x88 * ((x96 * x210) + x212 + (x88 * ((x95 * x210) + x211 + (-1 * x210 * x121))))) +
							 (x209 * x124))) +
					 (x88 * x213))))) +
				 (x210 * x150) + (x213 * x112)));
	const FLT x218 = (-1 * x59) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x58) + (-1 * (*error_model).Pose.Pos[1]) +
					 (-1 * x60) + (-1 * sensor_pt[1]);
	const FLT x219 = x167 + x206 + (x218 * x187);
	const FLT x220 = (-1 * x190) + (-4 * x75) + x163;
	const FLT x221 = (x66 * x191) + (-1 * x218 * x188);
	const FLT x222 = (x221 * x154) + (x220 * x137);
	const FLT x223 = (-1 * x171 * (x222 + (x219 * x165))) + (x87 * x219);
	const FLT x224 = x223 * x115;
	const FLT x225 = x90 * x224;
	const FLT x226 = (x88 * ((-1 * x89 * x224) + x225)) + (x91 * x224);
	const FLT x227 = (x88 * x226) + (x92 * x224);
	const FLT x228 = (-1 * x222 * x176) + (x219 * x103);
	const FLT x229 = ((-1 * x221 * x179) + (x220 * x178)) * x180;
	const FLT x230 = x133 * (x229 + (-1 * x228 * x128));
	const FLT x231 =
		x229 + (-1 * x114 *
				((x230 * x141) + x228 + (x227 * x112) +
				 (-1 * x136 *
				  ((-1 * x230 * x134) +
				   (-1 * x107 *
					((x88 * x227) + (x93 * x224) + (x98 * x224) +
					 (x88 * (x227 + (x88 * (x226 + (x96 * x224) + (x88 * ((x95 * x224) + x225 + (-1 * x224 * x121))))) +
							 (x223 * x124))))))) +
				 (x224 * x150)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), x143 + (x144 * x143));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), (-1 * x144 * x151) + (-1 * x151));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x162 + (x162 * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x183 + (x183 * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x202 + (x202 * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x217 + (x217 * x144));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x231 + (x231 * x144));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f019302d1c0>,
// <cnkalman.codegen.WrapMember object at 0x7f019302d7c0>, <cnkalman.codegen.WrapMember object at 0x7f019302d040>,
// <cnkalman.codegen.WrapMember object at 0x7f019302d880>, <cnkalman.codegen.WrapMember object at 0x7f019302d7f0>,
// <cnkalman.codegen.WrapMember object at 0x7f019302d760>, <cnkalman.codegen.WrapMember object at 0x7f019302d160>]
static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = 0.523598775598299 + (*bsc0).tilt;
	const FLT x1 = cos(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x3 = cos(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x5 = sin(x4);
	const FLT x6 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x7 = sin(x6);
	const FLT x8 = x5 * x7;
	const FLT x9 = cos(x4);
	const FLT x10 = cos(x6);
	const FLT x11 = sin(x2);
	const FLT x12 = x11 * x10;
	const FLT x13 = (x9 * x12) + (-1 * x3 * x8);
	const FLT x14 = x3 * x10;
	const FLT x15 = (x9 * x14) + (x8 * x11);
	const FLT x16 = x7 * x9;
	const FLT x17 = (x3 * x16) + (x5 * x12);
	const FLT x18 = (x5 * x14) + (-1 * x11 * x16);
	const FLT x19 = 1. / sqrt((x18 * x18) + (x17 * x17) + (x13 * x13) + (x15 * x15));
	const FLT x20 = x15 * x19;
	const FLT x21 = x19 * x17;
	const FLT x22 = x19 * x18;
	const FLT x23 = x13 * x19;
	const FLT x24 = (-1 * x23 * (*_x0).Pose.Rot[1]) + (x22 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x26 = dt * dt;
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x28 = x26 * (x27 * x27);
	const FLT x29 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x30 = (x29 * x29) * x26;
	const FLT x31 = (x25 * x25) * x26;
	const FLT x32 = 1e-10 + x31 + x28 + x30;
	const FLT x33 = sqrt(x32);
	const FLT x34 = 0.5 * x33;
	const FLT x35 = sin(x34);
	const FLT x36 = (1. / x32) * (x35 * x35);
	const FLT x37 = cos(x34);
	const FLT x38 = 1. / sqrt((x30 * x36) + (x36 * x28) + (x37 * x37) + (x31 * x36));
	const FLT x39 = dt * (1. / x33) * x35 * x38;
	const FLT x40 = x39 * x25;
	const FLT x41 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[0]) + (-1 * x23 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x38 * x37;
	const FLT x43 = (x23 * (*_x0).Pose.Rot[0]) + (x21 * (*_x0).Pose.Rot[1]) + (x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x22 * (*_x0).Pose.Rot[2]);
	const FLT x44 = x39 * x27;
	const FLT x45 = (x20 * (*_x0).Pose.Rot[1]) + (-1 * x21 * (*_x0).Pose.Rot[3]) + (x23 * (*_x0).Pose.Rot[2]) +
					(x22 * (*_x0).Pose.Rot[0]);
	const FLT x46 = x39 * x29;
	const FLT x47 = (-1 * x45 * x46) + (-1 * x43 * x44) + (-1 * x40 * x24) + (x41 * x42);
	const FLT x48 = x41 * x39;
	const FLT x49 = (x42 * x24) + (-1 * x43 * x46) + (x44 * x45) + (x48 * x25);
	const FLT x50 = (x48 * x27) + (x46 * x24) + (-1 * x40 * x45) + (x42 * x43);
	const FLT x51 = (-1 * x50 * sensor_pt[1]) + (x47 * sensor_pt[0]) + (x49 * sensor_pt[2]);
	const FLT x52 = (x48 * x29) + (-1 * x44 * x24) + (x40 * x43) + (x42 * x45);
	const FLT x53 = (-1 * x52 * sensor_pt[2]) + (x47 * sensor_pt[1]) + (x50 * sensor_pt[0]);
	const FLT x54 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x53 * x52) + (-1 * x51 * x49))) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2])) +
					(x54 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2];
	const FLT x56 = (-1 * x49 * sensor_pt[0]) + (x47 * sensor_pt[2]) + (x52 * sensor_pt[1]);
	const FLT x57 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) + sensor_pt[1] +
					(2 * ((x50 * x51) + (-1 * x52 * x56))) + (x54 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x58 = (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + (x54 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(2 * ((x56 * x49) + (-1 * x50 * x53))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x59 = (-1 * x58 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[1]);
	const FLT x60 = (-1 * x57 * (*lh_p).Rot[3]) + (x58 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x61 = x57 + (*lh_p).Pos[1] + (2 * ((x60 * (*lh_p).Rot[3]) + (-1 * x59 * (*lh_p).Rot[1])));
	const FLT x62 = x61 * x61;
	const FLT x63 = (-1 * x55 * (*lh_p).Rot[1]) + (x58 * (*lh_p).Rot[3]) + (x57 * (*lh_p).Rot[0]);
	const FLT x64 = (2 * ((x63 * (*lh_p).Rot[1]) + (-1 * x60 * (*lh_p).Rot[2]))) + x55 + (*lh_p).Pos[2];
	const FLT x65 = (*lh_p).Pos[0] + x58 + (2 * ((x59 * (*lh_p).Rot[2]) + (-1 * x63 * (*lh_p).Rot[3])));
	const FLT x66 = (x65 * x65) + (x64 * x64);
	const FLT x67 = x66 + x62;
	const FLT x68 = x61 * (1. / sqrt(x67));
	const FLT x69 = asin((1. / x1) * x68);
	const FLT x70 = 8.0108022e-06 * x69;
	const FLT x71 = -8.0108022e-06 + (-1 * x70);
	const FLT x72 = 0.0028679863 + (x71 * x69);
	const FLT x73 = 5.3685255e-06 + (x72 * x69);
	const FLT x74 = 0.0076069798 + (x73 * x69);
	const FLT x75 = x74 * x69;
	const FLT x76 = -8.0108022e-06 + (-1.60216044e-05 * x69);
	const FLT x77 = x72 + (x76 * x69);
	const FLT x78 = x73 + (x77 * x69);
	const FLT x79 = x74 + (x78 * x69);
	const FLT x80 = (x79 * x69) + x75;
	const FLT x81 = sin(x0);
	const FLT x82 = atan2(-1 * x64, x65);
	const FLT x83 = tan(x0);
	const FLT x84 = x61 * (1. / sqrt(x66));
	const FLT x85 = x83 * x84;
	const FLT x86 = (-1 * asin(x85)) + (*bsc0).ogeephase + x82;
	const FLT x87 = sin(x86);
	const FLT x88 = (x87 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x89 = x81 * x88;
	const FLT x90 = x80 * x89;
	const FLT x91 = x69 * x69;
	const FLT x92 = x1 + (-1 * x90);
	const FLT x93 = x74 * (1. / (x92 * x92)) * x91;
	const FLT x94 = x93 * x90;
	const FLT x95 = 1. / x92;
	const FLT x96 = x91 * x95;
	const FLT x97 = x74 * x96;
	const FLT x98 = x85 + (x88 * x97);
	const FLT x99 = 1. / sqrt(1 + (-1 * (x98 * x98)));
	const FLT x100 = (x97 + x94) * x99;
	const FLT x101 = (-1 * asin(x98)) + x82 + (*bsc0).gibpha;
	const FLT x102 = cos(x101) * (*bsc0).gibmag;
	const FLT x103 = ((x87 * x97) + (x87 * x94)) * x99;
	const FLT x104 = cos(x86) * (*bsc0).ogeemag;
	const FLT x105 = x97 * x104;
	const FLT x106 = x99 * (x105 + (x94 * x104));
	const FLT x107 = x83 * x83;
	const FLT x108 = x84 * (1 + x107);
	const FLT x109 = x108 * (1. / sqrt(1 + (-1 * x62 * (1. / x66) * x107)));
	const FLT x110 = 1. / (x1 * x1);
	const FLT x111 = x68 * x110 * (1. / sqrt(1 + (-1 * x62 * (1. / x67) * x110)));
	const FLT x112 = x81 * x111;
	const FLT x113 = x71 * x112;
	const FLT x114 = (x69 * ((-1 * x70 * x112) + x113)) + (x72 * x112);
	const FLT x115 = (x69 * x114) + (x73 * x112);
	const FLT x116 =
		x99 *
		((2 * x89 * x75 * x95 * x111) +
		 (-1 * x88 * x93 *
		  ((-1 * x1 * x80 * x88) + (x80 * x81 * x109 * x104) + (-1 * x81) +
		   (-1 * x89 *
			((x74 * x112) + (x69 * x115) + (x79 * x112) +
			 (x69 *
			  (x115 + (x69 * (x114 + (x77 * x112) + (x69 * ((x76 * x112) + x113 + (-2.40324066e-05 * x69 * x112))))) +
			   (x78 * x112))))))) +
		 (-1 * x109 * x105) + (x88 * x96 * x115) + x108);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), (-1 * x100 * x102) + (-1 * x100));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), sin(x101));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x102);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag) / sizeof(FLT), (-1 * x103 * x102) + (-1 * x103));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase) / sizeof(FLT), (-1 * x102 * x106) + (-1 * x106));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x102 * x116) + (-1 * x116));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_x_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f019302d1c0>, <cnkalman.codegen.WrapMember object at 0x7f019302d7c0>, <cnkalman.codegen.WrapMember object at
// 0x7f019302d040>, <cnkalman.codegen.WrapMember object at 0x7f019302d880>, <cnkalman.codegen.WrapMember object at
// 0x7f019302d7f0>, <cnkalman.codegen.WrapMember object at 0x7f019302d760>, <cnkalman.codegen.WrapMember object at
// 0x7f019302d160>]

static inline void SurviveKalmanErrorModel_LightMeas_x_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_x_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_x_gen2_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline FLT SurviveKalmanErrorModel_LightMeas_y_gen2(const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x2 * x15) + (x4 * x11);
	const FLT x17 = (x4 * x13) + (-1 * x15 * x10);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x18 * (*_x0).Pose.Rot[1];
	const FLT x23 =
		(-1 * x22 * x12) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = x12 * x18;
	const FLT x40 = (-1 * x22 * x17) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x39 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x41 = x36 * x35;
	const FLT x42 = (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) + (x39 * (*_x0).Pose.Rot[0]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x43 = x37 * x25;
	const FLT x44 =
		(x39 * (*_x0).Pose.Rot[2]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * x14) + (x21 * (*_x0).Pose.Rot[0]);
	const FLT x45 = x44 * x37;
	const FLT x46 = (-1 * x42 * x43) + (-1 * x45 * x27) + (-1 * x0 * x38) + (x40 * x41);
	const FLT x47 = (x38 * x27) + (x40 * x43) + (-1 * x0 * x45) + (x41 * x42);
	const FLT x48 = x42 * x37;
	const FLT x49 = x40 * x37;
	const FLT x50 = (x49 * x27) + (-1 * x43 * x23) + (x0 * x48) + (x41 * x44);
	const FLT x51 = (-1 * x50 * sensor_pt[2]) + (x46 * sensor_pt[1]) + (x47 * sensor_pt[0]);
	const FLT x52 = (-1 * x48 * x27) + (x43 * x44) + (x41 * x23) + (x0 * x49);
	const FLT x53 = (x46 * sensor_pt[2]) + (-1 * x52 * sensor_pt[0]) + (x50 * sensor_pt[1]);
	const FLT x54 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x55 = (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + (x54 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(2 * ((x53 * x52) + (-1 * x51 * x47))) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x56 = (x46 * sensor_pt[0]) + (-1 * x47 * sensor_pt[1]) + (x52 * sensor_pt[2]);
	const FLT x57 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x50 * x51) + (-1 * x52 * x56))) +
					sensor_pt[2] + (x54 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x58 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(2 * ((x56 * x47) + (-1 * x50 * x53))) + (x54 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x59 = (-1 * x58 * (*lh_p).Rot[3]) + (x55 * (*lh_p).Rot[0]) + (x57 * (*lh_p).Rot[2]);
	const FLT x60 = (-1 * x57 * (*lh_p).Rot[1]) + (x55 * (*lh_p).Rot[3]) + (x58 * (*lh_p).Rot[0]);
	const FLT x61 = x57 + (2 * ((x60 * (*lh_p).Rot[1]) + (-1 * x59 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x62 = (-1 * x55 * (*lh_p).Rot[2]) + (x57 * (*lh_p).Rot[0]) + (x58 * (*lh_p).Rot[1]);
	const FLT x63 = x55 + (*lh_p).Pos[0] + (2 * ((x62 * (*lh_p).Rot[2]) + (-1 * x60 * (*lh_p).Rot[3])));
	const FLT x64 = atan2(-1 * x61, x63);
	const FLT x65 = x58 + (*lh_p).Pos[1] + (2 * ((x59 * (*lh_p).Rot[3]) + (-1 * x62 * (*lh_p).Rot[1])));
	const FLT x66 = (x63 * x63) + (x61 * x61);
	const FLT x67 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x68 = cos(x67);
	const FLT x69 = asin((1. / x68) * x65 * (1. / sqrt(x66 + (x65 * x65))));
	const FLT x70 = -1 * x65 * (1. / sqrt(x66)) * tan(x67);
	const FLT x71 = ((*bsc0).ogeemag * sin((-1 * asin(x70)) + (*bsc0).ogeephase + x64)) + (*bsc0).curve;
	const FLT x72 = 0.0028679863 + (x69 * (-8.0108022e-06 + (-8.0108022e-06 * x69)));
	const FLT x73 = 5.3685255e-06 + (x72 * x69);
	const FLT x74 = 0.0076069798 + (x73 * x69);
	const FLT x75 =
		(-1 *
		 asin(x70 + (x71 * x74 * (x69 * x69) *
					 (1. / (x68 + (x71 * sin(x67) *
								   ((x69 * (x74 + (x69 * (x73 + (x69 * (x72 + (x69 * (-8.0108022e-06 +
																					  (-1.60216044e-05 * x69))))))))) +
									(x74 * x69)))))))) +
		x64;
	return -1.5707963267949 + (-1 * (*bsc0).phase) + x75 + (sin(x75 + (*bsc0).gibpha) * (*bsc0).gibmag);
}

// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_x0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x4 * x13) + (x15 * x10);
	const FLT x17 = (x2 * x15) + (-1 * x4 * x11);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x25 * x25;
	const FLT x27 = x24 * x26;
	const FLT x28 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x29 = x28 * x28;
	const FLT x30 = x24 * x29;
	const FLT x31 = x0 * x0;
	const FLT x32 = x31 * x24;
	const FLT x33 = 1e-10 + x32 + x27 + x30;
	const FLT x34 = sqrt(x33);
	const FLT x35 = 0.5 * x34;
	const FLT x36 = sin(x35);
	const FLT x37 = x36 * x36;
	const FLT x38 = 1. / x33;
	const FLT x39 = x38 * x37;
	const FLT x40 = cos(x35);
	const FLT x41 = (x30 * x39) + (x39 * x27) + (x40 * x40) + (x32 * x39);
	const FLT x42 = 1. / sqrt(x41);
	const FLT x43 = x42 * x36;
	const FLT x44 = x43 * x23;
	const FLT x45 = 1. / x34;
	const FLT x46 = dt * x45;
	const FLT x47 = x44 * x46;
	const FLT x48 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x49 = x40 * x42;
	const FLT x50 = x48 * x49;
	const FLT x51 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x52 = x43 * x46;
	const FLT x53 = x52 * x51;
	const FLT x54 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x55 = x54 * x52;
	const FLT x56 = (-1 * x55 * x28) + (-1 * x53 * x25) + (-1 * x0 * x47) + x50;
	const FLT x57 = x52 * x48;
	const FLT x58 = x49 * x23;
	const FLT x59 = x58 + (x55 * x25) + (-1 * x53 * x28) + (x0 * x57);
	const FLT x60 = x51 * x49;
	const FLT x61 = (x47 * x28) + (x57 * x25) + (-1 * x0 * x55) + x60;
	const FLT x62 = (-1 * x61 * sensor_pt[1]) + (x56 * sensor_pt[0]) + (x59 * sensor_pt[2]);
	const FLT x63 = x54 * x49;
	const FLT x64 = (x57 * x28) + (-1 * x47 * x25) + (x0 * x53) + x63;
	const FLT x65 = (-1 * x64 * sensor_pt[2]) + (x56 * sensor_pt[1]) + (x61 * sensor_pt[0]);
	const FLT x66 = dt * fabs(dt);
	const FLT x67 = 1.0 / 2.0 * x66;
	const FLT x68 = (*error_model).Pose.Pos[2] + (*_x0).Pose.Pos[2] + (2 * ((x64 * x65) + (-1 * x62 * x59))) +
					sensor_pt[2] + (x67 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x69 = (-1 * x59 * sensor_pt[0]) + (x56 * sensor_pt[2]) + (x64 * sensor_pt[1]);
	const FLT x70 = (*_x0).Pose.Pos[1] + (2 * ((x61 * x62) + (-1 * x64 * x69))) + (*error_model).Pose.Pos[1] +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x67 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x71 = (*_x0).Pose.Pos[0] + (2 * ((x69 * x59) + (-1 * x61 * x65))) + (*error_model).Pose.Pos[0] +
					(x67 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x72 = (-1 * x71 * (*lh_p).Rot[2]) + (x68 * (*lh_p).Rot[0]) + (x70 * (*lh_p).Rot[1]);
	const FLT x73 = (x71 * (*lh_p).Rot[0]) + (-1 * x70 * (*lh_p).Rot[3]) + (x68 * (*lh_p).Rot[2]);
	const FLT x74 = x70 + (*lh_p).Pos[1] + (2 * ((x73 * (*lh_p).Rot[3]) + (-1 * x72 * (*lh_p).Rot[1])));
	const FLT x75 = x74 * x74;
	const FLT x76 = (-1 * x68 * (*lh_p).Rot[1]) + (x71 * (*lh_p).Rot[3]) + (x70 * (*lh_p).Rot[0]);
	const FLT x77 = x68 + (2 * ((x76 * (*lh_p).Rot[1]) + (-1 * x73 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x78 = x71 + (*lh_p).Pos[0] + (2 * ((x72 * (*lh_p).Rot[2]) + (-1 * x76 * (*lh_p).Rot[3])));
	const FLT x79 = x78 * x78;
	const FLT x80 = x79 + (x77 * x77);
	const FLT x81 = x80 + x75;
	const FLT x82 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x83 = cos(x82);
	const FLT x84 = 1. / x83;
	const FLT x85 = (1. / sqrt(x81)) * x84;
	const FLT x86 = asin(x85 * x74);
	const FLT x87 = 8.0108022e-06 * x86;
	const FLT x88 = -8.0108022e-06 + (-1 * x87);
	const FLT x89 = 0.0028679863 + (x88 * x86);
	const FLT x90 = 5.3685255e-06 + (x89 * x86);
	const FLT x91 = 0.0076069798 + (x86 * x90);
	const FLT x92 = x86 * x91;
	const FLT x93 = -8.0108022e-06 + (-1.60216044e-05 * x86);
	const FLT x94 = x89 + (x86 * x93);
	const FLT x95 = x90 + (x86 * x94);
	const FLT x96 = x91 + (x86 * x95);
	const FLT x97 = (x86 * x96) + x92;
	const FLT x98 = sin(x82);
	const FLT x99 = atan2(-1 * x77, x78);
	const FLT x100 = tan(x82);
	const FLT x101 = (1. / sqrt(x80)) * x100;
	const FLT x102 = -1 * x74 * x101;
	const FLT x103 = (-1 * asin(x102)) + (*bsc0).ogeephase + x99;
	const FLT x104 = (sin(x103) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x105 = x98 * x104;
	const FLT x106 = x83 + (x97 * x105);
	const FLT x107 = 1. / x106;
	const FLT x108 = x86 * x86;
	const FLT x109 = x108 * x104;
	const FLT x110 = x109 * x107;
	const FLT x111 = x102 + (x91 * x110);
	const FLT x112 = 1. / sqrt(1 + (-1 * (x111 * x111)));
	const FLT x113 = x66 * (*lh_p).Rot[2];
	const FLT x114 = x113 * (*lh_p).Rot[1];
	const FLT x115 = x66 * (*lh_p).Rot[3];
	const FLT x116 = x115 * (*lh_p).Rot[0];
	const FLT x117 = x116 + x114;
	const FLT x118 = 2 * x74;
	const FLT x119 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x120 = -1 * x66 * x119;
	const FLT x121 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x122 = (-1 * x66 * x121) + x67;
	const FLT x123 = x122 + x120;
	const FLT x124 = 2 * x78;
	const FLT x125 = x113 * (*lh_p).Rot[0];
	const FLT x126 = x115 * (*lh_p).Rot[1];
	const FLT x127 = x126 + (-1 * x125);
	const FLT x128 = 2 * x77;
	const FLT x129 = (x128 * x127) + (x124 * x123);
	const FLT x130 = 1.0 / 2.0 * x74;
	const FLT x131 = (1. / (x81 * sqrt(x81))) * x84 * x130;
	const FLT x132 = (-1 * x131 * (x129 + (x118 * x117))) + (x85 * x117);
	const FLT x133 = 1. / sqrt(1 + (-1 * (1. / x81) * (1. / (x83 * x83)) * x75));
	const FLT x134 = 2 * x92 * x104 * x107;
	const FLT x135 = x133 * x134;
	const FLT x136 = 1. / x80;
	const FLT x137 = 1. / sqrt(1 + (-1 * x75 * (x100 * x100) * x136));
	const FLT x138 = (1. / (x80 * sqrt(x80))) * x100 * x130;
	const FLT x139 = (x129 * x138) + (-1 * x101 * x117);
	const FLT x140 = (1. / x79) * x77;
	const FLT x141 = 1. / x78;
	const FLT x142 = x79 * x136;
	const FLT x143 = ((-1 * x127 * x141) + (x123 * x140)) * x142;
	const FLT x144 = x143 + (-1 * x137 * x139);
	const FLT x145 = cos(x103) * (*bsc0).ogeemag;
	const FLT x146 = x98 * x97;
	const FLT x147 = x146 * x145;
	const FLT x148 = x96 * x133;
	const FLT x149 = x90 * x133;
	const FLT x150 = x89 * x133;
	const FLT x151 = x88 * x133;
	const FLT x152 = x132 * x151;
	const FLT x153 = x87 * x133;
	const FLT x154 = (x86 * ((-1 * x132 * x153) + x152)) + (x132 * x150);
	const FLT x155 = (x86 * x154) + (x132 * x149);
	const FLT x156 = x94 * x133;
	const FLT x157 = 2.40324066e-05 * x86;
	const FLT x158 = x133 * x157;
	const FLT x159 = x93 * x133;
	const FLT x160 = x95 * x133;
	const FLT x161 = x91 * x133;
	const FLT x162 = x91 * x109 * (1. / (x106 * x106));
	const FLT x163 = x91 * x108 * x107;
	const FLT x164 = x163 * x145;
	const FLT x165 =
		x143 +
		(-1 * x112 *
		 ((x110 * x155) + (x132 * x135) + x139 + (x164 * x144) +
		  (-1 * x162 *
		   ((x105 * ((x86 * ((x86 * ((x132 * x156) + x154 + (x86 * ((x132 * x159) + x152 + (-1 * x132 * x158))))) +
							 x155 + (x160 * x132))) +
					 (x132 * x148) + (x161 * x132) + (x86 * x155))) +
			(x144 * x147)))));
	const FLT x166 = cos((-1 * asin(x111)) + (*bsc0).gibpha + x99) * (*bsc0).gibmag;
	const FLT x167 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x168 = -1 * x66 * x167;
	const FLT x169 = x168 + x120 + x67;
	const FLT x170 = x114 + (-1 * x116);
	const FLT x171 = x115 * (*lh_p).Rot[2];
	const FLT x172 = x66 * (*lh_p).Rot[1] * (*lh_p).Rot[0];
	const FLT x173 = x172 + x171;
	const FLT x174 = (x128 * x173) + (x124 * x170);
	const FLT x175 = (-1 * x131 * (x174 + (x118 * x169))) + (x85 * x169);
	const FLT x176 = (x174 * x138) + (-1 * x101 * x169);
	const FLT x177 = ((-1 * x173 * x141) + (x170 * x140)) * x142;
	const FLT x178 = x177 + (-1 * x176 * x137);
	const FLT x179 = x175 * x151;
	const FLT x180 = (x86 * ((-1 * x175 * x153) + x179)) + (x175 * x150);
	const FLT x181 = (x86 * x180) + (x175 * x149);
	const FLT x182 =
		x177 +
		(-1 * x112 *
		 ((x110 * x181) + (x175 * x135) + x176 + (x164 * x178) +
		  (-1 * x162 *
		   ((x105 *
			 ((x161 * x175) + (x86 * x181) + (x175 * x148) +
			  (x86 * (x181 + (x86 * (x180 + (x175 * x156) + (x86 * ((x175 * x159) + x179 + (-1 * x175 * x158))))) +
					  (x160 * x175))))) +
			(x178 * x147)))));
	const FLT x183 = x171 + (-1 * x172);
	const FLT x184 = x125 + x126;
	const FLT x185 = x122 + x168;
	const FLT x186 = (x128 * x185) + (x124 * x184);
	const FLT x187 = (-1 * x131 * (x186 + (x118 * x183))) + (x85 * x183);
	const FLT x188 = x187 * x133;
	const FLT x189 = x88 * x188;
	const FLT x190 = (x86 * ((-1 * x87 * x188) + x189)) + (x187 * x150);
	const FLT x191 = (x86 * x190) + (x187 * x149);
	const FLT x192 = (x186 * x138) + (-1 * x101 * x183);
	const FLT x193 = ((-1 * x185 * x141) + (x184 * x140)) * x142;
	const FLT x194 = x193 + (-1 * x192 * x137);
	const FLT x195 =
		x193 +
		(-1 * x112 *
		 ((-1 * x162 *
		   ((x105 *
			 ((x187 * x148) + (x161 * x187) + (x86 * x191) +
			  (x86 * (x191 + (x86 * (x190 + (x187 * x156) + (x86 * (x189 + (x93 * x188) + (-1 * x188 * x157))))) +
					  (x95 * x188))))) +
			(x194 * x147))) +
		  (x164 * x194) + (x110 * x191) + x192 + (x188 * x134)));
	const FLT x196 = 2 * (*lh_p).Rot[2];
	const FLT x197 = x196 * (*lh_p).Rot[1];
	const FLT x198 = 2 * (*lh_p).Rot[3];
	const FLT x199 = x198 * (*lh_p).Rot[0];
	const FLT x200 = x199 + x197;
	const FLT x201 = 2 * x119;
	const FLT x202 = -1 * x201;
	const FLT x203 = 2 * x121;
	const FLT x204 = -1 * x203;
	const FLT x205 = 1 + x204 + x202;
	const FLT x206 = x196 * (*lh_p).Rot[0];
	const FLT x207 = x198 * (*lh_p).Rot[1];
	const FLT x208 = x207 + (-1 * x206);
	const FLT x209 = (x208 * x128) + (x205 * x124);
	const FLT x210 = (-1 * x131 * (x209 + (x200 * x118))) + (x85 * x200);
	const FLT x211 = x210 * x151;
	const FLT x212 = (x86 * ((-1 * x210 * x153) + x211)) + (x210 * x150);
	const FLT x213 = (x86 * x212) + (x210 * x149);
	const FLT x214 = (x209 * x138) + (-1 * x200 * x101);
	const FLT x215 = ((-1 * x208 * x141) + (x205 * x140)) * x142;
	const FLT x216 = x215 + (-1 * x214 * x137);
	const FLT x217 =
		x215 +
		(-1 * x112 *
		 (x214 + (x216 * x164) + (x213 * x110) +
		  (-1 * x162 *
		   ((x105 *
			 ((x210 * x161) + (x210 * x148) +
			  (x86 * (x213 + (x86 * (x212 + (x210 * x156) + (x86 * ((x210 * x159) + x211 + (-1 * x210 * x158))))) +
					  (x210 * x160))) +
			  (x86 * x213))) +
			(x216 * x147))) +
		  (x210 * x135)));
	const FLT x218 = 2 * x167;
	const FLT x219 = 1 + (-1 * x218);
	const FLT x220 = x219 + x202;
	const FLT x221 = x197 + (-1 * x199);
	const FLT x222 = x198 * (*lh_p).Rot[2];
	const FLT x223 = 2 * (*lh_p).Rot[1];
	const FLT x224 = x223 * (*lh_p).Rot[0];
	const FLT x225 = x224 + x222;
	const FLT x226 = (x225 * x128) + (x221 * x124);
	const FLT x227 = (-1 * x131 * (x226 + (x220 * x118))) + (x85 * x220);
	const FLT x228 = x227 * x151;
	const FLT x229 = (x86 * ((-1 * x227 * x153) + x228)) + (x227 * x150);
	const FLT x230 = (x86 * x229) + (x227 * x149);
	const FLT x231 = (x226 * x138) + (-1 * x220 * x101);
	const FLT x232 = ((-1 * x225 * x141) + (x221 * x140)) * x142;
	const FLT x233 = x232 + (-1 * x231 * x137);
	const FLT x234 =
		x232 +
		(-1 * x112 *
		 (x231 + (x227 * x135) + (x230 * x110) + (x233 * x164) +
		  (-1 * x162 *
		   ((x105 *
			 ((x227 * x161) + (x227 * x148) +
			  (x86 * (x230 + (x86 * (x229 + (x227 * x156) + (x86 * ((x227 * x159) + x228 + (-1 * x227 * x158))))) +
					  (x227 * x160))) +
			  (x86 * x230))) +
			(x233 * x147)))));
	const FLT x235 = x222 + (-1 * x224);
	const FLT x236 = x206 + x207;
	const FLT x237 = x219 + x204;
	const FLT x238 = (x237 * x128) + (x236 * x124);
	const FLT x239 = (-1 * x131 * (x238 + (x235 * x118))) + (x85 * x235);
	const FLT x240 = (x238 * x138) + (-1 * x235 * x101);
	const FLT x241 = ((-1 * x237 * x141) + (x236 * x140)) * x142;
	const FLT x242 = x241 + (-1 * x240 * x137);
	const FLT x243 = x239 * x151;
	const FLT x244 = (x86 * ((-1 * x239 * x153) + x243)) + (x239 * x150);
	const FLT x245 = (x86 * x244) + (x239 * x149);
	const FLT x246 =
		x241 +
		(-1 * x112 *
		 (x240 +
		  (-1 * x162 *
		   ((x105 *
			 ((x239 * x161) + (x86 * x245) + (x239 * x148) +
			  (x86 * (x245 + (x86 * (x244 + (x239 * x156) + (x86 * ((x239 * x159) + x243 + (-1 * x239 * x158))))) +
					  (x239 * x160))))) +
			(x242 * x147))) +
		  (x239 * x135) + (x245 * x110) + (x242 * x164)));
	const FLT x247 = x52 * x19;
	const FLT x248 = x28 * x247;
	const FLT x249 = x52 * x22;
	const FLT x250 = x0 * x249;
	const FLT x251 = x49 * x21;
	const FLT x252 = x52 * x20;
	const FLT x253 = -1 * x25 * x252;
	const FLT x254 = x253 + x251;
	const FLT x255 = x254 + x248 + x250;
	const FLT x256 = x25 * x249;
	const FLT x257 = -1 * x256;
	const FLT x258 = x0 * x252;
	const FLT x259 = -1 * x258;
	const FLT x260 = x49 * x19;
	const FLT x261 = x52 * x21;
	const FLT x262 = x28 * x261;
	const FLT x263 = (-1 * x262) + x260;
	const FLT x264 = x263 + x257 + x259;
	const FLT x265 = x25 * x247;
	const FLT x266 = x49 * x22;
	const FLT x267 = x28 * x252;
	const FLT x268 = -1 * x0 * x261;
	const FLT x269 = x268 + x267;
	const FLT x270 = x269 + x265 + x266;
	const FLT x271 = (-1 * x255 * sensor_pt[2]) + (x270 * sensor_pt[0]) + (x264 * sensor_pt[1]);
	const FLT x272 = 2 * x61;
	const FLT x273 = x25 * x261;
	const FLT x274 = x49 * x20;
	const FLT x275 = -1 * x28 * x249;
	const FLT x276 = x0 * x247;
	const FLT x277 = x276 + x275;
	const FLT x278 = x277 + x273 + x274;
	const FLT x279 = (x255 * sensor_pt[1]) + (-1 * x278 * sensor_pt[0]) + (x264 * sensor_pt[2]);
	const FLT x280 = 2 * x59;
	const FLT x281 = 2 * x65;
	const FLT x282 = 2 * x69;
	const FLT x283 = (-1 * x270 * x281) + (x278 * x282) + (-1 * x272 * x271) + (x279 * x280);
	const FLT x284 = (x278 * sensor_pt[2]) + (-1 * x270 * sensor_pt[1]) + (x264 * sensor_pt[0]);
	const FLT x285 = 2 * x64;
	const FLT x286 = 2 * x62;
	const FLT x287 = (x281 * x255) + (-1 * x278 * x286) + (-1 * x284 * x280) + (x271 * x285);
	const FLT x288 = (x272 * x284) + (-1 * x279 * x285) + (-1 * x282 * x255) + (x270 * x286);
	const FLT x289 = (x288 * (*lh_p).Rot[1]) + (-1 * x283 * (*lh_p).Rot[2]) + (x287 * (*lh_p).Rot[0]);
	const FLT x290 = (-1 * x288 * (*lh_p).Rot[3]) + (x287 * (*lh_p).Rot[2]) + (x283 * (*lh_p).Rot[0]);
	const FLT x291 = x288 + (-1 * x289 * x223) + (x290 * x198);
	const FLT x292 = (-1 * x287 * (*lh_p).Rot[1]) + (x288 * (*lh_p).Rot[0]) + (x283 * (*lh_p).Rot[3]);
	const FLT x293 = x283 + (-1 * x292 * x198) + (x289 * x196);
	const FLT x294 = x287 + (-1 * x290 * x196) + (x292 * x223);
	const FLT x295 = (x294 * x128) + (x293 * x124);
	const FLT x296 = (-1 * x131 * (x295 + (x291 * x118))) + (x85 * x291);
	const FLT x297 = x296 * x151;
	const FLT x298 = (x86 * ((-1 * x296 * x153) + x297)) + (x296 * x150);
	const FLT x299 = (x86 * x298) + (x296 * x149);
	const FLT x300 = (x295 * x138) + (-1 * x291 * x101);
	const FLT x301 = ((-1 * x294 * x141) + (x293 * x140)) * x142;
	const FLT x302 = x301 + (-1 * x300 * x137);
	const FLT x303 =
		x301 +
		(-1 * x112 *
		 (x300 + (x302 * x164) +
		  (-1 * x162 *
		   ((x105 * ((x296 * x161) + (x86 * x299) + (x296 * x148) +
					 (x86 * ((x86 * (x298 + (x296 * x156) + (x86 * ((x296 * x159) + x297 + (-1 * x296 * x158))))) +
							 x299 + (x296 * x160))))) +
			(x302 * x147))) +
		  (x299 * x110) + (x296 * x135)));
	const FLT x304 = -1 * x248;
	const FLT x305 = (-1 * x251) + x253;
	const FLT x306 = x305 + x304 + x250;
	const FLT x307 = x263 + x258 + x256;
	const FLT x308 = -1 * x273;
	const FLT x309 = (-1 * x276) + x275;
	const FLT x310 = x309 + x308 + x274;
	const FLT x311 = (x310 * sensor_pt[0]) + (x306 * sensor_pt[1]) + (-1 * x307 * sensor_pt[2]);
	const FLT x312 = -1 * x266;
	const FLT x313 = (-1 * x267) + x268;
	const FLT x314 = x313 + x265 + x312;
	const FLT x315 = (x307 * sensor_pt[1]) + (x306 * sensor_pt[2]) + (-1 * x314 * sensor_pt[0]);
	const FLT x316 = (-1 * x281 * x310) + (-1 * x272 * x311) + (x282 * x314) + (x280 * x315);
	const FLT x317 = (x314 * sensor_pt[2]) + (-1 * x310 * sensor_pt[1]) + (x306 * sensor_pt[0]);
	const FLT x318 = (x281 * x307) + (x285 * x311) + (-1 * x286 * x314) + (-1 * x280 * x317);
	const FLT x319 = (x286 * x310) + (-1 * x282 * x307) + (-1 * x285 * x315) + (x272 * x317);
	const FLT x320 = (x319 * (*lh_p).Rot[1]) + (-1 * x316 * (*lh_p).Rot[2]) + (x318 * (*lh_p).Rot[0]);
	const FLT x321 = (x318 * (*lh_p).Rot[2]) + (-1 * x319 * (*lh_p).Rot[3]) + (x316 * (*lh_p).Rot[0]);
	const FLT x322 = (-1 * x223 * x320) + x319 + (x321 * x198);
	const FLT x323 = (x319 * (*lh_p).Rot[0]) + (-1 * x318 * (*lh_p).Rot[1]) + (x316 * (*lh_p).Rot[3]);
	const FLT x324 = x316 + (-1 * x323 * x198) + (x320 * x196);
	const FLT x325 = x318 + (-1 * x321 * x196) + (x223 * x323);
	const FLT x326 = (x325 * x128) + (x324 * x124);
	const FLT x327 = (-1 * x131 * (x326 + (x322 * x118))) + (x85 * x322);
	const FLT x328 = x327 * x151;
	const FLT x329 = (x86 * ((-1 * x327 * x153) + x328)) + (x327 * x150);
	const FLT x330 = (x86 * x329) + (x327 * x149);
	const FLT x331 = (x326 * x138) + (-1 * x322 * x101);
	const FLT x332 = ((-1 * x325 * x141) + (x324 * x140)) * x142;
	const FLT x333 = x332 + (-1 * x331 * x137);
	const FLT x334 =
		x332 +
		(-1 * x112 *
		 ((x333 * x164) + (x327 * x135) + x331 + (x330 * x110) +
		  (-1 * x162 *
		   ((x105 *
			 ((x327 * x161) +
			  (x86 * (x330 + (x86 * (x329 + (x327 * x156) + (x86 * ((x327 * x159) + (-1 * x327 * x158) + x328)))) +
					  (x327 * x160))) +
			  (x327 * x148) + (x86 * x330))) +
			(x333 * x147)))));
	const FLT x335 = -1 * x274;
	const FLT x336 = x309 + x335 + x273;
	const FLT x337 = -1 * x265;
	const FLT x338 = x313 + x266 + x337;
	const FLT x339 = -1 * x250;
	const FLT x340 = x305 + x339 + x248;
	const FLT x341 = (x340 * sensor_pt[0]) + (x336 * sensor_pt[1]) + (-1 * x338 * sensor_pt[2]);
	const FLT x342 = x260 + x262;
	const FLT x343 = x342 + x256 + x259;
	const FLT x344 = (x338 * sensor_pt[1]) + (-1 * x343 * sensor_pt[0]) + (x336 * sensor_pt[2]);
	const FLT x345 = (x280 * x344) + (x282 * x343) + (-1 * x272 * x341) + (-1 * x281 * x340);
	const FLT x346 = (x343 * sensor_pt[2]) + (-1 * x340 * sensor_pt[1]) + (x336 * sensor_pt[0]);
	const FLT x347 = (x281 * x338) + (-1 * x280 * x346) + (x285 * x341) + (-1 * x286 * x343);
	const FLT x348 = (x286 * x340) + (x272 * x346) + (-1 * x282 * x338) + (-1 * x285 * x344);
	const FLT x349 = (-1 * x345 * (*lh_p).Rot[2]) + (x348 * (*lh_p).Rot[1]) + (x347 * (*lh_p).Rot[0]);
	const FLT x350 = (x347 * (*lh_p).Rot[2]) + (-1 * x348 * (*lh_p).Rot[3]) + (x345 * (*lh_p).Rot[0]);
	const FLT x351 = x348 + (-1 * x223 * x349) + (x350 * x198);
	const FLT x352 = (x348 * (*lh_p).Rot[0]) + (x345 * (*lh_p).Rot[3]) + (-1 * x347 * (*lh_p).Rot[1]);
	const FLT x353 = x345 + (-1 * x352 * x198) + (x349 * x196);
	const FLT x354 = x347 + (-1 * x350 * x196) + (x223 * x352);
	const FLT x355 = (x354 * x128) + (x353 * x124);
	const FLT x356 = (-1 * x131 * (x355 + (x351 * x118))) + (x85 * x351);
	const FLT x357 = x356 * x151;
	const FLT x358 = (x86 * ((-1 * x356 * x153) + x357)) + (x356 * x150);
	const FLT x359 = (x86 * x358) + (x356 * x149);
	const FLT x360 = (x355 * x138) + (-1 * x351 * x101);
	const FLT x361 = ((-1 * x354 * x141) + (x353 * x140)) * x142;
	const FLT x362 = x361 + (-1 * x360 * x137);
	const FLT x363 =
		x361 +
		(-1 * x112 *
		 (x360 +
		  (-1 * x162 *
		   ((x105 * ((x356 * x161) + (x86 * x359) + (x356 * x148) +
					 (x86 * ((x86 * (x358 + (x356 * x156) + (x86 * ((x356 * x159) + (-1 * x356 * x158) + x357)))) +
							 x359 + (x356 * x160))))) +
			(x362 * x147))) +
		  (x362 * x164) + (x356 * x135) + (x359 * x110)));
	const FLT x364 = x342 + x257 + x258;
	const FLT x365 = x269 + x337 + x312;
	const FLT x366 = x254 + x304 + x339;
	const FLT x367 = (-1 * x364 * sensor_pt[1]) + (x366 * sensor_pt[2]) + (x365 * sensor_pt[0]);
	const FLT x368 = x308 + x277 + x335;
	const FLT x369 = (-1 * x368 * sensor_pt[2]) + (x364 * sensor_pt[0]) + (x365 * sensor_pt[1]);
	const FLT x370 = (-1 * x286 * x366) + (x285 * x369) + (-1 * x280 * x367) + (x281 * x368);
	const FLT x371 = (x368 * sensor_pt[1]) + (x365 * sensor_pt[2]) + (-1 * x366 * sensor_pt[0]);
	const FLT x372 = (x282 * x366) + (-1 * x272 * x369) + (x280 * x371) + (-1 * x281 * x364);
	const FLT x373 = (-1 * x282 * x368) + (x286 * x364) + (x272 * x367) + (-1 * x285 * x371);
	const FLT x374 = (x373 * (*lh_p).Rot[1]) + (x370 * (*lh_p).Rot[0]) + (-1 * x372 * (*lh_p).Rot[2]);
	const FLT x375 = (x370 * (*lh_p).Rot[2]) + (x372 * (*lh_p).Rot[0]) + (-1 * x373 * (*lh_p).Rot[3]);
	const FLT x376 = x373 + (-1 * x223 * x374) + (x375 * x198);
	const FLT x377 = (x373 * (*lh_p).Rot[0]) + (-1 * x370 * (*lh_p).Rot[1]) + (x372 * (*lh_p).Rot[3]);
	const FLT x378 = x372 + (-1 * x377 * x198) + (x374 * x196);
	const FLT x379 = (x223 * x377) + x370 + (-1 * x375 * x196);
	const FLT x380 = (x379 * x128) + (x378 * x124);
	const FLT x381 = (x380 * x138) + (-1 * x376 * x101);
	const FLT x382 = ((-1 * x379 * x141) + (x378 * x140)) * x142;
	const FLT x383 = x145 * (x382 + (-1 * x381 * x137));
	const FLT x384 = (-1 * x131 * (x380 + (x376 * x118))) + (x85 * x376);
	const FLT x385 = x384 * x151;
	const FLT x386 = (x86 * ((-1 * x384 * x153) + x385)) + (x384 * x150);
	const FLT x387 = (x86 * x386) + (x384 * x149);
	const FLT x388 =
		x382 +
		(-1 * x112 *
		 (x381 + (x383 * x163) + (x387 * x110) +
		  (-1 * x162 *
		   ((x105 *
			 ((x384 * x161) + (x86 * x387) + (x384 * x148) +
			  (x86 * (x387 + (x86 * (x386 + (x384 * x156) + (x86 * ((x384 * x159) + x385 + (-1 * x384 * x158))))) +
					  (x384 * x160))))) +
			(x383 * x146))) +
		  (x384 * x135)));
	const FLT x389 = dt * dt * dt;
	const FLT x390 = 0.5 * x38 * x389;
	const FLT x391 = x58 * x390;
	const FLT x392 = x28 * x28 * x28;
	const FLT x393 = dt * dt * dt * dt;
	const FLT x394 = 1. / (x33 * sqrt(x33));
	const FLT x395 = 1.0 * x40 * x36;
	const FLT x396 = x395 * x394;
	const FLT x397 = x396 * x393;
	const FLT x398 = 2 * x39;
	const FLT x399 = x24 * x398;
	const FLT x400 = 2 * (1. / (x33 * x33)) * x37;
	const FLT x401 = x400 * x393;
	const FLT x402 = x28 * x401;
	const FLT x403 = x31 * x397;
	const FLT x404 = x45 * x395;
	const FLT x405 = x24 * x404;
	const FLT x406 = (-1 * x31 * x402) + (-1 * x28 * x405) + (x28 * x403) + (-1 * x401 * x392) + (x397 * x392) +
					 (-1 * x26 * x402) + (x28 * x399) + (x28 * x26 * x397);
	const FLT x407 = 1.0 / 2.0 * (1. / (x41 * sqrt(x41)));
	const FLT x408 = x46 * x36 * x407;
	const FLT x409 = x54 * x408;
	const FLT x410 = x406 * x409;
	const FLT x411 = x40 * x407;
	const FLT x412 = x406 * x411;
	const FLT x413 = x51 * x43;
	const FLT x414 = 0.5 * x45;
	const FLT x415 = x413 * x414;
	const FLT x416 = x24 * x415;
	const FLT x417 = x25 * x408;
	const FLT x418 = x406 * x417;
	const FLT x419 = x394 * x389;
	const FLT x420 = x29 * x419;
	const FLT x421 = x28 * x408;
	const FLT x422 = x23 * x406;
	const FLT x423 = x63 * x390;
	const FLT x424 = x0 * x28;
	const FLT x425 = x54 * x43;
	const FLT x426 = x419 * x425;
	const FLT x427 = (x424 * x426) + (-1 * x423 * x424);
	const FLT x428 = x25 * x28;
	const FLT x429 = x50 * x390;
	const FLT x430 = x43 * x48;
	const FLT x431 = x419 * x430;
	const FLT x432 = (-1 * x428 * x431) + (x429 * x428);
	const FLT x433 = x432 + x427 + (-1 * x422 * x421) + (-1 * x44 * x420) + (x0 * x410) + (-1 * x28 * x416) + x47 +
					 (-1 * x48 * x418) + (x29 * x391) + (-1 * x51 * x412);
	const FLT x434 = -1 * x55;
	const FLT x435 = x44 * x419;
	const FLT x436 = x28 * x435;
	const FLT x437 = x0 * x436;
	const FLT x438 = x0 * x408;
	const FLT x439 = x414 * x430;
	const FLT x440 = x24 * x439;
	const FLT x441 = x424 * x391;
	const FLT x442 = x60 * x390;
	const FLT x443 = x413 * x419;
	const FLT x444 = (x428 * x443) + (-1 * x428 * x442);
	const FLT x445 = x444 + (-1 * x441) + (x422 * x438) + (x28 * x410) + (-1 * x29 * x423) + x434 + (-1 * x28 * x440) +
					 x437 + (x29 * x426) + (x51 * x418) + (-1 * x48 * x412);
	const FLT x446 = -1 * x53;
	const FLT x447 = x48 * x406;
	const FLT x448 = x423 * x428;
	const FLT x449 = x426 * x428;
	const FLT x450 = x51 * x406;
	const FLT x451 = x44 * x414;
	const FLT x452 = x24 * x451;
	const FLT x453 = (x424 * x429) + (-1 * x424 * x431);
	const FLT x454 = (-1 * x28 * x452) + (x413 * x420) + (-1 * x25 * x410) + (-1 * x449) + x453 + (-1 * x23 * x412) +
					 x446 + (x450 * x421) + (-1 * x29 * x442) + (-1 * x438 * x447) + x448;
	const FLT x455 = (x454 * sensor_pt[2]) + (-1 * x433 * sensor_pt[1]) + (x445 * sensor_pt[0]);
	const FLT x456 = x414 * x425;
	const FLT x457 = x24 * x456;
	const FLT x458 = x54 * x411;
	const FLT x459 = x424 * x442;
	const FLT x460 = x424 * x443;
	const FLT x461 = x25 * x436;
	const FLT x462 = x428 * x391;
	const FLT x463 = (-1 * x421 * x447) + x459 + (-1 * x420 * x430) + (x23 * x418) + (x29 * x429) + x57 +
					 (-1 * x28 * x457) + (-1 * x460) + (-1 * x458 * x406) + x461 + (-1 * x450 * x438) + (-1 * x462);
	const FLT x464 = (x433 * sensor_pt[0]) + (x445 * sensor_pt[1]) + (-1 * x463 * sensor_pt[2]);
	const FLT x465 = (-1 * x455 * x280) + (-1 * x454 * x286) + (x463 * x281) + (x464 * x285);
	const FLT x466 = (x463 * sensor_pt[1]) + (-1 * x454 * sensor_pt[0]) + (x445 * sensor_pt[2]);
	const FLT x467 = (x466 * x280) + (x454 * x282) + (-1 * x464 * x272) + (-1 * x433 * x281);
	const FLT x468 = (x455 * x272) + (x433 * x286) + (-1 * x466 * x285) + (-1 * x463 * x282);
	const FLT x469 = (x468 * (*lh_p).Rot[1]) + (x465 * (*lh_p).Rot[0]) + (-1 * x467 * (*lh_p).Rot[2]);
	const FLT x470 = (x465 * (*lh_p).Rot[2]) + (-1 * x468 * (*lh_p).Rot[3]) + (x467 * (*lh_p).Rot[0]);
	const FLT x471 = (-1 * x469 * x223) + x468 + (x470 * x198);
	const FLT x472 = (x468 * (*lh_p).Rot[0]) + (-1 * x465 * (*lh_p).Rot[1]) + (x467 * (*lh_p).Rot[3]);
	const FLT x473 = x467 + (x469 * x196) + (-1 * x472 * x198);
	const FLT x474 = x465 + (-1 * x470 * x196) + (x472 * x223);
	const FLT x475 = (x474 * x128) + (x473 * x124);
	const FLT x476 = (-1 * x131 * (x475 + (x471 * x118))) + (x85 * x471);
	const FLT x477 = (x475 * x138) + (-1 * x471 * x101);
	const FLT x478 = ((-1 * x474 * x141) + (x473 * x140)) * x142;
	const FLT x479 = x478 + (-1 * x477 * x137);
	const FLT x480 = x476 * x151;
	const FLT x481 = (x86 * ((-1 * x476 * x153) + x480)) + (x476 * x150);
	const FLT x482 = (x86 * x481) + (x476 * x149);
	const FLT x483 =
		x478 +
		(-1 * x112 *
		 (x477 + (x482 * x110) + (x479 * x164) + (x476 * x135) +
		  (-1 * x162 *
		   ((x105 *
			 ((x86 * (x482 + (x86 * (x481 + (x476 * x156) + (x86 * (x480 + (x476 * x159) + (-1 * x476 * x158))))) +
					  (x476 * x160))) +
			  (x476 * x161) + (x476 * x148) + (x86 * x482))) +
			(x479 * x147)))));
	const FLT x484 = x0 * x24;
	const FLT x485 = x0 * x397;
	const FLT x486 = x0 * x401;
	const FLT x487 = (x0 * x0 * x0) * x393;
	const FLT x488 = (x487 * x396) + (-1 * x487 * x400) + (-1 * x29 * x486) + (x29 * x485) + (x484 * x398) +
					 (-1 * x484 * x404) + (-1 * x26 * x486) + (x26 * x485);
	const FLT x489 = x488 * x409;
	const FLT x490 = x48 * x488;
	const FLT x491 = x488 * x411;
	const FLT x492 = x23 * x488;
	const FLT x493 = x0 * x25;
	const FLT x494 = (x493 * x429) + (-1 * x493 * x431);
	const FLT x495 = (-1 * x437) + (-1 * x51 * x491) + (x31 * x426) + x434 + x494 + (-1 * x31 * x423) +
					 (-1 * x484 * x415) + (x0 * x489) + (-1 * x492 * x421) + x441 + (-1 * x490 * x417);
	const FLT x496 = -1 * x47;
	const FLT x497 = x31 * x419;
	const FLT x498 = x493 * x443;
	const FLT x499 = x51 * x488;
	const FLT x500 = x493 * x442;
	const FLT x501 = (-1 * x500) + (x499 * x417) + x427 + x498 + x496 + (-1 * x484 * x439) + (x28 * x489) +
					 (x492 * x438) + (-1 * x31 * x391) + (x44 * x497) + (-1 * x48 * x491);
	const FLT x502 = x493 * x426;
	const FLT x503 = x493 * x423;
	const FLT x504 = (-1 * x502) + (x31 * x429) + (-1 * x497 * x430) + (-1 * x490 * x438) + (-1 * x451 * x484) +
					 (x499 * x421) + x460 + x57 + x503 + (-1 * x25 * x489) + (-1 * x459) + (-1 * x23 * x491);
	const FLT x505 = (x504 * sensor_pt[2]) + (-1 * x495 * sensor_pt[1]) + (x501 * sensor_pt[0]);
	const FLT x506 = (-1 * x493 * x391) + (x493 * x435);
	const FLT x507 = x453 + x506 + (x31 * x442) + x53 + (-1 * x490 * x421) + (x492 * x417) + (-1 * x458 * x488) +
					 (-1 * x497 * x413) + (-1 * x456 * x484) + (-1 * x499 * x438);
	const FLT x508 = (x495 * sensor_pt[0]) + (-1 * x507 * sensor_pt[2]) + (x501 * sensor_pt[1]);
	const FLT x509 = (x508 * x285) + (x507 * x281) + (-1 * x505 * x280) + (-1 * x504 * x286);
	const FLT x510 = (x507 * sensor_pt[1]) + (x501 * sensor_pt[2]) + (-1 * x504 * sensor_pt[0]);
	const FLT x511 = (x510 * x280) + (-1 * x508 * x272) + (-1 * x495 * x281) + (x504 * x282);
	const FLT x512 = (x505 * x272) + (-1 * x507 * x282) + (-1 * x510 * x285) + (x495 * x286);
	const FLT x513 = (x512 * (*lh_p).Rot[1]) + (x509 * (*lh_p).Rot[0]) + (-1 * x511 * (*lh_p).Rot[2]);
	const FLT x514 = (x509 * (*lh_p).Rot[2]) + (-1 * x512 * (*lh_p).Rot[3]) + (x511 * (*lh_p).Rot[0]);
	const FLT x515 = x512 + (-1 * x513 * x223) + (x514 * x198);
	const FLT x516 = (x512 * (*lh_p).Rot[0]) + (-1 * x509 * (*lh_p).Rot[1]) + (x511 * (*lh_p).Rot[3]);
	const FLT x517 = x511 + (-1 * x516 * x198) + (x513 * x196);
	const FLT x518 = x509 + (x516 * x223) + (-1 * x514 * x196);
	const FLT x519 = (x518 * x128) + (x517 * x124);
	const FLT x520 = (-1 * x131 * (x519 + (x515 * x118))) + (x85 * x515);
	const FLT x521 = x520 * x133;
	const FLT x522 = x88 * x521;
	const FLT x523 = (x86 * ((-1 * x87 * x521) + x522)) + (x520 * x150);
	const FLT x524 = (x86 * x523) + (x520 * x149);
	const FLT x525 = (x519 * x138) + (-1 * x515 * x101);
	const FLT x526 = ((-1 * x518 * x141) + (x517 * x140)) * x142;
	const FLT x527 = x526 + (-1 * x525 * x137);
	const FLT x528 =
		x526 + (-1 * x112 *
				(x525 + (x527 * x164) + (x524 * x110) + (x521 * x134) +
				 (-1 * x162 *
				  ((x105 * ((x520 * x161) +
							(x86 * ((x86 * (x523 + (x94 * x521) + (x86 * ((x93 * x521) + (-1 * x521 * x157) + x522)))) +
									x524 + (x95 * x521))) +
							(x86 * x524) + (x520 * x148))) +
				   (x527 * x147)))));
	const FLT x529 = x25 * x25 * x25;
	const FLT x530 = x25 * x401;
	const FLT x531 = (x25 * x403) + (-1 * x25 * x405) + (-1 * x401 * x529) + (x25 * x29 * x397) + (x25 * x399) +
					 (x529 * x397) + (-1 * x31 * x530) + (-1 * x29 * x530);
	const FLT x532 = x409 * x531;
	const FLT x533 = x25 * x531;
	const FLT x534 = x408 * x533;
	const FLT x535 = x411 * x531;
	const FLT x536 = x26 * x419;
	const FLT x537 = x421 * x531;
	const FLT x538 = (-1 * x23 * x537) + x502 + (-1 * x461) + (-1 * x25 * x416) + (x26 * x429) + (-1 * x503) +
					 (x0 * x532) + x57 + (-1 * x48 * x534) + x462 + (-1 * x51 * x535) + (-1 * x430 * x536);
	const FLT x539 = x438 * x531;
	const FLT x540 = x506 + (-1 * x26 * x442) + (x51 * x534) + (x23 * x539) + (-1 * x448) + (x413 * x536) + x449 +
					 (-1 * x25 * x440) + (-1 * x48 * x535) + (x28 * x532) + x446;
	const FLT x541 = x444 + (-1 * x23 * x535) + (-1 * x425 * x536) + (x51 * x537) + (x26 * x423) + (-1 * x48 * x539) +
					 (-1 * x409 * x533) + x494 + x55 + (-1 * x25 * x452);
	const FLT x542 = (x541 * sensor_pt[2]) + (-1 * x538 * sensor_pt[1]) + (x540 * sensor_pt[0]);
	const FLT x543 = (-1 * x48 * x537) + (-1 * x26 * x391) + (x44 * x536) + x432 + (-1 * x25 * x457) +
					 (-1 * x458 * x531) + (x23 * x534) + x496 + x500 + (-1 * x51 * x539) + (-1 * x498);
	const FLT x544 = (x538 * sensor_pt[0]) + (-1 * x543 * sensor_pt[2]) + (x540 * sensor_pt[1]);
	const FLT x545 = (x544 * x285) + (x543 * x281) + (-1 * x542 * x280) + (-1 * x541 * x286);
	const FLT x546 = (x543 * sensor_pt[1]) + (-1 * x541 * sensor_pt[0]) + (x540 * sensor_pt[2]);
	const FLT x547 = (x546 * x280) + (-1 * x538 * x281) + (-1 * x544 * x272) + (x541 * x282);
	const FLT x548 = (x538 * x286) + (-1 * x543 * x282) + (x542 * x272) + (-1 * x546 * x285);
	const FLT x549 = (x548 * (*lh_p).Rot[1]) + (x545 * (*lh_p).Rot[0]) + (-1 * x547 * (*lh_p).Rot[2]);
	const FLT x550 = (x545 * (*lh_p).Rot[2]) + (-1 * x548 * (*lh_p).Rot[3]) + (x547 * (*lh_p).Rot[0]);
	const FLT x551 = x548 + (-1 * x549 * x223) + (x550 * x198);
	const FLT x552 = (x548 * (*lh_p).Rot[0]) + (-1 * x545 * (*lh_p).Rot[1]) + (x547 * (*lh_p).Rot[3]);
	const FLT x553 = x547 + (-1 * x552 * x198) + (x549 * x196);
	const FLT x554 = x545 + (-1 * x550 * x196) + (x552 * x223);
	const FLT x555 = (x554 * x128) + (x553 * x124);
	const FLT x556 = (x555 * x138) + (-1 * x551 * x101);
	const FLT x557 = ((-1 * x554 * x141) + (x553 * x140)) * x142;
	const FLT x558 = x557 + (-1 * x556 * x137);
	const FLT x559 = (-1 * x131 * (x555 + (x551 * x118))) + (x85 * x551);
	const FLT x560 = x559 * x151;
	const FLT x561 = (x86 * ((-1 * x559 * x153) + x560)) + (x559 * x150);
	const FLT x562 = (x86 * x561) + (x559 * x149);
	const FLT x563 =
		x557 +
		(-1 * x112 *
		 (x556 + (x558 * x164) + (x559 * x135) +
		  (-1 * x162 *
		   ((x105 *
			 ((x559 * x148) + (x559 * x161) +
			  (x86 * (x562 + (x86 * (x561 + (x559 * x156) + (x86 * (x560 + (x559 * x159) + (-1 * x559 * x158))))) +
					  (x559 * x160))) +
			  (x86 * x562))) +
			(x558 * x147))) +
		  (x562 * x110)));
	const FLT x564 = dt * x197;
	const FLT x565 = dt * x199;
	const FLT x566 = x565 + x564;
	const FLT x567 = -1 * dt * x203;
	const FLT x568 = (-1 * dt * x201) + dt;
	const FLT x569 = x568 + x567;
	const FLT x570 = dt * x206;
	const FLT x571 = dt * x207;
	const FLT x572 = x571 + (-1 * x570);
	const FLT x573 = (x572 * x128) + (x569 * x124);
	const FLT x574 = (-1 * x131 * (x573 + (x566 * x118))) + (x85 * x566);
	const FLT x575 = x574 * x151;
	const FLT x576 = x574 * x133;
	const FLT x577 = (x86 * ((-1 * x87 * x576) + x575)) + (x574 * x150);
	const FLT x578 = (x86 * x577) + (x574 * x149);
	const FLT x579 = (x573 * x138) + (-1 * x566 * x101);
	const FLT x580 = ((-1 * x572 * x141) + (x569 * x140)) * x142;
	const FLT x581 = x580 + (-1 * x579 * x137);
	const FLT x582 =
		x580 +
		(-1 * x112 *
		 ((x581 * x164) + (x576 * x134) + (x578 * x110) + x579 +
		  (-1 * x162 *
		   ((x105 *
			 ((x86 * x578) + (x574 * x161) + (x574 * x148) +
			  (x86 * (x578 + (x86 * (x577 + (x574 * x156) + (x86 * ((x574 * x159) + x575 + (-1 * x576 * x157))))) +
					  (x574 * x160))))) +
			(x581 * x147)))));
	const FLT x583 = -1 * dt * x218;
	const FLT x584 = x568 + x583;
	const FLT x585 = x564 + (-1 * x565);
	const FLT x586 = dt * x222;
	const FLT x587 = dt * x224;
	const FLT x588 = x587 + x586;
	const FLT x589 = (x588 * x128) + (x585 * x124);
	const FLT x590 = (x589 * x138) + (-1 * x584 * x101);
	const FLT x591 = ((-1 * x588 * x141) + (x585 * x140)) * x142;
	const FLT x592 = x591 + (-1 * x590 * x137);
	const FLT x593 = (-1 * x131 * (x589 + (x584 * x118))) + (x85 * x584);
	const FLT x594 = x593 * x151;
	const FLT x595 = (x86 * ((-1 * x593 * x153) + x594)) + (x593 * x150);
	const FLT x596 = (x86 * x595) + (x593 * x149);
	const FLT x597 =
		x591 +
		(-1 * x112 *
		 ((x596 * x110) + (x592 * x164) +
		  (-1 * x162 *
		   ((x105 *
			 ((x593 * x161) + (x86 * x596) + (x593 * x148) +
			  (x86 * (x596 + (x86 * (x595 + (x593 * x156) + (x86 * ((x593 * x159) + x594 + (-1 * x593 * x158))))) +
					  (x593 * x160))))) +
			(x592 * x147))) +
		  x590 + (x593 * x135)));
	const FLT x598 = x586 + (-1 * x587);
	const FLT x599 = x570 + x571;
	const FLT x600 = x567 + dt + x583;
	const FLT x601 = (x600 * x128) + (x599 * x124);
	const FLT x602 = (x601 * x138) + (-1 * x598 * x101);
	const FLT x603 = ((-1 * x600 * x141) + (x599 * x140)) * x142;
	const FLT x604 = x603 + (-1 * x602 * x137);
	const FLT x605 = (-1 * x131 * (x601 + (x598 * x118))) + (x85 * x598);
	const FLT x606 = x605 * x151;
	const FLT x607 = (x86 * ((-1 * x605 * x153) + x606)) + (x605 * x150);
	const FLT x608 = (x86 * x607) + (x605 * x149);
	const FLT x609 =
		x603 +
		(-1 * x112 *
		 ((x605 * x135) + (x604 * x164) + x602 +
		  (-1 * x162 *
		   ((x105 *
			 ((x605 * x161) + (x86 * x608) + (x605 * x148) +
			  (x86 * (x608 + (x86 * (x607 + (x605 * x156) + (x86 * ((x605 * x159) + x606 + (-1 * x605 * x158))))) +
					  (x605 * x160))))) +
			(x604 * x147))) +
		  (x608 * x110)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT), x165 + (x166 * x165));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT), x182 + (x166 * x182));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT), x195 + (x166 * x195));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[0]) / sizeof(FLT), x217 + (x217 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[1]) / sizeof(FLT), x234 + (x234 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Pos[2]) / sizeof(FLT), x246 + (x246 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT), x303 + (x303 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT), x334 + (x334 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT), x363 + (x363 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT), x388 + (x388 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x483 + (x483 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x528 + (x528 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x563 + (x563 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[0]) / sizeof(FLT), x582 + (x582 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[1]) / sizeof(FLT), x597 + (x597 * x166));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Velocity.Pos[2]) / sizeof(FLT), x609 + (x609 * x166));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_x0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_x0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_error_model(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = x2 * x7;
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x1);
	const FLT x11 = cos(x3);
	const FLT x12 = x11 * x10;
	const FLT x13 = x9 * x12;
	const FLT x14 = x13 + x8;
	const FLT x15 = x2 * x11;
	const FLT x16 = x6 * x15;
	const FLT x17 = x4 * x9;
	const FLT x18 = x10 * x17;
	const FLT x19 = x18 + (-1 * x16);
	const FLT x20 = x7 * x10;
	const FLT x21 = x9 * x15;
	const FLT x22 = x21 + x20;
	const FLT x23 = x2 * x17;
	const FLT x24 = x6 * x12;
	const FLT x25 = x24 + (-1 * x23);
	const FLT x26 = (x25 * x25) + (x22 * x22) + (x19 * x19) + (x14 * x14);
	const FLT x27 = 1. / sqrt(x26);
	const FLT x28 = x27 * (*_x0).Pose.Rot[2];
	const FLT x29 = x27 * (*_x0).Pose.Rot[0];
	const FLT x30 = x27 * (*_x0).Pose.Rot[3];
	const FLT x31 = x27 * (*_x0).Pose.Rot[1];
	const FLT x32 = (-1 * x31 * x19) + (x30 * x25) + (x28 * x14) + (x22 * x29);
	const FLT x33 = dt * dt;
	const FLT x34 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x35 = x34 * x34;
	const FLT x36 = x33 * x35;
	const FLT x37 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x38 = x37 * x37;
	const FLT x39 = x33 * x38;
	const FLT x40 = x0 * x0;
	const FLT x41 = x40 * x33;
	const FLT x42 = 1e-10 + x41 + x36 + x39;
	const FLT x43 = sqrt(x42);
	const FLT x44 = 0.5 * x43;
	const FLT x45 = sin(x44);
	const FLT x46 = x45 * x45;
	const FLT x47 = 1. / x42;
	const FLT x48 = x46 * x47;
	const FLT x49 = cos(x44);
	const FLT x50 = (x48 * x39) + (x49 * x49) + (x48 * x36) + (x41 * x48);
	const FLT x51 = 1. / sqrt(x50);
	const FLT x52 = x51 * x45;
	const FLT x53 = 1. / x43;
	const FLT x54 = dt * x53;
	const FLT x55 = x54 * x52;
	const FLT x56 = x55 * x32;
	const FLT x57 = (-1 * x31 * x25) + (x29 * x14) + (-1 * x30 * x19) + (-1 * x22 * x28);
	const FLT x58 = x51 * x49;
	const FLT x59 = x58 * x57;
	const FLT x60 = (x29 * x19) + (x30 * x14) + (x31 * x22) + (-1 * x25 * x28);
	const FLT x61 = x60 * x55;
	const FLT x62 = (-1 * x30 * x22) + (x31 * x14) + (x28 * x19) + (x25 * x29);
	const FLT x63 = x62 * x52;
	const FLT x64 = x63 * x54;
	const FLT x65 = (-1 * x64 * x37) + (-1 * x61 * x34) + (-1 * x0 * x56) + x59;
	const FLT x66 = x57 * x55;
	const FLT x67 = x58 * x32;
	const FLT x68 = (-1 * x61 * x37) + x67 + (x64 * x34) + (x0 * x66);
	const FLT x69 = x60 * x58;
	const FLT x70 = (x56 * x37) + (x66 * x34) + (-1 * x0 * x64) + x69;
	const FLT x71 = (x65 * sensor_pt[0]) + (-1 * x70 * sensor_pt[1]) + (x68 * sensor_pt[2]);
	const FLT x72 = x62 * x58;
	const FLT x73 = (-1 * x56 * x34) + (x66 * x37) + (x0 * x61) + x72;
	const FLT x74 = (-1 * x73 * sensor_pt[2]) + (x65 * sensor_pt[1]) + (x70 * sensor_pt[0]);
	const FLT x75 = dt * fabs(dt);
	const FLT x76 = 1.0 / 2.0 * x75;
	const FLT x77 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (2 * ((x73 * x74) + (-1 * x71 * x68))) +
					sensor_pt[2] + (x76 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x78 = (-1 * x68 * sensor_pt[0]) + (x65 * sensor_pt[2]) + (x73 * sensor_pt[1]);
	const FLT x79 = (*_x0).Pose.Pos[1] + (2 * ((x71 * x70) + (-1 * x73 * x78))) +
					(x76 * ((*_x0).Acc[1] + (*error_model).Acc[1])) + (*error_model).Pose.Pos[1] + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]));
	const FLT x80 = (*_x0).Pose.Pos[0] + (2 * ((x78 * x68) + (-1 * x70 * x74))) +
					(x76 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + (*error_model).Pose.Pos[0] + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x81 = (-1 * x80 * (*lh_p).Rot[2]) + (x77 * (*lh_p).Rot[0]) + (x79 * (*lh_p).Rot[1]);
	const FLT x82 = (x80 * (*lh_p).Rot[0]) + (-1 * x79 * (*lh_p).Rot[3]) + (x77 * (*lh_p).Rot[2]);
	const FLT x83 = (*lh_p).Pos[1] + x79 + (2 * ((x82 * (*lh_p).Rot[3]) + (-1 * x81 * (*lh_p).Rot[1])));
	const FLT x84 = x83 * x83;
	const FLT x85 = (-1 * x77 * (*lh_p).Rot[1]) + (x80 * (*lh_p).Rot[3]) + (x79 * (*lh_p).Rot[0]);
	const FLT x86 = x77 + (2 * ((x85 * (*lh_p).Rot[1]) + (-1 * x82 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x87 = x80 + (*lh_p).Pos[0] + (2 * ((x81 * (*lh_p).Rot[2]) + (-1 * x85 * (*lh_p).Rot[3])));
	const FLT x88 = x87 * x87;
	const FLT x89 = x88 + (x86 * x86);
	const FLT x90 = x89 + x84;
	const FLT x91 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x92 = cos(x91);
	const FLT x93 = 1. / x92;
	const FLT x94 = x93 * (1. / sqrt(x90));
	const FLT x95 = asin(x83 * x94);
	const FLT x96 = 8.0108022e-06 * x95;
	const FLT x97 = -8.0108022e-06 + (-1 * x96);
	const FLT x98 = 0.0028679863 + (x97 * x95);
	const FLT x99 = 5.3685255e-06 + (x98 * x95);
	const FLT x100 = 0.0076069798 + (x99 * x95);
	const FLT x101 = x95 * x100;
	const FLT x102 = -8.0108022e-06 + (-1.60216044e-05 * x95);
	const FLT x103 = x98 + (x95 * x102);
	const FLT x104 = x99 + (x95 * x103);
	const FLT x105 = x100 + (x95 * x104);
	const FLT x106 = (x95 * x105) + x101;
	const FLT x107 = sin(x91);
	const FLT x108 = atan2(-1 * x86, x87);
	const FLT x109 = tan(x91);
	const FLT x110 = (1. / sqrt(x89)) * x109;
	const FLT x111 = -1 * x83 * x110;
	const FLT x112 = (-1 * asin(x111)) + (*bsc0).ogeephase + x108;
	const FLT x113 = (sin(x112) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x114 = x107 * x113;
	const FLT x115 = x92 + (x106 * x114);
	const FLT x116 = 1. / x115;
	const FLT x117 = x95 * x95;
	const FLT x118 = x113 * x117;
	const FLT x119 = x118 * x116;
	const FLT x120 = x111 + (x100 * x119);
	const FLT x121 = 1. / sqrt(1 + (-1 * (x120 * x120)));
	const FLT x122 = x75 * (*lh_p).Rot[1] * (*lh_p).Rot[2];
	const FLT x123 = x75 * (*lh_p).Rot[3];
	const FLT x124 = x123 * (*lh_p).Rot[0];
	const FLT x125 = x124 + x122;
	const FLT x126 = 2 * x83;
	const FLT x127 = (*lh_p).Rot[2] * (*lh_p).Rot[2];
	const FLT x128 = -1 * x75 * x127;
	const FLT x129 = (*lh_p).Rot[3] * (*lh_p).Rot[3];
	const FLT x130 = x76 + (-1 * x75 * x129);
	const FLT x131 = x130 + x128;
	const FLT x132 = 2 * x87;
	const FLT x133 = x75 * (*lh_p).Rot[0];
	const FLT x134 = x133 * (*lh_p).Rot[2];
	const FLT x135 = x123 * (*lh_p).Rot[1];
	const FLT x136 = x135 + (-1 * x134);
	const FLT x137 = 2 * x86;
	const FLT x138 = (x137 * x136) + (x131 * x132);
	const FLT x139 = 1.0 / 2.0 * x83;
	const FLT x140 = x93 * (1. / (x90 * sqrt(x90))) * x139;
	const FLT x141 = (-1 * x140 * (x138 + (x126 * x125))) + (x94 * x125);
	const FLT x142 = 1. / sqrt(1 + (-1 * x84 * (1. / (x92 * x92)) * (1. / x90)));
	const FLT x143 = 2 * x101 * x113 * x116;
	const FLT x144 = x142 * x143;
	const FLT x145 = 1. / x89;
	const FLT x146 = 1. / sqrt(1 + (-1 * x84 * (x109 * x109) * x145));
	const FLT x147 = (1. / (x89 * sqrt(x89))) * x109 * x139;
	const FLT x148 = (x138 * x147) + (-1 * x110 * x125);
	const FLT x149 = (1. / x88) * x86;
	const FLT x150 = 1. / x87;
	const FLT x151 = x88 * x145;
	const FLT x152 = ((-1 * x136 * x150) + (x131 * x149)) * x151;
	const FLT x153 = x152 + (-1 * x146 * x148);
	const FLT x154 = cos(x112) * (*bsc0).ogeemag;
	const FLT x155 = x107 * x106;
	const FLT x156 = x154 * x155;
	const FLT x157 = x105 * x142;
	const FLT x158 = x99 * x142;
	const FLT x159 = x98 * x142;
	const FLT x160 = x97 * x142;
	const FLT x161 = x160 * x141;
	const FLT x162 = x96 * x142;
	const FLT x163 = (x95 * ((-1 * x162 * x141) + x161)) + (x141 * x159);
	const FLT x164 = (x95 * x163) + (x141 * x158);
	const FLT x165 = x103 * x142;
	const FLT x166 = 2.40324066e-05 * x95;
	const FLT x167 = x166 * x142;
	const FLT x168 = x102 * x142;
	const FLT x169 = x104 * x142;
	const FLT x170 = x100 * x142;
	const FLT x171 = x100 * x118 * (1. / (x115 * x115));
	const FLT x172 = x100 * x116 * x117;
	const FLT x173 = x172 * x154;
	const FLT x174 =
		x152 +
		(-1 * x121 *
		 (x148 + (x119 * x164) + (x173 * x153) + (x141 * x144) +
		  (-1 * x171 *
		   ((x114 *
			 ((x170 * x141) + (x141 * x157) +
			  (x95 * (x164 + (x95 * (x163 + (x165 * x141) + (x95 * (x161 + (x168 * x141) + (-1 * x167 * x141))))) +
					  (x169 * x141))) +
			  (x95 * x164))) +
			(x153 * x156)))));
	const FLT x175 = cos((*bsc0).gibpha + (-1 * asin(x120)) + x108) * (*bsc0).gibmag;
	const FLT x176 = (*lh_p).Rot[1] * (*lh_p).Rot[1];
	const FLT x177 = -1 * x75 * x176;
	const FLT x178 = x130 + x177;
	const FLT x179 = x122 + (-1 * x124);
	const FLT x180 = x123 * (*lh_p).Rot[2];
	const FLT x181 = x133 * (*lh_p).Rot[1];
	const FLT x182 = x181 + x180;
	const FLT x183 = (x182 * x137) + (x179 * x132);
	const FLT x184 = (-1 * x140 * (x183 + (x126 * x178))) + (x94 * x178);
	const FLT x185 = (x183 * x147) + (-1 * x110 * x178);
	const FLT x186 = ((-1 * x182 * x150) + (x179 * x149)) * x151;
	const FLT x187 = x186 + (-1 * x185 * x146);
	const FLT x188 = x160 * x184;
	const FLT x189 = (x95 * ((-1 * x162 * x184) + x188)) + (x184 * x159);
	const FLT x190 = (x95 * x189) + (x184 * x158);
	const FLT x191 =
		x186 +
		(-1 * x121 *
		 (x185 + (x173 * x187) + (x119 * x190) + (x184 * x144) +
		  (-1 * x171 *
		   ((x114 *
			 ((x170 * x184) + (x184 * x157) + (x95 * x190) +
			  (x95 * (x190 + (x95 * (x189 + (x165 * x184) + (x95 * ((x168 * x184) + x188 + (-1 * x167 * x184))))) +
					  (x169 * x184))))) +
			(x187 * x156)))));
	const FLT x192 = x180 + (-1 * x181);
	const FLT x193 = x134 + x135;
	const FLT x194 = x128 + x76 + x177;
	const FLT x195 = (x194 * x137) + (x193 * x132);
	const FLT x196 = (-1 * x140 * (x195 + (x126 * x192))) + (x94 * x192);
	const FLT x197 = x196 * x142;
	const FLT x198 = x97 * x197;
	const FLT x199 = (x95 * ((-1 * x96 * x197) + x198)) + (x98 * x197);
	const FLT x200 = (x95 * x199) + (x99 * x197);
	const FLT x201 = (x195 * x147) + (-1 * x110 * x192);
	const FLT x202 = ((-1 * x194 * x150) + (x193 * x149)) * x151;
	const FLT x203 = x154 * (x202 + (-1 * x201 * x146));
	const FLT x204 =
		x202 +
		(-1 * x121 *
		 ((x203 * x172) + x201 + (x200 * x119) +
		  (-1 * x171 *
		   ((x114 *
			 ((x100 * x197) + (x95 * x200) + (x105 * x197) +
			  (x95 * (x200 + (x95 * (x199 + (x103 * x197) + (x95 * ((x102 * x197) + x198 + (-1 * x166 * x197))))) +
					  (x169 * x196))))) +
			(x203 * x155))) +
		  (x197 * x143)));
	const FLT x205 = 0.5 * x13;
	const FLT x206 = 0.5 * x8;
	const FLT x207 = x206 + x205;
	const FLT x208 = 2 * x25;
	const FLT x209 = 0.5 * x16;
	const FLT x210 = -1 * x209;
	const FLT x211 = 0.5 * x18;
	const FLT x212 = x211 + x210;
	const FLT x213 = 2 * x22;
	const FLT x214 = 0.5 * x20;
	const FLT x215 = -0.5 * x21;
	const FLT x216 = x215 + (-1 * x214);
	const FLT x217 = 2 * x216;
	const FLT x218 = 0.5 * x24;
	const FLT x219 = -1 * x218;
	const FLT x220 = 0.5 * x23;
	const FLT x221 = x220 + x219;
	const FLT x222 = 2 * x14;
	const FLT x223 = 1.0 / 2.0 * (1. / (x26 * sqrt(x26)));
	const FLT x224 = x223 * ((x19 * x217) + (x208 * x207) + (x221 * x222) + (x213 * x212));
	const FLT x225 = x224 * (*_x0).Pose.Rot[1];
	const FLT x226 = x25 * x224;
	const FLT x227 = -1 * x31 * x216;
	const FLT x228 = x14 * x224;
	const FLT x229 = x22 * (*_x0).Pose.Rot[0];
	const FLT x230 = x30 * x207;
	const FLT x231 = x230 + (x29 * x212) + (-1 * x224 * x229) + (-1 * x226 * (*_x0).Pose.Rot[3]) + (x19 * x225) + x227 +
					 (-1 * x228 * (*_x0).Pose.Rot[2]) + (x28 * x221);
	const FLT x232 = x55 * x37;
	const FLT x233 = -1 * x31 * x207;
	const FLT x234 = x30 * x216;
	const FLT x235 = x22 * x224;
	const FLT x236 = x19 * x224;
	const FLT x237 = (x29 * x221) + (-1 * x28 * x212) + x233 + (x236 * (*_x0).Pose.Rot[3]) +
					 (x235 * (*_x0).Pose.Rot[2]) + (x25 * x225) + (-1 * x228 * (*_x0).Pose.Rot[0]) + (-1 * x234);
	const FLT x238 = x55 * x237;
	const FLT x239 = x28 * x216;
	const FLT x240 = x29 * x207;
	const FLT x241 = (-1 * x226 * (*_x0).Pose.Rot[0]) + x240 + (-1 * x30 * x212) + (-1 * x236 * (*_x0).Pose.Rot[2]) +
					 (x235 * (*_x0).Pose.Rot[3]) + (-1 * x14 * x225) + x239 + (x31 * x221);
	const FLT x242 = x55 * x241;
	const FLT x243 = x28 * x207;
	const FLT x244 = x29 * x216;
	const FLT x245 = x244 + (-1 * x243) + (x31 * x212) + (-1 * x228 * (*_x0).Pose.Rot[3]) + (-1 * x22 * x225) +
					 (x226 * (*_x0).Pose.Rot[2]) + (-1 * x236 * (*_x0).Pose.Rot[0]) + (x30 * x221);
	const FLT x246 = (-1 * x0 * x242) + (x232 * x231) + (x58 * x245) + (x34 * x238);
	const FLT x247 = x55 * x245;
	const FLT x248 = x0 * x55;
	const FLT x249 = (x58 * x237) + (-1 * x231 * x248) + (-1 * x232 * x241) + (-1 * x34 * x247);
	const FLT x250 = (x0 * x238) + (x34 * x242) + (x58 * x231) + (-1 * x232 * x245);
	const FLT x251 = (x250 * sensor_pt[2]) + (-1 * x246 * sensor_pt[1]) + (x249 * sensor_pt[0]);
	const FLT x252 = 2 * x68;
	const FLT x253 = x55 * x34;
	const FLT x254 = (x58 * x241) + (x0 * x247) + (x232 * x237) + (-1 * x231 * x253);
	const FLT x255 = (x246 * sensor_pt[0]) + (-1 * x254 * sensor_pt[2]) + (x249 * sensor_pt[1]);
	const FLT x256 = 2 * x73;
	const FLT x257 = 2 * x74;
	const FLT x258 = 2 * x71;
	const FLT x259 = (-1 * x250 * x258) + (x254 * x257) + (-1 * x252 * x251) + (x256 * x255);
	const FLT x260 = 2 * x78;
	const FLT x261 = 2 * x70;
	const FLT x262 = (x254 * sensor_pt[1]) + (-1 * x250 * sensor_pt[0]) + (x249 * sensor_pt[2]);
	const FLT x263 = (-1 * x257 * x246) + (x262 * x252) + (x260 * x250) + (-1 * x261 * x255);
	const FLT x264 = (x258 * x246) + (-1 * x262 * x256) + (x261 * x251) + (-1 * x260 * x254);
	const FLT x265 = (x264 * (*lh_p).Rot[1]) + (x259 * (*lh_p).Rot[0]) + (-1 * x263 * (*lh_p).Rot[2]);
	const FLT x266 = 2 * (*lh_p).Rot[1];
	const FLT x267 = (x259 * (*lh_p).Rot[2]) + (-1 * x264 * (*lh_p).Rot[3]) + (x263 * (*lh_p).Rot[0]);
	const FLT x268 = 2 * (*lh_p).Rot[3];
	const FLT x269 = (-1 * x266 * x265) + x264 + (x268 * x267);
	const FLT x270 = (-1 * x259 * (*lh_p).Rot[1]) + (x264 * (*lh_p).Rot[0]) + (x263 * (*lh_p).Rot[3]);
	const FLT x271 = 2 * (*lh_p).Rot[2];
	const FLT x272 = x263 + (-1 * x270 * x268) + (x271 * x265);
	const FLT x273 = x259 + (-1 * x271 * x267) + (x270 * x266);
	const FLT x274 = (x273 * x137) + (x272 * x132);
	const FLT x275 = (x274 * x147) + (-1 * x269 * x110);
	const FLT x276 = ((-1 * x273 * x150) + (x272 * x149)) * x151;
	const FLT x277 = x276 + (-1 * x275 * x146);
	const FLT x278 = (-1 * x140 * (x274 + (x269 * x126))) + (x94 * x269);
	const FLT x279 = x278 * x160;
	const FLT x280 = (x95 * ((-1 * x278 * x162) + x279)) + (x278 * x159);
	const FLT x281 = (x95 * x280) + (x278 * x158);
	const FLT x282 =
		x276 +
		(-1 * x121 *
		 (x275 + (x278 * x144) +
		  (-1 * x171 *
		   ((x114 *
			 ((x95 * (x281 + (x95 * ((x278 * x165) + x280 + (x95 * ((x278 * x168) + (-1 * x278 * x167) + x279)))) +
					  (x278 * x169))) +
			  (x278 * x170) + (x278 * x157) + (x95 * x281))) +
			(x277 * x156))) +
		  (x277 * x173) + (x281 * x119)));
	const FLT x283 = -1 * x211;
	const FLT x284 = x283 + x210;
	const FLT x285 = (-1 * x206) + x205;
	const FLT x286 = -1 * x220;
	const FLT x287 = x219 + x286;
	const FLT x288 = 2 * x19;
	const FLT x289 = x214 + x215;
	const FLT x290 = ((x289 * x222) + (x287 * x288) + (x208 * x284) + (x213 * x285)) * x223;
	const FLT x291 = x19 * x290;
	const FLT x292 = x27 * x289;
	const FLT x293 = x25 * x290;
	const FLT x294 = x14 * x290;
	const FLT x295 = (x30 * x284) + (-1 * x294 * (*_x0).Pose.Rot[2]) + (-1 * x293 * (*_x0).Pose.Rot[3]) +
					 (x292 * (*_x0).Pose.Rot[2]) + (x291 * (*_x0).Pose.Rot[1]) + (-1 * x31 * x287) + (x29 * x285) +
					 (-1 * x290 * x229);
	const FLT x296 = x22 * x290;
	const FLT x297 = (x292 * (*_x0).Pose.Rot[0]) + (x296 * (*_x0).Pose.Rot[2]) + (-1 * x30 * x287) +
					 (x291 * (*_x0).Pose.Rot[3]) + (-1 * x28 * x285) + (-1 * x31 * x284) +
					 (-1 * x294 * (*_x0).Pose.Rot[0]) + (x293 * (*_x0).Pose.Rot[1]);
	const FLT x298 = (x293 * (*_x0).Pose.Rot[2]) + (x31 * x285) + (x29 * x287) + (-1 * x291 * (*_x0).Pose.Rot[0]) +
					 (-1 * x296 * (*_x0).Pose.Rot[1]) + (-1 * x294 * (*_x0).Pose.Rot[3]) + (x292 * (*_x0).Pose.Rot[3]) +
					 (-1 * x28 * x284);
	const FLT x299 = (x28 * x287) + (-1 * x293 * (*_x0).Pose.Rot[0]) + (-1 * x291 * (*_x0).Pose.Rot[2]) +
					 (-1 * x294 * (*_x0).Pose.Rot[1]) + (x296 * (*_x0).Pose.Rot[3]) + (x292 * (*_x0).Pose.Rot[1]) +
					 (-1 * x30 * x285) + (x29 * x284);
	const FLT x300 = (x298 * x248) + (x58 * x299) + (-1 * x295 * x253) + (x232 * x297);
	const FLT x301 = (x58 * x297) + (-1 * x298 * x253) + (-1 * x232 * x299) + (-1 * x295 * x248);
	const FLT x302 = (x58 * x298) + (-1 * x299 * x248) + (x297 * x253) + (x232 * x295);
	const FLT x303 = (x302 * sensor_pt[0]) + (-1 * x300 * sensor_pt[2]) + (x301 * sensor_pt[1]);
	const FLT x304 = (x297 * x248) + (x299 * x253) + (-1 * x232 * x298) + (x58 * x295);
	const FLT x305 = (x300 * sensor_pt[1]) + (x301 * sensor_pt[2]) + (-1 * x304 * sensor_pt[0]);
	const FLT x306 = (-1 * x257 * x302) + (x260 * x304) + (-1 * x261 * x303) + (x252 * x305);
	const FLT x307 = (x304 * sensor_pt[2]) + (-1 * x302 * sensor_pt[1]) + (x301 * sensor_pt[0]);
	const FLT x308 = (-1 * x258 * x304) + (x256 * x303) + (x257 * x300) + (-1 * x252 * x307);
	const FLT x309 = (x261 * x307) + (-1 * x256 * x305) + (-1 * x260 * x300) + (x258 * x302);
	const FLT x310 = (x309 * (*lh_p).Rot[1]) + (-1 * x306 * (*lh_p).Rot[2]) + (x308 * (*lh_p).Rot[0]);
	const FLT x311 = (x308 * (*lh_p).Rot[2]) + (-1 * x309 * (*lh_p).Rot[3]) + (x306 * (*lh_p).Rot[0]);
	const FLT x312 = x309 + (-1 * x266 * x310) + (x268 * x311);
	const FLT x313 = (x309 * (*lh_p).Rot[0]) + (-1 * x308 * (*lh_p).Rot[1]) + (x306 * (*lh_p).Rot[3]);
	const FLT x314 = x306 + (x271 * x310) + (-1 * x268 * x313);
	const FLT x315 = (-1 * x271 * x311) + x308 + (x266 * x313);
	const FLT x316 = (x315 * x137) + (x314 * x132);
	const FLT x317 = (-1 * x140 * (x316 + (x312 * x126))) + (x94 * x312);
	const FLT x318 = x317 * x160;
	const FLT x319 = (x95 * ((-1 * x317 * x162) + x318)) + (x317 * x159);
	const FLT x320 = (x95 * x319) + (x317 * x158);
	const FLT x321 = (x316 * x147) + (-1 * x312 * x110);
	const FLT x322 = ((-1 * x315 * x150) + (x314 * x149)) * x151;
	const FLT x323 = x322 + (-1 * x321 * x146);
	const FLT x324 =
		x322 +
		(-1 * x121 *
		 (x321 + (x323 * x173) +
		  (-1 * x171 *
		   ((x114 * ((x317 * x170) + (x317 * x157) +
					 (x95 * ((x95 * (x319 + (x317 * x165) + (x95 * ((x317 * x168) + (-1 * x317 * x167) + x318)))) +
							 x320 + (x317 * x169))) +
					 (x95 * x320))) +
			(x323 * x156))) +
		  (x320 * x119) + (x317 * x144)));
	const FLT x325 = x218 + x286;
	const FLT x326 = x209 + x283;
	const FLT x327 = x223 * ((x222 * x326) + (x25 * x217) + (x213 * x325) + (x207 * x288));
	const FLT x328 = x14 * x327;
	const FLT x329 = x19 * x327;
	const FLT x330 = x25 * x327;
	const FLT x331 = x22 * x327;
	const FLT x332 = (x29 * x326) + (x331 * (*_x0).Pose.Rot[2]) + (-1 * x230) + (-1 * x328 * (*_x0).Pose.Rot[0]) +
					 (x329 * (*_x0).Pose.Rot[3]) + x227 + (x330 * (*_x0).Pose.Rot[1]) + (-1 * x28 * x325);
	const FLT x333 = (x29 * x325) + (-1 * x330 * (*_x0).Pose.Rot[3]) + x233 + (x329 * (*_x0).Pose.Rot[1]) +
					 (-1 * x328 * (*_x0).Pose.Rot[2]) + x234 + (-1 * x331 * (*_x0).Pose.Rot[0]) + (x28 * x326);
	const FLT x334 = (-1 * x328 * (*_x0).Pose.Rot[3]) + (-1 * x239) + (x330 * (*_x0).Pose.Rot[2]) + x240 +
					 (-1 * x329 * (*_x0).Pose.Rot[0]) + (-1 * x331 * (*_x0).Pose.Rot[1]) + (x31 * x325) + (x30 * x326);
	const FLT x335 = x243 + (x31 * x326) + (-1 * x330 * (*_x0).Pose.Rot[0]) + (-1 * x329 * (*_x0).Pose.Rot[2]) +
					 (-1 * x328 * (*_x0).Pose.Rot[1]) + (-1 * x30 * x325) + x244 + (x331 * (*_x0).Pose.Rot[3]);
	const FLT x336 = (x58 * x335) + (x248 * x334) + (x232 * x332) + (-1 * x253 * x333);
	const FLT x337 = (x58 * x332) + (-1 * x232 * x335) + (-1 * x253 * x334) + (-1 * x248 * x333);
	const FLT x338 = (x58 * x334) + (-1 * x248 * x335) + (x232 * x333) + (x253 * x332);
	const FLT x339 = 2 * ((-1 * x336 * sensor_pt[2]) + (x338 * sensor_pt[0]) + (x337 * sensor_pt[1]));
	const FLT x340 = (x248 * x332) + (x253 * x335) + (-1 * x232 * x334) + (x58 * x333);
	const FLT x341 = (x336 * sensor_pt[1]) + (x337 * sensor_pt[2]) + (-1 * x340 * sensor_pt[0]);
	const FLT x342 = (x252 * x341) + (x260 * x340) + (-1 * x70 * x339) + (-1 * x257 * x338);
	const FLT x343 = (x340 * sensor_pt[2]) + (-1 * x338 * sensor_pt[1]) + (x337 * sensor_pt[0]);
	const FLT x344 = (x73 * x339) + (x257 * x336) + (-1 * x258 * x340) + (-1 * x252 * x343);
	const FLT x345 = (-1 * x256 * x341) + (x258 * x338) + (-1 * x260 * x336) + (x261 * x343);
	const FLT x346 = (x345 * (*lh_p).Rot[1]) + (-1 * x342 * (*lh_p).Rot[2]) + (x344 * (*lh_p).Rot[0]);
	const FLT x347 = (x344 * (*lh_p).Rot[2]) + (-1 * x345 * (*lh_p).Rot[3]) + (x342 * (*lh_p).Rot[0]);
	const FLT x348 = x345 + (-1 * x266 * x346) + (x268 * x347);
	const FLT x349 = (x345 * (*lh_p).Rot[0]) + (-1 * x344 * (*lh_p).Rot[1]) + (x342 * (*lh_p).Rot[3]);
	const FLT x350 = x342 + (-1 * x268 * x349) + (x271 * x346);
	const FLT x351 = x344 + (-1 * x271 * x347) + (x266 * x349);
	const FLT x352 = (x351 * x137) + (x350 * x132);
	const FLT x353 = (-1 * x140 * (x352 + (x348 * x126))) + (x94 * x348);
	const FLT x354 = x353 * x160;
	const FLT x355 = (x95 * ((-1 * x353 * x162) + x354)) + (x353 * x159);
	const FLT x356 = (x95 * x355) + (x353 * x158);
	const FLT x357 = (x352 * x147) + (-1 * x348 * x110);
	const FLT x358 = ((-1 * x351 * x150) + (x350 * x149)) * x151;
	const FLT x359 = x358 + (-1 * x357 * x146);
	const FLT x360 =
		x358 +
		(-1 * x121 *
		 (x357 +
		  (-1 * x171 *
		   ((x114 *
			 ((x95 * x356) + (x353 * x170) + (x353 * x157) +
			  (x95 * (x356 + (x95 * (x355 + (x353 * x165) + (x95 * ((x353 * x168) + x354 + (-1 * x353 * x167))))) +
					  (x353 * x169))))) +
			(x359 * x156))) +
		  (x359 * x173) + (x356 * x119) + (x353 * x144)));
	const FLT x361 = x266 * (*lh_p).Rot[2];
	const FLT x362 = x268 * (*lh_p).Rot[0];
	const FLT x363 = x362 + x361;
	const FLT x364 = 2 * x127;
	const FLT x365 = -1 * x364;
	const FLT x366 = 2 * x129;
	const FLT x367 = 1 + (-1 * x366);
	const FLT x368 = x367 + x365;
	const FLT x369 = x271 * (*lh_p).Rot[0];
	const FLT x370 = x266 * (*lh_p).Rot[3];
	const FLT x371 = x370 + (-1 * x369);
	const FLT x372 = (x371 * x137) + (x368 * x132);
	const FLT x373 = (-1 * x140 * (x372 + (x363 * x126))) + (x94 * x363);
	const FLT x374 = x373 * x160;
	const FLT x375 = (x95 * ((-1 * x373 * x162) + x374)) + (x373 * x159);
	const FLT x376 = (x95 * x375) + (x373 * x158);
	const FLT x377 = (x372 * x147) + (-1 * x363 * x110);
	const FLT x378 = ((-1 * x371 * x150) + (x368 * x149)) * x151;
	const FLT x379 = x378 + (-1 * x377 * x146);
	const FLT x380 =
		x378 +
		(-1 * x121 *
		 ((-1 * x171 *
		   ((x114 *
			 ((x373 * x170) + (x373 * x157) +
			  (x95 * (x376 + (x95 * (x375 + (x373 * x165) + (x95 * ((x373 * x168) + x374 + (-1 * x373 * x167))))) +
					  (x373 * x169))) +
			  (x95 * x376))) +
			(x379 * x156))) +
		  (x379 * x173) + (x376 * x119) + x377 + (x373 * x144)));
	const FLT x381 = 2 * x176;
	const FLT x382 = -1 * x381;
	const FLT x383 = x367 + x382;
	const FLT x384 = x361 + (-1 * x362);
	const FLT x385 = x268 * (*lh_p).Rot[2];
	const FLT x386 = x266 * (*lh_p).Rot[0];
	const FLT x387 = x386 + x385;
	const FLT x388 = (x387 * x137) + (x384 * x132);
	const FLT x389 = (-1 * x140 * (x388 + (x383 * x126))) + (x94 * x383);
	const FLT x390 = x389 * x160;
	const FLT x391 = (x95 * ((-1 * x389 * x162) + x390)) + (x389 * x159);
	const FLT x392 = (x95 * x391) + (x389 * x158);
	const FLT x393 = (x388 * x147) + (-1 * x383 * x110);
	const FLT x394 = ((-1 * x387 * x150) + (x384 * x149)) * x151;
	const FLT x395 = x394 + (-1 * x393 * x146);
	const FLT x396 =
		x394 +
		(-1 * x121 *
		 (x393 + (x392 * x119) + (x395 * x173) + (x389 * x144) +
		  (-1 * x171 *
		   ((x114 *
			 ((x389 * x170) +
			  (x95 * (x392 + (x95 * (x391 + (x389 * x165) + (x95 * ((x389 * x168) + x390 + (-1 * x389 * x167))))) +
					  (x389 * x169))) +
			  (x389 * x157) + (x95 * x392))) +
			(x395 * x156)))));
	const FLT x397 = x385 + (-1 * x386);
	const FLT x398 = x369 + x370;
	const FLT x399 = 1 + x382 + x365;
	const FLT x400 = (x399 * x137) + (x398 * x132);
	const FLT x401 = x142 * ((-1 * x140 * (x400 + (x397 * x126))) + (x94 * x397));
	const FLT x402 = (x400 * x147) + (-1 * x397 * x110);
	const FLT x403 = ((-1 * x399 * x150) + (x398 * x149)) * x151;
	const FLT x404 = x403 + (-1 * x402 * x146);
	const FLT x405 = x97 * x401;
	const FLT x406 = (x95 * ((-1 * x96 * x401) + x405)) + (x98 * x401);
	const FLT x407 = (x95 * x406) + (x99 * x401);
	const FLT x408 =
		x403 +
		(-1 * x121 *
		 ((-1 * x171 *
		   ((x114 *
			 ((x401 * x100) + (x95 * x407) + (x401 * x105) +
			  (x95 * (x407 + (x95 * (x406 + (x401 * x103) + (x95 * ((x401 * x102) + x405 + (-1 * x401 * x166))))) +
					  (x401 * x104))))) +
			(x404 * x156))) +
		  (x407 * x119) + x402 + (x401 * x143) + (x404 * x173)));
	const FLT x409 = dt * dt * dt;
	const FLT x410 = 0.5 * x47 * x409;
	const FLT x411 = x67 * x410;
	const FLT x412 = x37 * x37 * x37;
	const FLT x413 = dt * dt * dt * dt;
	const FLT x414 = 1. / (x42 * sqrt(x42));
	const FLT x415 = 1.0 * x45 * x49;
	const FLT x416 = x414 * x415;
	const FLT x417 = x413 * x416;
	const FLT x418 = 2 * x48;
	const FLT x419 = x33 * x418;
	const FLT x420 = 2 * (1. / (x42 * x42)) * x46;
	const FLT x421 = x413 * x420;
	const FLT x422 = x35 * x37;
	const FLT x423 = x37 * x415;
	const FLT x424 = x53 * x33;
	const FLT x425 = x40 * x421;
	const FLT x426 = (-1 * x37 * x425) + (x37 * x419) + (x40 * x413 * x414 * x423) + (x412 * x417) +
					 (-1 * x412 * x421) + (-1 * x423 * x424) + (-1 * x422 * x421) + (x417 * x422);
	const FLT x427 = 1.0 / 2.0 * (1. / (x50 * sqrt(x50)));
	const FLT x428 = x54 * x45 * x427;
	const FLT x429 = x0 * x428;
	const FLT x430 = x426 * x429;
	const FLT x431 = x49 * x427;
	const FLT x432 = x60 * x431;
	const FLT x433 = x60 * x52;
	const FLT x434 = 0.5 * x424;
	const FLT x435 = x37 * x434;
	const FLT x436 = x57 * x428;
	const FLT x437 = x426 * x436;
	const FLT x438 = x409 * x414;
	const FLT x439 = x52 * x32;
	const FLT x440 = x438 * x439;
	const FLT x441 = x37 * x428;
	const FLT x442 = x32 * x426;
	const FLT x443 = x72 * x410;
	const FLT x444 = x0 * x37;
	const FLT x445 = x63 * x37;
	const FLT x446 = x0 * x438;
	const FLT x447 = (x445 * x446) + (-1 * x444 * x443);
	const FLT x448 = x59 * x410;
	const FLT x449 = x34 * x37;
	const FLT x450 = x52 * x57;
	const FLT x451 = x450 * x438;
	const FLT x452 = (-1 * x451 * x449) + (x449 * x448);
	const FLT x453 = x452 + x447 + (-1 * x442 * x441) + (-1 * x38 * x440) + (x62 * x430) + (-1 * x34 * x437) + x56 +
					 (x38 * x411) + (-1 * x435 * x433) + (-1 * x426 * x432);
	const FLT x454 = -1 * x64;
	const FLT x455 = x444 * x440;
	const FLT x456 = x34 * x428;
	const FLT x457 = x60 * x426;
	const FLT x458 = x57 * x431;
	const FLT x459 = x62 * x426;
	const FLT x460 = x37 * x450;
	const FLT x461 = x411 * x444;
	const FLT x462 = x38 * x438;
	const FLT x463 = x69 * x410;
	const FLT x464 = x433 * x438;
	const FLT x465 = x37 * x464;
	const FLT x466 = (x34 * x465) + (-1 * x463 * x449);
	const FLT x467 = x466 + (x63 * x462) + (-1 * x461) + (-1 * x460 * x434) + (x32 * x430) + x454 + (-1 * x38 * x443) +
					 (x456 * x457) + x455 + (x459 * x441) + (-1 * x458 * x426);
	const FLT x468 = x0 * x436;
	const FLT x469 = x443 * x449;
	const FLT x470 = x34 * x438 * x445;
	const FLT x471 = -1 * x61;
	const FLT x472 = x32 * x431;
	const FLT x473 = (x444 * x448) + (-1 * x460 * x446);
	const FLT x474 = x473 + (-1 * x472 * x426) + (x38 * x464) + (-1 * x435 * x439) + (-1 * x459 * x456) +
					 (-1 * x468 * x426) + (x457 * x441) + (-1 * x38 * x463) + x469 + x471 + (-1 * x470);
	const FLT x475 = (-1 * x453 * sensor_pt[1]) + (x474 * sensor_pt[2]) + (x467 * sensor_pt[0]);
	const FLT x476 = x62 * x431;
	const FLT x477 = x463 * x444;
	const FLT x478 = x0 * x465;
	const FLT x479 = x440 * x449;
	const FLT x480 = x411 * x449;
	const FLT x481 = (-1 * x476 * x426) + x477 + (-1 * x450 * x462) + x66 + (-1 * x60 * x430) + (-1 * x478) +
					 (-1 * x434 * x445) + x479 + (-1 * x37 * x437) + (x456 * x442) + (x38 * x448) + (-1 * x480);
	const FLT x482 = (x453 * sensor_pt[0]) + (x467 * sensor_pt[1]) + (-1 * x481 * sensor_pt[2]);
	const FLT x483 = (-1 * x474 * x258) + (x481 * x257) + (-1 * x475 * x252) + (x482 * x256);
	const FLT x484 = (x481 * sensor_pt[1]) + (-1 * x474 * sensor_pt[0]) + (x467 * sensor_pt[2]);
	const FLT x485 = (x484 * x252) + (x474 * x260) + (-1 * x482 * x261) + (-1 * x453 * x257);
	const FLT x486 = (x475 * x261) + (x453 * x258) + (-1 * x484 * x256) + (-1 * x481 * x260);
	const FLT x487 = (x483 * (*lh_p).Rot[0]) + (x486 * (*lh_p).Rot[1]) + (-1 * x485 * (*lh_p).Rot[2]);
	const FLT x488 = (x483 * (*lh_p).Rot[2]) + (-1 * x486 * (*lh_p).Rot[3]) + (x485 * (*lh_p).Rot[0]);
	const FLT x489 = x486 + (-1 * x487 * x266) + (x488 * x268);
	const FLT x490 = (x486 * (*lh_p).Rot[0]) + (-1 * x483 * (*lh_p).Rot[1]) + (x485 * (*lh_p).Rot[3]);
	const FLT x491 = x485 + (x487 * x271) + (-1 * x490 * x268);
	const FLT x492 = x483 + (-1 * x488 * x271) + (x490 * x266);
	const FLT x493 = (x492 * x137) + (x491 * x132);
	const FLT x494 = (-1 * x140 * (x493 + (x489 * x126))) + (x94 * x489);
	const FLT x495 = (x493 * x147) + (-1 * x489 * x110);
	const FLT x496 = ((-1 * x492 * x150) + (x491 * x149)) * x151;
	const FLT x497 = x496 + (-1 * x495 * x146);
	const FLT x498 = x494 * x160;
	const FLT x499 = (x95 * ((-1 * x494 * x162) + x498)) + (x494 * x159);
	const FLT x500 = (x95 * x499) + (x494 * x158);
	const FLT x501 =
		x496 +
		(-1 * x121 *
		 (x495 + (x500 * x119) + (x494 * x144) + (x497 * x173) +
		  (-1 * x171 *
		   ((x114 *
			 ((x494 * x170) +
			  (x95 * (x500 + (x95 * (x499 + (x494 * x165) + (x95 * ((x494 * x168) + x498 + (-1 * x494 * x167))))) +
					  (x494 * x169))) +
			  (x494 * x157) + (x95 * x500))) +
			(x497 * x156)))));
	const FLT x502 = x0 * x33;
	const FLT x503 = x53 * x502;
	const FLT x504 = 0.5 * x503;
	const FLT x505 = x0 * x417;
	const FLT x506 = x0 * x421;
	const FLT x507 = x0 * x0 * x0;
	const FLT x508 = (-1 * x421 * x507) + (x418 * x502) + (x417 * x507) + (-1 * x38 * x506) + (-1 * x35 * x506) +
					 (x38 * x505) + (x35 * x505) + (-1 * x415 * x503);
	const FLT x509 = x428 * x508;
	const FLT x510 = x0 * x509;
	const FLT x511 = x57 * x509;
	const FLT x512 = x40 * x438;
	const FLT x513 = x37 * x509;
	const FLT x514 = x0 * x34;
	const FLT x515 = (-1 * x451 * x514) + (x448 * x514);
	const FLT x516 = (-1 * x455) + (-1 * x432 * x508) + (-1 * x32 * x513) + (-1 * x40 * x443) + x515 + (x63 * x512) +
					 x461 + x454 + (-1 * x433 * x504) + (x62 * x510) + (-1 * x34 * x511);
	const FLT x517 = -1 * x56;
	const FLT x518 = x464 * x514;
	const FLT x519 = x60 * x509;
	const FLT x520 = x463 * x514;
	const FLT x521 = (x62 * x513) + (x32 * x510) + (x34 * x519) + x447 + (-1 * x520) + x518 + x517 + (-1 * x40 * x411) +
					 (-1 * x458 * x508) + (-1 * x450 * x504) + (x439 * x512);
	const FLT x522 = x63 * x438 * x514;
	const FLT x523 = x443 * x514;
	const FLT x524 = x34 * x509;
	const FLT x525 = x478 + (x37 * x519) + (-1 * x62 * x524) + (-1 * x477) + (x40 * x448) + (-1 * x472 * x508) +
					 (-1 * x522) + (-1 * x0 * x511) + x523 + (-1 * x439 * x504) + (-1 * x450 * x512) + x66;
	const FLT x526 = (x525 * sensor_pt[2]) + (-1 * x516 * sensor_pt[1]) + (x521 * sensor_pt[0]);
	const FLT x527 = (-1 * x411 * x514) + (x440 * x514);
	const FLT x528 = x527 + (x32 * x524) + x473 + (-1 * x0 * x519) + (-1 * x37 * x511) + x61 + (-1 * x433 * x512) +
					 (x40 * x463) + (-1 * x63 * x504) + (-1 * x476 * x508);
	const FLT x529 = (x516 * sensor_pt[0]) + (-1 * x528 * sensor_pt[2]) + (x521 * sensor_pt[1]);
	const FLT x530 = (x529 * x256) + (x528 * x257) + (-1 * x526 * x252) + (-1 * x525 * x258);
	const FLT x531 = (x528 * sensor_pt[1]) + (x521 * sensor_pt[2]) + (-1 * x525 * sensor_pt[0]);
	const FLT x532 = (-1 * x516 * x257) + (-1 * x529 * x261) + (x531 * x252) + (x525 * x260);
	const FLT x533 = (x526 * x261) + (-1 * x531 * x256) + (-1 * x528 * x260) + (x516 * x258);
	const FLT x534 = (x530 * (*lh_p).Rot[0]) + (x533 * (*lh_p).Rot[1]) + (-1 * x532 * (*lh_p).Rot[2]);
	const FLT x535 = (x530 * (*lh_p).Rot[2]) + (-1 * x533 * (*lh_p).Rot[3]) + (x532 * (*lh_p).Rot[0]);
	const FLT x536 = x533 + (-1 * x534 * x266) + (x535 * x268);
	const FLT x537 = (x533 * (*lh_p).Rot[0]) + (-1 * x530 * (*lh_p).Rot[1]) + (x532 * (*lh_p).Rot[3]);
	const FLT x538 = x532 + (-1 * x537 * x268) + (x534 * x271);
	const FLT x539 = (x537 * x266) + x530 + (-1 * x535 * x271);
	const FLT x540 = (x539 * x137) + (x538 * x132);
	const FLT x541 = (-1 * x140 * (x540 + (x536 * x126))) + (x94 * x536);
	const FLT x542 = x541 * x142;
	const FLT x543 = x97 * x542;
	const FLT x544 = (x95 * ((-1 * x96 * x542) + x543)) + (x98 * x542);
	const FLT x545 = (x95 * x544) + (x99 * x542);
	const FLT x546 = (x540 * x147) + (-1 * x536 * x110);
	const FLT x547 = ((-1 * x539 * x150) + (x538 * x149)) * x151;
	const FLT x548 = x547 + (-1 * x546 * x146);
	const FLT x549 =
		x547 +
		(-1 * x121 *
		 (x546 + (x542 * x143) + (x548 * x173) + (x545 * x119) +
		  (-1 * x171 *
		   ((x114 *
			 ((x542 * x100) + (x95 * x545) +
			  (x95 * (x545 + (x95 * (x544 + (x542 * x103) + (x95 * ((-1 * x542 * x166) + (x542 * x102) + x543)))) +
					  (x541 * x169))) +
			  (x542 * x105))) +
			(x548 * x156)))));
	const FLT x550 = x35 * x410;
	const FLT x551 = x34 * x424;
	const FLT x552 = 0.5 * x551;
	const FLT x553 = x34 * x38;
	const FLT x554 = (x34 * x34 * x34) * x413;
	const FLT x555 = (-1 * x415 * x551) + (-1 * x420 * x554) + (x416 * x554) + (x417 * x553) + (x34 * x419) +
					 (-1 * x421 * x553) + (x40 * x34 * x417) + (-1 * x34 * x425);
	const FLT x556 = x62 * x555;
	const FLT x557 = x436 * x555;
	const FLT x558 = x35 * x438;
	const FLT x559 = x32 * x555;
	const FLT x560 = (-1 * x441 * x559) + (-1 * x34 * x557) + (x429 * x556) + x480 + (x59 * x550) + (-1 * x432 * x555) +
					 x522 + x66 + (-1 * x450 * x558) + (-1 * x433 * x552) + (-1 * x523) + (-1 * x479);
	const FLT x561 = x60 * x555;
	const FLT x562 = x428 * x561;
	const FLT x563 = x527 + (x441 * x556) + (x429 * x559) + (-1 * x469) + (x34 * x562) + (-1 * x450 * x552) +
					 (-1 * x458 * x555) + (x35 * x464) + (-1 * x69 * x550) + x471 + x470;
	const FLT x564 = x466 + x515 + (-1 * x63 * x558) + (x37 * x562) + x64 + (-1 * x468 * x555) + (-1 * x456 * x556) +
					 (-1 * x472 * x555) + (x72 * x550) + (-1 * x439 * x552);
	const FLT x565 = (x564 * sensor_pt[2]) + (-1 * x560 * sensor_pt[1]) + (x563 * sensor_pt[0]);
	const FLT x566 = (-1 * x37 * x557) + (-1 * x67 * x550) + (x456 * x559) + (x35 * x440) + (-1 * x476 * x555) +
					 (-1 * x429 * x561) + x452 + (-1 * x63 * x552) + x520 + (-1 * x518) + x517;
	const FLT x567 = (x560 * sensor_pt[0]) + (-1 * x566 * sensor_pt[2]) + (x563 * sensor_pt[1]);
	const FLT x568 = (x567 * x256) + (x566 * x257) + (-1 * x565 * x252) + (-1 * x564 * x258);
	const FLT x569 = (x566 * sensor_pt[1]) + (-1 * x564 * sensor_pt[0]) + (x563 * sensor_pt[2]);
	const FLT x570 = (x569 * x252) + (-1 * x560 * x257) + (-1 * x567 * x261) + (x564 * x260);
	const FLT x571 = (x560 * x258) + (x565 * x261) + (-1 * x566 * x260) + (-1 * x569 * x256);
	const FLT x572 = 2 * ((x571 * (*lh_p).Rot[1]) + (x568 * (*lh_p).Rot[0]) + (-1 * x570 * (*lh_p).Rot[2]));
	const FLT x573 = 2 * ((x568 * (*lh_p).Rot[2]) + (-1 * x571 * (*lh_p).Rot[3]) + (x570 * (*lh_p).Rot[0]));
	const FLT x574 = x571 + (-1 * x572 * (*lh_p).Rot[1]) + (x573 * (*lh_p).Rot[3]);
	const FLT x575 = 2 * ((-1 * x568 * (*lh_p).Rot[1]) + (x571 * (*lh_p).Rot[0]) + (x570 * (*lh_p).Rot[3]));
	const FLT x576 = x570 + (-1 * x575 * (*lh_p).Rot[3]) + (x572 * (*lh_p).Rot[2]);
	const FLT x577 = x568 + (-1 * x573 * (*lh_p).Rot[2]) + (x575 * (*lh_p).Rot[1]);
	const FLT x578 = (x577 * x137) + (x576 * x132);
	const FLT x579 = (x578 * x147) + (-1 * x574 * x110);
	const FLT x580 = ((-1 * x577 * x150) + (x576 * x149)) * x151;
	const FLT x581 = x580 + (-1 * x579 * x146);
	const FLT x582 = (-1 * x140 * (x578 + (x574 * x126))) + (x94 * x574);
	const FLT x583 = x582 * x160;
	const FLT x584 = x582 * x142;
	const FLT x585 = (x95 * ((-1 * x96 * x584) + x583)) + (x582 * x159);
	const FLT x586 = (x95 * x585) + (x582 * x158);
	const FLT x587 =
		x580 +
		(-1 * x121 *
		 ((x581 * x173) + (x584 * x143) +
		  (-1 * x171 *
		   ((x114 *
			 ((x582 * x170) + (x582 * x157) +
			  (x95 * (x586 + (x95 * (x585 + (x582 * x165) + (x95 * ((x582 * x168) + x583 + (-1 * x584 * x166))))) +
					  (x582 * x169))) +
			  (x95 * x586))) +
			(x581 * x156))) +
		  x579 + (x586 * x119)));
	const FLT x588 = dt * x361;
	const FLT x589 = dt * x362;
	const FLT x590 = x589 + x588;
	const FLT x591 = -1 * dt * x364;
	const FLT x592 = -1 * dt * x366;
	const FLT x593 = x592 + dt + x591;
	const FLT x594 = dt * x369;
	const FLT x595 = dt * x370;
	const FLT x596 = x595 + (-1 * x594);
	const FLT x597 = (x596 * x137) + (x593 * x132);
	const FLT x598 = (-1 * x140 * (x597 + (x590 * x126))) + (x94 * x590);
	const FLT x599 = x598 * x160;
	const FLT x600 = (x95 * ((-1 * x598 * x162) + x599)) + (x598 * x159);
	const FLT x601 = (x95 * x600) + (x598 * x158);
	const FLT x602 = (x597 * x147) + (-1 * x590 * x110);
	const FLT x603 = ((-1 * x596 * x150) + (x593 * x149)) * x151;
	const FLT x604 = x603 + (-1 * x602 * x146);
	const FLT x605 =
		x603 +
		(-1 * x121 *
		 (x602 + (x604 * x173) + (x598 * x144) + (x601 * x119) +
		  (-1 * x171 *
		   ((x114 *
			 ((x598 * x170) + (x598 * x157) + (x95 * x601) +
			  (x95 * (x601 + (x95 * (x600 + (x598 * x165) + (x95 * ((x598 * x168) + x599 + (-1 * x598 * x167))))) +
					  (x598 * x169))))) +
			(x604 * x156)))));
	const FLT x606 = (-1 * dt * x381) + dt;
	const FLT x607 = x606 + x592;
	const FLT x608 = x588 + (-1 * x589);
	const FLT x609 = dt * x385;
	const FLT x610 = dt * x386;
	const FLT x611 = x610 + x609;
	const FLT x612 = (x611 * x137) + (x608 * x132);
	const FLT x613 = (x612 * x147) + (-1 * x607 * x110);
	const FLT x614 = ((-1 * x611 * x150) + (x608 * x149)) * x151;
	const FLT x615 = x614 + (-1 * x613 * x146);
	const FLT x616 = (-1 * x140 * (x612 + (x607 * x126))) + (x94 * x607);
	const FLT x617 = x616 * x142;
	const FLT x618 = x97 * x617;
	const FLT x619 = (x95 * ((-1 * x96 * x617) + x618)) + (x616 * x159);
	const FLT x620 = (x95 * x619) + (x616 * x158);
	const FLT x621 =
		x614 +
		(-1 * x121 *
		 (x613 + (x615 * x173) + (x620 * x119) +
		  (-1 * x171 *
		   ((x114 *
			 ((x617 * x100) + (x617 * x105) + (x95 * x620) +
			  (x95 * (x620 + (x95 * ((x616 * x165) + x619 + (x95 * ((x616 * x168) + x618 + (-1 * x617 * x166))))) +
					  (x616 * x169))))) +
			(x615 * x156))) +
		  (x617 * x143)));
	const FLT x622 = x609 + (-1 * x610);
	const FLT x623 = x594 + x595;
	const FLT x624 = x606 + x591;
	const FLT x625 = (x624 * x137) + (x623 * x132);
	const FLT x626 = (x625 * x147) + (-1 * x622 * x110);
	const FLT x627 = ((-1 * x624 * x150) + (x623 * x149)) * x151;
	const FLT x628 = x627 + (-1 * x626 * x146);
	const FLT x629 = (-1 * x140 * (x625 + (x622 * x126))) + (x94 * x622);
	const FLT x630 = x629 * x142;
	const FLT x631 = x97 * x630;
	const FLT x632 = (x95 * ((-1 * x96 * x630) + x631)) + (x629 * x159);
	const FLT x633 = (x95 * x632) + (x629 * x158);
	const FLT x634 =
		x627 +
		(-1 * x121 *
		 (x626 + (x630 * x143) + (x628 * x173) +
		  (-1 * x171 *
		   ((x114 * ((x630 * x100) + (x630 * x105) + (x95 * x633) +
					 (x95 * ((x95 * (x632 + (x629 * x165) + (x95 * ((x630 * x102) + x631 + (-1 * x630 * x166))))) +
							 x633 + (x629 * x169))))) +
			(x628 * x156))) +
		  (x633 * x119)));
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT), x174 + (x174 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT), x191 + (x175 * x191));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT), x204 + (x204 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x282 + (x282 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x324 + (x324 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x360 + (x360 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[0]) / sizeof(FLT), x380 + (x380 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[1]) / sizeof(FLT), x396 + (x396 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.Pos[2]) / sizeof(FLT), x408 + (x408 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x501 + (x501 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x549 + (x549 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x587 + (x587 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[0]) / sizeof(FLT), x605 + (x605 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[1]) / sizeof(FLT), x621 + (x621 * x175));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Velocity.Pos[2]) / sizeof(FLT), x634 + (x634 * x175));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_error_model_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_error_model(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_sensor_pt(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x9;
	const FLT x14 = (x8 * x13) + (x7 * x10);
	const FLT x15 = x6 * x8;
	const FLT x16 = (x4 * x13) + (x15 * x10);
	const FLT x17 = (x2 * x15) + (-1 * x4 * x11);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x18 * (*_x0).Pose.Rot[1];
	const FLT x23 =
		(-1 * x22 * x12) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) + (x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = x12 * x18;
	const FLT x40 = (-1 * x22 * x17) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x39 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x41 = x36 * x35;
	const FLT x42 =
		(x22 * x16) + (x19 * (*_x0).Pose.Rot[3]) + (x39 * (*_x0).Pose.Rot[0]) + (-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x43 = x42 * x37;
	const FLT x44 =
		(x39 * (*_x0).Pose.Rot[2]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * x14) + (x21 * (*_x0).Pose.Rot[0]);
	const FLT x45 = x37 * x27;
	const FLT x46 = (-1 * x43 * x25) + (-1 * x0 * x38) + (-1 * x44 * x45) + (x40 * x41);
	const FLT x47 = x44 * x37;
	const FLT x48 = x47 * x25;
	const FLT x49 = x40 * x37;
	const FLT x50 = x0 * x49;
	const FLT x51 = x41 * x23;
	const FLT x52 = x42 * x45;
	const FLT x53 = (-1 * x52) + x51 + x48 + x50;
	const FLT x54 = x0 * x47;
	const FLT x55 = x41 * x42;
	const FLT x56 = x49 * x25;
	const FLT x57 = x45 * x23;
	const FLT x58 = x57 + x56 + (-1 * x54) + x55;
	const FLT x59 = (-1 * x58 * sensor_pt[1]) + (x46 * sensor_pt[0]) + (x53 * sensor_pt[2]);
	const FLT x60 = x0 * x43;
	const FLT x61 = x41 * x44;
	const FLT x62 = x38 * x25;
	const FLT x63 = x40 * x45;
	const FLT x64 = x63 + (-1 * x62) + x60 + x61;
	const FLT x65 = (-1 * x64 * sensor_pt[2]) + (x46 * sensor_pt[1]) + (x58 * sensor_pt[0]);
	const FLT x66 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x67 = (*error_model).Pose.Pos[2] + (2 * ((x64 * x65) + (-1 * x53 * x59))) + (*_x0).Pose.Pos[2] +
					(x66 * ((*_x0).Acc[2] + (*error_model).Acc[2])) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x68 = (-1 * x53 * sensor_pt[0]) + (x46 * sensor_pt[2]) + (x64 * sensor_pt[1]);
	const FLT x69 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] + (x66 * ((*_x0).Acc[1] + (*error_model).Acc[1])) +
					(2 * ((x58 * x59) + (-1 * x64 * x68))) + sensor_pt[1] +
					(dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]));
	const FLT x70 = (*_x0).Pose.Pos[0] + (*error_model).Pose.Pos[0] + (2 * ((x68 * x53) + (-1 * x65 * x58))) +
					(x66 * ((*_x0).Acc[0] + (*error_model).Acc[0])) + sensor_pt[0] +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x71 = (-1 * x70 * (*lh_p).Rot[2]) + (x67 * (*lh_p).Rot[0]) + (x69 * (*lh_p).Rot[1]);
	const FLT x72 = (-1 * x69 * (*lh_p).Rot[3]) + (x70 * (*lh_p).Rot[0]) + (x67 * (*lh_p).Rot[2]);
	const FLT x73 = x69 + (*lh_p).Pos[1] + (2 * ((x72 * (*lh_p).Rot[3]) + (-1 * x71 * (*lh_p).Rot[1])));
	const FLT x74 = x73 * x73;
	const FLT x75 = (-1 * x67 * (*lh_p).Rot[1]) + (x70 * (*lh_p).Rot[3]) + (x69 * (*lh_p).Rot[0]);
	const FLT x76 = x67 + (2 * ((x75 * (*lh_p).Rot[1]) + (-1 * x72 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x77 = x70 + (*lh_p).Pos[0] + (2 * ((x71 * (*lh_p).Rot[2]) + (-1 * x75 * (*lh_p).Rot[3])));
	const FLT x78 = x77 * x77;
	const FLT x79 = x78 + (x76 * x76);
	const FLT x80 = x79 + x74;
	const FLT x81 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x82 = cos(x81);
	const FLT x83 = 1. / x82;
	const FLT x84 = (1. / sqrt(x80)) * x83;
	const FLT x85 = asin(x84 * x73);
	const FLT x86 = 8.0108022e-06 * x85;
	const FLT x87 = -8.0108022e-06 + (-1 * x86);
	const FLT x88 = 0.0028679863 + (x85 * x87);
	const FLT x89 = 5.3685255e-06 + (x88 * x85);
	const FLT x90 = 0.0076069798 + (x89 * x85);
	const FLT x91 = x85 * x90;
	const FLT x92 = -8.0108022e-06 + (-1.60216044e-05 * x85);
	const FLT x93 = x88 + (x85 * x92);
	const FLT x94 = x89 + (x85 * x93);
	const FLT x95 = x90 + (x85 * x94);
	const FLT x96 = (x85 * x95) + x91;
	const FLT x97 = sin(x81);
	const FLT x98 = atan2(-1 * x76, x77);
	const FLT x99 = tan(x81);
	const FLT x100 = (1. / sqrt(x79)) * x99;
	const FLT x101 = -1 * x73 * x100;
	const FLT x102 = (-1 * asin(x101)) + (*bsc0).ogeephase + x98;
	const FLT x103 = (sin(x102) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x104 = x97 * x103;
	const FLT x105 = x82 + (x96 * x104);
	const FLT x106 = 1. / x105;
	const FLT x107 = x85 * x85;
	const FLT x108 = x103 * x107;
	const FLT x109 = x108 * x106;
	const FLT x110 = x101 + (x90 * x109);
	const FLT x111 = 1. / sqrt(1 + (-1 * (x110 * x110)));
	const FLT x112 = 1. / sqrt(1 + (-1 * (1. / x80) * (1. / (x82 * x82)) * x74));
	const FLT x113 = (-1 * x51) + (-1 * x48) + x52 + (-1 * x50);
	const FLT x114 = 2 * x53;
	const FLT x115 = 1 + (x113 * x114) + (-2 * (x58 * x58));
	const FLT x116 = x46 * x114;
	const FLT x117 = 2 * x64;
	const FLT x118 = (x58 * x117) + (-1 * x116);
	const FLT x119 = 2 * x58;
	const FLT x120 = x46 * x119;
	const FLT x121 = x120 + (-1 * x113 * x117);
	const FLT x122 = 2 * ((x121 * (*lh_p).Rot[1]) + (-1 * x115 * (*lh_p).Rot[2]) + (x118 * (*lh_p).Rot[0]));
	const FLT x123 = 2 * ((x118 * (*lh_p).Rot[2]) + (-1 * x121 * (*lh_p).Rot[3]) + (x115 * (*lh_p).Rot[0]));
	const FLT x124 = x121 + (-1 * x122 * (*lh_p).Rot[1]) + (x123 * (*lh_p).Rot[3]);
	const FLT x125 = 2 * x73;
	const FLT x126 = 2 * ((-1 * x118 * (*lh_p).Rot[1]) + (x121 * (*lh_p).Rot[0]) + (x115 * (*lh_p).Rot[3]));
	const FLT x127 = (x122 * (*lh_p).Rot[2]) + x115 + (-1 * x126 * (*lh_p).Rot[3]);
	const FLT x128 = 2 * x77;
	const FLT x129 = x118 + (x126 * (*lh_p).Rot[1]) + (-1 * x123 * (*lh_p).Rot[2]);
	const FLT x130 = 2 * x76;
	const FLT x131 = (x129 * x130) + (x128 * x127);
	const FLT x132 = 1.0 / 2.0 * x73;
	const FLT x133 = (1. / (x80 * sqrt(x80))) * x83 * x132;
	const FLT x134 = x112 * ((-1 * x133 * (x131 + (x124 * x125))) + (x84 * x124));
	const FLT x135 = x87 * x134;
	const FLT x136 = (x85 * ((-1 * x86 * x134) + x135)) + (x88 * x134);
	const FLT x137 = (x85 * x136) + (x89 * x134);
	const FLT x138 = 2 * x91 * x103 * x106;
	const FLT x139 = (1. / (x79 * sqrt(x79))) * x99 * x132;
	const FLT x140 = (x131 * x139) + (-1 * x100 * x124);
	const FLT x141 = 1. / x79;
	const FLT x142 = 1. / sqrt(1 + (-1 * x74 * (x99 * x99) * x141));
	const FLT x143 = (1. / x78) * x76;
	const FLT x144 = 1. / x77;
	const FLT x145 = x78 * x141;
	const FLT x146 = ((-1 * x129 * x144) + (x127 * x143)) * x145;
	const FLT x147 = cos(x102) * (*bsc0).ogeemag;
	const FLT x148 = x147 * (x146 + (-1 * x140 * x142));
	const FLT x149 = x97 * x96;
	const FLT x150 = 2.40324066e-05 * x85;
	const FLT x151 = x90 * x108 * (1. / (x105 * x105));
	const FLT x152 = x90 * x107 * x106;
	const FLT x153 =
		x146 + (-1 * x111 *
				((x148 * x152) +
				 (-1 * x151 *
				  ((x104 * ((x90 * x134) + (x95 * x134) +
							(x85 * ((x85 * (x136 + (x93 * x134) + (x85 * ((x92 * x134) + x135 + (-1 * x134 * x150))))) +
									x137 + (x94 * x134))) +
							(x85 * x137))) +
				   (x148 * x149))) +
				 (x109 * x137) + x140 + (x134 * x138)));
	const FLT x154 = cos((-1 * asin(x110)) + (*bsc0).gibpha + x98) * (*bsc0).gibmag;
	const FLT x155 = (x64 * x114) + (-1 * x120);
	const FLT x156 = (-1 * x56) + (-1 * x57) + (-1 * x55) + x54;
	const FLT x157 = x46 * x117;
	const FLT x158 = x157 + (-1 * x114 * x156);
	const FLT x159 = 1 + (x119 * x156) + (-2 * (x64 * x64));
	const FLT x160 = 2 * ((x159 * (*lh_p).Rot[1]) + (-1 * x155 * (*lh_p).Rot[2]) + (x158 * (*lh_p).Rot[0]));
	const FLT x161 = 2 * ((x155 * (*lh_p).Rot[0]) + (x158 * (*lh_p).Rot[2]) + (-1 * x159 * (*lh_p).Rot[3]));
	const FLT x162 = x159 + (-1 * x160 * (*lh_p).Rot[1]) + (x161 * (*lh_p).Rot[3]);
	const FLT x163 = 2 * ((-1 * x158 * (*lh_p).Rot[1]) + (x159 * (*lh_p).Rot[0]) + (x155 * (*lh_p).Rot[3]));
	const FLT x164 = x155 + (x160 * (*lh_p).Rot[2]) + (-1 * x163 * (*lh_p).Rot[3]);
	const FLT x165 = (x163 * (*lh_p).Rot[1]) + x158 + (-1 * x161 * (*lh_p).Rot[2]);
	const FLT x166 = (x165 * x130) + (x128 * x164);
	const FLT x167 = x112 * ((-1 * x133 * (x166 + (x125 * x162))) + (x84 * x162));
	const FLT x168 = x87 * x167;
	const FLT x169 = (x85 * ((-1 * x86 * x167) + x168)) + (x88 * x167);
	const FLT x170 = (x85 * x169) + (x89 * x167);
	const FLT x171 = (x166 * x139) + (-1 * x100 * x162);
	const FLT x172 = ((-1 * x165 * x144) + (x164 * x143)) * x145;
	const FLT x173 = x172 + (-1 * x171 * x142);
	const FLT x174 = x147 * x149;
	const FLT x175 = x147 * x152;
	const FLT x176 =
		x172 +
		(-1 * x111 *
		 ((x175 * x173) + x171 +
		  (-1 * x151 *
		   ((x104 * ((x90 * x167) + (x85 * x170) + (x95 * x167) +
					 (x85 * (x170 + (x85 * (x169 + (x93 * x167) + (x85 * ((x92 * x167) + x168 + (-1 * x167 * x150))))) +
							 (x94 * x167))))) +
			(x174 * x173))) +
		  (x167 * x138) + (x109 * x170)));
	const FLT x177 = x62 + (-1 * x63) + (-1 * x61) + (-1 * x60);
	const FLT x178 = x116 + (-1 * x119 * x177);
	const FLT x179 = 1 + (x117 * x177) + (-2 * (x53 * x53));
	const FLT x180 = (x58 * x114) + (-1 * x157);
	const FLT x181 = 2 * ((x180 * (*lh_p).Rot[1]) + (-1 * x178 * (*lh_p).Rot[2]) + (x179 * (*lh_p).Rot[0]));
	const FLT x182 = 2 * ((x179 * (*lh_p).Rot[2]) + (-1 * x180 * (*lh_p).Rot[3]) + (x178 * (*lh_p).Rot[0]));
	const FLT x183 = x180 + (-1 * x181 * (*lh_p).Rot[1]) + (x182 * (*lh_p).Rot[3]);
	const FLT x184 = 2 * ((x180 * (*lh_p).Rot[0]) + (-1 * x179 * (*lh_p).Rot[1]) + (x178 * (*lh_p).Rot[3]));
	const FLT x185 = x178 + (x181 * (*lh_p).Rot[2]) + (-1 * x184 * (*lh_p).Rot[3]);
	const FLT x186 = x179 + (x184 * (*lh_p).Rot[1]) + (-1 * x182 * (*lh_p).Rot[2]);
	const FLT x187 = (x186 * x130) + (x128 * x185);
	const FLT x188 = x112 * ((-1 * x133 * (x187 + (x125 * x183))) + (x84 * x183));
	const FLT x189 = x87 * x188;
	const FLT x190 = (x85 * ((-1 * x86 * x188) + x189)) + (x88 * x188);
	const FLT x191 = (x85 * x190) + (x89 * x188);
	const FLT x192 = (x187 * x139) + (-1 * x100 * x183);
	const FLT x193 = ((-1 * x186 * x144) + (x185 * x143)) * x145;
	const FLT x194 = x193 + (-1 * x192 * x142);
	const FLT x195 =
		x193 + (-1 * x111 *
				(x192 + (x175 * x194) + (x188 * x138) + (x109 * x191) +
				 (-1 * x151 *
				  ((x104 * ((x90 * x188) +
							(x85 * ((x85 * (x190 + (x93 * x188) + (x85 * ((x92 * x188) + x189 + (-1 * x188 * x150))))) +
									x191 + (x94 * x188))) +
							(x95 * x188) + (x85 * x191))) +
				   (x174 * x194)))));
	cnMatrixOptionalSet(Hx, 0, 0, x153 + (x153 * x154));
	cnMatrixOptionalSet(Hx, 0, 1, x176 + (x176 * x154));
	cnMatrixOptionalSet(Hx, 0, 2, x195 + (x195 * x154));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [sensor_pt[0], sensor_pt[1], sensor_pt[2]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_sensor_pt_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_sensor_pt(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_lh_p(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x5);
	const FLT x9 = sin(x1);
	const FLT x10 = cos(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x2 * x10;
	const FLT x14 = (x8 * x13) + (x7 * x9);
	const FLT x15 = x4 * x8;
	const FLT x16 = (x2 * x15) + (x6 * x11);
	const FLT x17 = (x6 * x13) + (-1 * x9 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = x18 * (*_x0).Pose.Rot[2];
	const FLT x42 =
		(x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) + (-1 * x41 * x17);
	const FLT x43 = x42 * x37;
	const FLT x44 =
		(x19 * (*_x0).Pose.Rot[1]) + (x41 * x12) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x21 * (*_x0).Pose.Rot[0]);
	const FLT x45 = x37 * x27;
	const FLT x46 = (-1 * x44 * x45) + (-1 * x43 * x25) + (-1 * x0 * x38) + (x40 * x39);
	const FLT x47 = x44 * x37;
	const FLT x48 = x37 * x39;
	const FLT x49 = (-1 * x43 * x27) + (x40 * x23) + (x47 * x25) + (x0 * x48);
	const FLT x50 = (x48 * x25) + (x45 * x23) + (-1 * x0 * x47) + (x40 * x42);
	const FLT x51 = (-1 * x50 * sensor_pt[1]) + (x46 * sensor_pt[0]) + (x49 * sensor_pt[2]);
	const FLT x52 = (x45 * x39) + (x0 * x43) + (-1 * x38 * x25) + (x40 * x44);
	const FLT x53 = (-1 * x52 * sensor_pt[2]) + (x46 * sensor_pt[1]) + (x50 * sensor_pt[0]);
	const FLT x54 = 2 * ((x53 * x52) + (-1 * x51 * x49));
	const FLT x55 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x56 = x55 * ((*_x0).Acc[2] + (*error_model).Acc[2]);
	const FLT x57 = dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]);
	const FLT x58 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + x54 + x56 + sensor_pt[2] + x57;
	const FLT x59 = x58 * (*lh_p).Rot[0];
	const FLT x60 = (-1 * x49 * sensor_pt[0]) + (x46 * sensor_pt[2]) + (x52 * sensor_pt[1]);
	const FLT x61 = 2 * ((x50 * x51) + (-1 * x60 * x52));
	const FLT x62 = dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1]);
	const FLT x63 = x55 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x64 = (*_x0).Pose.Pos[1] + x61 + (*error_model).Pose.Pos[1] + sensor_pt[1] + x63 + x62;
	const FLT x65 = x64 * (*lh_p).Rot[1];
	const FLT x66 = 2 * ((x60 * x49) + (-1 * x50 * x53));
	const FLT x67 = x55 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x68 = dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]);
	const FLT x69 = x66 + (*error_model).Pose.Pos[0] + x67 + sensor_pt[0] + (*_x0).Pose.Pos[0] + x68;
	const FLT x70 = x69 * (*lh_p).Rot[2];
	const FLT x71 = (-1 * x70) + x59 + x65;
	const FLT x72 = x69 * (*lh_p).Rot[0];
	const FLT x73 = x58 * (*lh_p).Rot[2];
	const FLT x74 = x64 * (*lh_p).Rot[3];
	const FLT x75 = (-1 * x74) + x72 + x73;
	const FLT x76 = x64 + (*lh_p).Pos[1] + (2 * ((x75 * (*lh_p).Rot[3]) + (-1 * x71 * (*lh_p).Rot[1])));
	const FLT x77 = x76 * x76;
	const FLT x78 = x69 * (*lh_p).Rot[3];
	const FLT x79 = x64 * (*lh_p).Rot[0];
	const FLT x80 = x58 * (*lh_p).Rot[1];
	const FLT x81 = (-1 * x80) + x78 + x79;
	const FLT x82 = x58 + (2 * ((x81 * (*lh_p).Rot[1]) + (-1 * x75 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x83 = (*lh_p).Pos[0] + x69 + (2 * ((x71 * (*lh_p).Rot[2]) + (-1 * x81 * (*lh_p).Rot[3])));
	const FLT x84 = x83 * x83;
	const FLT x85 = x84 + (x82 * x82);
	const FLT x86 = x85 + x77;
	const FLT x87 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x88 = cos(x87);
	const FLT x89 = 1. / x88;
	const FLT x90 = x89 * (1. / sqrt(x86));
	const FLT x91 = asin(x76 * x90);
	const FLT x92 = 8.0108022e-06 * x91;
	const FLT x93 = -8.0108022e-06 + (-1 * x92);
	const FLT x94 = 0.0028679863 + (x93 * x91);
	const FLT x95 = 5.3685255e-06 + (x91 * x94);
	const FLT x96 = 0.0076069798 + (x91 * x95);
	const FLT x97 = x91 * x96;
	const FLT x98 = -8.0108022e-06 + (-1.60216044e-05 * x91);
	const FLT x99 = x94 + (x91 * x98);
	const FLT x100 = x95 + (x91 * x99);
	const FLT x101 = x96 + (x91 * x100);
	const FLT x102 = (x91 * x101) + x97;
	const FLT x103 = sin(x87);
	const FLT x104 = atan2(-1 * x82, x83);
	const FLT x105 = tan(x87);
	const FLT x106 = (1. / sqrt(x85)) * x105;
	const FLT x107 = -1 * x76 * x106;
	const FLT x108 = (-1 * asin(x107)) + (*bsc0).ogeephase + x104;
	const FLT x109 = (sin(x108) * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x110 = x103 * x109;
	const FLT x111 = x88 + (x102 * x110);
	const FLT x112 = 1. / x111;
	const FLT x113 = x91 * x91;
	const FLT x114 = x109 * x113;
	const FLT x115 = x112 * x114;
	const FLT x116 = x107 + (x96 * x115);
	const FLT x117 = 1. / sqrt(1 + (-1 * (x116 * x116)));
	const FLT x118 = x83 * x76;
	const FLT x119 = (1. / (x85 * sqrt(x85))) * x105;
	const FLT x120 = x118 * x119;
	const FLT x121 = 1. / x85;
	const FLT x122 = 1. / sqrt(1 + (-1 * x77 * (x105 * x105) * x121));
	const FLT x123 = x82 * x121;
	const FLT x124 = x123 + (-1 * x120 * x122);
	const FLT x125 = cos(x108) * (*bsc0).ogeemag;
	const FLT x126 = x96 * x112 * x113;
	const FLT x127 = x126 * x125;
	const FLT x128 = 1. / sqrt(1 + (-1 * (1. / (x88 * x88)) * (1. / x86) * x77));
	const FLT x129 = x95 * x128;
	const FLT x130 = x89 * (1. / (x86 * sqrt(x86)));
	const FLT x131 = x118 * x130;
	const FLT x132 = x128 * x131;
	const FLT x133 = -1 * x93 * x132;
	const FLT x134 = (x91 * ((x92 * x132) + x133)) + (-1 * x94 * x132);
	const FLT x135 = (x91 * x134) + (-1 * x129 * x131);
	const FLT x136 = 2 * x83;
	const FLT x137 = x76 * x130;
	const FLT x138 = x97 * x109 * x112;
	const FLT x139 = x128 * x137 * x138;
	const FLT x140 = x103 * x102;
	const FLT x141 = x125 * x140;
	const FLT x142 = x101 * x128;
	const FLT x143 = x99 * x128;
	const FLT x144 = 2.40324066e-05 * x91;
	const FLT x145 = x98 * x128;
	const FLT x146 = x96 * (1. / (x111 * x111)) * x114;
	const FLT x147 =
		x123 +
		(-1 * x117 *
		 ((-1 * x146 *
		   ((x110 *
			 ((-1 * x96 * x132) + (-1 * x131 * x142) +
			  (x91 * (x135 + (x91 * (x134 + (-1 * x131 * x143) + (x91 * ((-1 * x131 * x145) + x133 + (x132 * x144))))) +
					  (-1 * x100 * x132))) +
			  (x91 * x135))) +
			(x124 * x141))) +
		  (-1 * x136 * x139) + (x115 * x135) + x120 + (x124 * x127)));
	const FLT x148 = cos((-1 * asin(x116)) + (*bsc0).gibpha + x104) * (*bsc0).gibmag;
	const FLT x149 = x106 * x122;
	const FLT x150 = (-1 * x77 * x130) + x90;
	const FLT x151 = x128 * x150;
	const FLT x152 = x93 * x151;
	const FLT x153 = (x91 * ((-1 * x92 * x151) + x152)) + (x94 * x151);
	const FLT x154 = (x91 * x153) + (x129 * x150);
	const FLT x155 = 2 * x138;
	const FLT x156 =
		x117 *
		((x115 * x154) + (x127 * x149) + (x151 * x155) + (-1 * x106) +
		 (-1 * x146 *
		  ((x110 * ((x96 * x151) + (x142 * x150) +
					(x91 * (x154 + (x91 * (x153 + (x143 * x150) + (x91 * ((x98 * x151) + (-1 * x144 * x151) + x152)))) +
							(x100 * x151))) +
					(x91 * x154))) +
		   (x141 * x149))));
	const FLT x157 = x76 * x119;
	const FLT x158 = x82 * x157;
	const FLT x159 = -1 * x83 * x121;
	const FLT x160 = x159 + (-1 * x122 * x158);
	const FLT x161 = 2 * x82;
	const FLT x162 = x82 * x137;
	const FLT x163 = x128 * x162;
	const FLT x164 = -1 * x93 * x163;
	const FLT x165 = (x91 * ((x92 * x163) + x164)) + (-1 * x94 * x163);
	const FLT x166 = (x91 * x165) + (-1 * x129 * x162);
	const FLT x167 =
		x159 +
		(-1 * x117 *
		 ((x115 * x166) +
		  (-1 * x146 *
		   ((x110 *
			 ((x91 * x166) + (-1 * x96 * x163) + (-1 * x162 * x142) +
			  (x91 * (x166 + (x91 * (x165 + (-1 * x162 * x143) + (x91 * ((-1 * x162 * x145) + x164 + (x163 * x144))))) +
					  (-1 * x100 * x163))))) +
			(x160 * x141))) +
		  x158 + (x127 * x160) + (-1 * x161 * x139)));
	const FLT x168 = 2 * x80;
	const FLT x169 = (2 * x78) + (-1 * x168);
	const FLT x170 = 2 * x76;
	const FLT x171 = 2 * x74;
	const FLT x172 = (2 * x73) + (-1 * x171);
	const FLT x173 = 2 * x70;
	const FLT x174 = (2 * x65) + (-1 * x173);
	const FLT x175 = (x161 * x174) + (x172 * x136);
	const FLT x176 = 1.0 / 2.0 * x137;
	const FLT x177 = (-1 * x176 * (x175 + (x169 * x170))) + (x90 * x169);
	const FLT x178 = x128 * x177;
	const FLT x179 = 1.0 / 2.0 * x157;
	const FLT x180 = (x179 * x175) + (-1 * x106 * x169);
	const FLT x181 = x82 * (1. / x84);
	const FLT x182 = 1. / x83;
	const FLT x183 = x84 * x121;
	const FLT x184 = ((-1 * x174 * x182) + (x172 * x181)) * x183;
	const FLT x185 = x184 + (-1 * x122 * x180);
	const FLT x186 = x93 * x178;
	const FLT x187 = (x91 * ((-1 * x92 * x178) + x186)) + (x94 * x178);
	const FLT x188 = (x91 * x187) + (x129 * x177);
	const FLT x189 =
		x184 +
		(-1 * x117 *
		 ((-1 * x146 *
		   ((x110 * ((x96 * x178) + (x91 * x188) + (x101 * x178) +
					 (x91 * ((x91 * (x187 + (x177 * x143) + (x91 * ((x98 * x178) + x186 + (-1 * x178 * x144))))) +
							 x188 + (x100 * x178))))) +
			(x185 * x141))) +
		  (x115 * x188) + x180 + (x178 * x155) + (x127 * x185)));
	const FLT x190 = 2 * x59;
	const FLT x191 = x173 + (-1 * x190) + (-4 * x65);
	const FLT x192 = (-1 * sensor_pt[2]) + (-1 * (*error_model).Pose.Pos[2]) + (-1 * x57) + (-1 * (*_x0).Pose.Pos[2]) +
					 (-1 * x54) + (-1 * x56);
	const FLT x193 = 2 * (*lh_p).Rot[3];
	const FLT x194 = 2 * (*lh_p).Rot[2];
	const FLT x195 = (x64 * x194) + (-1 * x192 * x193);
	const FLT x196 = 2 * x79;
	const FLT x197 = 2 * (*lh_p).Rot[1];
	const FLT x198 = x169 + x196 + (x197 * x192);
	const FLT x199 = (x161 * x198) + (x195 * x136);
	const FLT x200 = (-1 * x176 * (x199 + (x170 * x191))) + (x90 * x191);
	const FLT x201 = x200 * x128;
	const FLT x202 = x93 * x201;
	const FLT x203 = (x91 * ((-1 * x92 * x201) + x202)) + (x94 * x201);
	const FLT x204 = (x91 * x203) + (x200 * x129);
	const FLT x205 = (x179 * x199) + (-1 * x106 * x191);
	const FLT x206 = ((-1 * x182 * x198) + (x181 * x195)) * x183;
	const FLT x207 = x125 * (x206 + (-1 * x205 * x122));
	const FLT x208 =
		x206 +
		(-1 * x117 *
		 (x205 +
		  (-1 * x146 *
		   ((x110 * ((x96 * x201) + (x91 * x204) + (x201 * x101) +
					 (x91 * (x204 + (x91 * (x203 + (x99 * x201) + (x91 * (x202 + (x98 * x201) + (-1 * x201 * x144))))) +
							 (x201 * x100))))) +
			(x207 * x140))) +
		  (x207 * x126) + (x204 * x115) + (x201 * x155)));
	const FLT x209 = (-1 * (*error_model).Pose.Pos[0]) + (-1 * sensor_pt[0]) + (-1 * x67) + (-1 * x68) +
					 (-1 * (*_x0).Pose.Pos[0]) + (-1 * x66);
	const FLT x210 = (x58 * x193) + (-1 * x209 * x197);
	const FLT x211 = x174 + x190 + (x209 * x194);
	const FLT x212 = 2 * x72;
	const FLT x213 = x171 + (-4 * x73) + (-1 * x212);
	const FLT x214 = (x213 * x161) + (x211 * x136);
	const FLT x215 = (-1 * x176 * (x214 + (x210 * x170))) + (x90 * x210);
	const FLT x216 = x215 * x128;
	const FLT x217 = x93 * x216;
	const FLT x218 = (x91 * ((-1 * x92 * x216) + x217)) + (x94 * x216);
	const FLT x219 = (x91 * x218) + (x215 * x129);
	const FLT x220 = (x214 * x179) + (-1 * x210 * x106);
	const FLT x221 = ((-1 * x213 * x182) + (x211 * x181)) * x183;
	const FLT x222 = x221 + (-1 * x220 * x122);
	const FLT x223 =
		x221 +
		(-1 * x117 *
		 ((-1 * x146 *
		   ((x110 *
			 ((x96 * x216) + (x91 * x219) + (x215 * x142) +
			  (x91 * (x219 + (x91 * (x218 + (x215 * x143) + (x91 * ((x98 * x216) + x217 + (-1 * x216 * x144))))) +
					  (x216 * x100))))) +
			(x222 * x141))) +
		  (x222 * x127) + (x216 * x155) + x220 + (x219 * x115)));
	const FLT x224 = 2 * ((-1 * x62) + (-1 * (*_x0).Pose.Pos[1]) + (-1 * x63) + (-1 * (*error_model).Pose.Pos[1]) +
						  (-1 * sensor_pt[1]) + (-1 * x61));
	const FLT x225 = x172 + x212 + (x224 * (*lh_p).Rot[3]);
	const FLT x226 = (-1 * x196) + (-4 * x78) + x168;
	const FLT x227 = (x69 * x197) + (-1 * x224 * (*lh_p).Rot[2]);
	const FLT x228 = (x227 * x161) + (x226 * x136);
	const FLT x229 = x128 * ((-1 * x176 * (x228 + (x225 * x170))) + (x90 * x225));
	const FLT x230 = x93 * x229;
	const FLT x231 = (x91 * ((-1 * x92 * x229) + x230)) + (x94 * x229);
	const FLT x232 = (x91 * x231) + (x95 * x229);
	const FLT x233 = (x228 * x179) + (-1 * x225 * x106);
	const FLT x234 = ((-1 * x227 * x182) + (x226 * x181)) * x183;
	const FLT x235 = x234 + (-1 * x233 * x122);
	const FLT x236 =
		x234 + (-1 * x117 *
				((x235 * x127) + (x229 * x155) + x233 + (x232 * x115) +
				 (-1 * x146 *
				  ((x110 * ((x96 * x229) + (x229 * x101) +
							(x91 * ((x91 * (x231 + (x99 * x229) + (x91 * ((x98 * x229) + x230 + (-1 * x229 * x144))))) +
									x232 + (x229 * x100))) +
							(x91 * x232))) +
				   (x235 * x141)))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[0]) / sizeof(FLT), x147 + (x148 * x147));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[1]) / sizeof(FLT), (-1 * x148 * x156) + (-1 * x156));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Pos[2]) / sizeof(FLT), x167 + (x167 * x148));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[0]) / sizeof(FLT), x189 + (x189 * x148));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[1]) / sizeof(FLT), x208 + (x208 * x148));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[2]) / sizeof(FLT), x223 + (x223 * x148));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurvivePose, Rot[3]) / sizeof(FLT), x236 + (x236 * x148));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [(*lh_p).Pos[0], (*lh_p).Pos[1], (*lh_p).Pos[2], (*lh_p).Rot[0], (*lh_p).Rot[1], (*lh_p).Rot[2], (*lh_p).Rot[3]]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_lh_p_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_lh_p(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
// Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at 0x7f0193024fa0>,
// <cnkalman.codegen.WrapMember object at 0x7f01930410a0>, <cnkalman.codegen.WrapMember object at 0x7f0193041040>,
// <cnkalman.codegen.WrapMember object at 0x7f0193041160>, <cnkalman.codegen.WrapMember object at 0x7f0193041100>,
// <cnkalman.codegen.WrapMember object at 0x7f0193024d90>, <cnkalman.codegen.WrapMember object at 0x7f0193024f40>]
static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_bsc0(CnMat* Hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
	const FLT x0 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x1 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x4 = cos(x3);
	const FLT x5 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = sin(x3);
	const FLT x9 = cos(x5);
	const FLT x10 = cos(x1);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = x6 * x8;
	const FLT x14 = (x4 * x11) + (x2 * x13);
	const FLT x15 = x2 * x9;
	const FLT x16 = (x4 * x15) + (x13 * x10);
	const FLT x17 = (x7 * x10) + (-1 * x8 * x15);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x14 * x14));
	const FLT x19 = x14 * x18;
	const FLT x20 = x18 * x16;
	const FLT x21 = x18 * x17;
	const FLT x22 = x12 * x18;
	const FLT x23 = (-1 * x22 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[2]) + (x21 * (*_x0).Pose.Rot[3]) +
					(x20 * (*_x0).Pose.Rot[0]);
	const FLT x24 = dt * dt;
	const FLT x25 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x26 = x24 * (x25 * x25);
	const FLT x27 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x28 = x24 * (x27 * x27);
	const FLT x29 = (x0 * x0) * x24;
	const FLT x30 = 1e-10 + x29 + x26 + x28;
	const FLT x31 = sqrt(x30);
	const FLT x32 = 0.5 * x31;
	const FLT x33 = sin(x32);
	const FLT x34 = (1. / x30) * (x33 * x33);
	const FLT x35 = cos(x32);
	const FLT x36 = 1. / sqrt((x35 * x35) + (x34 * x26) + (x34 * x28) + (x34 * x29));
	const FLT x37 = dt * (1. / x31) * x33 * x36;
	const FLT x38 = x37 * x23;
	const FLT x39 = (-1 * x21 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[0]) + (-1 * x22 * (*_x0).Pose.Rot[3]) +
					(-1 * x20 * (*_x0).Pose.Rot[2]);
	const FLT x40 = x36 * x35;
	const FLT x41 = (x22 * (*_x0).Pose.Rot[0]) + (x20 * (*_x0).Pose.Rot[1]) + (x19 * (*_x0).Pose.Rot[3]) +
					(-1 * x21 * (*_x0).Pose.Rot[2]);
	const FLT x42 = x41 * x37;
	const FLT x43 = (x19 * (*_x0).Pose.Rot[1]) + (-1 * x20 * (*_x0).Pose.Rot[3]) + (x22 * (*_x0).Pose.Rot[2]) +
					(x21 * (*_x0).Pose.Rot[0]);
	const FLT x44 = x43 * x37;
	const FLT x45 = (-1 * x44 * x27) + (-1 * x0 * x38) + (-1 * x42 * x25) + (x40 * x39);
	const FLT x46 = x37 * x39;
	const FLT x47 = (x46 * x25) + (-1 * x0 * x44) + (x38 * x27) + (x40 * x41);
	const FLT x48 = (-1 * x38 * x25) + (x0 * x42) + (x46 * x27) + (x40 * x43);
	const FLT x49 = (x45 * sensor_pt[1]) + (-1 * x48 * sensor_pt[2]) + (x47 * sensor_pt[0]);
	const FLT x50 = (-1 * x42 * x27) + (x40 * x23) + (x44 * x25) + (x0 * x46);
	const FLT x51 = (-1 * x50 * sensor_pt[0]) + (x45 * sensor_pt[2]) + (x48 * sensor_pt[1]);
	const FLT x52 = 1.0 / 2.0 * dt * fabs(dt);
	const FLT x53 = (*_x0).Pose.Pos[0] + (2 * ((x50 * x51) + (-1 * x47 * x49))) + (*error_model).Pose.Pos[0] +
					sensor_pt[0] + (x52 * ((*_x0).Acc[0] + (*error_model).Acc[0])) +
					(dt * ((*_x0).Velocity.Pos[0] + (*error_model).Velocity.Pos[0]));
	const FLT x54 = (-1 * x47 * sensor_pt[1]) + (x45 * sensor_pt[0]) + (x50 * sensor_pt[2]);
	const FLT x55 = (*_x0).Pose.Pos[2] + (*error_model).Pose.Pos[2] + (x52 * ((*_x0).Acc[2] + (*error_model).Acc[2])) +
					(2 * ((x48 * x49) + (-1 * x50 * x54))) + sensor_pt[2] +
					(dt * ((*_x0).Velocity.Pos[2] + (*error_model).Velocity.Pos[2]));
	const FLT x56 = (*_x0).Pose.Pos[1] + (*error_model).Pose.Pos[1] + (2 * ((x54 * x47) + (-1 * x51 * x48))) +
					sensor_pt[1] + (dt * ((*_x0).Velocity.Pos[1] + (*error_model).Velocity.Pos[1])) +
					(x52 * ((*_x0).Acc[1] + (*error_model).Acc[1]));
	const FLT x57 = (-1 * x56 * (*lh_p).Rot[3]) + (x53 * (*lh_p).Rot[0]) + (x55 * (*lh_p).Rot[2]);
	const FLT x58 = (-1 * x55 * (*lh_p).Rot[1]) + (x53 * (*lh_p).Rot[3]) + (x56 * (*lh_p).Rot[0]);
	const FLT x59 = x55 + (2 * ((x58 * (*lh_p).Rot[1]) + (-1 * x57 * (*lh_p).Rot[2]))) + (*lh_p).Pos[2];
	const FLT x60 = (-1 * x53 * (*lh_p).Rot[2]) + (x55 * (*lh_p).Rot[0]) + (x56 * (*lh_p).Rot[1]);
	const FLT x61 = (*lh_p).Pos[0] + x53 + (2 * ((x60 * (*lh_p).Rot[2]) + (-1 * x58 * (*lh_p).Rot[3])));
	const FLT x62 = atan2(-1 * x59, x61);
	const FLT x63 = 0.523598775598299 + (-1 * (*bsc0).tilt);
	const FLT x64 = tan(x63);
	const FLT x65 = (*lh_p).Pos[1] + x56 + (2 * ((x57 * (*lh_p).Rot[3]) + (-1 * x60 * (*lh_p).Rot[1])));
	const FLT x66 = (x61 * x61) + (x59 * x59);
	const FLT x67 = x65 * (1. / sqrt(x66));
	const FLT x68 = -1 * x64 * x67;
	const FLT x69 = (-1 * asin(x68)) + (*bsc0).ogeephase + x62;
	const FLT x70 = sin(x69);
	const FLT x71 = (x70 * (*bsc0).ogeemag) + (*bsc0).curve;
	const FLT x72 = cos(x63);
	const FLT x73 = x65 * x65;
	const FLT x74 = x66 + x73;
	const FLT x75 = (1. / sqrt(x74)) * x65;
	const FLT x76 = asin((1. / x72) * x75);
	const FLT x77 = 8.0108022e-06 * x76;
	const FLT x78 = -8.0108022e-06 + (-1 * x77);
	const FLT x79 = 0.0028679863 + (x78 * x76);
	const FLT x80 = 5.3685255e-06 + (x79 * x76);
	const FLT x81 = 0.0076069798 + (x80 * x76);
	const FLT x82 = x76 * x76;
	const FLT x83 = sin(x63);
	const FLT x84 = x81 * x76;
	const FLT x85 = -8.0108022e-06 + (-1.60216044e-05 * x76);
	const FLT x86 = x79 + (x85 * x76);
	const FLT x87 = x80 + (x86 * x76);
	const FLT x88 = x81 + (x87 * x76);
	const FLT x89 = (x88 * x76) + x84;
	const FLT x90 = x89 * x71;
	const FLT x91 = x83 * x90;
	const FLT x92 = x72 + x91;
	const FLT x93 = 1. / x92;
	const FLT x94 = x82 * x93;
	const FLT x95 = x81 * x94;
	const FLT x96 = x68 + (x71 * x95);
	const FLT x97 = 1. / sqrt(1 + (-1 * (x96 * x96)));
	const FLT x98 = x81 * x82 * (1. / (x92 * x92));
	const FLT x99 = x91 * x98;
	const FLT x100 = ((-1 * x99) + x95) * x97;
	const FLT x101 = (-1 * asin(x96)) + (*bsc0).gibpha + x62;
	const FLT x102 = cos(x101) * (*bsc0).gibmag;
	const FLT x103 = ((-1 * x70 * x99) + (x70 * x95)) * x97;
	const FLT x104 = cos(x69) * (*bsc0).ogeemag;
	const FLT x105 = x95 * x104;
	const FLT x106 = x97 * ((-1 * x99 * x104) + x105);
	const FLT x107 = x64 * x64;
	const FLT x108 = x67 * (1 + x107);
	const FLT x109 = x108 * (1. / sqrt(1 + (-1 * x73 * (1. / x66) * x107)));
	const FLT x110 = 1. / (x72 * x72);
	const FLT x111 = x75 * x110 * (1. / sqrt(1 + (-1 * x73 * (1. / x74) * x110)));
	const FLT x112 = x83 * x111;
	const FLT x113 = -1 * x78 * x112;
	const FLT x114 = (x76 * ((x77 * x112) + x113)) + (-1 * x79 * x112);
	const FLT x115 = (x76 * x114) + (-1 * x80 * x112);
	const FLT x116 = x83 * x71;
	const FLT x117 =
		x97 * ((x71 * x94 * x115) + (-1 * x109 * x105) + (-2 * x84 * x93 * x111 * x116) + x108 +
			   (-1 * x71 * x98 *
				((x116 * ((-1 * x81 * x112) + (x76 * x115) + (-1 * x88 * x112) +
						  (x76 * (x115 +
								  (x76 * (x114 + (-1 * x86 * x112) +
										  (x76 * ((2.40324066e-05 * x76 * x112) + (-1 * x85 * x112) + x113)))) +
								  (-1 * x87 * x112))))) +
				 (-1 * x72 * x90) + x83 + (-1 * x83 * x89 * x109 * x104))));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, curve) / sizeof(FLT), (-1 * x100 * x102) + (-1 * x100));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibmag) / sizeof(FLT), sin(x101));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, gibpha) / sizeof(FLT), x102);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeemag) / sizeof(FLT), (-1 * x103 * x102) + (-1 * x103));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, ogeephase) / sizeof(FLT), (-1 * x102 * x106) + (-1 * x106));
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, phase)/sizeof(FLT), -1);
	cnMatrixOptionalSet(Hx, 0, offsetof(BaseStationCal, tilt) / sizeof(FLT), (-1 * x102 * x117) + (-1 * x117));
}

// Full version Jacobian of SurviveKalmanErrorModel_LightMeas_y_gen2 wrt [<cnkalman.codegen.WrapMember object at
// 0x7f0193024fa0>, <cnkalman.codegen.WrapMember object at 0x7f01930410a0>, <cnkalman.codegen.WrapMember object at
// 0x7f0193041040>, <cnkalman.codegen.WrapMember object at 0x7f0193041160>, <cnkalman.codegen.WrapMember object at
// 0x7f0193041100>, <cnkalman.codegen.WrapMember object at 0x7f0193024d90>, <cnkalman.codegen.WrapMember object at
// 0x7f0193024f40>]

static inline void SurviveKalmanErrorModel_LightMeas_y_gen2_jac_bsc0_with_hx(CnMat* Hx, CnMat* hx, const FLT dt, const SurviveKalmanModel* _x0, const SurviveKalmanErrorModel* error_model, const FLT* sensor_pt, const SurvivePose* lh_p, const BaseStationCal* bsc0) {
    if(hx != 0) { 
        hx->data[0] = SurviveKalmanErrorModel_LightMeas_y_gen2(dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
    if(Hx != 0) { 
        SurviveKalmanErrorModel_LightMeas_y_gen2_jac_bsc0(Hx, dt, _x0, error_model, sensor_pt, lh_p, bsc0);
    }
}
static inline void IMUMeasurementModel(CnMat *out, const SurviveKalmanModel *model) {
	const FLT x0 =
		(1. / sqrt(((*model).Pose.Rot[1] * (*model).Pose.Rot[1]) + ((*model).Pose.Rot[0] * (*model).Pose.Rot[0]) +
				   ((*model).Pose.Rot[3] * (*model).Pose.Rot[3]) + ((*model).Pose.Rot[2] * (*model).Pose.Rot[2]))) *
		(1. / sqrt(((*model).IMUBias.IMUCorrection[1] * (*model).IMUBias.IMUCorrection[1]) +
				   ((*model).IMUBias.IMUCorrection[0] * (*model).IMUBias.IMUCorrection[0]) +
				   ((*model).IMUBias.IMUCorrection[3] * (*model).IMUBias.IMUCorrection[3]) +
				   ((*model).IMUBias.IMUCorrection[2] * (*model).IMUBias.IMUCorrection[2])));
	const FLT x1 = x0 * (*model).Pose.Rot[2];
	const FLT x2 = x0 * (*model).Pose.Rot[3];
	const FLT x3 = x0 * (*model).IMUBias.IMUCorrection[3];
	const FLT x4 = x0 * (*model).Pose.Rot[1];
	const FLT x5 = (-1 * x4 * (*model).IMUBias.IMUCorrection[2]) + (x3 * (*model).Pose.Rot[0]) +
				   (x1 * (*model).IMUBias.IMUCorrection[1]) + (-1 * x2 * (*model).IMUBias.IMUCorrection[0]);
	const FLT x6 = x0 * (*model).Pose.Rot[0];
	const FLT x7 = (x4 * (*model).IMUBias.IMUCorrection[1]) + (x1 * (*model).IMUBias.IMUCorrection[2]) +
				   (x3 * (*model).Pose.Rot[3]) + (x6 * (*model).IMUBias.IMUCorrection[0]);
	const FLT x8 = 0.101971621297793 * (*model).Acc[1];
	const FLT x9 = 0.101971621297793 * (*model).Acc[0];
	const FLT x10 = (-1 * x4 * (*model).IMUBias.IMUCorrection[0]) + (x6 * (*model).IMUBias.IMUCorrection[1]) +
					(x2 * (*model).IMUBias.IMUCorrection[2]) + (-1 * x3 * (*model).Pose.Rot[2]);
	const FLT x11 = 1 + (0.101971621297793 * (*model).Acc[2]);
	const FLT x12 = (-1 * x11 * x10) + (x8 * x7) + (x5 * x9);
	const FLT x13 = (x3 * (*model).Pose.Rot[1]) + (x6 * (*model).IMUBias.IMUCorrection[2]) +
					(-1 * x2 * (*model).IMUBias.IMUCorrection[1]) + (-1 * x1 * (*model).IMUBias.IMUCorrection[0]);
	const FLT x14 = (x7 * x11) + (-1 * x9 * x13) + (x8 * x10);
	const FLT x15 = (-1 * x5 * x8) + (x7 * x9) + (x13 * x11);
	const FLT x16 = (-1 * x10 * (*model).Velocity.AxisAngleRot[2]) + (x7 * (*model).Velocity.AxisAngleRot[1]) +
					(x5 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x17 = (-1 * x13 * (*model).Velocity.AxisAngleRot[0]) + (x7 * (*model).Velocity.AxisAngleRot[2]) +
					(x10 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x18 = (-1 * x5 * (*model).Velocity.AxisAngleRot[1]) + (x7 * (*model).Velocity.AxisAngleRot[0]) +
					(x13 * (*model).Velocity.AxisAngleRot[2]);
	cnMatrixOptionalSet(out, 0, 0,
						((x9 + (2 * ((x14 * x13) + (-1 * x5 * x12)))) * (*model).IMUBias.AccScale[0]) +
							(*model).IMUBias.AccBias[0]);
	cnMatrixOptionalSet(out, 1, 0,
						((x8 + (2 * ((x5 * x15) + (-1 * x14 * x10)))) * (*model).IMUBias.AccScale[1]) +
							(*model).IMUBias.AccBias[1]);
	cnMatrixOptionalSet(out, 2, 0,
						((x11 + (2 * ((x12 * x10) + (-1 * x15 * x13)))) * (*model).IMUBias.AccScale[2]) +
							(*model).IMUBias.AccBias[2]);
	cnMatrixOptionalSet(out, 3, 0,
						(2 * ((x13 * x17) + (-1 * x5 * x16))) + (*model).IMUBias.GyroBias[0] +
							(*model).Velocity.AxisAngleRot[0]);
	cnMatrixOptionalSet(out, 4, 0,
						(2 * ((x5 * x18) + (-1 * x10 * x17))) + (*model).IMUBias.GyroBias[1] +
							(*model).Velocity.AxisAngleRot[1]);
	cnMatrixOptionalSet(out, 5, 0,
						(2 * ((x10 * x16) + (-1 * x13 * x18))) + (*model).IMUBias.GyroBias[2] +
							(*model).Velocity.AxisAngleRot[2]);
}

// Jacobian of IMUMeasurementModel wrt [(*model).Acc[0], (*model).Acc[1], (*model).Acc[2], (*model).IMUBias.AccBias[0],
// (*model).IMUBias.AccBias[1], (*model).IMUBias.AccBias[2], (*model).IMUBias.AccScale[0], (*model).IMUBias.AccScale[1],
// (*model).IMUBias.AccScale[2], (*model).IMUBias.GyroBias[0], (*model).IMUBias.GyroBias[1],
// (*model).IMUBias.GyroBias[2], (*model).IMUBias.IMUCorrection[0], (*model).IMUBias.IMUCorrection[1],
// (*model).IMUBias.IMUCorrection[2], (*model).IMUBias.IMUCorrection[3], (*model).Pose.Pos[0], (*model).Pose.Pos[1],
// (*model).Pose.Pos[2], (*model).Pose.Rot[0], (*model).Pose.Rot[1], (*model).Pose.Rot[2], (*model).Pose.Rot[3],
// (*model).Velocity.AxisAngleRot[0], (*model).Velocity.AxisAngleRot[1], (*model).Velocity.AxisAngleRot[2],
// (*model).Velocity.Pos[0], (*model).Velocity.Pos[1], (*model).Velocity.Pos[2]]
static inline void IMUMeasurementModel_jac_model(CnMat *Hx, const SurviveKalmanModel *model) {
	const FLT x0 = (*model).Pose.Rot[3] * (*model).Pose.Rot[3];
	const FLT x1 = (*model).Pose.Rot[2] * (*model).Pose.Rot[2];
	const FLT x2 = (*model).Pose.Rot[0] * (*model).Pose.Rot[0];
	const FLT x3 = (*model).Pose.Rot[1] * (*model).Pose.Rot[1];
	const FLT x4 = x2 + x3 + x0 + x1;
	const FLT x5 = 1. / sqrt(x4);
	const FLT x6 = (*model).IMUBias.IMUCorrection[3] * (*model).IMUBias.IMUCorrection[3];
	const FLT x7 = (*model).IMUBias.IMUCorrection[2] * (*model).IMUBias.IMUCorrection[2];
	const FLT x8 = (*model).IMUBias.IMUCorrection[0] * (*model).IMUBias.IMUCorrection[0];
	const FLT x9 = (*model).IMUBias.IMUCorrection[1] * (*model).IMUBias.IMUCorrection[1];
	const FLT x10 = x8 + x9 + x6 + x7;
	const FLT x11 = 1. / sqrt(x10);
	const FLT x12 = x5 * x11;
	const FLT x13 = x12 * (*model).Pose.Rot[3];
	const FLT x14 = x13 * (*model).IMUBias.IMUCorrection[0];
	const FLT x15 = 0.101971621297793 * x14;
	const FLT x16 = x12 * (*model).Pose.Rot[0];
	const FLT x17 = x16 * (*model).IMUBias.IMUCorrection[3];
	const FLT x18 = 0.101971621297793 * x17;
	const FLT x19 = x12 * (*model).Pose.Rot[1];
	const FLT x20 = x19 * (*model).IMUBias.IMUCorrection[2];
	const FLT x21 = 0.101971621297793 * x20;
	const FLT x22 = x12 * (*model).Pose.Rot[2];
	const FLT x23 = x22 * (*model).IMUBias.IMUCorrection[1];
	const FLT x24 = 0.101971621297793 * x23;
	const FLT x25 = x24 + (-1 * x21) + (-1 * x15) + x18;
	const FLT x26 = (-1 * x20) + x17 + x23 + (-1 * x14);
	const FLT x27 = 2 * x26;
	const FLT x28 = x19 * (*model).IMUBias.IMUCorrection[3];
	const FLT x29 = x22 * (*model).IMUBias.IMUCorrection[0];
	const FLT x30 = x13 * (*model).IMUBias.IMUCorrection[1];
	const FLT x31 = x16 * (*model).IMUBias.IMUCorrection[2];
	const FLT x32 =
		(0.101971621297793 * x30) + (-0.101971621297793 * x28) + (-0.101971621297793 * x31) + (0.101971621297793 * x29);
	const FLT x33 = x28 + (-1 * x30) + x31 + (-1 * x29);
	const FLT x34 = 2 * x33;
	const FLT x35 = x16 * (*model).IMUBias.IMUCorrection[0];
	const FLT x36 = x13 * (*model).IMUBias.IMUCorrection[3];
	const FLT x37 = x19 * (*model).IMUBias.IMUCorrection[1];
	const FLT x38 = x22 * (*model).IMUBias.IMUCorrection[2];
	const FLT x39 =
		(0.101971621297793 * x38) + (0.101971621297793 * x37) + (0.101971621297793 * x35) + (0.101971621297793 * x36);
	const FLT x40 = x39 * x27;
	const FLT x41 = x13 * (*model).IMUBias.IMUCorrection[2];
	const FLT x42 = x22 * (*model).IMUBias.IMUCorrection[3];
	const FLT x43 = x16 * (*model).IMUBias.IMUCorrection[1];
	const FLT x44 = x19 * (*model).IMUBias.IMUCorrection[0];
	const FLT x45 =
		(-0.101971621297793 * x44) + (0.101971621297793 * x43) + (0.101971621297793 * x41) + (-0.101971621297793 * x42);
	const FLT x46 = (-1 * x44) + x43 + x41 + (-1 * x42);
	const FLT x47 = 0.203943242595586 * x46;
	const FLT x48 = x37 + x38 + x36 + x35;
	const FLT x49 = 0.203943242595586 * x33;
	const FLT x50 = 0.101971621297793 * (*model).Acc[1];
	const FLT x51 = 0.101971621297793 * (*model).Acc[0];
	const FLT x52 = 1 + (0.101971621297793 * (*model).Acc[2]);
	const FLT x53 = (-1 * x52 * x46) + (x50 * x48) + (x51 * x26);
	const FLT x54 = (-1 * x51 * x33) + (x52 * x48) + (x50 * x46);
	const FLT x55 = x5 * (1. / (x10 * sqrt(x10)));
	const FLT x56 = x55 * (*model).Pose.Rot[3];
	const FLT x57 = x55 * (*model).Pose.Rot[0];
	const FLT x58 = x57 * (*model).IMUBias.IMUCorrection[3];
	const FLT x59 = -1 * x58 * (*model).IMUBias.IMUCorrection[0];
	const FLT x60 = x55 * (*model).Pose.Rot[2];
	const FLT x61 = (*model).IMUBias.IMUCorrection[1] * (*model).IMUBias.IMUCorrection[0];
	const FLT x62 = x60 * x61;
	const FLT x63 = x55 * (*model).Pose.Rot[1];
	const FLT x64 = x63 * (*model).IMUBias.IMUCorrection[2];
	const FLT x65 = x64 * (*model).IMUBias.IMUCorrection[0];
	const FLT x66 = -1 * x13;
	const FLT x67 = x65 + x66 + (-1 * x62) + (x8 * x56) + x59;
	const FLT x68 = 2 * x53;
	const FLT x69 = x60 * (*model).IMUBias.IMUCorrection[2];
	const FLT x70 = x69 * (*model).IMUBias.IMUCorrection[0];
	const FLT x71 = x63 * x61;
	const FLT x72 = x56 * (*model).IMUBias.IMUCorrection[3];
	const FLT x73 = x72 * (*model).IMUBias.IMUCorrection[0];
	const FLT x74 = x16 + (-1 * x73) + (-1 * x70) + (-1 * x8 * x57) + (-1 * x71);
	const FLT x75 = -1 * x19;
	const FLT x76 = -1 * x61 * x57;
	const FLT x77 = x56 * (*model).IMUBias.IMUCorrection[2];
	const FLT x78 = x77 * (*model).IMUBias.IMUCorrection[0];
	const FLT x79 = x60 * (*model).IMUBias.IMUCorrection[3];
	const FLT x80 = x79 * (*model).IMUBias.IMUCorrection[0];
	const FLT x81 = (-1 * x78) + x80 + x76 + (x8 * x63) + x75;
	const FLT x82 = (x67 * x51) + (x74 * x50) + (-1 * x81 * x52);
	const FLT x83 = x63 * (*model).IMUBias.IMUCorrection[3];
	const FLT x84 = x83 * (*model).IMUBias.IMUCorrection[0];
	const FLT x85 = x61 * x56;
	const FLT x86 = x57 * (*model).IMUBias.IMUCorrection[2];
	const FLT x87 = -1 * x86 * (*model).IMUBias.IMUCorrection[0];
	const FLT x88 = -1 * x22;
	const FLT x89 = x88 + x85 + (-1 * x84) + x87 + (x8 * x60);
	const FLT x90 = 2 * x54;
	const FLT x91 = (x81 * x50) + (-1 * x89 * x51) + (x74 * x52);
	const FLT x92 = x64 * (*model).IMUBias.IMUCorrection[1];
	const FLT x93 = -1 * x58 * (*model).IMUBias.IMUCorrection[1];
	const FLT x94 = (-1 * x9 * x60) + x22 + x93 + x85 + x92;
	const FLT x95 = -1 * x86 * (*model).IMUBias.IMUCorrection[1];
	const FLT x96 = -1 * x83 * (*model).IMUBias.IMUCorrection[1];
	const FLT x97 = x96 + x95 + (x9 * x56) + x66 + x62;
	const FLT x98 = x77 * (*model).IMUBias.IMUCorrection[1];
	const FLT x99 = x79 * (*model).IMUBias.IMUCorrection[1];
	const FLT x100 = (-1 * x98) + x16 + x99 + x71 + (-1 * x9 * x57);
	const FLT x101 = -1 * x69 * (*model).IMUBias.IMUCorrection[1];
	const FLT x102 = x72 * (*model).IMUBias.IMUCorrection[1];
	const FLT x103 = (-1 * x102) + x76 + x19 + (-1 * x9 * x63) + x101;
	const FLT x104 = (x51 * x94) + (-1 * x52 * x100) + (x50 * x103);
	const FLT x105 = (-1 * x51 * x97) + (x50 * x100) + (x52 * x103);
	const FLT x106 = -1 * x86 * (*model).IMUBias.IMUCorrection[3];
	const FLT x107 = x78 + x101 + x106 + (x7 * x63) + x75;
	const FLT x108 = x83 * (*model).IMUBias.IMUCorrection[2];
	const FLT x109 = (-1 * x108) + x70 + x98 + (-1 * x7 * x57) + x16;
	const FLT x110 = x7 * x55;
	const FLT x111 = -1 * x72 * (*model).IMUBias.IMUCorrection[2];
	const FLT x112 = x87 + x22 + (-1 * x110 * (*model).Pose.Rot[2]) + (-1 * x92) + x111;
	const FLT x113 = x79 * (*model).IMUBias.IMUCorrection[2];
	const FLT x114 = x13 + x65 + x95 + (-1 * x110 * (*model).Pose.Rot[3]) + x113;
	const FLT x115 = (x50 * x114) + (-1 * x51 * x109) + (x52 * x112);
	const FLT x116 = (x51 * x107) + (-1 * x52 * x114) + (x50 * x112);
	const FLT x117 = x73 + (-1 * x6 * x57) + x16 + (-1 * x99) + x108;
	const FLT x118 = x59 + (-1 * x113) + (-1 * x6 * x56) + x96 + x13;
	const FLT x119 = x102 + (-1 * x6 * x63) + x80 + x106 + x19;
	const FLT x120 = x88 + x111 + (x6 * x60) + x93 + x84;
	const FLT x121 = (x50 * x120) + (x52 * x118) + (-1 * x51 * x119);
	const FLT x122 = (x51 * x117) + (-1 * x52 * x120) + (x50 * x118);
	const FLT x123 = (1. / (x4 * sqrt(x4))) * x11;
	const FLT x124 = x123 * (*model).Pose.Rot[1];
	const FLT x125 = (*model).Pose.Rot[0] * (*model).IMUBias.IMUCorrection[2];
	const FLT x126 = x124 * x125;
	const FLT x127 = x123 * (*model).Pose.Rot[2];
	const FLT x128 = x127 * (*model).Pose.Rot[0];
	const FLT x129 = -1 * x128 * (*model).IMUBias.IMUCorrection[1];
	const FLT x130 = x2 * x123;
	const FLT x131 = x12 * (*model).IMUBias.IMUCorrection[3];
	const FLT x132 = x123 * (*model).IMUBias.IMUCorrection[0];
	const FLT x133 = x132 * (*model).Pose.Rot[0];
	const FLT x134 = x133 * (*model).Pose.Rot[3];
	const FLT x135 = x131 + x134 + (-1 * x130 * (*model).IMUBias.IMUCorrection[3]) + x126 + x129;
	const FLT x136 = x133 * (*model).Pose.Rot[1];
	const FLT x137 = x12 * (*model).IMUBias.IMUCorrection[1];
	const FLT x138 = x123 * (*model).Pose.Rot[3];
	const FLT x139 = -1 * x125 * x138;
	const FLT x140 = x128 * (*model).IMUBias.IMUCorrection[3];
	const FLT x141 = x140 + x139 + x137 + x136 + (-1 * x130 * (*model).IMUBias.IMUCorrection[1]);
	const FLT x142 = -1 * x127 * x125;
	const FLT x143 = x124 * (*model).IMUBias.IMUCorrection[1];
	const FLT x144 = -1 * x143 * (*model).Pose.Rot[0];
	const FLT x145 = x138 * (*model).Pose.Rot[0];
	const FLT x146 = -1 * x145 * (*model).IMUBias.IMUCorrection[3];
	const FLT x147 = x12 * (*model).IMUBias.IMUCorrection[0];
	const FLT x148 = x147 + x146 + x142 + x144 + (-1 * x2 * x132);
	const FLT x149 = (x51 * x135) + (-1 * x52 * x141) + (x50 * x148);
	const FLT x150 = x124 * (*model).IMUBias.IMUCorrection[3];
	const FLT x151 = -1 * x150 * (*model).Pose.Rot[0];
	const FLT x152 = x12 * (*model).IMUBias.IMUCorrection[2];
	const FLT x153 = x145 * (*model).IMUBias.IMUCorrection[1];
	const FLT x154 = x133 * (*model).Pose.Rot[2];
	const FLT x155 = x154 + x153 + x152 + x151 + (-1 * x130 * (*model).IMUBias.IMUCorrection[2]);
	const FLT x156 = 2 * x155;
	const FLT x157 = (x50 * x141) + (x52 * x148) + (-1 * x51 * x155);
	const FLT x158 = x3 * x123;
	const FLT x159 = -1 * x143 * (*model).Pose.Rot[2];
	const FLT x160 = x132 * (*model).Pose.Rot[1];
	const FLT x161 = x160 * (*model).Pose.Rot[3];
	const FLT x162 = x161 + x151 + x159 + (x158 * (*model).IMUBias.IMUCorrection[2]) + (-1 * x152);
	const FLT x163 = x143 * (*model).Pose.Rot[3];
	const FLT x164 = x160 * (*model).Pose.Rot[2];
	const FLT x165 = x164 + (-1 * x126) + x163 + x131 + (-1 * x158 * (*model).IMUBias.IMUCorrection[3]);
	const FLT x166 = -1 * x147;
	const FLT x167 = x124 * (*model).IMUBias.IMUCorrection[2];
	const FLT x168 = x167 * (*model).Pose.Rot[3];
	const FLT x169 = x150 * (*model).Pose.Rot[2];
	const FLT x170 = (-1 * x168) + x169 + x144 + (x3 * x132) + x166;
	const FLT x171 = x167 * (*model).Pose.Rot[2];
	const FLT x172 = -1 * x150 * (*model).Pose.Rot[3];
	const FLT x173 = (-1 * x136) + x172 + (-1 * x171) + (-1 * x158 * (*model).IMUBias.IMUCorrection[1]) + x137;
	const FLT x174 = (x51 * x162) + (-1 * x52 * x170) + (x50 * x173);
	const FLT x175 = (-1 * x51 * x165) + (x50 * x170) + (x52 * x173);
	const FLT x176 = x1 * x123;
	const FLT x177 = x127 * (*model).Pose.Rot[3];
	const FLT x178 = x177 * (*model).IMUBias.IMUCorrection[3];
	const FLT x179 = (-1 * x154) + (-1 * x178) + x159 + (-1 * x176 * (*model).IMUBias.IMUCorrection[2]) + x152;
	const FLT x180 = x177 * (*model).IMUBias.IMUCorrection[1];
	const FLT x181 = x180 + x166 + x142 + (x1 * x132) + (-1 * x169);
	const FLT x182 = -1 * x177 * (*model).IMUBias.IMUCorrection[2];
	const FLT x183 = (-1 * x131) + x164 + (x176 * (*model).IMUBias.IMUCorrection[3]) + x182 + x129;
	const FLT x184 = (x50 * x183) + (x52 * x179) + (-1 * x51 * x181);
	const FLT x185 = x132 * (*model).Pose.Rot[3] * (*model).Pose.Rot[2];
	const FLT x186 = (-1 * x176 * (*model).IMUBias.IMUCorrection[1]) + x137 + x185 + x171 + (-1 * x140);
	const FLT x187 = (x51 * x186) + (-1 * x52 * x183) + (x50 * x179);
	const FLT x188 = (-1 * x180) + (x0 * x132) + x168 + x166 + x146;
	const FLT x189 = x0 * x123;
	const FLT x190 = (x189 * (*model).IMUBias.IMUCorrection[1]) + (-1 * x137) + x185 + x172 + x139;
	const FLT x191 = (-1 * x189 * (*model).IMUBias.IMUCorrection[3]) + (-1 * x134) + x182 + x131 + (-1 * x163);
	const FLT x192 = (-1 * x189 * (*model).IMUBias.IMUCorrection[2]) + x152 + x161 + x178 + (-1 * x153);
	const FLT x193 = (x50 * x192) + (-1 * x51 * x190) + (x52 * x191);
	const FLT x194 = (x51 * x188) + (-1 * x52 * x192) + (x50 * x191);
	const FLT x195 = 2 * x46;
	const FLT x196 = (-1 * x24) + x21 + x15 + (-1 * x18);
	const FLT x197 = (-1 * x50 * x26) + (x51 * x48) + (x52 * x33);
	const FLT x198 = 2 * x197;
	const FLT x199 = (x89 * x52) + (-1 * x67 * x50) + (x74 * x51);
	const FLT x200 = (x52 * x97) + (x51 * x103) + (-1 * x50 * x94);
	const FLT x201 = (x52 * x109) + (-1 * x50 * x107) + (x51 * x112);
	const FLT x202 = (x52 * x119) + (-1 * x50 * x117) + (x51 * x118);
	const FLT x203 = (x52 * x155) + (-1 * x50 * x135) + (x51 * x148);
	const FLT x204 = (x52 * x165) + (-1 * x50 * x162) + (x51 * x173);
	const FLT x205 = (x52 * x181) + (-1 * x50 * x186) + (x51 * x179);
	const FLT x206 = (x52 * x190) + (-1 * x50 * x188) + (x51 * x191);
	const FLT x207 = x33 * x33;
	const FLT x208 = x46 * x46;
	const FLT x209 = 2 * ((-1 * x46 * (*model).Velocity.AxisAngleRot[2]) + (x48 * (*model).Velocity.AxisAngleRot[1]) +
						  (x26 * (*model).Velocity.AxisAngleRot[0]));
	const FLT x210 = (x81 * (*model).Velocity.AxisAngleRot[1]) + (x74 * (*model).Velocity.AxisAngleRot[2]) +
					 (-1 * x89 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x211 = (x67 * (*model).Velocity.AxisAngleRot[0]) + (-1 * x81 * (*model).Velocity.AxisAngleRot[2]) +
					 (x74 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x212 = (-1 * x33 * (*model).Velocity.AxisAngleRot[0]) + (x48 * (*model).Velocity.AxisAngleRot[2]) +
					 (x46 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x213 = 2 * x212;
	const FLT x214 = (-1 * x97 * (*model).Velocity.AxisAngleRot[0]) + (x100 * (*model).Velocity.AxisAngleRot[1]) +
					 (x103 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x215 = (x94 * (*model).Velocity.AxisAngleRot[0]) + (-1 * x100 * (*model).Velocity.AxisAngleRot[2]) +
					 (x103 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x216 = (-1 * x109 * (*model).Velocity.AxisAngleRot[0]) + (x114 * (*model).Velocity.AxisAngleRot[1]) +
					 (x112 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x217 = (x107 * (*model).Velocity.AxisAngleRot[0]) + (-1 * x114 * (*model).Velocity.AxisAngleRot[2]) +
					 (x112 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x218 = (-1 * x120 * (*model).Velocity.AxisAngleRot[2]) + (x117 * (*model).Velocity.AxisAngleRot[0]) +
					 (x118 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x219 = (-1 * x119 * (*model).Velocity.AxisAngleRot[0]) + (x120 * (*model).Velocity.AxisAngleRot[1]) +
					 (x118 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x220 = (x135 * (*model).Velocity.AxisAngleRot[0]) + (-1 * x141 * (*model).Velocity.AxisAngleRot[2]) +
					 (x148 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x221 = (x141 * (*model).Velocity.AxisAngleRot[1]) + (x148 * (*model).Velocity.AxisAngleRot[2]) +
					 (-1 * x155 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x222 = (x162 * (*model).Velocity.AxisAngleRot[0]) + (-1 * x170 * (*model).Velocity.AxisAngleRot[2]) +
					 (x173 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x223 = (x170 * (*model).Velocity.AxisAngleRot[1]) + (-1 * x165 * (*model).Velocity.AxisAngleRot[0]) +
					 (x173 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x224 = (-1 * x181 * (*model).Velocity.AxisAngleRot[0]) + (x183 * (*model).Velocity.AxisAngleRot[1]) +
					 (x179 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x225 = (x186 * (*model).Velocity.AxisAngleRot[0]) + (-1 * x183 * (*model).Velocity.AxisAngleRot[2]) +
					 (x179 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x226 = (x188 * (*model).Velocity.AxisAngleRot[0]) + (x191 * (*model).Velocity.AxisAngleRot[1]) +
					 (-1 * x192 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x227 = (-1 * x190 * (*model).Velocity.AxisAngleRot[0]) + (x192 * (*model).Velocity.AxisAngleRot[1]) +
					 (x191 * (*model).Velocity.AxisAngleRot[2]);
	const FLT x228 = x30 + (-1 * x28) + (-1 * x31) + x29;
	const FLT x229 = x48 * x27;
	const FLT x230 = x44 + (-1 * x43) + (-1 * x41) + x42;
	const FLT x231 = x48 * x34;
	const FLT x232 = (x89 * (*model).Velocity.AxisAngleRot[2]) + (-1 * x67 * (*model).Velocity.AxisAngleRot[1]) +
					 (x74 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x233 = 2 * ((-1 * x26 * (*model).Velocity.AxisAngleRot[1]) + (x48 * (*model).Velocity.AxisAngleRot[0]) +
						  (x33 * (*model).Velocity.AxisAngleRot[2]));
	const FLT x234 = (x97 * (*model).Velocity.AxisAngleRot[2]) + (-1 * x94 * (*model).Velocity.AxisAngleRot[1]) +
					 (x103 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x235 = (x109 * (*model).Velocity.AxisAngleRot[2]) + (-1 * x107 * (*model).Velocity.AxisAngleRot[1]) +
					 (x112 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x236 = (x119 * (*model).Velocity.AxisAngleRot[2]) + (-1 * x117 * (*model).Velocity.AxisAngleRot[1]) +
					 (x118 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x237 = (x155 * (*model).Velocity.AxisAngleRot[2]) + (x148 * (*model).Velocity.AxisAngleRot[0]) +
					 (-1 * x135 * (*model).Velocity.AxisAngleRot[1]);
	const FLT x238 = (x165 * (*model).Velocity.AxisAngleRot[2]) + (-1 * x162 * (*model).Velocity.AxisAngleRot[1]) +
					 (x173 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x239 = (x181 * (*model).Velocity.AxisAngleRot[2]) + (-1 * x186 * (*model).Velocity.AxisAngleRot[1]) +
					 (x179 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x240 = (-1 * x188 * (*model).Velocity.AxisAngleRot[1]) + (x190 * (*model).Velocity.AxisAngleRot[2]) +
					 (x191 * (*model).Velocity.AxisAngleRot[0]);
	const FLT x241 = x20 + x14 + (-1 * x23) + (-1 * x17);
	const FLT x242 = x48 * x195;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						(0.101971621297793 + (x32 * x34) + (-1 * x25 * x27)) * (*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						((x45 * x34) + (-1 * x40)) * (*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						((x48 * x49) + (x47 * x26)) * (*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT),
						x51 + (2 * ((x54 * x33) + (-1 * x53 * x26))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						((x91 * x34) + (x89 * x90) + (-1 * x67 * x68) + (-1 * x82 * x27)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						((x34 * x105) + (-1 * x68 * x94) + (-1 * x27 * x104) + (x90 * x97)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((-1 * x27 * x116) + (x90 * x109) + (-1 * x68 * x107) + (x34 * x115)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						((x90 * x119) + (-1 * x68 * x117) + (-1 * x27 * x122) + (x34 * x121)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						((x34 * x157) + (x54 * x156) + (-1 * x68 * x135) + (-1 * x27 * x149)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						((x34 * x175) + (-1 * x68 * x162) + (-1 * x27 * x174) + (x90 * x165)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						((x90 * x181) + (-1 * x27 * x187) + (x34 * x184) + (-1 * x68 * x186)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						((x90 * x190) + (-1 * x68 * x188) + (-1 * x27 * x194) + (x34 * x193)) *
							(*model).IMUBias.AccScale[0]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						(x40 + (-1 * x32 * x195)) * (*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						(0.101971621297793 + (x27 * x196) + (-1 * x45 * x195)) * (*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						((x49 * x26) + (-1 * x47 * x48)) * (*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT),
						x50 + (2 * ((x26 * x197) + (-1 * x54 * x46))));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						((x27 * x199) + (x67 * x198) + (-1 * x81 * x90) + (-1 * x91 * x195)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(*model).IMUBias.AccScale[1] *
							((x27 * x200) + (x94 * x198) + (-1 * x90 * x100) + (-1 * x105 * x195)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((-1 * x115 * x195) + (x27 * x201) + (-1 * x90 * x114) + (x107 * x198)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						((-1 * x121 * x195) + (x117 * x198) + (-1 * x90 * x120) + (x27 * x202)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						((x198 * x135) + (-1 * x90 * x141) + (x27 * x203) + (-1 * x195 * x157)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						((x27 * x204) + (x162 * x198) + (-1 * x90 * x170) + (-1 * x175 * x195)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						((x27 * x205) + (x186 * x198) + (-1 * x90 * x183) + (-1 * x184 * x195)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						((x27 * x206) + (x188 * x198) + (-1 * x90 * x192) + (-1 * x193 * x195)) *
							(*model).IMUBias.AccScale[1]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						((x25 * x195) + (-1 * x34 * x39)) * (*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						((x39 * x195) + (-1 * x34 * x196)) * (*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						(0.101971621297793 + (-0.203943242595586 * x208) + (-0.203943242595586 * x207)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT),
						x52 + (2 * ((x53 * x46) + (-1 * x33 * x197))));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						((x81 * x68) + (-1 * x34 * x199) + (-1 * x89 * x198) + (x82 * x195)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(*model).IMUBias.AccScale[2] *
							((x104 * x195) + (-1 * x34 * x200) + (x68 * x100) + (-1 * x97 * x198)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((x116 * x195) + (-1 * x34 * x201) + (-1 * x109 * x198) + (x68 * x114)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						((-1 * x34 * x202) + (-1 * x119 * x198) + (x68 * x120) + (x122 * x195)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						((-1 * x34 * x203) + (x68 * x141) + (-1 * x197 * x156) + (x195 * x149)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						((x68 * x170) + (-1 * x165 * x198) + (x174 * x195) + (-1 * x34 * x204)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						((x187 * x195) + (x68 * x183) + (-1 * x181 * x198) + (-1 * x34 * x205)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						((x194 * x195) + (-1 * x190 * x198) + (-1 * x34 * x206) + (x68 * x192)) *
							(*model).IMUBias.AccScale[2]);
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x89 * x213) + (-1 * x27 * x211) + (-1 * x67 * x209) + (x34 * x210));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(-1 * x27 * x215) + (x34 * x214) + (-1 * x94 * x209) + (x97 * x213));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x213 * x109) + (-1 * x209 * x107) + (-1 * x27 * x217) + (x34 * x216));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						(x213 * x119) + (x34 * x219) + (-1 * x209 * x117) + (-1 * x27 * x218));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x34 * x221) + (-1 * x27 * x220) + (-1 * x209 * x135) + (x212 * x156));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x213 * x165) + (x34 * x223) + (-1 * x209 * x162) + (-1 * x27 * x222));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x213 * x181) + (-1 * x27 * x225) + (-1 * x209 * x186) + (x34 * x224));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(-1 * x209 * x188) + (x34 * x227) + (x213 * x190) + (-1 * x27 * x226));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						1 + (x34 * x228) + (-2 * (x26 * x26)));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						(x46 * x34) + (-1 * x229));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x231 + (-1 * x27 * x230));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x67 * x233) + (-1 * x81 * x213) + (-1 * x210 * x195) + (x27 * x232));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x27 * x234) + (-1 * x214 * x195) + (x94 * x233) + (-1 * x213 * x100));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x27 * x235) + (x233 * x107) + (-1 * x213 * x114) + (-1 * x216 * x195));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						(x233 * x117) + (-1 * x219 * x195) + (-1 * x213 * x120) + (x27 * x236));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x27 * x237) + (x233 * x135) + (-1 * x213 * x141) + (-1 * x221 * x195));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x27 * x238) + (-1 * x213 * x170) + (x233 * x162) + (-1 * x223 * x195));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x233 * x186) + (-1 * x213 * x183) + (-1 * x224 * x195) + (x27 * x239));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x27 * x240) + (x233 * x188) + (-1 * x213 * x192) + (-1 * x227 * x195));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x229 + (-1 * x228 * x195));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						1 + (x27 * x241) + (-2 * x208));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						(x34 * x26) + (-1 * x242));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x81 * x209) + (-1 * x34 * x232) + (-1 * x89 * x233) + (x211 * x195));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x215 * x195) + (x209 * x100) + (-1 * x97 * x233) + (-1 * x34 * x234));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(-1 * x34 * x235) + (-1 * x233 * x109) + (x209 * x114) + (x217 * x195));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						(x209 * x120) + (x218 * x195) + (-1 * x233 * x119) + (-1 * x34 * x236));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(-1 * x34 * x237) + (x209 * x141) + (-1 * x233 * x155) + (x220 * x195));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x222 * x195) + (x209 * x170) + (-1 * x233 * x165) + (-1 * x34 * x238));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x225 * x195) + (x209 * x183) + (-1 * x233 * x181) + (-1 * x34 * x239));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x226 * x195) + (x209 * x192) + (-1 * x233 * x190) + (-1 * x34 * x240));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						(x46 * x27) + (-1 * x231));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x242 + (-1 * x34 * x241));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						1 + (x230 * x195) + (-2 * x207));
}

// Full version Jacobian of IMUMeasurementModel wrt [(*model).Acc[0], (*model).Acc[1], (*model).Acc[2],
// (*model).IMUBias.AccBias[0], (*model).IMUBias.AccBias[1], (*model).IMUBias.AccBias[2], (*model).IMUBias.AccScale[0],
// (*model).IMUBias.AccScale[1], (*model).IMUBias.AccScale[2], (*model).IMUBias.GyroBias[0],
// (*model).IMUBias.GyroBias[1], (*model).IMUBias.GyroBias[2], (*model).IMUBias.IMUCorrection[0],
// (*model).IMUBias.IMUCorrection[1], (*model).IMUBias.IMUCorrection[2], (*model).IMUBias.IMUCorrection[3],
// (*model).Pose.Pos[0], (*model).Pose.Pos[1], (*model).Pose.Pos[2], (*model).Pose.Rot[0], (*model).Pose.Rot[1],
// (*model).Pose.Rot[2], (*model).Pose.Rot[3], (*model).Velocity.AxisAngleRot[0], (*model).Velocity.AxisAngleRot[1],
// (*model).Velocity.AxisAngleRot[2], (*model).Velocity.Pos[0], (*model).Velocity.Pos[1], (*model).Velocity.Pos[2]]

static inline void IMUMeasurementModel_jac_model_with_hx(CnMat *Hx, CnMat *hx, const SurviveKalmanModel *model) {
	if (hx != 0) {
		IMUMeasurementModel(hx, model);
	}
	if (Hx != 0) {
		IMUMeasurementModel_jac_model(Hx, model);
	}
}
static inline void IMUMeasurementErrorModel(CnMat *out, const SurviveKalmanModel *_x0,
											const SurviveKalmanErrorModel *error_model) {
	const FLT x0 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x1 = sin(x0);
	const FLT x2 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x3 = sin(x2);
	const FLT x4 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x5 = sin(x4);
	const FLT x6 = x3 * x5;
	const FLT x7 = cos(x0);
	const FLT x8 = cos(x4);
	const FLT x9 = cos(x2);
	const FLT x10 = x8 * x9;
	const FLT x11 = (x7 * x10) + (x1 * x6);
	const FLT x12 = (x1 * x10) + (-1 * x6 * x7);
	const FLT x13 = x3 * x8;
	const FLT x14 = x5 * x9;
	const FLT x15 = (x7 * x14) + (x1 * x13);
	const FLT x16 = (x7 * x13) + (-1 * x1 * x14);
	const FLT x17 = 1. / sqrt((x16 * x16) + (x15 * x15) + (x12 * x12) + (x11 * x11));
	const FLT x18 = x17 * (*_x0).Pose.Rot[3];
	const FLT x19 = x17 * (*_x0).Pose.Rot[2];
	const FLT x20 = x12 * x17;
	const FLT x21 = x15 * x17;
	const FLT x22 = (x20 * (*_x0).Pose.Rot[0]) + (x11 * x18) + (x21 * (*_x0).Pose.Rot[1]) + (-1 * x19 * x16);
	const FLT x23 = 0.5 * (*error_model).IMUBias.IMUCorrection[0];
	const FLT x24 = sin(x23);
	const FLT x25 = 0.5 * (*error_model).IMUBias.IMUCorrection[1];
	const FLT x26 = sin(x25);
	const FLT x27 = 0.5 * (*error_model).IMUBias.IMUCorrection[2];
	const FLT x28 = cos(x27);
	const FLT x29 = x28 * x26;
	const FLT x30 = sin(x27);
	const FLT x31 = cos(x23);
	const FLT x32 = cos(x25);
	const FLT x33 = x32 * x31;
	const FLT x34 = (x30 * x33) + (-1 * x24 * x29);
	const FLT x35 = x32 * x24;
	const FLT x36 = (x31 * x29) + (x30 * x35);
	const FLT x37 = x30 * x26;
	const FLT x38 = (x33 * x28) + (x37 * x24);
	const FLT x39 = (x35 * x28) + (-1 * x31 * x37);
	const FLT x40 = 1. / sqrt((x39 * x39) + (x38 * x38) + (x34 * x34) + (x36 * x36));
	const FLT x41 = x40 * x39;
	const FLT x42 = x40 * x38;
	const FLT x43 = x40 * x34;
	const FLT x44 = x40 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x45 = (x44 * x36) + (x43 * (*_x0).IMUBias.IMUCorrection[0]) +
					(-1 * x41 * (*_x0).IMUBias.IMUCorrection[2]) + (x42 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x46 = x40 * x36;
	const FLT x47 = (-1 * x44 * x34) + (x42 * (*_x0).IMUBias.IMUCorrection[2]) +
					(x41 * (*_x0).IMUBias.IMUCorrection[3]) + (x46 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x48 = (-1 * x44 * x39) + (-1 * x43 * (*_x0).IMUBias.IMUCorrection[3]) +
					(x42 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x46 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x49 = (x41 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x46 * (*_x0).IMUBias.IMUCorrection[3]) +
					(x44 * x38) + (x43 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x50 = (-1 * x20 * (*_x0).Pose.Rot[1]) + (x18 * x16) + (x11 * x19) + (x21 * (*_x0).Pose.Rot[0]);
	const FLT x51 = x11 * x17;
	const FLT x52 = x17 * x16;
	const FLT x53 = (-1 * x52 * (*_x0).Pose.Rot[1]) + (x51 * (*_x0).Pose.Rot[0]) + (-1 * x20 * (*_x0).Pose.Rot[3]) +
					(-1 * x15 * x19);
	const FLT x54 = (x12 * x19) + (x51 * (*_x0).Pose.Rot[1]) + (-1 * x15 * x18) + (x52 * (*_x0).Pose.Rot[0]);
	const FLT x55 = (1. / sqrt((x54 * x54) + (x22 * x22) + (x50 * x50) + (x53 * x53))) *
					(1. / sqrt((x49 * x49) + (x48 * x48) + (x45 * x45) + (x47 * x47)));
	const FLT x56 = x55 * x45;
	const FLT x57 = x50 * x55;
	const FLT x58 = x55 * x48;
	const FLT x59 = x55 * x49;
	const FLT x60 = (x54 * x59) + (x53 * x58) + (x56 * x22) + (x57 * x47);
	const FLT x61 = 0.101971621297793 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x62 = x55 * x47;
	const FLT x63 = (-1 * x62 * x54) + (x50 * x59) + (-1 * x58 * x22) + (x53 * x56);
	const FLT x64 = 0.101971621297793 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x65 = 1 + (0.101971621297793 * ((*_x0).Acc[2] + (*error_model).Acc[2]));
	const FLT x66 = (-1 * x54 * x58) + (x53 * x59) + (x62 * x22) + (-1 * x50 * x56);
	const FLT x67 = (-1 * x65 * x66) + (x60 * x61) + (x63 * x64);
	const FLT x68 = (x62 * x53) + (x54 * x56) + (-1 * x57 * x48) + (-1 * x59 * x22);
	const FLT x69 = (-1 * x64 * x68) + (x60 * x65) + (x61 * x66);
	const FLT x70 = (-1 * x63 * x61) + (x60 * x64) + (x68 * x65);
	const FLT x71 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x72 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x73 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x74 = (-1 * x73 * x66) + (x71 * x60) + (x72 * x63);
	const FLT x75 = (-1 * x72 * x68) + (x73 * x60) + (x71 * x66);
	const FLT x76 = (-1 * x71 * x63) + (x73 * x68) + (x72 * x60);
	cnMatrixOptionalSet(out, 0, 0,
						(*error_model).IMUBias.AccBias[0] +
							((x64 + (2 * ((x68 * x69) + (-1 * x63 * x67)))) *
							 ((*_x0).IMUBias.AccScale[0] + (*error_model).IMUBias.AccScale[0])) +
							(*_x0).IMUBias.AccBias[0]);
	cnMatrixOptionalSet(out, 1, 0,
						(*error_model).IMUBias.AccBias[1] +
							((x61 + (2 * ((x70 * x63) + (-1 * x66 * x69)))) *
							 ((*_x0).IMUBias.AccScale[1] + (*error_model).IMUBias.AccScale[1])) +
							(*_x0).IMUBias.AccBias[1]);
	cnMatrixOptionalSet(out, 2, 0,
						(*error_model).IMUBias.AccBias[2] +
							((x65 + (2 * ((x67 * x66) + (-1 * x70 * x68)))) *
							 ((*_x0).IMUBias.AccScale[2] + (*error_model).IMUBias.AccScale[2])) +
							(*_x0).IMUBias.AccBias[2]);
	cnMatrixOptionalSet(out, 3, 0,
						(2 * ((x75 * x68) + (-1 * x74 * x63))) + x72 + (*_x0).IMUBias.GyroBias[0] +
							(*error_model).IMUBias.GyroBias[0]);
	cnMatrixOptionalSet(out, 4, 0,
						x71 + (*_x0).IMUBias.GyroBias[1] + (2 * ((x76 * x63) + (-1 * x75 * x66))) +
							(*error_model).IMUBias.GyroBias[1]);
	cnMatrixOptionalSet(out, 5, 0,
						x73 + (*_x0).IMUBias.GyroBias[2] + (2 * ((x74 * x66) + (-1 * x76 * x68))) +
							(*error_model).IMUBias.GyroBias[2]);
}

// Jacobian of IMUMeasurementErrorModel wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2], (*_x0).IMUBias.AccBias[0],
// (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0], (*_x0).IMUBias.AccScale[1],
// (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1], (*_x0).IMUBias.GyroBias[2],
// (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1], (*_x0).IMUBias.IMUCorrection[2],
// (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1], (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0],
// (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3], (*_x0).Velocity.AxisAngleRot[0],
// (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2], (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1],
// (*_x0).Velocity.Pos[2]]
static inline void IMUMeasurementErrorModel_jac_x0(CnMat *Hx, const SurviveKalmanModel *_x0,
												   const SurviveKalmanErrorModel *error_model) {
	const FLT x0 = (*_x0).IMUBias.AccScale[0] + (*error_model).IMUBias.AccScale[0];
	const FLT x1 = 0.5 * (*error_model).IMUBias.IMUCorrection[0];
	const FLT x2 = sin(x1);
	const FLT x3 = 0.5 * (*error_model).IMUBias.IMUCorrection[2];
	const FLT x4 = cos(x3);
	const FLT x5 = 0.5 * (*error_model).IMUBias.IMUCorrection[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = cos(x1);
	const FLT x9 = cos(x5);
	const FLT x10 = sin(x3);
	const FLT x11 = x9 * x10;
	const FLT x12 = (x8 * x11) + (-1 * x2 * x7);
	const FLT x13 = (x8 * x7) + (x2 * x11);
	const FLT x14 = x6 * x10;
	const FLT x15 = x4 * x9;
	const FLT x16 = (x8 * x15) + (x2 * x14);
	const FLT x17 = (x2 * x15) + (-1 * x8 * x14);
	const FLT x18 = 1. / sqrt((x16 * x16) + (x17 * x17) + (x12 * x12) + (x13 * x13));
	const FLT x19 = x18 * x17;
	const FLT x20 = x18 * x16;
	const FLT x21 = x12 * x18;
	const FLT x22 = x18 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x23 = (x22 * x13) + (x21 * (*_x0).IMUBias.IMUCorrection[0]) +
					(-1 * x19 * (*_x0).IMUBias.IMUCorrection[2]) + (x20 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x24 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x25 = sin(x24);
	const FLT x26 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x27 = sin(x26);
	const FLT x28 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x29 = cos(x28);
	const FLT x30 = x29 * x27;
	const FLT x31 = cos(x26);
	const FLT x32 = cos(x24);
	const FLT x33 = sin(x28);
	const FLT x34 = x32 * x33;
	const FLT x35 = (x31 * x34) + (-1 * x30 * x25);
	const FLT x36 = x33 * x25;
	const FLT x37 = x31 * x29;
	const FLT x38 = (x32 * x37) + (x36 * x27);
	const FLT x39 = (x30 * x32) + (x31 * x36);
	const FLT x40 = (x37 * x25) + (-1 * x34 * x27);
	const FLT x41 = 1. / sqrt((x40 * x40) + (x39 * x39) + (x35 * x35) + (x38 * x38));
	const FLT x42 = x41 * (*_x0).Pose.Rot[3];
	const FLT x43 = x41 * x39;
	const FLT x44 = x41 * x38;
	const FLT x45 = x40 * x41;
	const FLT x46 = (-1 * x45 * (*_x0).Pose.Rot[1]) + (-1 * x42 * x35) + (x44 * (*_x0).Pose.Rot[0]) +
					(-1 * x43 * (*_x0).Pose.Rot[2]);
	const FLT x47 = x13 * x18;
	const FLT x48 = (-1 * x22 * x12) + (x20 * (*_x0).IMUBias.IMUCorrection[2]) +
					(x19 * (*_x0).IMUBias.IMUCorrection[3]) + (x47 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x49 = (x20 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x21 * (*_x0).IMUBias.IMUCorrection[3]) +
					(-1 * x22 * x17) + (-1 * x47 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x50 = (x22 * x16) + (-1 * x47 * (*_x0).IMUBias.IMUCorrection[3]) +
					(x19 * (*_x0).IMUBias.IMUCorrection[0]) + (x21 * (*_x0).IMUBias.IMUCorrection[2]);
	const FLT x51 = (x50 * x50) + (x49 * x49) + (x23 * x23) + (x48 * x48);
	const FLT x52 = 1. / sqrt(x51);
	const FLT x53 = x41 * x35;
	const FLT x54 =
		(-1 * x53 * (*_x0).Pose.Rot[1]) + (x40 * x42) + (x44 * (*_x0).Pose.Rot[2]) + (x43 * (*_x0).Pose.Rot[0]);
	const FLT x55 =
		(x43 * (*_x0).Pose.Rot[1]) + (x42 * x38) + (x53 * (*_x0).Pose.Rot[0]) + (-1 * x45 * (*_x0).Pose.Rot[2]);
	const FLT x56 =
		(x44 * (*_x0).Pose.Rot[1]) + (x53 * (*_x0).Pose.Rot[2]) + (-1 * x42 * x39) + (x45 * (*_x0).Pose.Rot[0]);
	const FLT x57 = (x55 * x55) + (x56 * x56) + (x54 * x54) + (x46 * x46);
	const FLT x58 = 1. / sqrt(x57);
	const FLT x59 = x52 * x58;
	const FLT x60 = x59 * x46;
	const FLT x61 = x60 * x23;
	const FLT x62 = 0.101971621297793 * x61;
	const FLT x63 = x59 * x49;
	const FLT x64 = x63 * x55;
	const FLT x65 = 0.101971621297793 * x64;
	const FLT x66 = x56 * x59;
	const FLT x67 = x66 * x48;
	const FLT x68 = 0.101971621297793 * x67;
	const FLT x69 = x54 * x59;
	const FLT x70 = x69 * x50;
	const FLT x71 = 0.101971621297793 * x70;
	const FLT x72 = (-1 * x68) + x62 + x71 + (-1 * x65);
	const FLT x73 = (-1 * x67) + x70 + (-1 * x64) + x61;
	const FLT x74 = 2 * x73;
	const FLT x75 = x55 * x59;
	const FLT x76 = x75 * x50;
	const FLT x77 = x60 * x48;
	const FLT x78 = x66 * x23;
	const FLT x79 = x69 * x49;
	const FLT x80 =
		(0.101971621297793 * x79) + (0.101971621297793 * x76) + (-0.101971621297793 * x78) + (-0.101971621297793 * x77);
	const FLT x81 = x78 + x77 + (-1 * x79) + (-1 * x76);
	const FLT x82 = 2 * x81;
	const FLT x83 = x69 * x48;
	const FLT x84 = x75 * x23;
	const FLT x85 = x66 * x50;
	const FLT x86 = x63 * x46;
	const FLT x87 =
		(0.101971621297793 * x86) + (0.101971621297793 * x85) + (0.101971621297793 * x83) + (0.101971621297793 * x84);
	const FLT x88 = x87 * x74;
	const FLT x89 = x69 * x23;
	const FLT x90 = x75 * x48;
	const FLT x91 = x63 * x56;
	const FLT x92 = x60 * x50;
	const FLT x93 =
		(0.101971621297793 * x92) + (-0.101971621297793 * x91) + (-0.101971621297793 * x89) + (0.101971621297793 * x90);
	const FLT x94 = x92 + x90 + (-1 * x91) + (-1 * x89);
	const FLT x95 = 0.203943242595586 * x73;
	const FLT x96 = x85 + x86 + x84 + x83;
	const FLT x97 = 0.203943242595586 * x96;
	const FLT x98 = 0.101971621297793 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x99 = 0.101971621297793 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x100 = 1 + (0.101971621297793 * ((*_x0).Acc[2] + (*error_model).Acc[2]));
	const FLT x101 = (-1 * x94 * x100) + (x98 * x96) + (x73 * x99);
	const FLT x102 = (-1 * x81 * x99) + (x96 * x100) + (x98 * x94);
	const FLT x103 = x69 * x21;
	const FLT x104 = -1 * x103;
	const FLT x105 = x66 * x20;
	const FLT x106 = -1 * x105;
	const FLT x107 = 1.0 / 2.0 * x49;
	const FLT x108 = x56 * x107;
	const FLT x109 = 2 * x19;
	const FLT x110 = 2 * x20;
	const FLT x111 = 2 * x23;
	const FLT x112 = 2 * x47;
	const FLT x113 = (x21 * x111) + (x50 * x109) + (x48 * x112) + (x49 * x110);
	const FLT x114 = (1. / (x51 * sqrt(x51))) * x58;
	const FLT x115 = x113 * x114;
	const FLT x116 = 1.0 / 2.0 * x50;
	const FLT x117 = x46 * x116;
	const FLT x118 = 1.0 / 2.0 * x48;
	const FLT x119 = x55 * x118;
	const FLT x120 = 1.0 / 2.0 * x23;
	const FLT x121 = x114 * x120;
	const FLT x122 = x113 * x121;
	const FLT x123 = x75 * x47;
	const FLT x124 = x60 * x19;
	const FLT x125 = x124 + x123;
	const FLT x126 = x125 + (x54 * x122) + x106 + (-1 * x115 * x117) + x104 + (x108 * x115) + (-1 * x119 * x115);
	const FLT x127 = x75 * x21;
	const FLT x128 = x66 * x19;
	const FLT x129 = x56 * x113;
	const FLT x130 = x114 * x129;
	const FLT x131 = x54 * x118;
	const FLT x132 = x46 * x107;
	const FLT x133 = x60 * x20;
	const FLT x134 = x69 * x47;
	const FLT x135 = x134 + x133;
	const FLT x136 =
		(-1 * x115 * x132) + x128 + (-1 * x116 * x130) + (-1 * x55 * x122) + x135 + x127 + (-1 * x115 * x131);
	const FLT x137 = x60 * x21;
	const FLT x138 = x75 * x20;
	const FLT x139 = -1 * x138;
	const FLT x140 = x54 * x116;
	const FLT x141 = x55 * x107;
	const FLT x142 = x69 * x19;
	const FLT x143 = x66 * x47;
	const FLT x144 = (-1 * x143) + x142;
	const FLT x145 = x144 + x137 + (x118 * x130) + (-1 * x46 * x122) + x139 + (-1 * x115 * x140) + (x115 * x141);
	const FLT x146 = (x99 * x145) + (-1 * x100 * x126) + (x98 * x136);
	const FLT x147 = 2 * x101;
	const FLT x148 = x54 * x107;
	const FLT x149 = x46 * x118;
	const FLT x150 = x75 * x19;
	const FLT x151 = -1 * x150;
	const FLT x152 = x55 * x116;
	const FLT x153 = x60 * x47;
	const FLT x154 = x66 * x21;
	const FLT x155 = x69 * x20;
	const FLT x156 = (-1 * x155) + x154;
	const FLT x157 = x153 + (x115 * x148) + x151 + x156 + (x115 * x152) + (-1 * x121 * x129) + (-1 * x115 * x149);
	const FLT x158 = (x98 * x126) + (-1 * x99 * x157) + (x100 * x136);
	const FLT x159 = 2 * x102;
	const FLT x160 = 2 * x21;
	const FLT x161 = ((-1 * x48 * x160) + (x50 * x110) + (-1 * x49 * x109) + (x47 * x111)) * x114;
	const FLT x162 = x56 * x116;
	const FLT x163 = x120 * x161;
	const FLT x164 = x46 * x161;
	const FLT x165 = (-1 * x124) + x123;
	const FLT x166 =
		x165 + (-1 * x107 * x164) + (-1 * x161 * x162) + x105 + (-1 * x55 * x163) + x104 + (-1 * x161 * x131);
	const FLT x167 = x55 * x161;
	const FLT x168 = -1 * x127;
	const FLT x169 = (-1 * x134) + x133;
	const FLT x170 = x169 + x128 + (-1 * x118 * x167) + x168 + (x54 * x163) + (-1 * x116 * x164) + (x108 * x161);
	const FLT x171 = x56 * x118;
	const FLT x172 = x155 + x154;
	const FLT x173 = x172 + (-1 * x120 * x164) + x150 + x153 + (x107 * x167) + (-1 * x161 * x140) + (x161 * x171);
	const FLT x174 = (x99 * x173) + (x98 * x166) + (-1 * x100 * x170);
	const FLT x175 = -1 * x137;
	const FLT x176 = x142 + x143;
	const FLT x177 = x176 + x175 + (-1 * x161 * x149) + (-1 * x56 * x163) + (x161 * x148) + x139 + (x161 * x152);
	const FLT x178 = (x98 * x170) + (x100 * x166) + (-1 * x99 * x177);
	const FLT x179 = ((x48 * x110) + (x50 * x160) + (-1 * x49 * x112) + (-1 * x19 * x111)) * x114;
	const FLT x180 = x46 * x179;
	const FLT x181 = x55 * x179;
	const FLT x182 = x54 * x179;
	const FLT x183 = (x120 * x182) + (-1 * x116 * x180) + (-1 * x118 * x181) + x176 + x138 + (x108 * x179) + x137;
	const FLT x184 = -1 * x153;
	const FLT x185 =
		(-1 * x118 * x182) + x151 + x172 + (-1 * x162 * x179) + x184 + (-1 * x120 * x181) + (-1 * x107 * x180);
	const FLT x186 = x165 + x103 + (-1 * x179 * x140) + x106 + (x107 * x181) + (x171 * x179) + (-1 * x120 * x180);
	const FLT x187 = (x99 * x186) + (-1 * x100 * x183) + (x98 * x185);
	const FLT x188 = -1 * x128;
	const FLT x189 = x135 + x168 + (x179 * x152) + x188 + (-1 * x179 * x149) + (-1 * x56 * x120 * x179) + (x179 * x148);
	const FLT x190 = (-1 * x99 * x189) + (x98 * x183) + (x100 * x185);
	const FLT x191 = (x20 * x111) + (x48 * x109) + (-1 * x50 * x112) + (-1 * x49 * x160);
	const FLT x192 = x114 * x191;
	const FLT x193 = x55 * x192;
	const FLT x194 = x121 * x191;
	const FLT x195 = x184 + (-1 * x117 * x192) + (x108 * x192) + x156 + x150 + (-1 * x118 * x193) + (x54 * x194);
	const FLT x196 =
		x144 + (-1 * x192 * x131) + x138 + (-1 * x192 * x132) + (-1 * x162 * x192) + x175 + (-1 * x55 * x194);
	const FLT x197 = x169 + (-1 * x46 * x194) + (x107 * x193) + (x171 * x192) + x127 + (-1 * x192 * x140) + x188;
	const FLT x198 = (x99 * x197) + (-1 * x100 * x195) + (x98 * x196);
	const FLT x199 = x125 + x103 + x105 + (-1 * x56 * x194) + (x192 * x152) + (x192 * x148) + (-1 * x192 * x149);
	const FLT x200 = (-1 * x99 * x199) + (x98 * x195) + (x100 * x196);
	const FLT x201 = 2 * x45;
	const FLT x202 = 2 * x53;
	const FLT x203 = 2 * x43;
	const FLT x204 = 2 * x44;
	const FLT x205 = x52 * (1. / (x57 * sqrt(x57)));
	const FLT x206 = ((x54 * x203) + (x46 * x204) + (x56 * x201) + (x55 * x202)) * x205;
	const FLT x207 = x206 * x120;
	const FLT x208 = x59 * x48;
	const FLT x209 = x53 * x208;
	const FLT x210 = x50 * x59;
	const FLT x211 = x44 * x210;
	const FLT x212 = x59 * x23;
	const FLT x213 = x43 * x212;
	const FLT x214 = -1 * x213;
	const FLT x215 = x63 * x45;
	const FLT x216 = -1 * x215;
	const FLT x217 = x216 + x214;
	const FLT x218 = x211 + (-1 * x206 * x117) + (x54 * x207) + (x206 * x108) + (-1 * x206 * x119) + x217 + x209;
	const FLT x219 = x63 * x44;
	const FLT x220 = x53 * x212;
	const FLT x221 = x43 * x208;
	const FLT x222 = x45 * x210;
	const FLT x223 = x222 + x221;
	const FLT x224 =
		x223 + (-1 * x55 * x207) + (-1 * x206 * x132) + (-1 * x206 * x162) + x219 + (-1 * x206 * x131) + x220;
	const FLT x225 = x45 * x208;
	const FLT x226 = -1 * x225;
	const FLT x227 = x43 * x210;
	const FLT x228 = x44 * x212;
	const FLT x229 = x63 * x53;
	const FLT x230 = -1 * x229;
	const FLT x231 = x230 + x228;
	const FLT x232 = x226 + x231 + (x206 * x171) + (-1 * x206 * x140) + (x206 * x141) + (-1 * x46 * x207) + x227;
	const FLT x233 = (x99 * x232) + (-1 * x218 * x100) + (x98 * x224);
	const FLT x234 = x63 * x43;
	const FLT x235 = -1 * x234;
	const FLT x236 = x45 * x212;
	const FLT x237 = x44 * x208;
	const FLT x238 = x53 * x210;
	const FLT x239 = -1 * x238;
	const FLT x240 = x239 + x237;
	const FLT x241 = (x206 * x152) + x240 + (x206 * x148) + x235 + (-1 * x206 * x149) + (-1 * x56 * x207) + x236;
	const FLT x242 = (x98 * x218) + (-1 * x99 * x241) + (x224 * x100);
	const FLT x243 = 2 * x56;
	const FLT x244 = ((-1 * x46 * x201) + (-1 * x54 * x202) + (x44 * x243) + (x55 * x203)) * x205;
	const FLT x245 = x55 * x244;
	const FLT x246 = x244 * x116;
	const FLT x247 = x244 * x120;
	const FLT x248 = -1 * x219;
	const FLT x249 = x220 + x248;
	const FLT x250 = x249 + (x54 * x247) + (x244 * x108) + x221 + (-1 * x222) + (-1 * x245 * x118) + (-1 * x46 * x246);
	const FLT x251 = x244 * x118;
	const FLT x252 = -1 * x209;
	const FLT x253 = x211 + x252;
	const FLT x254 =
		x253 + (-1 * x54 * x251) + (-1 * x56 * x246) + x216 + (-1 * x244 * x132) + (-1 * x245 * x120) + x213;
	const FLT x255 = -1 * x236;
	const FLT x256 = x235 + x255;
	const FLT x257 = x256 + (-1 * x46 * x247) + (x56 * x251) + (-1 * x237) + x239 + (-1 * x244 * x140) + (x245 * x107);
	const FLT x258 = (x99 * x257) + (-1 * x250 * x100) + (x98 * x254);
	const FLT x259 = -1 * x227;
	const FLT x260 = x226 + x259;
	const FLT x261 = x260 + (x244 * x152) + (-1 * x56 * x247) + x228 + (-1 * x244 * x149) + (x244 * x148) + x229;
	const FLT x262 = (x98 * x250) + (-1 * x99 * x261) + (x254 * x100);
	const FLT x263 = ((-1 * x46 * x203) + (x54 * x204) + (-1 * x55 * x201) + (x53 * x243)) * x205;
	const FLT x264 = x263 * x120;
	const FLT x265 = x260 + (x54 * x264) + (x263 * x108) + x230 + (-1 * x263 * x119) + (-1 * x263 * x117) + (-1 * x228);
	const FLT x266 = x56 * x263;
	const FLT x267 =
		x256 + (-1 * x263 * x131) + (-1 * x266 * x116) + x237 + x238 + (-1 * x263 * x132) + (-1 * x55 * x264);
	const FLT x268 = x253 + (-1 * x46 * x264) + (x263 * x141) + x215 + x214 + (x266 * x118) + (-1 * x263 * x140);
	const FLT x269 = (x99 * x268) + (-1 * x265 * x100) + (x98 * x267);
	const FLT x270 =
		x249 + (x263 * x152) + (-1 * x266 * x120) + (-1 * x263 * x149) + x222 + (-1 * x221) + (x263 * x148);
	const FLT x271 = (x98 * x265) + (x267 * x100) + (-1 * x99 * x270);
	const FLT x272 = ((x54 * x201) + (-1 * x46 * x202) + (x55 * x204) + (-1 * x56 * x203)) * x205;
	const FLT x273 = x272 * x120;
	const FLT x274 = x240 + x255 + (x272 * x108) + (x54 * x273) + (-1 * x272 * x117) + x234 + (-1 * x272 * x119);
	const FLT x275 =
		x231 + x259 + (-1 * x272 * x132) + x225 + (-1 * x272 * x131) + (-1 * x272 * x162) + (-1 * x55 * x273);
	const FLT x276 = x223 + (x272 * x141) + (-1 * x272 * x140) + (-1 * x220) + x248 + (-1 * x46 * x273) + (x272 * x171);
	const FLT x277 = (-1 * x274 * x100) + (x99 * x276) + (x98 * x275);
	const FLT x278 = (x272 * x152) + (-1 * x272 * x149) + x217 + x252 + (-1 * x56 * x273) + (x272 * x148) + (-1 * x211);
	const FLT x279 = (x98 * x274) + (-1 * x99 * x278) + (x275 * x100);
	const FLT x280 = 2 * x94;
	const FLT x281 = (*_x0).IMUBias.AccScale[1] + (*error_model).IMUBias.AccScale[1];
	const FLT x282 = x68 + (-1 * x62) + (-1 * x71) + x65;
	const FLT x283 = (x99 * x96) + (-1 * x73 * x98) + (x81 * x100);
	const FLT x284 = (x100 * x157) + (-1 * x98 * x145) + (x99 * x136);
	const FLT x285 = 2 * x283;
	const FLT x286 = (x100 * x177) + (-1 * x98 * x173) + (x99 * x166);
	const FLT x287 = (-1 * x98 * x186) + (x100 * x189) + (x99 * x185);
	const FLT x288 = (-1 * x98 * x197) + (x100 * x199) + (x99 * x196);
	const FLT x289 = (x241 * x100) + (-1 * x98 * x232) + (x99 * x224);
	const FLT x290 = (x261 * x100) + (-1 * x98 * x257) + (x99 * x254);
	const FLT x291 = (x270 * x100) + (-1 * x98 * x268) + (x99 * x267);
	const FLT x292 = (x278 * x100) + (-1 * x98 * x276) + (x99 * x275);
	const FLT x293 = (*_x0).IMUBias.AccScale[2] + (*error_model).IMUBias.AccScale[2];
	const FLT x294 = x81 * x81;
	const FLT x295 = x94 * x94;
	const FLT x296 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x297 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x298 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x299 = (-1 * x296 * x126) + (x298 * x145) + (x297 * x136);
	const FLT x300 = (x297 * x126) + (-1 * x298 * x157) + (x296 * x136);
	const FLT x301 = 2 * ((x96 * x296) + (-1 * x81 * x298) + (x94 * x297));
	const FLT x302 = 2 * ((x96 * x297) + (-1 * x94 * x296) + (x73 * x298));
	const FLT x303 = (x298 * x173) + (-1 * x296 * x170) + (x297 * x166);
	const FLT x304 = (x297 * x170) + (x296 * x166) + (-1 * x298 * x177);
	const FLT x305 = (x298 * x186) + (-1 * x296 * x183) + (x297 * x185);
	const FLT x306 = (x297 * x183) + (-1 * x298 * x189) + (x296 * x185);
	const FLT x307 = (x296 * x196) + (x297 * x195) + (-1 * x298 * x199);
	const FLT x308 = (x298 * x197) + (-1 * x296 * x195) + (x297 * x196);
	const FLT x309 = (x232 * x298) + (-1 * x218 * x296) + (x297 * x224);
	const FLT x310 = (x218 * x297) + (-1 * x298 * x241) + (x296 * x224);
	const FLT x311 = (x298 * x257) + (x297 * x254) + (-1 * x296 * x250);
	const FLT x312 = (x297 * x250) + (-1 * x298 * x261) + (x296 * x254);
	const FLT x313 = (x298 * x268) + (-1 * x296 * x265) + (x297 * x267);
	const FLT x314 = (x297 * x265) + (-1 * x270 * x298) + (x296 * x267);
	const FLT x315 = (x276 * x298) + (-1 * x274 * x296) + (x275 * x297);
	const FLT x316 = (x274 * x297) + (-1 * x278 * x298) + (x275 * x296);
	const FLT x317 = x79 + x76 + (-1 * x78) + (-1 * x77);
	const FLT x318 = 2 * x96;
	const FLT x319 = x73 * x318;
	const FLT x320 = (-1 * x92) + x91 + x89 + (-1 * x90);
	const FLT x321 = x81 * x318;
	const FLT x322 = (x298 * x136) + (-1 * x297 * x145) + (x296 * x157);
	const FLT x323 = 2 * ((-1 * x73 * x297) + (x81 * x296) + (x96 * x298));
	const FLT x324 = (x298 * x166) + (-1 * x297 * x173) + (x296 * x177);
	const FLT x325 = (-1 * x297 * x186) + (x298 * x185) + (x296 * x189);
	const FLT x326 = (x298 * x196) + (-1 * x297 * x197) + (x296 * x199);
	const FLT x327 = (x298 * x224) + (-1 * x232 * x297) + (x296 * x241);
	const FLT x328 = (x298 * x254) + (-1 * x297 * x257) + (x296 * x261);
	const FLT x329 = 2 * ((x298 * x267) + (x270 * x296) + (-1 * x297 * x268));
	const FLT x330 = (x278 * x296) + (x275 * x298) + (-1 * x276 * x297);
	const FLT x331 = (-1 * x70) + x67 + (-1 * x61) + x64;
	const FLT x332 = x94 * x318;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						x0 * (0.101971621297793 + (x80 * x82) + (-1 * x72 * x74)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT), x0 * ((x82 * x93) + (-1 * x88)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT), x0 * ((x81 * x97) + (x95 * x94)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.AccScale[0]) / sizeof(FLT),
						x99 + (2 * ((x81 * x102) + (-1 * x73 * x101))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x0 * ((x157 * x159) + (x82 * x158) + (-1 * x74 * x146) + (-1 * x145 * x147)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						((-1 * x173 * x147) + (-1 * x74 * x174) + (x177 * x159) + (x82 * x178)) * x0);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((x189 * x159) + (x82 * x190) + (-1 * x74 * x187) + (-1 * x186 * x147)) * x0);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						((x199 * x159) + (x82 * x200) + (-1 * x74 * x198) + (-1 * x197 * x147)) * x0);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x0 * ((-1 * x232 * x147) + (x82 * x242) + (-1 * x74 * x233) + (x241 * x159)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						((x261 * x159) + (x82 * x262) + (-1 * x74 * x258) + (-1 * x257 * x147)) * x0);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						((x82 * x271) + (-1 * x74 * x269) + (x270 * x159) + (-1 * x268 * x147)) * x0);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						((-1 * x276 * x147) + (-1 * x74 * x277) + (x278 * x159) + (x82 * x279)) * x0);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT), x281 * (x88 + (-1 * x80 * x280)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						x281 * (0.101971621297793 + (x74 * x282) + (-1 * x93 * x280)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						((x81 * x95) + (-1 * x97 * x94)) * x281);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.AccScale[1]) / sizeof(FLT),
						x98 + (2 * ((x73 * x283) + (-1 * x94 * x102))));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x281 * ((x285 * x145) + (x74 * x284) + (-1 * x280 * x158) + (-1 * x126 * x159)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x281 * ((x74 * x286) + (x285 * x173) + (-1 * x280 * x178) + (-1 * x170 * x159)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x281 * ((x74 * x287) + (-1 * x183 * x159) + (-1 * x280 * x190) + (x285 * x186)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x281 * ((x74 * x288) + (-1 * x195 * x159) + (x285 * x197) + (-1 * x200 * x280)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x281 * ((x232 * x285) + (-1 * x218 * x159) + (-1 * x280 * x242) + (x74 * x289)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x281 * ((x285 * x257) + (x74 * x290) + (-1 * x262 * x280) + (-1 * x250 * x159)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x281 * ((x268 * x285) + (x74 * x291) + (-1 * x271 * x280) + (-1 * x265 * x159)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x281 * ((x276 * x285) + (x74 * x292) + (-1 * x279 * x280) + (-1 * x274 * x159)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Acc[0]) / sizeof(FLT),
						x293 * ((x72 * x280) + (-1 * x82 * x87)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Acc[1]) / sizeof(FLT),
						((x87 * x280) + (-1 * x82 * x282)) * x293);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Acc[2]) / sizeof(FLT),
						x293 * (0.101971621297793 + (-0.203943242595586 * x295) + (-0.203943242595586 * x294)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.AccScale[2]) / sizeof(FLT),
						x100 + (2 * ((x94 * x101) + (-1 * x81 * x283))));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x293 * ((-1 * x285 * x157) + (x280 * x146) + (-1 * x82 * x284) + (x126 * x147)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x293 * ((x170 * x147) + (x280 * x174) + (-1 * x82 * x286) + (-1 * x285 * x177)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x293 * ((x183 * x147) + (x280 * x187) + (-1 * x82 * x287) + (-1 * x285 * x189)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						x293 * ((-1 * x285 * x199) + (x195 * x147) + (-1 * x82 * x288) + (x280 * x198)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						x293 * ((-1 * x82 * x289) + (-1 * x285 * x241) + (x218 * x147) + (x233 * x280)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						x293 * ((x250 * x147) + (-1 * x261 * x285) + (-1 * x82 * x290) + (x280 * x258)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						x293 * ((x265 * x147) + (-1 * x82 * x291) + (x269 * x280) + (-1 * x270 * x285)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						x293 * ((-1 * x278 * x285) + (-1 * x82 * x292) + (x274 * x147) + (x277 * x280)));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(-1 * x302 * x145) + (x301 * x157) + (-1 * x74 * x299) + (x82 * x300));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x301 * x177) + (-1 * x74 * x303) + (x82 * x304) + (-1 * x302 * x173));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(-1 * x302 * x186) + (x301 * x189) + (-1 * x74 * x305) + (x82 * x306));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						(x301 * x199) + (-1 * x302 * x197) + (x82 * x307) + (-1 * x74 * x308));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x82 * x310) + (x241 * x301) + (-1 * x232 * x302) + (-1 * x74 * x309));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x261 * x301) + (x82 * x312) + (-1 * x74 * x311) + (-1 * x257 * x302));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x270 * x301) + (x82 * x314) + (-1 * x74 * x313) + (-1 * x268 * x302));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x82 * x316) + (x278 * x301) + (-1 * x74 * x315) + (-1 * x276 * x302));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						1 + (x82 * x317) + (-2 * (x73 * x73)));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						(x81 * x280) + (-1 * x319));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x321 + (-1 * x74 * x320));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(-1 * x301 * x126) + (x323 * x145) + (-1 * x280 * x300) + (x74 * x322));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x323 * x173) + (x74 * x324) + (-1 * x280 * x304) + (-1 * x301 * x170));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(-1 * x280 * x306) + (x323 * x186) + (x74 * x325) + (-1 * x301 * x183));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						(x323 * x197) + (x74 * x326) + (-1 * x280 * x307) + (-1 * x301 * x195));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x74 * x327) + (x232 * x323) + (-1 * x280 * x310) + (-1 * x218 * x301));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(-1 * x250 * x301) + (-1 * x280 * x312) + (x74 * x328) + (x257 * x323));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x73 * x329) + (x268 * x323) + (-1 * x265 * x301) + (-1 * x280 * x314));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x276 * x323) + (x74 * x330) + (-1 * x280 * x316) + (-1 * x274 * x301));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x319 + (-1 * x280 * x317));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						1 + (x74 * x331) + (-2 * x295));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						(x81 * x74) + (-1 * x332));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x302 * x126) + (-1 * x82 * x322) + (-1 * x323 * x157) + (x299 * x280));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x302 * x170) + (-1 * x82 * x324) + (x280 * x303) + (-1 * x323 * x177));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x280 * x305) + (x302 * x183) + (-1 * x82 * x325) + (-1 * x323 * x189));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, IMUBias.IMUCorrection[3]) / sizeof(FLT),
						(-1 * x323 * x199) + (x280 * x308) + (-1 * x82 * x326) + (x302 * x195));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[0]) / sizeof(FLT),
						(x280 * x309) + (-1 * x241 * x323) + (-1 * x82 * x327) + (x218 * x302));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[1]) / sizeof(FLT),
						(x280 * x311) + (x250 * x302) + (-1 * x82 * x328) + (-1 * x261 * x323));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[2]) / sizeof(FLT),
						(x265 * x302) + (-1 * x81 * x329) + (x280 * x313) + (-1 * x270 * x323));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Pose.Rot[3]) / sizeof(FLT),
						(x274 * x302) + (x280 * x315) + (-1 * x82 * x330) + (-1 * x278 * x323));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						(x74 * x94) + (-1 * x321));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x332 + (-1 * x82 * x331));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						1 + (x280 * x320) + (-2 * x294));
}

// Full version Jacobian of IMUMeasurementErrorModel wrt [(*_x0).Acc[0], (*_x0).Acc[1], (*_x0).Acc[2],
// (*_x0).IMUBias.AccBias[0], (*_x0).IMUBias.AccBias[1], (*_x0).IMUBias.AccBias[2], (*_x0).IMUBias.AccScale[0],
// (*_x0).IMUBias.AccScale[1], (*_x0).IMUBias.AccScale[2], (*_x0).IMUBias.GyroBias[0], (*_x0).IMUBias.GyroBias[1],
// (*_x0).IMUBias.GyroBias[2], (*_x0).IMUBias.IMUCorrection[0], (*_x0).IMUBias.IMUCorrection[1],
// (*_x0).IMUBias.IMUCorrection[2], (*_x0).IMUBias.IMUCorrection[3], (*_x0).Pose.Pos[0], (*_x0).Pose.Pos[1],
// (*_x0).Pose.Pos[2], (*_x0).Pose.Rot[0], (*_x0).Pose.Rot[1], (*_x0).Pose.Rot[2], (*_x0).Pose.Rot[3],
// (*_x0).Velocity.AxisAngleRot[0], (*_x0).Velocity.AxisAngleRot[1], (*_x0).Velocity.AxisAngleRot[2],
// (*_x0).Velocity.Pos[0], (*_x0).Velocity.Pos[1], (*_x0).Velocity.Pos[2]]

static inline void IMUMeasurementErrorModel_jac_x0_with_hx(CnMat *Hx, CnMat *hx, const SurviveKalmanModel *_x0,
														   const SurviveKalmanErrorModel *error_model) {
	if (hx != 0) {
		IMUMeasurementErrorModel(hx, _x0, error_model);
	}
	if (Hx != 0) {
		IMUMeasurementErrorModel_jac_x0(Hx, _x0, error_model);
	}
}
// Jacobian of IMUMeasurementErrorModel wrt [(*error_model).Acc[0], (*error_model).Acc[1], (*error_model).Acc[2],
// (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1], (*error_model).IMUBias.AccBias[2],
// (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1], (*error_model).IMUBias.AccScale[2],
// (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1], (*error_model).IMUBias.GyroBias[2],
// (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]
static inline void IMUMeasurementErrorModel_jac_error_model(CnMat *Hx, const SurviveKalmanModel *_x0,
															const SurviveKalmanErrorModel *error_model) {
	const FLT x0 = (*_x0).IMUBias.AccScale[0] + (*error_model).IMUBias.AccScale[0];
	const FLT x1 = 0.5 * (*error_model).IMUBias.IMUCorrection[0];
	const FLT x2 = cos(x1);
	const FLT x3 = 0.5 * (*error_model).IMUBias.IMUCorrection[2];
	const FLT x4 = sin(x3);
	const FLT x5 = 0.5 * (*error_model).IMUBias.IMUCorrection[1];
	const FLT x6 = sin(x5);
	const FLT x7 = x4 * x6;
	const FLT x8 = x2 * x7;
	const FLT x9 = sin(x1);
	const FLT x10 = cos(x5);
	const FLT x11 = cos(x3);
	const FLT x12 = x11 * x10;
	const FLT x13 = x9 * x12;
	const FLT x14 = x13 + (-1 * x8);
	const FLT x15 = x6 * x11;
	const FLT x16 = x9 * x15;
	const FLT x17 = x4 * x10;
	const FLT x18 = x2 * x17;
	const FLT x19 = x18 + (-1 * x16);
	const FLT x20 = x9 * x17;
	const FLT x21 = x2 * x15;
	const FLT x22 = x21 + x20;
	const FLT x23 = x7 * x9;
	const FLT x24 = x2 * x12;
	const FLT x25 = x24 + x23;
	const FLT x26 = (x14 * x14) + (x19 * x19) + (x25 * x25) + (x22 * x22);
	const FLT x27 = 1. / sqrt(x26);
	const FLT x28 = x27 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x29 = x25 * x27;
	const FLT x30 = x27 * x19;
	const FLT x31 = x22 * x27;
	const FLT x32 = (x31 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x28 * x14) +
					(x30 * (*_x0).IMUBias.IMUCorrection[0]) + (x29 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x33 = 0.5 * (*error_model).Pose.AxisAngleRot[2];
	const FLT x34 = cos(x33);
	const FLT x35 = 0.5 * (*error_model).Pose.AxisAngleRot[1];
	const FLT x36 = sin(x35);
	const FLT x37 = 0.5 * (*error_model).Pose.AxisAngleRot[0];
	const FLT x38 = sin(x37);
	const FLT x39 = x36 * x38;
	const FLT x40 = x34 * x39;
	const FLT x41 = sin(x33);
	const FLT x42 = cos(x37);
	const FLT x43 = cos(x35);
	const FLT x44 = x42 * x43;
	const FLT x45 = x41 * x44;
	const FLT x46 = x45 + (-1 * x40);
	const FLT x47 = x41 * x39;
	const FLT x48 = x44 * x34;
	const FLT x49 = x48 + x47;
	const FLT x50 = x43 * x38;
	const FLT x51 = x50 * x41;
	const FLT x52 = x42 * x36;
	const FLT x53 = x52 * x34;
	const FLT x54 = x53 + x51;
	const FLT x55 = x52 * x41;
	const FLT x56 = x50 * x34;
	const FLT x57 = x56 + (-1 * x55);
	const FLT x58 = (x57 * x57) + (x46 * x46) + (x54 * x54) + (x49 * x49);
	const FLT x59 = 1. / sqrt(x58);
	const FLT x60 = x59 * x46;
	const FLT x61 = x54 * x59;
	const FLT x62 = x59 * (*_x0).Pose.Rot[0];
	const FLT x63 = x57 * x59;
	const FLT x64 = (x62 * x49) + (-1 * x60 * (*_x0).Pose.Rot[3]) + (-1 * x63 * (*_x0).Pose.Rot[1]) +
					(-1 * x61 * (*_x0).Pose.Rot[2]);
	const FLT x65 = x27 * x14;
	const FLT x66 = (-1 * x30 * (*_x0).IMUBias.IMUCorrection[1]) + (x25 * x28) +
					(x65 * (*_x0).IMUBias.IMUCorrection[3]) + (x31 * (*_x0).IMUBias.IMUCorrection[0]);
	const FLT x67 = (x29 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x30 * (*_x0).IMUBias.IMUCorrection[3]) +
					(-1 * x65 * (*_x0).IMUBias.IMUCorrection[1]) + (-1 * x22 * x28);
	const FLT x68 = (x65 * (*_x0).IMUBias.IMUCorrection[0]) + (x29 * (*_x0).IMUBias.IMUCorrection[1]) +
					(-1 * x31 * (*_x0).IMUBias.IMUCorrection[3]) + (x28 * x19);
	const FLT x69 = (x68 * x68) + (x67 * x67) + (x32 * x32) + (x66 * x66);
	const FLT x70 = 1. / sqrt(x69);
	const FLT x71 = x59 * x49;
	const FLT x72 =
		(-1 * x60 * (*_x0).Pose.Rot[1]) + (x71 * (*_x0).Pose.Rot[2]) + (x63 * (*_x0).Pose.Rot[3]) + (x62 * x54);
	const FLT x73 = x59 * (*_x0).Pose.Rot[1];
	const FLT x74 = (x73 * x54) + (x62 * x46) + (x71 * (*_x0).Pose.Rot[3]) + (-1 * x63 * (*_x0).Pose.Rot[2]);
	const FLT x75 =
		(x71 * (*_x0).Pose.Rot[1]) + (x60 * (*_x0).Pose.Rot[2]) + (-1 * x61 * (*_x0).Pose.Rot[3]) + (x62 * x57);
	const FLT x76 = (x75 * x75) + (x72 * x72) + (x74 * x74) + (x64 * x64);
	const FLT x77 = 1. / sqrt(x76);
	const FLT x78 = x70 * x77;
	const FLT x79 = x78 * x64;
	const FLT x80 = x79 * x32;
	const FLT x81 = 0.101971621297793 * x80;
	const FLT x82 = x78 * x74;
	const FLT x83 = x82 * x67;
	const FLT x84 = 0.101971621297793 * x83;
	const FLT x85 = x78 * x75;
	const FLT x86 = x85 * x66;
	const FLT x87 = 0.101971621297793 * x86;
	const FLT x88 = x72 * x78;
	const FLT x89 = x88 * x68;
	const FLT x90 = 0.101971621297793 * x89;
	const FLT x91 = x90 + (-1 * x87) + x81 + (-1 * x84);
	const FLT x92 = (-1 * x83) + (-1 * x86) + x89 + x80;
	const FLT x93 = 2 * x92;
	const FLT x94 = x82 * x68;
	const FLT x95 = x79 * x66;
	const FLT x96 = x85 * x32;
	const FLT x97 = x88 * x67;
	const FLT x98 =
		(0.101971621297793 * x97) + (-0.101971621297793 * x96) + (0.101971621297793 * x94) + (-0.101971621297793 * x95);
	const FLT x99 = x96 + x95 + (-1 * x97) + (-1 * x94);
	const FLT x100 = 2 * x99;
	const FLT x101 = x88 * x66;
	const FLT x102 = x82 * x32;
	const FLT x103 = x85 * x68;
	const FLT x104 = x79 * x67;
	const FLT x105 = (0.101971621297793 * x104) + (0.101971621297793 * x103) + (0.101971621297793 * x101) +
					 (0.101971621297793 * x102);
	const FLT x106 = x93 * x105;
	const FLT x107 = x88 * x32;
	const FLT x108 = x82 * x66;
	const FLT x109 = x85 * x67;
	const FLT x110 = x79 * x68;
	const FLT x111 = (0.101971621297793 * x110) + (-0.101971621297793 * x109) + (-0.101971621297793 * x107) +
					 (0.101971621297793 * x108);
	const FLT x112 = (-1 * x109) + x110 + x108 + (-1 * x107);
	const FLT x113 = 0.203943242595586 * x92;
	const FLT x114 = x103 + x104 + x102 + x101;
	const FLT x115 = 0.203943242595586 * x114;
	const FLT x116 = 0.101971621297793 * ((*_x0).Acc[1] + (*error_model).Acc[1]);
	const FLT x117 = 0.101971621297793 * ((*_x0).Acc[0] + (*error_model).Acc[0]);
	const FLT x118 = 1 + (0.101971621297793 * ((*_x0).Acc[2] + (*error_model).Acc[2]));
	const FLT x119 = (-1 * x112 * x118) + (x114 * x116) + (x92 * x117);
	const FLT x120 = (-1 * x99 * x117) + (x118 * x114) + (x112 * x116);
	const FLT x121 = 1.0 / 2.0 * x75;
	const FLT x122 = 0.5 * x24;
	const FLT x123 = 0.5 * x23;
	const FLT x124 = x123 + x122;
	const FLT x125 = 2 * x124;
	const FLT x126 = 0.5 * x13;
	const FLT x127 = -1 * x126;
	const FLT x128 = 0.5 * x8;
	const FLT x129 = x128 + x127;
	const FLT x130 = 2 * x25;
	const FLT x131 = 0.5 * x20;
	const FLT x132 = -0.5 * x21;
	const FLT x133 = x132 + (-1 * x131);
	const FLT x134 = 2 * x19;
	const FLT x135 = 0.5 * x16;
	const FLT x136 = -1 * x135;
	const FLT x137 = 0.5 * x18;
	const FLT x138 = x137 + x136;
	const FLT x139 = 2 * x22;
	const FLT x140 = 1.0 / 2.0 * (1. / (x26 * sqrt(x26)));
	const FLT x141 = x140 * ((x138 * x139) + (x133 * x134) + (x14 * x125) + (x129 * x130));
	const FLT x142 = x14 * x141;
	const FLT x143 = x141 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x144 = x25 * x141;
	const FLT x145 = x28 * x133;
	const FLT x146 = x27 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x147 = x27 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x148 = x19 * x141;
	const FLT x149 = x27 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x150 = x124 * x149;
	const FLT x151 = x150 + (-1 * x148 * (*_x0).IMUBias.IMUCorrection[2]) + (x22 * x143) + (-1 * x138 * x146) +
					 (x129 * x147) + (-1 * x142 * (*_x0).IMUBias.IMUCorrection[0]) +
					 (-1 * x144 * (*_x0).IMUBias.IMUCorrection[1]) + x145;
	const FLT x152 = 2 * x68;
	const FLT x153 = x27 * x124;
	const FLT x154 = -1 * x153 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x155 = x27 * x133;
	const FLT x156 = x155 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x157 = x22 * x141;
	const FLT x158 = (x129 * x149) + (x157 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (-1 * x144 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x28 * x138) + (-1 * x156) +
					 (x142 * (*_x0).IMUBias.IMUCorrection[1]) + x154 + (x19 * x143);
	const FLT x159 = 2 * x67;
	const FLT x160 = x28 * x124;
	const FLT x161 = x155 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x162 = (-1 * x25 * x143) + (-1 * x160) + (-1 * x157 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (-1 * x148 * (*_x0).IMUBias.IMUCorrection[0]) + (x142 * (*_x0).IMUBias.IMUCorrection[2]) + x161 +
					 (x129 * x146) + (x138 * x147);
	const FLT x163 = 2 * x32;
	const FLT x164 = -1 * x155 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x165 = x153 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x166 = (-1 * x144 * (*_x0).IMUBias.IMUCorrection[2]) + x164 + (x28 * x129) +
					 (-1 * x157 * (*_x0).IMUBias.IMUCorrection[0]) + (x148 * (*_x0).IMUBias.IMUCorrection[1]) +
					 (-1 * x14 * x143) + (x138 * x149) + x165;
	const FLT x167 = 2 * x66;
	const FLT x168 = x77 * (1. / (x69 * sqrt(x69)));
	const FLT x169 = ((x167 * x166) + (x151 * x152) + (x163 * x162) + (x158 * x159)) * x168;
	const FLT x170 = x121 * x169;
	const FLT x171 = 1.0 / 2.0 * x169;
	const FLT x172 = x74 * x171;
	const FLT x173 = x64 * x171;
	const FLT x174 = 1.0 / 2.0 * x72;
	const FLT x175 = x32 * x174;
	const FLT x176 = (x169 * x175) + (-1 * x88 * x162) + (-1 * x66 * x172) + (x79 * x151) + (x67 * x170) +
					 (-1 * x68 * x173) + (x82 * x166) + (-1 * x85 * x158);
	const FLT x177 = x169 * x174;
	const FLT x178 = (x79 * x158) + (-1 * x66 * x177) + (x82 * x162) + (x85 * x151) + (-1 * x67 * x173) + (x88 * x166) +
					 (-1 * x32 * x172) + (-1 * x68 * x170);
	const FLT x179 = x66 * x121;
	const FLT x180 = x68 * x174;
	const FLT x181 = (-1 * x169 * x180) + (-1 * x32 * x173) + (-1 * x85 * x166) + (x79 * x162) + (x169 * x179) +
					 (x88 * x151) + (x67 * x172) + (-1 * x82 * x158);
	const FLT x182 = (x117 * x181) + (-1 * x118 * x176) + (x116 * x178);
	const FLT x183 = (x68 * x172) + (-1 * x88 * x158) + (-1 * x66 * x173) + (-1 * x82 * x151) + (x67 * x177) +
					 (x85 * x162) + (-1 * x32 * x170) + (x79 * x166);
	const FLT x184 = 2 * x120;
	const FLT x185 = (x116 * x176) + (-1 * x117 * x183) + (x118 * x178);
	const FLT x186 = 2 * x119;
	const FLT x187 = x140 * (*_x0).IMUBias.IMUCorrection[1];
	const FLT x188 = -1 * x137;
	const FLT x189 = x188 + x136;
	const FLT x190 = 2 * x14;
	const FLT x191 = x131 + x132;
	const FLT x192 = -1 * x128;
	const FLT x193 = x127 + x192;
	const FLT x194 = (-1 * x123) + x122;
	const FLT x195 = (x194 * x139) + (x193 * x134) + (x189 * x190) + (x191 * x130);
	const FLT x196 = x14 * x195;
	const FLT x197 = x27 * x189;
	const FLT x198 = x140 * (*_x0).IMUBias.IMUCorrection[0];
	const FLT x199 = x25 * x195;
	const FLT x200 = x27 * x193;
	const FLT x201 = x19 * x195;
	const FLT x202 = x140 * (*_x0).IMUBias.IMUCorrection[3];
	const FLT x203 = x22 * x195;
	const FLT x204 = x203 * x140;
	const FLT x205 = (x191 * x149) + (-1 * x28 * x194) + (x204 * (*_x0).IMUBias.IMUCorrection[2]) +
					 (-1 * x197 * (*_x0).IMUBias.IMUCorrection[1]) + (x187 * x196) + (-1 * x198 * x199) +
					 (-1 * x200 * (*_x0).IMUBias.IMUCorrection[3]) + (x201 * x202);
	const FLT x206 = x140 * (*_x0).IMUBias.IMUCorrection[2];
	const FLT x207 = (x189 * x149) + (x28 * x193) + (-1 * x201 * x206) + (-1 * x196 * x198) +
					 (x204 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x194 * x146) + (-1 * x187 * x199) + (x191 * x147);
	const FLT x208 = x196 * x140;
	const FLT x209 = (x200 * (*_x0).IMUBias.IMUCorrection[0]) + (-1 * x202 * x199) + (-1 * x201 * x198) +
					 (x208 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x28 * x189) + (-1 * x203 * x187) + (x194 * x147) +
					 (x191 * x146);
	const FLT x210 = (-1 * x203 * x198) + (-1 * x200 * (*_x0).IMUBias.IMUCorrection[1]) + (x201 * x187) +
					 (-1 * x208 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x206 * x199) + (x28 * x191) +
					 (x197 * (*_x0).IMUBias.IMUCorrection[3]) + (x194 * x149);
	const FLT x211 = ((x210 * x167) + (x209 * x163) + (x205 * x159) + (x207 * x152)) * x168;
	const FLT x212 = x211 * x121;
	const FLT x213 = 1.0 / 2.0 * x66;
	const FLT x214 = x74 * x213;
	const FLT x215 = 1.0 / 2.0 * x64;
	const FLT x216 = x211 * x215;
	const FLT x217 = (-1 * x68 * x216) + (x67 * x212) + (x211 * x175) + (x79 * x207) + (-1 * x88 * x209) +
					 (-1 * x85 * x205) + (-1 * x211 * x214) + (x82 * x210);
	const FLT x218 = 1.0 / 2.0 * x74;
	const FLT x219 = x211 * x218;
	const FLT x220 = x66 * x174;
	const FLT x221 = (-1 * x67 * x216) + (-1 * x211 * x220) + (x79 * x205) + (x82 * x209) + (-1 * x32 * x219) +
					 (-1 * x68 * x212) + (x88 * x210) + (x85 * x207);
	const FLT x222 = (-1 * x85 * x210) + (x88 * x207) + (-1 * x211 * x180) + (-1 * x82 * x205) + (-1 * x32 * x216) +
					 (x79 * x209) + (x211 * x179) + (x67 * x219);
	const FLT x223 = (x222 * x117) + (-1 * x217 * x118) + (x221 * x116);
	const FLT x224 = x64 * x213;
	const FLT x225 = x67 * x174;
	const FLT x226 = (x79 * x210) + (x68 * x219) + (-1 * x211 * x224) + (x85 * x209) + (-1 * x82 * x207) +
					 (-1 * x32 * x212) + (x211 * x225) + (-1 * x88 * x205);
	const FLT x227 = 2 * x222;
	const FLT x228 = (x217 * x116) + (-1 * x226 * x117) + (x221 * x118);
	const FLT x229 = x135 + x188;
	const FLT x230 = x126 + x192;
	const FLT x231 = (x230 * x139) + (x19 * x125) + (x190 * x133) + (x229 * x130);
	const FLT x232 = x14 * x231;
	const FLT x233 = x25 * x231;
	const FLT x234 = x19 * x231;
	const FLT x235 = x234 * x140;
	const FLT x236 = x22 * x231;
	const FLT x237 = x236 * x140;
	const FLT x238 = (x229 * x149) + (x237 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x28 * x230) + x164 +
					 (x232 * x187) + (x235 * (*_x0).IMUBias.IMUCorrection[3]) + (-1 * x165) + (-1 * x233 * x198);
	const FLT x239 = x232 * x140;
	const FLT x240 = (-1 * x233 * x202) + x150 + (x229 * x146) + (x230 * x147) +
					 (x239 * (*_x0).IMUBias.IMUCorrection[2]) + (-1 * x236 * x187) + (-1 * x234 * x198) + (-1 * x145);
	const FLT x241 = x160 + (-1 * x230 * x146) + (x229 * x147) + (-1 * x232 * x198) + (-1 * x233 * x187) +
					 (-1 * x235 * (*_x0).IMUBias.IMUCorrection[2]) + x161 + (x237 * (*_x0).IMUBias.IMUCorrection[3]);
	const FLT x242 = (x28 * x229) + (-1 * x236 * x198) + x154 + (-1 * x233 * x206) +
					 (-1 * x239 * (*_x0).IMUBias.IMUCorrection[3]) + x156 + (x234 * x187) + (x230 * x149);
	const FLT x243 = ((x242 * x167) + (x241 * x152) + (x238 * x159) + (x240 * x163)) * x168;
	const FLT x244 = x243 * x121;
	const FLT x245 = x215 * x243;
	const FLT x246 = (-1 * x88 * x240) + (x243 * x175) + (-1 * x214 * x243) + (x67 * x244) + (-1 * x68 * x245) +
					 (-1 * x85 * x238) + (x79 * x241) + (x82 * x242);
	const FLT x247 = x218 * x243;
	const FLT x248 = (-1 * x220 * x243) + (x88 * x242) + (x79 * x238) + (x85 * x241) + (-1 * x68 * x244) +
					 (-1 * x67 * x245) + (-1 * x32 * x247) + (x82 * x240);
	const FLT x249 = (x88 * x241) + (-1 * x32 * x245) + (-1 * x82 * x238) + (-1 * x243 * x180) + (x243 * x179) +
					 (x79 * x240) + (x67 * x247) + (-1 * x85 * x242);
	const FLT x250 = (-1 * x246 * x118) + (x249 * x117) + (x248 * x116);
	const FLT x251 = (x68 * x247) + (-1 * x82 * x241) + (x85 * x240) + (x79 * x242) + (-1 * x32 * x244) +
					 (x225 * x243) + (-1 * x224 * x243) + (-1 * x88 * x238);
	const FLT x252 = (x246 * x116) + (x248 * x118) + (-1 * x251 * x117);
	const FLT x253 = 0.5 * x48;
	const FLT x254 = 0.5 * x47;
	const FLT x255 = x254 + x253;
	const FLT x256 = 2 * x57;
	const FLT x257 = 0.5 * x40;
	const FLT x258 = -1 * x257;
	const FLT x259 = 0.5 * x45;
	const FLT x260 = x259 + x258;
	const FLT x261 = 2 * x54;
	const FLT x262 = 0.5 * x51;
	const FLT x263 = -0.5 * x53;
	const FLT x264 = x263 + (-1 * x262);
	const FLT x265 = 2 * x46;
	const FLT x266 = 0.5 * x56;
	const FLT x267 = -1 * x266;
	const FLT x268 = 0.5 * x55;
	const FLT x269 = x268 + x267;
	const FLT x270 = 2 * x49;
	const FLT x271 = (x270 * x269) + (x264 * x265) + (x256 * x255) + (x260 * x261);
	const FLT x272 = 1.0 / 2.0 * (1. / (x58 * sqrt(x58)));
	const FLT x273 = x272 * (*_x0).Pose.Rot[1];
	const FLT x274 = x273 * x271;
	const FLT x275 = x272 * (*_x0).Pose.Rot[2];
	const FLT x276 = x275 * x271;
	const FLT x277 = x59 * x269;
	const FLT x278 = x59 * x264;
	const FLT x279 = x278 * (*_x0).Pose.Rot[2];
	const FLT x280 = x272 * x271;
	const FLT x281 = x54 * x280;
	const FLT x282 = x59 * x260;
	const FLT x283 = x62 * x255;
	const FLT x284 = x57 * x280;
	const FLT x285 = (-1 * x284 * (*_x0).Pose.Rot[0]) + x283 + (-1 * x46 * x276) + (-1 * x49 * x274) +
					 (-1 * x282 * (*_x0).Pose.Rot[3]) + (x277 * (*_x0).Pose.Rot[1]) + x279 +
					 (x281 * (*_x0).Pose.Rot[3]);
	const FLT x286 = 2 * x75;
	const FLT x287 = -1 * x73 * x264;
	const FLT x288 = x59 * x255;
	const FLT x289 = x288 * (*_x0).Pose.Rot[3];
	const FLT x290 = (x282 * (*_x0).Pose.Rot[0]) + (-1 * x281 * (*_x0).Pose.Rot[0]) + (-1 * x284 * (*_x0).Pose.Rot[3]) +
					 (x46 * x274) + x287 + x289 + (-1 * x49 * x276) + (x277 * (*_x0).Pose.Rot[2]);
	const FLT x291 = 2 * x72;
	const FLT x292 = x54 * x273;
	const FLT x293 = x49 * x272;
	const FLT x294 = x293 * (*_x0).Pose.Rot[3];
	const FLT x295 = x57 * x271;
	const FLT x296 = x46 * x280;
	const FLT x297 = x288 * (*_x0).Pose.Rot[2];
	const FLT x298 = x62 * x264;
	const FLT x299 = x298 + (-1 * x297) + (x282 * (*_x0).Pose.Rot[1]) + (-1 * x271 * x292) + (-1 * x271 * x294) +
					 (x275 * x295) + (-1 * x296 * (*_x0).Pose.Rot[0]) + (x277 * (*_x0).Pose.Rot[3]);
	const FLT x300 = 2 * x74;
	const FLT x301 = -1 * x73 * x255;
	const FLT x302 = x293 * (*_x0).Pose.Rot[0];
	const FLT x303 = x278 * (*_x0).Pose.Rot[3];
	const FLT x304 = (-1 * x282 * (*_x0).Pose.Rot[2]) + (x277 * (*_x0).Pose.Rot[0]) + x301 + (x54 * x276) +
					 (x273 * x295) + (-1 * x271 * x302) + (x296 * (*_x0).Pose.Rot[3]) + (-1 * x303);
	const FLT x305 = 2 * x64;
	const FLT x306 = x70 * (1. / (x76 * sqrt(x76)));
	const FLT x307 = ((x299 * x300) + (x305 * x304) + (x286 * x285) + (x291 * x290)) * x306;
	const FLT x308 = x307 * x121;
	const FLT x309 = x78 * x67;
	const FLT x310 = 1.0 / 2.0 * x307;
	const FLT x311 = x64 * x310;
	const FLT x312 = x74 * x310;
	const FLT x313 = x78 * x299;
	const FLT x314 = x78 * x32;
	const FLT x315 = x78 * x68;
	const FLT x316 = (x304 * x315) + (-1 * x290 * x314) + (-1 * x285 * x309) + (x67 * x308) + (x307 * x175) +
					 (x66 * x313) + (-1 * x68 * x311) + (-1 * x66 * x312);
	const FLT x317 = x78 * x66;
	const FLT x318 = x307 * x174;
	const FLT x319 = (x309 * x304) + (-1 * x66 * x318) + (-1 * x67 * x311) + (-1 * x32 * x312) + (-1 * x68 * x308) +
					 (x285 * x315) + (x32 * x313) + (x290 * x317);
	const FLT x320 = (-1 * x67 * x313) + (-1 * x285 * x317) + (x304 * x314) + (x67 * x312) + (x307 * x179) +
					 (-1 * x32 * x311) + (-1 * x307 * x180) + (x290 * x315);
	const FLT x321 = (x320 * x117) + (-1 * x316 * x118) + (x319 * x116);
	const FLT x322 = (x68 * x312) + (x304 * x317) + (-1 * x32 * x308) + (-1 * x66 * x311) + (x285 * x314) +
					 (x67 * x318) + (-1 * x290 * x309) + (-1 * x68 * x313);
	const FLT x323 = (x316 * x116) + (-1 * x322 * x117) + (x319 * x118);
	const FLT x324 = x262 + x263;
	const FLT x325 = -1 * x259;
	const FLT x326 = x325 + x258;
	const FLT x327 = (-1 * x254) + x253;
	const FLT x328 = -1 * x268;
	const FLT x329 = x267 + x328;
	const FLT x330 = (x270 * x324) + (x256 * x326) + (x265 * x329) + (x261 * x327);
	const FLT x331 = x46 * x330;
	const FLT x332 = x54 * x330;
	const FLT x333 = x272 * x332;
	const FLT x334 = x59 * x327;
	const FLT x335 = x57 * x330;
	const FLT x336 = x272 * x335;
	const FLT x337 = x49 * x330;
	const FLT x338 = x59 * x329;
	const FLT x339 = (x338 * (*_x0).Pose.Rot[2]) + (-1 * x275 * x331) + (x73 * x324) + (x333 * (*_x0).Pose.Rot[3]) +
					 (-1 * x273 * x337) + (-1 * x336 * (*_x0).Pose.Rot[0]) + (x62 * x326) +
					 (-1 * x334 * (*_x0).Pose.Rot[3]);
	const FLT x340 = x59 * x324;
	const FLT x341 = x59 * x326;
	const FLT x342 = (-1 * x336 * (*_x0).Pose.Rot[3]) + (x340 * (*_x0).Pose.Rot[2]) + (x62 * x327) +
					 (-1 * x275 * x337) + (x273 * x331) + (-1 * x338 * (*_x0).Pose.Rot[1]) +
					 (x341 * (*_x0).Pose.Rot[3]) + (-1 * x333 * (*_x0).Pose.Rot[0]);
	const FLT x343 = x272 * x331;
	const FLT x344 = (x275 * x335) + (x73 * x327) + (x62 * x329) + (-1 * x292 * x330) +
					 (-1 * x343 * (*_x0).Pose.Rot[0]) + (-1 * x294 * x330) + (x340 * (*_x0).Pose.Rot[3]) +
					 (-1 * x341 * (*_x0).Pose.Rot[2]);
	const FLT x345 = (-1 * x338 * (*_x0).Pose.Rot[3]) + (x275 * x332) + (x62 * x324) +
					 (-1 * x341 * (*_x0).Pose.Rot[1]) + (-1 * x334 * (*_x0).Pose.Rot[2]) + (x343 * (*_x0).Pose.Rot[3]) +
					 (-1 * x302 * x330) + (x273 * x335);
	const FLT x346 = ((x300 * x344) + (x305 * x345) + (x291 * x342) + (x286 * x339)) * x306;
	const FLT x347 = x68 * x346;
	const FLT x348 = x67 * x346;
	const FLT x349 = (x346 * x175) + (x315 * x345) + (-1 * x215 * x347) + (-1 * x314 * x342) + (-1 * x309 * x339) +
					 (x348 * x121) + (-1 * x214 * x346) + (x317 * x344);
	const FLT x350 = x32 * x346;
	const FLT x351 = (x309 * x345) + (-1 * x218 * x350) + (x317 * x342) + (-1 * x220 * x346) + (x339 * x315) +
					 (-1 * x347 * x121) + (x314 * x344) + (-1 * x215 * x348);
	const FLT x352 = (x314 * x345) + (-1 * x309 * x344) + (x346 * x179) + (-1 * x215 * x350) + (x218 * x348) +
					 (-1 * x346 * x180) + (x315 * x342) + (-1 * x339 * x317);
	const FLT x353 = 2 * ((x352 * x117) + (-1 * x349 * x118) + (x351 * x116));
	const FLT x354 = (x317 * x345) + (-1 * x350 * x121) + (-1 * x309 * x342) + (-1 * x224 * x346) + (x348 * x174) +
					 (x218 * x347) + (-1 * x315 * x344) + (x339 * x314);
	const FLT x355 = (x349 * x116) + (-1 * x354 * x117) + (x351 * x118);
	const FLT x356 = x266 + x328;
	const FLT x357 = x257 + x325;
	const FLT x358 = (x270 * x357) + (x261 * x356) + (x264 * x256) + (x265 * x255);
	const FLT x359 = x49 * x358;
	const FLT x360 = x46 * x358;
	const FLT x361 = x272 * x358;
	const FLT x362 = x361 * (*_x0).Pose.Rot[3];
	const FLT x363 = x59 * x356;
	const FLT x364 = x361 * (*_x0).Pose.Rot[0];
	const FLT x365 = x59 * x357;
	const FLT x366 = x297 + (-1 * x57 * x364) + (x365 * (*_x0).Pose.Rot[1]) + x298 + (-1 * x273 * x359) +
					 (-1 * x275 * x360) + (x54 * x362) + (-1 * x363 * (*_x0).Pose.Rot[3]);
	const FLT x367 = x272 * x360;
	const FLT x368 = x293 * x358;
	const FLT x369 = x275 * x358;
	const FLT x370 = (x57 * x369) + (-1 * x279) + x283 + (-1 * x367 * (*_x0).Pose.Rot[0]) +
					 (-1 * x368 * (*_x0).Pose.Rot[3]) + (x365 * (*_x0).Pose.Rot[3]) + (-1 * x292 * x358) +
					 (x363 * (*_x0).Pose.Rot[1]);
	const FLT x371 = (-1 * x54 * x364) + (x363 * (*_x0).Pose.Rot[0]) + (x365 * (*_x0).Pose.Rot[2]) + (x273 * x360) +
					 x301 + (-1 * x275 * x359) + (-1 * x57 * x362) + x303;
	const FLT x372 = (-1 * x289) + (-1 * x368 * (*_x0).Pose.Rot[0]) + (x367 * (*_x0).Pose.Rot[3]) + (x54 * x369) +
					 x287 + (x57 * x273 * x358) + (x365 * (*_x0).Pose.Rot[0]) + (-1 * x363 * (*_x0).Pose.Rot[2]);
	const FLT x373 = ((x372 * x305) + (x286 * x366) + (x291 * x371) + (x370 * x300)) * x306;
	const FLT x374 = x373 * x121;
	const FLT x375 = x215 * x373;
	const FLT x376 = (x373 * x175) + (x370 * x317) + (-1 * x366 * x309) + (x67 * x374) + (x372 * x315) +
					 (-1 * x214 * x373) + (-1 * x68 * x375) + (-1 * x371 * x314);
	const FLT x377 = x218 * x373;
	const FLT x378 = (-1 * x220 * x373) + (-1 * x67 * x375) + (x366 * x315) + (x371 * x317) + (-1 * x68 * x374) +
					 (x372 * x309) + (x370 * x314) + (-1 * x32 * x377);
	const FLT x379 = (x372 * x314) + (x371 * x315) + (-1 * x366 * x317) + (-1 * x32 * x375) + (x373 * x179) +
					 (-1 * x373 * x180) + (x67 * x377) + (-1 * x370 * x309);
	const FLT x380 = (-1 * x376 * x118) + (x379 * x117) + (x378 * x116);
	const FLT x381 = (x372 * x317) + (x68 * x377) + (-1 * x32 * x374) + (-1 * x371 * x309) + (-1 * x370 * x315) +
					 (x225 * x373) + (-1 * x224 * x373) + (x366 * x314);
	const FLT x382 = (x376 * x116) + (-1 * x381 * x117) + (x378 * x118);
	const FLT x383 = 2 * x112;
	const FLT x384 = (*_x0).IMUBias.AccScale[1] + (*error_model).IMUBias.AccScale[1];
	const FLT x385 = (-1 * x90) + x87 + (-1 * x81) + x84;
	const FLT x386 = (-1 * x92 * x116) + (x114 * x117) + (x99 * x118);
	const FLT x387 = (x118 * x183) + (-1 * x116 * x181) + (x117 * x178);
	const FLT x388 = 2 * x386;
	const FLT x389 = (x226 * x118) + (-1 * x222 * x116) + (x221 * x117);
	const FLT x390 = (x251 * x118) + (x248 * x117) + (-1 * x249 * x116);
	const FLT x391 = (x322 * x118) + (x319 * x117) + (-1 * x320 * x116);
	const FLT x392 = (x354 * x118) + (-1 * x352 * x116) + (x351 * x117);
	const FLT x393 = (x381 * x118) + (-1 * x379 * x116) + (x378 * x117);
	const FLT x394 = (*_x0).IMUBias.AccScale[2] + (*error_model).IMUBias.AccScale[2];
	const FLT x395 = x99 * x99;
	const FLT x396 = x112 * x112;
	const FLT x397 = (*_x0).Velocity.AxisAngleRot[2] + (*error_model).Velocity.AxisAngleRot[2];
	const FLT x398 = (*_x0).Velocity.AxisAngleRot[1] + (*error_model).Velocity.AxisAngleRot[1];
	const FLT x399 = (*_x0).Velocity.AxisAngleRot[0] + (*error_model).Velocity.AxisAngleRot[0];
	const FLT x400 = (x399 * x181) + (-1 * x397 * x176) + (x398 * x178);
	const FLT x401 = 2 * ((-1 * x99 * x399) + (x397 * x114) + (x398 * x112));
	const FLT x402 = (x398 * x176) + (-1 * x399 * x183) + (x397 * x178);
	const FLT x403 = (-1 * x397 * x112) + (x398 * x114) + (x92 * x399);
	const FLT x404 = 2 * x403;
	const FLT x405 = (x222 * x399) + (-1 * x217 * x397) + (x221 * x398);
	const FLT x406 = (-1 * x226 * x399) + (x217 * x398) + (x221 * x397);
	const FLT x407 = (x249 * x399) + (-1 * x246 * x397) + (x248 * x398);
	const FLT x408 = (-1 * x251 * x399) + (x246 * x398) + (x248 * x397);
	const FLT x409 = (x399 * x320) + (-1 * x397 * x316) + (x398 * x319);
	const FLT x410 = 2 * ((x398 * x316) + (-1 * x399 * x322) + (x397 * x319));
	const FLT x411 = (x399 * x352) + (-1 * x397 * x349) + (x398 * x351);
	const FLT x412 = (x398 * x349) + (-1 * x399 * x354) + (x397 * x351);
	const FLT x413 = (-1 * x376 * x397) + (x379 * x399) + (x378 * x398);
	const FLT x414 = (x376 * x398) + (-1 * x399 * x381) + (x378 * x397);
	const FLT x415 = x97 + (-1 * x96) + x94 + (-1 * x95);
	const FLT x416 = x93 * x114;
	const FLT x417 = (-1 * x110) + x109 + x107 + (-1 * x108);
	const FLT x418 = x100 * x114;
	const FLT x419 = (x399 * x178) + (x397 * x183) + (-1 * x398 * x181);
	const FLT x420 = (-1 * x92 * x398) + (x99 * x397) + (x399 * x114);
	const FLT x421 = 2 * x420;
	const FLT x422 = (x221 * x399) + (-1 * x222 * x398) + (x226 * x397);
	const FLT x423 = (x248 * x399) + (x251 * x397) + (-1 * x249 * x398);
	const FLT x424 = (-1 * x398 * x320) + (x399 * x319) + (x397 * x322);
	const FLT x425 = (x399 * x351) + (-1 * x398 * x352) + (x397 * x354);
	const FLT x426 = (-1 * x379 * x398) + (x378 * x399) + (x397 * x381);
	const FLT x427 = (-1 * x89) + x86 + (-1 * x80) + x83;
	const FLT x428 = x383 * x114;
	cnSetZero(Hx);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x0 * (0.101971621297793 + (x98 * x100) + (-1 * x93 * x91)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						x0 * ((x100 * x111) + (-1 * x106)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x0 * ((x99 * x115) + (x112 * x113)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[0]) / sizeof(FLT),
						x117 + (2 * ((x99 * x120) + (-1 * x92 * x119))));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x0 * ((-1 * x181 * x186) + (x100 * x185) + (-1 * x93 * x182) + (x183 * x184)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x0 * ((-1 * x227 * x119) + (-1 * x93 * x223) + (x228 * x100) + (x226 * x184)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x0 * ((x252 * x100) + (-1 * x93 * x250) + (x251 * x184) + (-1 * x249 * x186)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x0 * ((x323 * x100) + (-1 * x93 * x321) + (x322 * x184) + (-1 * x320 * x186)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x0 * ((x355 * x100) + (x354 * x184) + (-1 * x92 * x353) + (-1 * x352 * x186)));
	cnMatrixOptionalSet(Hx, 0, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x0 * ((x382 * x100) + (x381 * x184) + (-1 * x93 * x380) + (-1 * x379 * x186)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x384 * (x106 + (-1 * x98 * x383)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						x384 * (0.101971621297793 + (x93 * x385) + (-1 * x383 * x111)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x384 * ((x99 * x113) + (-1 * x112 * x115)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[1]) / sizeof(FLT),
						x116 + (2 * ((x92 * x386) + (-1 * x112 * x120))));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						x384 * ((-1 * x176 * x184) + (x388 * x181) + (-1 * x383 * x185) + (x93 * x387)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						x384 * ((x227 * x386) + (x93 * x389) + (-1 * x228 * x383) + (-1 * x217 * x184)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						x384 * ((x249 * x388) + (x93 * x390) + (-1 * x252 * x383) + (-1 * x246 * x184)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						x384 * ((x93 * x391) + (-1 * x316 * x184) + (-1 * x383 * x323) + (x388 * x320)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						x384 * ((x93 * x392) + (x388 * x352) + (-1 * x349 * x184) + (-1 * x383 * x355)));
	cnMatrixOptionalSet(Hx, 1, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						x384 * ((-1 * x383 * x382) + (x379 * x388) + (x93 * x393) + (-1 * x376 * x184)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, Acc[0]) / sizeof(FLT),
						x394 * ((x91 * x383) + (-1 * x100 * x105)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, Acc[1]) / sizeof(FLT),
						((x383 * x105) + (-1 * x385 * x100)) * x394);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, Acc[2]) / sizeof(FLT),
						x394 * (0.101971621297793 + (-0.203943242595586 * x396) + (-0.203943242595586 * x395)));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, IMUBias.AccBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, IMUBias.AccScale[2]) / sizeof(FLT),
						x118 + (2 * ((x112 * x119) + (-1 * x99 * x386))));
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						((x176 * x186) + (x383 * x182) + (-1 * x387 * x100) + (-1 * x388 * x183)) * x394);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						((x217 * x186) + (-1 * x226 * x388) + (-1 * x389 * x100) + (x223 * x383)) * x394);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						((-1 * x251 * x388) + (x246 * x186) + (-1 * x390 * x100) + (x250 * x383)) * x394);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						((x383 * x321) + (-1 * x388 * x322) + (-1 * x391 * x100) + (x316 * x186)) * x394);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						((x353 * x112) + (-1 * x388 * x354) + (-1 * x392 * x100) + (x349 * x186)) * x394);
	cnMatrixOptionalSet(Hx, 2, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						((x376 * x186) + (x383 * x380) + (-1 * x393 * x100) + (-1 * x381 * x388)) * x394);
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[0]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(-1 * x404 * x181) + (x402 * x100) + (-1 * x93 * x400) + (x401 * x183));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x401 * x226) + (-1 * x93 * x405) + (x406 * x100) + (-1 * x403 * x227));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x401 * x251) + (x408 * x100) + (-1 * x93 * x407) + (-1 * x404 * x249));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x401 * x322) + (-1 * x404 * x320) + (-1 * x93 * x409) + (x99 * x410));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x412 * x100) + (-1 * x93 * x411) + (x401 * x354) + (-1 * x404 * x352));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x401 * x381) + (x414 * x100) + (-1 * x404 * x379) + (-1 * x93 * x413));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						1 + (x415 * x100) + (-2 * (x92 * x92)));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						(x99 * x383) + (-1 * x416));
	cnMatrixOptionalSet(Hx, 3, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						x418 + (-1 * x93 * x417));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[1]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x421 * x181) + (x93 * x419) + (-1 * x402 * x383) + (-1 * x401 * x176));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(x420 * x227) + (x93 * x422) + (-1 * x406 * x383) + (-1 * x401 * x217));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x93 * x423) + (-1 * x401 * x246) + (-1 * x408 * x383) + (x421 * x249));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x93 * x424) + (-1 * x401 * x316) + (-1 * x410 * x112) + (x421 * x320));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x421 * x352) + (x93 * x425) + (-1 * x412 * x383) + (-1 * x401 * x349));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x421 * x379) + (x93 * x426) + (-1 * x414 * x383) + (-1 * x401 * x376));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						x416 + (-1 * x415 * x383));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						1 + (x93 * x427) + (-2 * x396));
	cnMatrixOptionalSet(Hx, 4, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						(x92 * x100) + (-1 * x428));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, IMUBias.GyroBias[2]) / sizeof(FLT), 1);
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[0]) / sizeof(FLT),
						(x404 * x176) + (x400 * x383) + (-1 * x419 * x100) + (-1 * x421 * x183));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[1]) / sizeof(FLT),
						(-1 * x421 * x226) + (x404 * x217) + (-1 * x422 * x100) + (x405 * x383));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, IMUBias.IMUCorrection[2]) / sizeof(FLT),
						(x404 * x246) + (-1 * x421 * x251) + (-1 * x423 * x100) + (x407 * x383));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[0]) / sizeof(FLT),
						(x409 * x383) + (-1 * x421 * x322) + (-1 * x424 * x100) + (x404 * x316));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[1]) / sizeof(FLT),
						(x404 * x349) + (x411 * x383) + (-1 * x425 * x100) + (-1 * x421 * x354));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, Pose.AxisAngleRot[2]) / sizeof(FLT),
						(x413 * x383) + (-1 * x421 * x381) + (-1 * x426 * x100) + (x404 * x376));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[0]) / sizeof(FLT),
						(x92 * x383) + (-1 * x418));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[1]) / sizeof(FLT),
						x428 + (-1 * x427 * x100));
	cnMatrixOptionalSet(Hx, 5, offsetof(SurviveKalmanErrorModel, Velocity.AxisAngleRot[2]) / sizeof(FLT),
						1 + (x417 * x383) + (-2 * x395));
}

// Full version Jacobian of IMUMeasurementErrorModel wrt [(*error_model).Acc[0], (*error_model).Acc[1],
// (*error_model).Acc[2], (*error_model).IMUBias.AccBias[0], (*error_model).IMUBias.AccBias[1],
// (*error_model).IMUBias.AccBias[2], (*error_model).IMUBias.AccScale[0], (*error_model).IMUBias.AccScale[1],
// (*error_model).IMUBias.AccScale[2], (*error_model).IMUBias.GyroBias[0], (*error_model).IMUBias.GyroBias[1],
// (*error_model).IMUBias.GyroBias[2], (*error_model).IMUBias.IMUCorrection[0], (*error_model).IMUBias.IMUCorrection[1],
// (*error_model).IMUBias.IMUCorrection[2], (*error_model).Pose.AxisAngleRot[0], (*error_model).Pose.AxisAngleRot[1],
// (*error_model).Pose.AxisAngleRot[2], (*error_model).Pose.Pos[0], (*error_model).Pose.Pos[1],
// (*error_model).Pose.Pos[2], (*error_model).Velocity.AxisAngleRot[0], (*error_model).Velocity.AxisAngleRot[1],
// (*error_model).Velocity.AxisAngleRot[2], (*error_model).Velocity.Pos[0], (*error_model).Velocity.Pos[1],
// (*error_model).Velocity.Pos[2]]

static inline void IMUMeasurementErrorModel_jac_error_model_with_hx(CnMat *Hx, CnMat *hx, const SurviveKalmanModel *_x0,
																	const SurviveKalmanErrorModel *error_model) {
	if (hx != 0) {
		IMUMeasurementErrorModel(hx, _x0, error_model);
	}
	if (Hx != 0) {
		IMUMeasurementErrorModel_jac_error_model(Hx, _x0, error_model);
	}
}
